import { entries, fromEntries } from "@vuepress/helper/client";
import { loadIndex } from "slimsearch";
import { getResults } from "../client/worker/result.js";
import { getSuggestions } from "../client/worker/suggestion.js";
const searchIndex = fromEntries(entries(JSON.parse("{\"/\":{\"documentCount\":103,\"nextId\":103,\"documentIds\":{\"0\":\"1\",\"1\":\"1#_1-判断代码执行的线程\",\"2\":\"1#_2-使用-view-post\",\"3\":\"1#_3-使用-activity-runonuithread\",\"4\":\"1#_4-使用-handler-post\",\"5\":\"1#_5-使用-eventbus\",\"6\":\"1#_6-传递数据\",\"7\":\"2\",\"8\":\"2#_1-编码介绍\",\"9\":\"2#_2-十六进制编码\",\"10\":\"2#_2-1-概念\",\"11\":\"2#_2-2-换算\",\"12\":\"2#_2-3-代码实现\",\"13\":\"2#_3-base64-编码\",\"14\":\"2#_3-1-概念\",\"15\":\"2#_3-2-换算\",\"16\":\"2#_3-3-代码实现\",\"17\":\"2#_4-总结\",\"18\":\"2@0\",\"19\":\"3\",\"20\":\"3#_1-相关概念\",\"21\":\"3#_1-1-密钥\",\"22\":\"3#_1-2-加密模式\",\"23\":\"3#_1-2-1-电子密码本模式\",\"24\":\"3#_1-2-2-加密块链模式\",\"25\":\"3#_1-2-3-加密反馈模式\",\"26\":\"3#_1-2-4-输出反馈模式\",\"27\":\"3#_1-3-填充模式\",\"28\":\"3#_2-代码实现\",\"29\":\"3#_2-1-des\",\"30\":\"3#_2-2-3des\",\"31\":\"3#_2-3-aes\",\"32\":\"3#_2-4-rsa\",\"33\":\"3@0\",\"34\":\"4\",\"35\":\"4#add\",\"36\":\"4#apply\",\"37\":\"4#branch\",\"38\":\"4#checkout\",\"39\":\"4#cherry-pick\",\"40\":\"4#clone\",\"41\":\"4#commit\",\"42\":\"4#config\",\"43\":\"4#fetch\",\"44\":\"4#format-patch\",\"45\":\"4#init\",\"46\":\"4#log\",\"47\":\"4#merge\",\"48\":\"4#pull\",\"49\":\"4#push\",\"50\":\"4#rebase\",\"51\":\"4#remote\",\"52\":\"4#reset\",\"53\":\"4#revert\",\"54\":\"4#rm\",\"55\":\"4#stash\",\"56\":\"4#status\",\"57\":\"4#switch\",\"58\":\"4#tag\",\"59\":\"4@0\",\"60\":\"5\",\"61\":\"5#_1-相关代码\",\"62\":\"5#_2-用途\",\"63\":\"5#_2-1-计算字符串\",\"64\":\"5#_2-2-计算文件\",\"65\":\"5#_3-总结\",\"66\":\"5@0\",\"67\":\"6\",\"68\":\"6#示例\",\"69\":\"6#标题\",\"70\":\"6#文本\",\"71\":\"6#列表\",\"72\":\"6#引用\",\"73\":\"6#代码块\",\"74\":\"6#链接\",\"75\":\"6#图像\",\"76\":\"6#注脚\",\"77\":\"6#上标下标\",\"78\":\"6#表格\",\"79\":\"6#分割线\",\"80\":\"6#数学公式\",\"81\":\"6#警告\",\"82\":\"6#提示\",\"83\":\"6#标签\",\"84\":\"6#自定义对齐\",\"85\":\"6#思维导图\",\"86\":\"6#流程图\",\"87\":\"6@0\",\"88\":\"7\",\"89\":\"7#用户与组\",\"90\":\"7#编辑器\",\"91\":\"7#挂载硬盘\",\"92\":\"7#设置快捷方式\",\"93\":\"7#git\",\"94\":\"7#安装\",\"95\":\"7#配置\",\"96\":\"7#gpg\",\"97\":\"7#配置-1\",\"98\":\"7#python\",\"99\":\"7#virtual-env\",\"100\":\"7#get-pip\",\"101\":\"7@0\",\"102\":\"8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[4,65],\"1\":[6,127],\"2\":[6,55],\"3\":[6,39],\"4\":[6,61],\"5\":[4,92],\"6\":[3,87],\"7\":[11,57],\"8\":[4,101],\"9\":[4],\"10\":[3,116],\"11\":[3,40],\"12\":[4,131],\"13\":[4,49],\"14\":[3,135],\"15\":[3,102],\"16\":[4,217],\"17\":[3,31],\"18\":[null,null,4],\"19\":[11,78],\"20\":[4],\"21\":[3,61],\"22\":[4,40],\"23\":[5,49],\"24\":[6,57],\"25\":[5,40],\"26\":[5,51],\"27\":[4,49],\"28\":[4,108],\"29\":[3,101],\"30\":[4,109],\"31\":[3,89],\"32\":[3,137],\"33\":[null,null,5],\"34\":[4,4],\"35\":[1,143],\"36\":[1,180],\"37\":[1,139],\"38\":[1,136],\"39\":[3,99],\"40\":[1,163],\"41\":[1,190],\"42\":[1,165],\"43\":[1,182],\"44\":[3,175],\"45\":[1,110],\"46\":[1,74],\"47\":[1,149],\"48\":[1,218],\"49\":[1,157],\"50\":[1,198],\"51\":[1,100],\"52\":[1,77],\"53\":[1,90],\"54\":[1,69],\"55\":[1,116],\"56\":[1,84],\"57\":[1,97],\"58\":[1,142],\"59\":[null,null,1],\"60\":[11,81],\"61\":[4,83],\"62\":[3],\"63\":[4,59],\"64\":[4,102],\"65\":[3,30],\"66\":[null,null,4],\"67\":[4],\"68\":[1],\"69\":[1],\"70\":[1],\"71\":[1],\"72\":[1],\"73\":[2],\"74\":[1],\"75\":[1],\"76\":[1],\"77\":[2],\"78\":[1],\"79\":[1],\"80\":[1],\"81\":[1],\"82\":[1],\"83\":[1],\"84\":[2],\"85\":[2],\"86\":[1,9],\"87\":[null,null,1],\"88\":[4,10],\"89\":[3,32],\"90\":[1,7],\"91\":[2,13],\"92\":[2,13],\"93\":[1],\"94\":[1,5],\"95\":[1,14],\"96\":[1],\"97\":[1,73],\"98\":[1,20],\"99\":[3,16],\"100\":[3,20],\"101\":[null,null,1],\"102\":[0,4]},\"averageFieldLength\":[2.6997238499221163,89.76581969557299,0.4287850646253015],\"storedFields\":{\"0\":{\"h\":\"Android 线程间通信\",\"t\":[\"Android 系统中，应用在运行时是一个独立的进程，但是每个进程中可以包含多个线程提高运行效率。在多线程开发中，有一个很重要的原则：不能在子线程中更新 UI 。\",\"Only the original thread that created a view hierarchy can touch its views.\",\"为解决这个问题，目前有多重方案实现子线程和主线程（UI 线程）之间的通信。\"]},\"1\":{\"h\":\"1. 判断代码执行的线程\",\"t\":[\"在一些简单代码逻辑中，也许能够很清晰的辨别出运行在子线程或主线程中。通常在复杂的类关系依赖、函数嵌套调用中，可能需要花费很大精力去阅读代码之后去判断。不过，巧法子也是有的，一行代码解决。\",\"Log.d(\\\"TAG\\\",\\\"test\\\");\",\"日志内容中，2368-2393 表示是在子线程中输出日志。\",\"11-16 01:08:31.584 2368-2393/com.flueky.demo D/TAG: test\",\"其中 2368 表示 PID 指进程id， 2393 表示 TID 指线程id 。如果 TID 也是 2368 ，则表示日志输出在主线程中。\",\"可能也有人听过 UID ,应用第一次安装在设备上时，系统会分配一个序号给应用，作为其唯一标识。UID 在覆盖安装时不会变化，卸载安装时系统会重新分配一个。\",\"下面是在代码中获取三个 id 的方式。\",\"// 获取 tid Process.myTid() // 获取 pid Process.myPid() // 获取 uid Process.myUid()\",\"遇到需要在子线程中更新 UI 操作时，可以通过下面的这些方式解决。\"]},\"2\":{\"h\":\"2. 使用 View.post\",\"t\":[\"子线程代码运行在 Activity 或 Fragment 中，能获取到任意 view 的引用时，可以使用此方式将需要实现的代码放在主线程中运行。\",\"// post 方法在子线程中调用 textView.post(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"3\":{\"h\":\"3. 使用 Activity.runOnUiThread\",\"t\":[\"如果能够直接获取到 Activity 实例，使用 runOnUiThread 方法。\",\"// runOnUiThread 方法在子线程中调用 activity.runOnUiThread(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"4\":{\"h\":\"4. 使用 Handler.post\",\"t\":[\"使用 Handler 比较讲究，因为需要考虑到 Handler 实例初始化的位置。\",\"// post 方法在子线程中调用 handler.post(new Runnable() { @Override public void run() { // handler 在主线程中初始化时，此处代码在主线程中执行 // handler 在子线程中初始化事，此处代码在子线程中执行 } });\",\"以上说法其实不够严谨，存在下面的情况，初始化 handler 实例时传入 Looper.getMainLooper() ，则 handler.post 也在主线程中执行。\",\"// 下面的代码在子线程中执行 Looper.prepare(); handler = new Handler(Looper.getMainLooper()); Looper.loop();\"]},\"5\":{\"h\":\"5. 使用 EventBus\",\"t\":[\"EventBus 出自 greenrobot ,通过订阅的方式，告知函数运行在哪个线程中。为使订阅函数在主线程中执行，使用注解 MAIN 或 MAIN_ORDERED 。\",\"/** * eventbus 简单示例 */ public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } /** * 订阅函数， * ThreadMode.MAIN 表示在主线程中运行，可能会阻塞子线程。 * ThreadMode.MAIN_ORDERED 表示在主线程中运行，不会阻塞子线程。 */ @Subscribe(threadMode = ThreadMode.MAIN) public void onMessageEvent(Object event) { if(event instanceof Runnable) ((Runnable)event).run(); } @Override protected void onStart() { super.onStart(); // 注册 eventbus 监听 EventBus.getDefault().register(this); } @Override protected void onStop() { super.onStop(); // 注销 eventbus 监听 EventBus.getDefault().unregister(this); } } // 在子线程中发送消息 EventBus.getDefault().post(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"6\":{\"h\":\"6. 传递数据\",\"t\":[\"前面四种方式演示了如何在子线程中做更新 UI 操作。 AsyncTask 也具备相同用法，但是有点牵强，因为只有 execute 方法在主线程中执行，onPostExecute 才会在主线程中调用。由于 onPostExecute 可以接收到子线程传递的任意类型的对象数据，所以 AsyncTask 可以作为线程间的数据交互的载体。对此 Handler 和 EventBus 表示不服。\",\"EventBus 如之前所示，可以将 Runnable 对象换成任意实例。\",\"Handler 也可以通过 sendMessage 方法发送 Message 对象。其中 Message.obj 用作传递对象数据的载体。\",\"建议使用 Message.obtain() 方法复用 Message 实例。\",\"顺便提下，BroadcastReceiver 也可以作为此类用途，只不过没有 EventBus 和 Handler 方便。\"]},\"7\":{\"h\":\"编码、摘要和加密（一）—— 字节编码\",\"t\":[\"之所以取这个题目，是因为在面试的过程中，许多求职者对问题“请列举常用的加密算法”给出了比较普遍的回答：“用过 MD5 和 Base64 ”，更有甚者说，“ Base64 是对称加密， MD5 是非对称加密”。那么，通过接下来的三篇文章科普下，在编程过程中常见的三个术语：字节编码 、信息摘要、 数据加密。\"]},\"8\":{\"h\":\"1. 编码介绍\",\"t\":[\"在计算机领域，数据存储单位叫字节——byte，最小的存储单元的容量是1位-1bit。一个bit有两个状态 0 和 1。1byte = 8bit。通常，一个英文字母占1字节，汉字采用GBK编码时，占用2字节。UTF-8是可变长度编码，一般用 0-4 字节表示。\",\"以上介绍，仅局限于计算机可以显示在屏幕上的字符。但是 1byte 通常可表示 256 个不同的数据。二进制表示：00000000-11111111，即 2^8 。根据 ASCII 中显示，可见字符不足 100 个。若想完整的显示 1byte 表示的全部内容，需要对其进行编码。通常使用16进制的方式，0x00-0xFF。0x31 表示字符 '1' ，0x01 表示字母 1，0x41 表示 'A' ,0x61 表示 'a' 。不再一一列举，有兴趣的小伙伴可以查阅 ASCII 码表。\"]},\"9\":{\"h\":\"2. 十六进制编码\"},\"10\":{\"h\":\"2.1 概念\",\"t\":[\"16进制编码，是基于2进制转换的过程。下表列举些常见的数值编码及其意义。\",\"十进制\",\"2进制\",\"16进制\",\"意义\",\"0\",\"00000000\",\"0x00\",\"null\",\"1\",\"00000001\",\"0x01\",\"1\",\"49\",\"00110001\",\"0x31\",\"'1'\",\"65\",\"01000001\",\"0x41\",\"'A'\",\"97\",\"01100001\",\"0x61\",\"'a'\",\"此处，需要引入一个概念——基数。2 进制基数：0、1。10进制基数：0-9。16进制基数0-9，A-F。通过观察表示一串内容的基数，可以快速判断它使用的编码方式哦！\",\"下表表示16进制基数与10进制、2进制的关系。均用 1byte 表示。\",\"16进制\",\"10进制\",\"2进制\",\"0x00\",\"0\",\"00000000\",\"0x01\",\"1\",\"00000001\",\"0x02\",\"2\",\"00000010\",\"0x03\",\"3\",\"00000011\",\"0x04\",\"4\",\"00000100\",\"0x05\",\"5\",\"00000101\",\"0x06\",\"6\",\"00000110\",\"0x07\",\"7\",\"00000111\",\"0x08\",\"8\",\"00001000\",\"0x09\",\"9\",\"00001001\",\"0x0A\",\"10\",\"00001010\",\"0x0B\",\"11\",\"00001011\",\"0x0C\",\"12\",\"00001100\",\"0x0D\",\"13\",\"00001101\",\"0x0E\",\"14\",\"00001110\",\"0x0F\",\"15\",\"00001111\",\"不难发现，16进制用 4bit 表示一个基数（16 = 2^4）。\"]},\"11\":{\"h\":\"2.2 换算\",\"t\":[\"将数字 100 转成 16进制表示：\",\"计算方式比较简单，对 100 用 16 进行取整取余。发现 100 = 6 * 16 + 4。即，100 = 0x64。再转成2进制，分别对 6 和 4 转成 4bit 0和1 表示。0110 0100。\",\"所以 100 = 0x64 = 01100100\"]},\"12\":{\"h\":\"2.3 代码实现\",\"t\":[\"根据上一节的换算规则：\",\"将字节数组转16进制字符串，需要对每个字节进行独立运算。分别取高四位和第四位，然后转成两个10进制数作为基数索引，最后组合成16进制表示。\",\"将16进制字符串转成字节数组，需要每两个16进制基数一组。分别找出其表示的10进制数，然后做高四位和第四位相加。\",\"/** * 16 进制基数 */ static char[] hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}; /** * 编码：字节数组转 16 进制字符串 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer hexSrtBuff = new StringBuffer(); for (byte b : data) { int height = b >> 4 & 0x0f; // 取高四位 int low = b & 0x0f;// 取低四位 hexSrtBuff.append(hex[height]); hexSrtBuff.append(hex[low]); } return hexSrtBuff.toString(); } /** * 解码：16 进制字符串转字节数组 * * @param hexStr * @return */ public static final byte[] decode(String hexStr) { if (hexStr == null) return null; if (hexStr.length() % 2 != 0) { // 不合法的十六进制字符串参数 throw new IllegalArgumentException(\\\"The hex string was illegal\\\"); } byte[] data = new byte[hexStr.length() / 2]; for (int i = 0; i < hexStr.length(); i += 2) { char h = hexStr.charAt(i); char l = hexStr.charAt(i + 1); int height = (h >= hex[10] && h <= hex[15]) ? (h - hex[10] + 10) : (h - hex[0]); int low = (l >= hex[10] && l <= hex[15]) ? (l - hex[10] + 10) : (l - hex[0]); data[i / 2] = (byte) ((height << 4) + (low & 0x0f)); } return data; }\"]},\"13\":{\"h\":\"3. Base64 编码\",\"t\":[\"上一节介绍了16进制的编码规则和代码实现。不难发现，做一次16进制编码时候，所需的存储空间翻一倍。这虽然方便计算机显示，可以用于网络通信，但耗费的存储空间和传输效率都将减半。因此，base64编码诞生。（楼主瞎编，base64编码是否因此诞生，没做考究）。\"]},\"14\":{\"h\":\"3.1 概念\",\"t\":[\"base64 一共有 64 个基数。每个基数占 6bit（64 = 2^6）。\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"0\",\"A\",\"16\",\"Q\",\"32\",\"g\",\"48\",\"w\",\"1\",\"B\",\"17\",\"R\",\"33\",\"h\",\"49\",\"x\",\"2\",\"C\",\"18\",\"S\",\"34\",\"i\",\"50\",\"y\",\"3\",\"D\",\"19\",\"T\",\"35\",\"j\",\"51\",\"z\",\"4\",\"E\",\"20\",\"U\",\"36\",\"k\",\"52\",\"0\",\"5\",\"F\",\"21\",\"V\",\"37\",\"l\",\"53\",\"1\",\"6\",\"G\",\"22\",\"W\",\"38\",\"m\",\"54\",\"2\",\"7\",\"H\",\"23\",\"X\",\"39\",\"n\",\"55\",\"3\",\"8\",\"I\",\"24\",\"Y\",\"40\",\"o\",\"56\",\"4\",\"9\",\"J\",\"25\",\"Z\",\"41\",\"p\",\"57\",\"5\",\"10\",\"K\",\"26\",\"a\",\"42\",\"q\",\"58\",\"6\",\"11\",\"L\",\"27\",\"b\",\"43\",\"r\",\"59\",\"7\",\"12\",\"M\",\"28\",\"c\",\"44\",\"s\",\"60\",\"8\",\"13\",\"N\",\"29\",\"d\",\"45\",\"t\",\"61\",\"9\",\"14\",\"O\",\"30\",\"e\",\"46\",\"u\",\"62\",\"+\",\"15\",\"P\",\"31\",\"f\",\"47\",\"v\",\"63\",\"/\"]},\"15\":{\"h\":\"3.2 换算\",\"t\":[\"根据上表的索引关系，试换算几个案例。\",\"字符 1\",\"10进制表示 49 。 16进制表示 0x31。 2进制表示 00110001。\",\"一共8位 ，不能被6位整除，因此不足位补 0。 补充后12位 001100 010000。 对应 base64 索引 12 16。 base64 MQ==\",\"对补位的00，需要用 = 标记。\",\"字符串 1A\",\"10进制表示 49 65。 16进制表示 0x31 0x41。 2进制表示 00110001 01000001。\",\"一共16位，不能被6位整除，因此不足位补 0。 补充后18位 001100 010100 000100。 对应 base64 索引 12 20 4。 base64 MUE=\",\"字符串 1Aa\",\"10进制表示 49 65 97。 16进制表示 0x31 0x41 0x61。 2进制表示 00110001 01000001 01100001。\",\"一共24位，可以被6位整除，因此不需补位。 划分后24位 001100 010100 000101 100001。 对应 base64 索引 12 20 5 33。 base64 MUFh\",\"根据上面的换算得出，base64 编码后的字符串长度一定是4的整数倍。也许1 2 字节的数据使用 base64 编码后并不能体现出它的优势。但是对100字节的数据编码：\",\"16进制编码\",\"编码后长度：100 * 2 = 200。\",\"base64 编码\",\"编码后长度 ⌈100 / 3⌉ * 4 = 34 *4 = 136。\"]},\"16\":{\"h\":\"3.3 代码实现\",\"t\":[\"考虑到补位场景，因此实现较为复杂。可供编程语言入门时，练手使用。\",\"/** * base 64 基数：26个大写字母、26个小写字母、10个阿拉伯数字、'+、'/' */ static char[] base64 = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' , '+', '/' }; /** * 编码：字节数组转 base64 * <p> * 字符 '1' 二进制：00110001 转base64后 001100 010000 补充 两个等号 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer base64StrBuff = new StringBuffer(); int leftBit = 0; //保存剩余字节 int index = 0; int num; for (index = 0; index < data.length; index++) { switch (index % 3) { case 0: num = data[index] >> 2 & 0x3f; // 取前六位 leftBit = data[index] & 0x03; // 保留后两位 base64StrBuff.append(base64[num]); break; case 1: num = (leftBit << 4 & 0x30) + (data[index] >> 4 & 0x0f); // 取前4位 与之前的后两位相加 leftBit = data[index] & 0x0f; // 保留后四位 base64StrBuff.append(base64[num]); break; case 2: num = (leftBit << 2 & 0x3c) + (data[index] >> 6 & 0x03); // 取前两位 与之前的后四位相加 leftBit = data[index] & 0x3f;// 保留后六位 base64StrBuff.append(base64[num]); base64StrBuff.append(base64[leftBit]); leftBit = 0; break; } } /** * 对剩余位做补位处理，并用等号标记 */ switch (index % 3) { case 0: break; case 1: base64StrBuff.append(base64[leftBit << 4 & 0x30]); base64StrBuff.append('='); base64StrBuff.append('='); break; case 2: base64StrBuff.append(base64[leftBit << 2 & 0x3c]); base64StrBuff.append('='); break; } return base64StrBuff.toString(); } /** * 解码： base64 转字节数组 * * @param base64Str * @return */ public static final byte[] decode(String base64Str) { if (base64Str == null) return null; if (base64Str.length() % 4 != 0) throw new IllegalArgumentException(\\\"thr base64 string was illegal\\\"); // 检查末尾等号的个数， int equalSignCount = 0; for (int i = base64Str.length() - 1; i > 0; i--) { if (base64Str.charAt(i) != '=') { break; } equalSignCount++; } // 转成字节数组的长度 int bytesLen = base64Str.length() / 4 * 3 - equalSignCount; byte[] data = new byte[bytesLen]; int index = 0; for (int i = 0; i < base64Str.length(); i += 4) { // 四个字节一组处理，转成三个字节 int one = getCharIndex(base64Str.charAt(i)); int two = getCharIndex(base64Str.charAt(i + 1)); int three = getCharIndex(base64Str.charAt(i + 2)); int four = getCharIndex(base64Str.charAt(i + 3)); if (one < 0) break; int first = one << 2 & 0xfc; if (two < 0) break; first += (two >> 4 & 0x03); data[index++] = (byte) first; if (three < 0) break; int second = (two << 4 & 0xf0); second += (three >> 2 & 0x0f); data[index++] = (byte) second; if (four < 0) break; int third = (three << 6 & 0xc0); third += four; data[index++] = (byte) third; } return data; } /** * 寻找字符在字符串中的索引 * * @param c * @return */ private static int getCharIndex(char c) { if (c >= 'A' && c <= 'Z') return c - 'A'; else if (c >= 'a' && c <= 'z') return c - 'a' + 26; else if (c >= '0' && c <= '9') return c - '0' + 52; else if (c == '+') return 62; else if (c == '/') return 63; else return -1; }\"]},\"17\":{\"h\":\"4. 总结\",\"t\":[\"虽然 16 进制和 Base64 编码是可逆的，具备对应的解码操作，但他们却不是加密算法。加密算法一般需要使用密钥，只有正确的密钥，才能解密出正确的明文。\"]},\"18\":{\"c\":[\"16进制\",\"base64\"]},\"19\":{\"h\":\"编码、摘要和加密（三）—— 数据加密\",\"t\":[\"关于加密，此处没有更加通俗易懂的解释。与同是对于字节类型数据处理的编码和摘要对比：\",\"编码是可逆的，任何人只要知道编码规则，就能够进行解码。\",\"摘要是不可逆的，即使知道只要算法的实现原理，也很难还原出原数据。\",\"加密是可逆的，但只知道加密算法并不能解密，还需要知道加密密钥。\",\"接下来，将针对几个常见的加密算法：DES、3DES、AES、RSA 的 Java 实现及其相关进行介绍，由于之前实现过 DES 和 AES 算法，因此具体算法说明，后续有空会写到。\"]},\"20\":{\"h\":\"1. 相关概念\"},\"21\":{\"h\":\"1.1 密钥\",\"t\":[\"在代码实现的过程中，密钥即是 key 。使用对称加密算法时，加密和解密是同一个密钥。使用非对称加密算法时，加密和解密密钥不相同，区分为公钥（public key）和私钥（private key）。\",\"见过把 base64 当做对称加密， md5 当做非对称加密，因此下面划重点：\",\"判别加密算法最直接的方式，是否需要密钥。\",\"对称加密和非对称加密区别在于，加解密是否是同一个key。\",\"对称加密算法效率优于非对称加密算法，建议用对称加密算法加密长数据，非对称加密算法加密端数据。\"]},\"22\":{\"h\":\"1.2 加密模式\",\"t\":[\"加密模式主要体现在对称加密算法中。之前提到过，对称加密算法效率优，适合加密长数据。实际加密过程中，是将长数据划分成固定长度的若干块短数据进行加密操作。为防止暴力破解得出明文，因此衍生了四种加密模式。\"]},\"23\":{\"h\":\"1.2.1 电子密码本模式\",\"t\":[\"英译 Electronic Code Book ，简称 ECB 模式，最简单的加密模式。\",\"将长数据分割成固定长度的若干块。\",\"分别对每块数据用同一个密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"上述步骤存在一个严重的问题，如果有重复的明文块，那么加密出来的密文也重复。\"]},\"24\":{\"h\":\"1.2.2 加密块链模式\",\"t\":[\"英译 Cipher Block Chaining ，简称 CBC,基于 ECB 模式的改进版。 此处引入一个概念：初始化向量 Initialization Vector 简称 IV 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块的密文与后一块明文进行异或，再用密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"第一块明文没有密文与其异或，因此需要 IV 对其异或再用密钥加密。\"]},\"25\":{\"h\":\"1.2.3 加密反馈模式\",\"t\":[\"英译 Cipher Feedback Mode ，简称 CFB 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块密文使用密钥进行加密，再与后一块明文进行异或。\",\"将每块异或后的密文合并拼接成最终的完整密文。\",\"第一块明文需要与用密钥加密后的 IV 进行异或。\"]},\"26\":{\"h\":\"1.2.4 输出反馈模式\",\"t\":[\"英译 Output Feedback Mode , 简称 OFB ，与 CFB 模式有些细小的区别。\",\"将长数据分割成固定长度的若干块。\",\"将前一块中间密文使用密钥进行加密得中间密文。中间密文与明文进行异或得密文。\",\"将每个中间密文与明文块异或后的密文进行合并拼接成最终的完整密文。\",\"第一块明文需要的中间密文是用密钥加密后的 IV 。\",\"CFB 与 OFB 的区别在于中间密文和密文块的用法 。\",\"CFB 使用前一块的密文进行加密。\",\"OFB 使用前一块的中间密文进行加密。\"]},\"27\":{\"h\":\"1.3 填充模式\",\"t\":[\"分块加密的过程中，遇到不够整分的块。如，将 16 字节作为一个明文块。当加密 17 字节时，不够分成两块。此时需要对第二块明文进行填充。填充后的两个明文块各 16 字节共 32 字节后再进行加密操作。\",\"后 15 字节的填充内容，需要取决于具体的填充模式。见后续 Java 代码实现中介绍。\"]},\"28\":{\"h\":\"2. 代码实现\",\"t\":[\"Java 对加密部分做了比较完整的封装—— Cipher 类。\",\"以下列举几个主要方法：\",\"getInstance 获取 Cipher 对象，主要接收转换类型参数对象。转换类型参数分为 算法 和 算法/模式/填充 。\",\"init 初始化加密参数。包括指定加解密模式、密钥和初始化向量-IV。\",\"doFinal 结束加密和解密操作，有多个重载方法，主要接收需要加密或解密的数据。\",\"关于填充，之前简要介绍过。在 Java 代码中常见的填充模式是 PKCS5Padding 。还有一种模式 NoPadding 由于对明文长度有要求，不建议使用。其他填充模式未深入了解，暂不误导。\",\"PKCS5Padding 指，需要填充多少字节，就填充多少个字节的数字。如 DES 算法要求每个明文块 8 字节，那么，加密 1 字节数据，需要填充 7 个字节，此时填充 7 个 7 。加密 7 字节数据，需要填充 1 个 1 。加密 8 字节数据时，为方便校验解密后的明文正确性，需要扩展成 16 字节数据，此时第二个明文块填充 8 个 8 。\"]},\"29\":{\"h\":\"2.1 DES\",\"t\":[\"DES 全称 Data Encryption Standard ，数据加密标准算法。固定密钥 8 字节，64 位。每个明文块长度 8 字节。\",\"getInstance 接收参数：DES/ECB/PKCS5Padding ，其中 ECB 表示加密模式，可以用上述的其他三个模式替换以及更多 JDK 支持的模式。PKCS5Padding 表示一种填充模式。\",\"在使用 CBC 、 CFB 、 OFB 时，需要在 init 方法中指定 IV 。\",\"private static final String KEY_ALGORITHM = \\\"DES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 加密模式 cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 解密模式 cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"30\":{\"h\":\"2.2 3DES\",\"t\":[\"3DES 即使用 3 次 DES 算法。由于每个 DES 算法处理需要 8 字节密钥，因此 3DES 算法需要 24 字节密钥。\",\"需要注意，3DES 算法名称使用 DESede 或 TripleDES。e 表示做 DES 加密操作，d 表示做 DES 解密操作。前者表示用 DES 连续做加密 、解密、加密操作，后者表示连续做三次加密操作。每次使用的密钥，分别是 24 字节密钥中不同的三段（前、中、后各8字节）。\",\"若使用 DESede 算法时 24 字节密钥中的前两段一样，该算法等同于 DES 算法使用第三段的 8 字节密钥。\",\"填充相关同 DES 算法一样。\",\"private static final String KEY_ALGORITHM = \\\"DESede\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DESede/CBC/PKCS5Padding\\\"; // 初始化向量 private static final String IV = \\\"12345678\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM),new IvParameterSpec(IV.getBytes())); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"31\":{\"h\":\"2.3 AES\",\"t\":[\"AES 全称 Advanced Encryption Standard ，高级加密标准算法，用于替代 DES 。\",\"DES 只支持 8 字节密钥，AES 可以支持 16 字节、24 字节和 32 字节密钥。明文块长度也可以划分成 16 字节 、24 字节和 32 字节进行填充。\",\" private static final String KEY_ALGORITHM = \\\"AES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"AES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\",\"以上三种对称加密算法的 Java 代码实现基本一致。\"]},\"32\":{\"h\":\"2.4 RSA\",\"t\":[\"RSA是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的非对称加密算法，因此使用他们 3 人姓氏首字母命名。\",\"示例代码中的公钥和私钥是随机生成的密钥对，密钥对模长建议是 1024 或 2048，对应密文长度是 128 字节和 256 字节。模长可以大于 2048 ， 越长越难破解，但是效率越低。 实际应用中，建议将密钥对模长设置为 2048 并以文件的形式存储在终端。\",\"private static PrivateKey privateKey; private static PublicKey publicKey; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"RSA\\\"; static { KeyPairGenerator keyGener = null; try { keyGener = KeyPairGenerator.getInstance(DEFAULT_CIPHER_ALGORITHM); keyGener.initialize(1024); KeyPair keyPair = keyGener.generateKeyPair(); privateKey = keyPair.getPrivate(); publicKey = keyPair.getPublic(); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } } public static final byte[] encrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, publicKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, privateKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; }\"]},\"33\":{\"c\":[\"aes\",\"des\",\"3des\",\"rsa\"]},\"34\":{\"h\":\"Git 命令解释\",\"t\":[\"记录 Git 常用命令\"]},\"35\":{\"h\":\"add\",\"t\":[\"git add -h\",\"usage: git add [<options>] [--] <pathspec>... -n, --dry-run dry run -v, --verbose be verbose -i, --interactive interactive picking -p, --patch select hunks interactively -e, --edit edit current diff and apply -f, --force allow adding otherwise ignored files -u, --update update tracked files --renormalize renormalize EOL of tracked files (implies -u) -N, --intent-to-add record only the fact that the path will be added later -A, --all add changes from all tracked and untracked files --ignore-removal ignore paths removed in the working tree (same as --no-all) --refresh don't add, only refresh the index --ignore-errors just skip files which cannot be added because of errors --ignore-missing check if - even missing - files are ignored in dry run --sparse allow updating entries outside of the sparse-checkout cone --chmod (+|-)x override the executable bit of the listed files --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"add 将工作区的更改保存到暂存区，准备提交。\",\"git add . # 添加当前目录下的全部文件 git add 'file path' # 添加指定文件，可用相对路径。 git add -f 'file paht' # 强制添加指定文件，即使在 .gitignore 中\"]},\"36\":{\"h\":\"apply\",\"t\":[\"git apply -h\",\"usage: git apply [<options>] [<patch>...] --exclude <path> don't apply changes matching the given path --include <path> apply changes matching the given path -p <num> remove <num> leading slashes from traditional diff paths --no-add ignore additions made by the patch --stat instead of applying the patch, output diffstat for the input --numstat show number of added and deleted lines in decimal notation --summary instead of applying the patch, output a summary for the input --check instead of applying the patch, see if the patch is applicable --index make sure the patch is applicable to the current index -N, --intent-to-add mark new files with `git add --intent-to-add` --cached apply a patch without touching the working tree --unsafe-paths accept a patch that touches outside the working area --apply also apply the patch (use with --stat/--summary/--check) -3, --3way attempt three-way merge, fall back on normal patch if that fails --build-fake-ancestor <file> build a temporary index based on embedded index information -z paths are separated with NUL character -C <n> ensure at least <n> lines of context match --whitespace <action> detect new or modified lines that have whitespace errors --ignore-space-change ignore changes in whitespace when finding context --ignore-whitespace ignore changes in whitespace when finding context -R, --reverse apply the patch in reverse --unidiff-zero don't expect at least one line of context --reject leave the rejected hunks in corresponding *.rej files --allow-overlap allow overlapping hunks -v, --verbose be more verbose -q, --quiet be more quiet --inaccurate-eof tolerate incorrectly detected missing new-line at the end of file --recount do not trust the line counts in the hunk headers --directory <root> prepend <root> to all filenames --allow-empty don't return error for empty patches\"]},\"37\":{\"h\":\"branch\",\"t\":[\"git branch -h\",\"usage: git branch [<options>] [-r | -a] [--merged] [--no-merged] or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>] or: git branch [<options>] [-l] [<pattern>...] or: git branch [<options>] [-r] (-d | -D) <branch-name>... or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch> or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch> or: git branch [<options>] [-r | -a] [--points-at] or: git branch [<options>] [-r | -a] [--format] Generic options -v, --verbose show hash and subject, give twice for upstream branch -q, --quiet suppress informational messages -t, --track[=(direct|inherit)] set branch tracking configuration -u, --set-upstream-to <upstream> change the upstream info --unset-upstream unset the upstream info --color[=<when>] use colored output -r, --remotes act on remote-tracking branches --contains <commit> print only branches that contain the commit --no-contains <commit> print only branches that don't contain the commit --abbrev[=<n>] use <n> digits to display object names Specific git-branch actions: -a, --all list both remote-tracking and local branches -d, --delete delete fully merged branch -D delete branch (even if not merged) -m, --move move/rename a branch and its reflog -M move/rename a branch, even if target exists -c, --copy copy a branch and its reflog -C copy a branch, even if target exists -l, --list list branch names --show-current show current branch name --create-reflog create the branch's reflog --edit-description edit the description for the branch -f, --force force creation, move/rename, deletion --merged <commit> print only branches that are merged --no-merged <commit> print only branches that are not merged --column[=<style>] list branches in columns --sort <key> field name to sort on --points-at <object> print only branches of the object -i, --ignore-case sorting and filtering are case insensitive --recurse-submodules recurse through submodules --format <format> format to use for the output\",\"git branch -M dev-branch git branch -D dev-branch\"]},\"38\":{\"h\":\"checkout\",\"t\":[\"git checkout -h\",\"usage: git checkout [<options>] <branch> or: git checkout [<options>] [<branch>] -- <file>... -b <branch> create and checkout a new branch -B <branch> create/reset and checkout a branch -l create reflog for new branch --guess second guess 'git checkout <no-such-branch>' (default) --overlay use overlay mode (default) -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref -2, --ours checkout our version for unmerged files -3, --theirs checkout their version for unmerged files -p, --patch select hunks interactively --ignore-skip-worktree-bits do not limit pathspecs to sparse entries only --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"git checkout -b dev-branch git checkout tags/v2.0.0-rc.52 -b v2.0.0-rc.52\"]},\"39\":{\"h\":\"cherry-pick\",\"t\":[\"git cherry-pick -h\",\"usage: git cherry-pick [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff] [-S[<keyid>]] <commit>... or: git cherry-pick (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit -x append commit name --ff allow fast-forward --allow-empty preserve initially empty commits --allow-empty-message allow commits with empty messages --keep-redundant-commits keep redundant, empty commits\"]},\"40\":{\"h\":\"clone\",\"t\":[\"git clone -h\",\"usage: git clone [<options>] [--] <repo> [<dir>] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --reject-shallow don't clone shallow repository -n, --no-checkout don't create a checkout --bare create a bare repository --mirror create a mirror repository (implies bare) -l, --local to clone from a local repository --no-hardlinks don't use local hardlinks, always copy -s, --shared setup as shared repository --recurse-submodules[=<pathspec>] initialize submodules in the clone --recursive[=<pathspec>] alias of --recurse-submodules -j, --jobs <n> number of submodules cloned in parallel --template <template-directory> directory from which templates will be used --reference <repo> reference repository --reference-if-able <repo> reference repository --dissociate use --reference only while cloning -o, --origin <name> use <name> instead of 'origin' to track upstream -b, --branch <branch> checkout <branch> instead of the remote's HEAD -u, --upload-pack <path> path to git-upload-pack on the remote --depth <depth> create a shallow clone of that depth --shallow-since <time> create a shallow clone since a specific time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --single-branch clone only one branch, HEAD or --branch --no-tags don't clone any tags, and make later fetches not to follow them --shallow-submodules any cloned submodules will be shallow --separate-git-dir <gitdir> separate git dir from working tree -c, --config <key=value> set config inside the new repository --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --filter <args> object filtering --also-filter-submodules apply partial clone filters to submodules --remote-submodules any cloned submodules will use their remote-tracking branch --sparse initialize sparse-checkout file to include only files at root --bundle-uri <uri> a URI for downloading bundles before fetching from origin remote\"]},\"41\":{\"h\":\"commit\",\"t\":[\"git commit -h\",\"usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend] [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)] [-F <file> | -m <msg>] [--reset-author] [--allow-empty] [--allow-empty-message] [--no-verify] [-e] [--author=<author>] [--date=<date>] [--cleanup=<mode>] [--[no-]status] [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]] [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]] [--] [<pathspec>...] -q, --quiet suppress summary after successful commit -v, --verbose show diff in commit message template Commit message options -F, --file <file> read message from file --author <author> override author for commit --date <date> override date for commit -m, --message <message> commit message -c, --reedit-message <commit> reuse and edit message from specified commit -C, --reuse-message <commit> reuse message from specified commit --fixup [(amend|reword):]commit use autosquash formatted message to fixup or amend/reword specified commit --squash <commit> use autosquash formatted message to squash specified commit --reset-author the commit is authored by me now (used with -C/-c/--amend) --trailer <trailer> add custom trailer(s) -s, --signoff add a Signed-off-by trailer -t, --template <file> use specified template file -e, --edit force edit of commit --cleanup <mode> how to strip spaces and #comments from message --status include status in commit message template -S, --gpg-sign[=<key-id>] GPG sign commit Commit contents options -a, --all commit all changed files -i, --include add specified files to index for commit --interactive interactively add files -p, --patch interactively add changes -o, --only commit only specified files -n, --no-verify bypass pre-commit and commit-msg hooks --dry-run show what would be committed --short show status concisely --branch show branch information --ahead-behind compute full ahead/behind values --porcelain machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL --amend amend previous commit --no-post-rewrite bypass post-rewrite hook -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"commit 将暂存区内容，提交到本地仓库中，并生成一个提交记录。\",\"git commit -m 'commit message' # 提交代码到本地仓库 git commit --amend # 向上一次提交记录中追加改动。可同时修改 commit message。 git commit -S -m 'commit message' # 使用 GPG 签名 git commit -a -m 'commit message' # 合并 执行 git add . 和 git commit -m\"]},\"42\":{\"h\":\"config\",\"t\":[\"git config -h\",\"usage: git config [<options>] Config file location --global use global config file --system use system config file --local use repository config file --worktree use per-worktree config file -f, --file <file> use given config file --blob <blob-id> read config from given blob object Action --get get value: name [value-pattern] --get-all get all values: key [value-pattern] --get-regexp get values for regexp: name-regex [value-pattern] --get-urlmatch get value specific for the URL: section[.var] URL --replace-all replace all matching variables: name value [value-pattern] --add add a new variable: name value --unset remove a variable: name [value-pattern] --unset-all remove all matches: name [value-pattern] --rename-section rename section: old-name new-name --remove-section remove a section: name -l, --list list all --fixed-value use string equality when comparing values to 'value-pattern' -e, --edit open an editor --get-color find the color configured: slot [default] --get-colorbool find the color setting: slot [stdout-is-tty] Type -t, --type <type> value is given this type --bool value is \\\"true\\\" or \\\"false\\\" --int value is decimal number --bool-or-int value is --bool or --int --bool-or-str value is --bool or string --path value is a path (file or directory name) --expiry-date value is an expiry date Other -z, --null terminate values with NUL byte --name-only show variable names only --includes respect include directives on lookup --show-origin show origin of config (file, standard input, blob, command line) --show-scope show scope of config (worktree, local, global, system, command) --default <value> with --get, use default value when missing entry\",\"配置 git 工作环境。分系统，用户，仓库三个级别的配置。\",\"下面给出三个配置文件的位置。\",\"system: 存储在 /etc/gitconfig.\",\"global: 存储在 ~/.gitconfig.\",\"local: 存储在 <repo>/.git/config.\",\"git config --global user.name \\\"user name\\\" git config --global user.email \\\"example@example.com\\\" git config --global autocrlf=input # 配置 crlf 到 lf 的转换，windows 建议设置 true。\"]},\"43\":{\"h\":\"fetch\",\"t\":[\"git fetch -h\",\"usage: git fetch [<options>] [<repository> [<refspec>...]] or: git fetch [<options>] <group> or: git fetch --multiple [<options>] [(<repository> | <group>)...] or: git fetch --all [<options>] -v, --verbose be more verbose -q, --quiet be more quiet --all fetch from all remotes --set-upstream set upstream for git pull/fetch -a, --append append to .git/FETCH_HEAD instead of overwriting --atomic use atomic transaction to update references --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local reference -m, --multiple fetch from multiple remotes -t, --tags fetch all tags and associated objects -n do not fetch all tags (--no-tags) -j, --jobs <n> number of submodules fetched in parallel --prefetch modify the refspec to place all refs within refs/prefetch/ -p, --prune prune remote-tracking branches no longer on remote -P, --prune-tags prune local tags no longer on remote and clobber changed tags --recurse-submodules[=<on-demand>] control recursive fetching of submodules --dry-run dry run --write-fetch-head write fetched references to the FETCH_HEAD file -k, --keep keep downloaded pack -u, --update-head-ok allow updating of HEAD ref --progress force progress reporting --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --refetch re-fetch without negotiating common commits --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --negotiate-only do not fetch a packfile; instead, print ancestors of negotiation tips --filter <args> object filtering --auto-maintenance run 'maintenance --auto' after fetching --auto-gc run 'maintenance --auto' after fetching --show-forced-updates check for forced-updates on all updated branches --write-commit-graph write the commit-graph after fetching --stdin accept refspecs from stdin\"]},\"44\":{\"h\":\"format-patch\",\"t\":[\"git format-patch -h\",\"usage: git format-patch [<options>] [<since> | <revision-range>] -n, --numbered use [PATCH n/m] even with a single patch -N, --no-numbered use [PATCH] even with multiple patches -s, --signoff add a Signed-off-by trailer --stdout print patches to standard out --cover-letter generate a cover letter --numbered-files use simple number sequence for output file names --suffix <sfx> use <sfx> instead of '.patch' --start-number <n> start numbering patches at <n> instead of 1 -v, --reroll-count <reroll-count> mark the series as Nth re-roll --filename-max-length <n> max length of output filename --rfc use [RFC PATCH] instead of [PATCH] --cover-from-description <cover-from-description-mode> generate parts of a cover letter based on a branch's description --subject-prefix <prefix> use [<prefix>] instead of [PATCH] -o, --output-directory <dir> store resulting files in <dir> -k, --keep-subject don't strip/add [PATCH] --no-binary don't output binary diffs --zero-commit output all-zero hash in From header --ignore-if-in-upstream don't include a patch matching a commit upstream -p, --no-stat show patch format instead of default (patch + stat) Messaging --add-header <header> add email header --to <email> add To: header --cc <email> add Cc: header --from[=<ident>] set From address to <ident> (or committer ident if absent) --in-reply-to <message-id> make first mail a reply to <message-id> --attach[=<boundary>] attach the patch --inline[=<boundary>] inline the patch --thread[=<style>] enable message threading, styles: shallow, deep --signature <signature> add a signature --base <base-commit> add prerequisite tree info to the patch series --signature-file <file> add a signature from a file -q, --quiet don't print the patch filenames --progress show progress while generating patches --interdiff <rev> show changes against <rev> in cover letter or single patch --range-diff <refspec> show changes against <refspec> in cover letter or single patch --creation-factor <n> percentage by which creation is weighted --force-in-body-from show in-body From: even if identical to the e-mail header\"]},\"45\":{\"h\":\"init\",\"t\":[\"git init -h\",\"usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--separate-git-dir <git-dir>] [--object-format=<format>] [-b <branch-name> | --initial-branch=<branch-name>] [--shared[=<permissions>]] [<directory>] --template <template-directory> directory from which templates will be used --bare create a bare repository --shared[=<permissions>] specify that the git repository is to be shared amongst several users -q, --quiet be quiet --separate-git-dir <gitdir> separate git dir from working tree -b, --initial-branch <name> override the name of the initial branch --object-format <hash> specify the hash algorithm to use\",\"创建一个空的 git 仓库。\",\"git init test # 创建目录为 test 的仓库 git init -b main test # 创建默认分支 main 的仓库\",\"创建裸仓库\",\"默认创建的仓库都带工作区。裸仓库主要用在远程服务仓库，如 github，gitee， 用于开发者提交自己的代码。\",\"下面是在 linux 环境创建并使用裸仓库的实例。 用户名 flueky.zuo\",\"git init --base test # 在用户目录下创建 test 裸仓库 # 以下命令在 git 工作区仓库执行。 git remote add local flueky.zuo@localhost:test git push local main # 提交代码到 local 仓库。\"]},\"46\":{\"h\":\"log\",\"t\":[\"查看提交记录。\",\"git log # 默认按照标准格式，由近到远输出提交记录 git log --oneline # 简化输出，只显示提交 id 和信息。 git log --author 'flueky.zuo' # 查看指定提交者的信息，通常记录在 user.name 和 user.email 中。 git log --since/--after '2024-10-01' # 显示指定时间之后的提交。 git log --until/--before '2024-10-02' # 显示指定时间之前的提交。 git log --grep 'message' # 查看包含指定信息的提交。 git log --graph # 显示包含图形的提交记录 git log -p # 补丁的形式，显示每个提交的差异。可结合 -- filepath 使用。 git log --stat # 显示每次修改提交的文件统计信息。 git log -num # 显示最近 num 次的提交。\"]},\"47\":{\"h\":\"merge\",\"t\":[\"git merge -h\",\"usage: git merge [<options>] [<commit>...] or: git merge --abort or: git merge --continue -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --summary (synonym to --stat) --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) -e, --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward (default) --ff-only abort if fast-forward is not possible --rerere-autoupdate update the index with reused conflict resolution if possible --verify-signatures verify that the named commit has a valid GPG signature -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -m, --message <message> merge commit message (for a non-fast-forward merge) -F, --file <path> read message from file --into-name <name> use <name> instead of the real target -v, --verbose be more verbose -q, --quiet be more quiet --abort abort the current in-progress merge --quit --abort but leave index and working tree alone --continue continue the current in-progress merge --allow-unrelated-histories allow merging unrelated histories --progress force progress reporting -S, --gpg-sign[=<key-id>] GPG sign commit --autostash automatically stash/stash pop before and after --overwrite-ignore update ignored files (default) --signoff add a Signed-off-by trailer --no-verify bypass pre-merge-commit and commit-msg hooks\"]},\"48\":{\"h\":\"pull\",\"t\":[\"git pull -h\",\"usage: git pull [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --recurse-submodules[=<on-demand>] control for recursive fetching of submodules Options related to merging -r, --rebase[=(false|true|merges|interactive)] incorporate changes by rebasing rather than merging -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --signoff[=...] add a Signed-off-by trailer --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward --ff-only abort if fast-forward is not possible --verify control use of pre-merge-commit and commit-msg hooks --verify-signatures verify that the named commit has a valid GPG signature --autostash automatically stash/stash pop before and after -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --allow-unrelated-histories allow merging unrelated histories Options related to fetching --all fetch from all remotes -a, --append append to .git/FETCH_HEAD instead of overwriting --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local branch -t, --tags fetch all tags and associated objects -p, --prune prune remote-tracking branches no longer on remote -j, --jobs[=<n>] number of submodules pulled in parallel --dry-run dry run -k, --keep keep downloaded pack --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --show-forced-updates check for forced-updates on all updated branches --set-upstream set upstream for git pull/fetch\"]},\"49\":{\"h\":\"push\",\"t\":[\"git push -h\",\"usage: git push [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --repo <repository> repository --all push all refs --mirror mirror all refs -d, --delete delete refs --tags push tags (can't be used with --all or --mirror) -n, --dry-run dry run --porcelain machine-readable output -f, --force force updates --force-with-lease[=<refname>:<expect>] require old value of ref to be at this value --force-if-includes require remote updates to be integrated locally --recurse-submodules (check|on-demand|no) control recursive pushing of submodules --thin use thin pack --receive-pack <receive-pack> receive pack program --exec <receive-pack> receive pack program -u, --set-upstream set upstream for git pull/status --progress force progress reporting --prune prune locally removed refs --no-verify bypass pre-push hook --follow-tags push missing but relevant tags --signed[=(yes|no|if-asked)] GPG sign the push --atomic request atomic transaction on remote side -o, --push-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only\",\"push 命令将本地仓库的改动推送到远程仓库。如 Github, Gitee, Gitlab 。\",\"git push origin main # 推送 main 分支到 origin 仓库 git push -d origin main # 删除 origin 仓库的 main 分支，(其中默认分支和受保护的分支不能被删除) git push origin 'tag name' # 推送单个标签 git push origin --tags # 推送全部标签到 origin 仓库 git push origin :refs/tags/'tag name' # 删除 origin 仓库的标签，需要先执行 git tag -d 'tag name'\"]},\"50\":{\"h\":\"rebase\",\"t\":[\"git rebase -h\",\"usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase> | --keep-base] [<upstream> [<branch>]] or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>] or: git rebase --continue | --abort | --skip | --edit-todo --onto <revision> rebase onto given branch instead of upstream --keep-base use the merge-base of upstream and branch as the current base --no-verify allow pre-rebase hook to run -q, --quiet be quiet. implies --no-stat -v, --verbose display a diffstat of what changed upstream -n, --no-stat do not show diffstat of what changed upstream --signoff add a Signed-off-by trailer to each commit --committer-date-is-author-date make committer date match author date --reset-author-date ignore author date and use current date -C <n> passed to 'git apply' --ignore-whitespace ignore changes in whitespace --whitespace <action> passed to 'git apply' -f, --force-rebase cherry-pick all commits, even if unchanged --no-ff cherry-pick all commits, even if unchanged --continue continue --skip skip current patch and continue --abort abort and check out the original branch --quit abort but keep HEAD where it is --edit-todo edit the todo list during an interactive rebase --show-current-patch show the patch file being applied or merged --apply use apply strategies to rebase -m, --merge use merging strategies to rebase -i, --interactive let the user edit the list of commits to rebase --rerere-autoupdate update the index with reused conflict resolution if possible --empty <{drop,keep,ask}> how to handle commits that become empty --autosquash move commits that begin with squash!/fixup! under -i --update-refs update branches that point to commits that are being rebased -S, --gpg-sign[=<key-id>] GPG-sign commits --autostash automatically stash/stash pop before and after -x, --exec <exec> add exec lines after each commit of the editable list -r, --rebase-merges[=<mode>] try to rebase merges instead of skipping them --fork-point use 'merge-base --fork-point' to refine upstream -s, --strategy <strategy> use the given merge strategy -X, --strategy-option <option> pass the argument through to the merge strategy --root rebase all reachable commits up to the root(s) --reschedule-failed-exec automatically re-schedule any `exec` that fails --reapply-cherry-picks apply all changes, even those already present upstream\"]},\"51\":{\"h\":\"remote\",\"t\":[\"git remote -h\",\"usage: git remote [-v | --verbose] or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url> or: git remote rename <old> <new> or: git remote remove <name> or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>) or: git remote [-v | --verbose] show [-n] <name> or: git remote prune [-n | --dry-run] <name> or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...] or: git remote set-branches [--add] <name> <branch>... or: git remote get-url [--push] [--all] <name> or: git remote set-url [--push] <name> <newurl> [<oldurl>] or: git remote set-url --add <name> <newurl> or: git remote set-url --delete <name> <url> -v, --verbose be verbose; must be placed before a subcommand\",\"本地仓库关联到远程仓库的信息，使用 remote 管理。配置信息保存在 .git/config。 常用命令如下：\",\"git remote -v # 检查 remote 信息 # 添加 GitHub 地址， 使用 git push github main 推送 git remote add github git@github.com:flueky/docs.git # 重命名 github 到 origin，后续使用 origin 推送代码 git remote rename github origin # 删除这个分支 git remote remove github\"]},\"52\":{\"h\":\"reset\",\"t\":[\"git reset -h\",\"usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>] or: git reset [-q] [<tree-ish>] [--] <pathspec>... or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [<tree-ish>] or: git reset --patch [<tree-ish>] [--] [<pathspec>...] -q, --quiet be quiet, only report errors --no-refresh skip refreshing the index after reset --mixed reset HEAD and index --soft reset only HEAD --hard reset HEAD, index and working tree --merge reset HEAD, index and working tree --keep reset HEAD but keep local changes --recurse-submodules[=<reset>] control recursive updating of submodules -p, --patch select hunks interactively -N, --intent-to-add record only the fact that removed paths will be added later --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"53\":{\"h\":\"revert\",\"t\":[\"git revert -h\",\"usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>... or: git revert (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --reference use the 'reference' format to refer to commits\"]},\"54\":{\"h\":\"rm\",\"t\":[\"git rm -h\",\"usage: git rm [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch] [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...] -n, --dry-run dry run -q, --quiet do not list removed files --cached only remove from the index -f, --force override the up-to-date check -r allow recursive removal --ignore-unmatch exit with a zero status even if nothing matched --sparse allow updating entries outside of the sparse-checkout cone --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"55\":{\"h\":\"stash\",\"t\":[\"git stash -h\",\"usage: git stash list [<log-options>] or: git stash show [-u | --include-untracked | --only-untracked] [<diff-options>] [<stash>] or: git stash drop [-q | --quiet] [<stash>] or: git stash pop [--index] [-q | --quiet] [<stash>] or: git stash apply [--index] [-q | --quiet] [<stash>] or: git stash branch <branchname> [<stash>] or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [(-m | --message) <message>] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...]] or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [<message>] or: git stash clear or: git stash create [<message>] or: git stash store [(-m | --message) <message>] [-q | --quiet] <commit>\",\"stash 命令将未提交的更改保存到 临时堆栈，（暂时保存在本地仓库中，可撤回）。以便能够切换分支或执行其他操作，但不丢失未提交的工作。\",\"未提交的更改包括：工作区的更改，和暂存区的更改。\",\"git stash list # 查看全部暂存的记录 git stash pop # 取出最近暂存的修改记录 git stash drop # 丢弃最近暂存的修改记录\",\"提示\",\"执行 git stash pop 后，如遇到和工作区的改动存在冲突，则会保留栈顶的记录。待解决冲突后，需要执行 git stash drop。\"]},\"56\":{\"h\":\"status\",\"t\":[\"git status -h\",\"usage: git status [<options>] [--] [<pathspec>...] -v, --verbose be verbose -s, --short show status concisely -b, --branch show branch information --show-stash show stash information --ahead-behind compute full ahead/behind values --porcelain[=<version>] machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --ignored[=<mode>] show ignored files, optional modes: traditional, matching, no. (Default: traditional) --ignore-submodules[=<when>] ignore changes to submodules, optional when: all, dirty, untracked. (Default: all) --column[=<style>] list untracked files in columns --no-renames do not detect renames -M, --find-renames[=<n>] detect renames, optionally set similarity index\"]},\"57\":{\"h\":\"switch\",\"t\":[\"git switch -h\",\"usage: git switch [<options>] [<branch>] -c, --create <branch> create and switch to a new branch -C, --force-create <branch> create/reset and switch to a branch --guess second guess 'git switch <no-such-branch>' --discard-changes throw away local modifications -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref\"]},\"58\":{\"h\":\"tag\",\"t\":[\"git tag -h\",\"usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] [-e] <tagname> [<commit> | <object>] or: git tag -d <tagname>... or: git tag [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>] [--points-at <object>] [--column[=<options>] | --no-column] [--create-reflog] [--sort=<key>] [--format=<format>] [--merged <commit>] [--no-merged <commit>] [<pattern>...] or: git tag -v [--format=<format>] <tagname>... -l, --list list tag names -n[<n>] print <n> lines of each tag message -d, --delete delete tags -v, --verify verify tags Tag creation options -a, --annotate annotated tag, needs a message -m, --message <message> tag message -F, --file <file> read message from file -e, --edit force edit of tag message -s, --sign annotated and GPG-signed tag --cleanup <mode> how to strip spaces and #comments from message -u, --local-user <key-id> use another key to sign the tag -f, --force replace the tag if exists --create-reflog create a reflog Tag listing options --column[=<style>] show tag list in columns --contains <commit> print only tags that contain the commit --no-contains <commit> print only tags that don't contain the commit --merged <commit> print only tags that are merged --no-merged <commit> print only tags that are not merged --sort <key> field name to sort on --points-at <object> print only tags of the object --format <format> format to use for the output --color[=<when>] respect format colors -i, --ignore-case sorting and filtering are case insensitive\",\"tag 命令对提交记录添加标签标识。 如每次发行版本之后，对最新的提交记录打上标签。\",\"git tag -a 'tag name' -m 'tag message' # 对最新的提交添加 tag name, 并记为 tag message git tag 'tag name' 'commit id' # 对指定的提交记录添加 tag name，而后需要动态输入 tag message git tag -l # 列出全部 tag name git tag -n # 列出全部 tag name 和 tag message git tag -d 'tag name' # 删除指定的 tag\"]},\"59\":{\"c\":[\"Git\"]},\"60\":{\"h\":\"编码、摘要和加密（二）—— 信息摘要\",\"t\":[\"信息摘要，英译 Message Digest 。看见首字母这么大的 M 、D有没有立即联想到 MD5 算法。其实 MD5算法只是目前比较流行的信息摘要算法，在它之前，还出现过 MD2MD4,以及目前仍然在用的安全散列算法（Secure Hash Algorithm） SHA1 和 SHA256都属于信息摘要算法的一种。国家密码管理局于2010年12月也发布了一种信息摘要算法 SM3 。\",\"由于对信息摘要算法研究并不透彻，因此这篇文章将重点讲 jdk 支持的三个常见摘要算法的使用：MD5、SHA1、SHA256。\"]},\"61\":{\"h\":\"1. 相关代码\",\"t\":[\"Java 对信息摘要算法做了比较完整的封装——MessageDigest。该类是抽象类，针对具体信息摘要算法的实现使用了代理模式。主要提供了三个方法及其重载方法。\",\"/** * 获取摘要算法对象。 * 通过指定参数 algorithm 是 MD5 SHA1 SHA256 ,获取具体的实例。 */ static MessageDigest getInstance /** * 接收参与摘要计算的字节数据，可多次执行。一般用于文件的的摘要计算。 * 也可以一次将文件的全部字节读取至内存，使用 digest 方法一次计算。 */ void update /** * 具有两种使用场景。 * 1. 在 update 方法接收全部的字节数据之后，使用此方法生成摘要数据。 * 2. 直接使用此方法接收较短的字节数据，生成摘要数据。 */ byte[] digest\"]},\"62\":{\"h\":\"2. 用途\"},\"63\":{\"h\":\"2.1 计算字符串\",\"t\":[\"用于校验报文数据在网络传输的过程中是否被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算字符串md5 * * @param data * @return */ public static final String md5(String data) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); byte[] digest = messageDigest.digest(data.getBytes()); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return null; }\"]},\"64\":{\"h\":\"2.2 计算文件\",\"t\":[\"通过网络下载一些文件的时候，通常通过计算下载下来文件的 MD5 和 SHA1 判断下载下来的文件是否在传输过程中被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算文件md5 * * @param data * @return */ public static final String fileMd5(String path) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); File file = new File(path); if (!file.exists()) throw new IllegalArgumentException(\\\"The file path is illegal\\\"); InputStream inputStream = new FileInputStream(file); byte[] buff = new byte[1024]; int len; while ((len = inputStream.read(buff)) > 0) { messageDigest.update(buff, 0, len); } byte[] digest = messageDigest.digest(); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return null; }\",\"如需计算 SHA1 和 SHA256 ，只需将 getInstance 的参数值改成 SHA-1 和 SHA-256。\"]},\"65\":{\"h\":\"3. 总结\",\"t\":[\"千万不要认为 MD5 是加密算法。信息摘要算法，是一种单向散列算法，是一种不可逆的算法，即，可以根据一个字符串计算出 MD5，却不能根据 MD5 还原出生成它的字符串。\"]},\"66\":{\"c\":[\"md5\",\"sha1\",\"sha256\"]},\"67\":{\"h\":\"Vuepress Markdown 语法\"},\"68\":{\"h\":\"示例\"},\"69\":{\"h\":\"标题\"},\"70\":{\"h\":\"文本\"},\"71\":{\"h\":\"列表\"},\"72\":{\"h\":\"引用\"},\"73\":{\"h\":\"代码块\"},\"74\":{\"h\":\"链接\"},\"75\":{\"h\":\"图像\"},\"76\":{\"h\":\"注脚\"},\"77\":{\"h\":\"上标下标\"},\"78\":{\"h\":\"表格\"},\"79\":{\"h\":\"分割线\"},\"80\":{\"h\":\"数学公式\"},\"81\":{\"h\":\"警告\"},\"82\":{\"h\":\"提示\"},\"83\":{\"h\":\"标签\"},\"84\":{\"h\":\"自定义对齐\"},\"85\":{\"h\":\"思维导图\"},\"86\":{\"h\":\"流程图\",\"t\":[\"注脚解释1。 ↩︎\",\"注脚解释2。 ↩︎\"]},\"87\":{\"c\":[\"Markdown\"]},\"88\":{\"h\":\"Ubuntu 开箱配置\",\"t\":[\"记录 Ubuntu 从零到一的开箱配置。\"]},\"89\":{\"h\":\"用户与组\",\"t\":[\"sudo useradd -m -s /bin/bash zkf # 新增用户 zkf sudo usermod -a -G sudo zkf # 将 zkf 添加到 sudo 组 # 上述两行命令可以合并成一行 sudo useradd -m -G wheel -s /bin/bash zkf sudo passwd zkf # 设置/修改 zkf 密码\"]},\"90\":{\"h\":\"编辑器\",\"t\":[\"sudo update-alternatives --config editor\"]},\"91\":{\"h\":\"挂载硬盘\",\"t\":[\"sudo mount /dev/sda1 /media/data # 将 sda1 分区挂载到 /media/data\"]},\"92\":{\"h\":\"设置快捷方式\",\"t\":[\"ln -sf /media/data ~/workspace # 对 /media/data 设置链接\"]},\"93\":{\"h\":\"Git\"},\"94\":{\"h\":\"安装\",\"t\":[\"sudo apt install git\"]},\"95\":{\"h\":\"配置\",\"t\":[\"git config --global user.name \\\"your name\\\" git config --global user.email \\\"your email\\\" git config --global core.autocrlf input\"]},\"96\":{\"h\":\"GPG\"},\"97\":{\"h\":\"配置\",\"t\":[\"gpg --full-gen-key # 选择 rsa，4096，失效日期，姓名和邮箱地址（注意和 git config 设置的一致） gpg --list-secret-keys --keyid-format LONG \\\"your email\\\" # 列出 Key 信息。 # sec rsa4096/F212D2CFEBF50880 2024-04-20 [SC] 中，是 F212D2CFEBF50880 key id gpg --armor --export F212D2CFEBF50880 # 导出公钥，配置到 gitlab GPG Keys 页面。 git config --global user.signingkey F212D2CFEBF50880 # 告诉 git，使用此密钥签名 git config --global commit.gpgsign true # 设置默认使用 GPG key 签名\"]},\"98\":{\"h\":\"Python\",\"t\":[\"sudo apt install python3 # 安装 python\",\"python 通过 pip 管理安装包的依赖关系。安装 pip 有两种方式。\"]},\"99\":{\"h\":\"virtual env\",\"t\":[\"sudo apt install python3-venv # 安装 virtual env python3 -m venv \\\"virtual env name\\\" # 创建虚拟环境\"]},\"100\":{\"h\":\"get-pip\",\"t\":[\"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python3 get-pip.py # 安装 pip rm -rf get-pip.py\"]},\"101\":{\"c\":[\"Others\"]},\"102\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"虚拟环境\",{\"1\":{\"99\":1}}],[\"告诉\",{\"1\":{\"97\":1}}],[\"告知\",{\"1\":{\"5\":1}}],[\"页面\",{\"1\":{\"97\":1}}],[\"导出\",{\"1\":{\"97\":1}}],[\"导图\",{\"0\":{\"85\":1}}],[\"邮箱地址\",{\"1\":{\"97\":1}}],[\"姓名\",{\"1\":{\"97\":1}}],[\"姓氏\",{\"1\":{\"32\":1}}],[\"日期\",{\"1\":{\"97\":1}}],[\"日志\",{\"1\":{\"1\":3}}],[\"失效\",{\"1\":{\"97\":1}}],[\"选择\",{\"1\":{\"97\":1}}],[\"快捷方式\",{\"0\":{\"92\":1}}],[\"快速\",{\"1\":{\"10\":1}}],[\"硬盘\",{\"0\":{\"91\":1}}],[\"挂载\",{\"0\":{\"91\":1},\"1\":{\"91\":1}}],[\"新增\",{\"1\":{\"89\":1}}],[\"组\",{\"0\":{\"89\":1},\"1\":{\"89\":1}}],[\"组合成\",{\"1\":{\"12\":1}}],[\"零到\",{\"1\":{\"88\":1}}],[\"从\",{\"1\":{\"88\":1}}],[\"开箱\",{\"0\":{\"88\":1},\"1\":{\"88\":1}}],[\"开发者\",{\"1\":{\"45\":1}}],[\"开发\",{\"1\":{\"0\":1}}],[\"︎\",{\"1\":{\"86\":2}}],[\"↩\",{\"1\":{\"86\":2}}],[\"流程图\",{\"0\":{\"86\":1}}],[\"流行\",{\"1\":{\"60\":1}}],[\"思维\",{\"0\":{\"85\":1}}],[\"自定义\",{\"0\":{\"84\":1}}],[\"自己\",{\"1\":{\"45\":1}}],[\"警告\",{\"0\":{\"81\":1}}],[\"表格\",{\"0\":{\"78\":1}}],[\"表示\",{\"1\":{\"1\":4,\"5\":2,\"6\":1,\"8\":8,\"10\":4,\"11\":2,\"12\":2,\"15\":9,\"29\":2,\"30\":4}}],[\"图像\",{\"0\":{\"75\":1}}],[\"图形\",{\"1\":{\"46\":1}}],[\"语法\",{\"0\":{\"67\":1}}],[\"认为\",{\"1\":{\"65\":1}}],[\"千万\",{\"1\":{\"65\":1}}],[\"篡改\",{\"1\":{\"63\":1,\"64\":1}}],[\"网络\",{\"1\":{\"63\":1,\"64\":1}}],[\"网络通信\",{\"1\":{\"13\":1}}],[\"报文\",{\"1\":{\"63\":1}}],[\"较\",{\"1\":{\"61\":1}}],[\"较为\",{\"1\":{\"16\":1}}],[\"内存\",{\"1\":{\"61\":1}}],[\"内容\",{\"1\":{\"1\":1,\"10\":1,\"27\":1,\"41\":1}}],[\"至\",{\"1\":{\"61\":1}}],[\"读取\",{\"1\":{\"61\":1}}],[\"参与\",{\"1\":{\"61\":1}}],[\"参数值\",{\"1\":{\"64\":1}}],[\"参数\",{\"1\":{\"12\":1,\"28\":3,\"29\":1,\"61\":1}}],[\"代理\",{\"1\":{\"61\":1}}],[\"代码运行\",{\"1\":{\"2\":1}}],[\"代码\",{\"0\":{\"12\":1,\"16\":1,\"28\":1,\"61\":1,\"73\":1},\"1\":{\"1\":4,\"2\":2,\"3\":1,\"4\":3,\"5\":1,\"13\":1,\"21\":1,\"27\":1,\"28\":1,\"31\":1,\"32\":1,\"41\":1,\"45\":2,\"51\":1}}],[\"代码执行\",{\"0\":{\"1\":1}}],[\"抽象类\",{\"1\":{\"61\":1}}],[\"讲\",{\"1\":{\"60\":1}}],[\"讲究\",{\"1\":{\"4\":1}}],[\"篇文章\",{\"1\":{\"60\":1}}],[\"透彻\",{\"1\":{\"60\":1}}],[\"研究\",{\"1\":{\"60\":1}}],[\"月\",{\"1\":{\"60\":1}}],[\"于\",{\"1\":{\"60\":1}}],[\"国家\",{\"1\":{\"60\":1}}],[\"属于\",{\"1\":{\"60\":1}}],[\"散列\",{\"1\":{\"60\":1,\"65\":1}}],[\"安全\",{\"1\":{\"60\":1}}],[\"安装包\",{\"1\":{\"98\":1}}],[\"安装\",{\"0\":{\"94\":1},\"1\":{\"1\":3,\"98\":2,\"99\":1,\"100\":1}}],[\"仍然\",{\"1\":{\"60\":1}}],[\"联想\",{\"1\":{\"60\":1}}],[\"立即\",{\"1\":{\"60\":1}}],[\"看见\",{\"1\":{\"60\":1}}],[\"二\",{\"0\":{\"60\":1}}],[\"二进制\",{\"1\":{\"8\":1,\"16\":1}}],[\"列表\",{\"0\":{\"71\":1}}],[\"列出\",{\"1\":{\"58\":2,\"97\":1}}],[\"列举\",{\"1\":{\"7\":1,\"10\":1,\"28\":1}}],[\"输入\",{\"1\":{\"58\":1}}],[\"输出\",{\"0\":{\"26\":1},\"1\":{\"1\":2,\"46\":2}}],[\"动态\",{\"1\":{\"58\":1}}],[\"而后\",{\"1\":{\"58\":1}}],[\"记为\",{\"1\":{\"58\":1}}],[\"记录\",{\"1\":{\"34\":1,\"41\":2,\"46\":4,\"55\":4,\"58\":3,\"88\":1}}],[\"打上\",{\"1\":{\"58\":1}}],[\"版本\",{\"1\":{\"58\":1}}],[\"待\",{\"1\":{\"55\":1}}],[\"栈顶\",{\"1\":{\"55\":1}}],[\"冲突\",{\"1\":{\"55\":2}}],[\"丢弃\",{\"1\":{\"55\":1}}],[\"丢失\",{\"1\":{\"55\":1}}],[\"切换\",{\"1\":{\"55\":1}}],[\"堆栈\",{\"1\":{\"55\":1}}],[\"临时\",{\"1\":{\"55\":1}}],[\"地址\",{\"1\":{\"51\":1}}],[\"管理局\",{\"1\":{\"60\":1}}],[\"管理\",{\"1\":{\"51\":1,\"98\":1}}],[\"先\",{\"1\":{\"49\":1}}],[\"单向\",{\"1\":{\"65\":1}}],[\"单个\",{\"1\":{\"49\":1}}],[\"单位\",{\"1\":{\"8\":1}}],[\"受\",{\"1\":{\"49\":1}}],[\"删除\",{\"1\":{\"49\":3,\"51\":1,\"58\":1}}],[\"推送\",{\"1\":{\"49\":4,\"51\":2}}],[\"统计\",{\"1\":{\"46\":1}}],[\"结合\",{\"1\":{\"46\":1}}],[\"结束\",{\"1\":{\"28\":1}}],[\"差异\",{\"1\":{\"46\":1}}],[\"远\",{\"1\":{\"46\":1}}],[\"远程\",{\"1\":{\"45\":1,\"49\":1,\"51\":1}}],[\"格式\",{\"1\":{\"46\":1}}],[\"按照\",{\"1\":{\"46\":1}}],[\"查看\",{\"1\":{\"46\":3,\"55\":1}}],[\"查阅\",{\"1\":{\"8\":1}}],[\"服务\",{\"1\":{\"45\":1}}],[\"带\",{\"1\":{\"45\":1}}],[\"裸\",{\"1\":{\"45\":4}}],[\"默认\",{\"1\":{\"45\":2,\"46\":1,\"49\":1,\"97\":1}}],[\"目录\",{\"1\":{\"45\":2}}],[\"目前\",{\"1\":{\"0\":1,\"60\":2}}],[\"空\",{\"1\":{\"45\":1}}],[\"创建\",{\"1\":{\"45\":7,\"99\":1}}],[\"~\",{\"1\":{\"42\":1,\"92\":1}}],[\"级别\",{\"1\":{\"42\":1}}],[\"环境\",{\"1\":{\"42\":1,\"45\":1}}],[\"配置文件\",{\"1\":{\"42\":1}}],[\"配置\",{\"0\":{\"88\":1,\"95\":1,\"97\":1},\"1\":{\"42\":3,\"51\":1,\"88\":1,\"97\":1}}],[\"签名\",{\"1\":{\"41\":1,\"97\":2}}],[\"修改\",{\"1\":{\"41\":1,\"46\":1,\"55\":2,\"89\":1}}],[\"改成\",{\"1\":{\"64\":1}}],[\"改动\",{\"1\":{\"41\":1,\"49\":1,\"55\":1}}],[\"改进版\",{\"1\":{\"24\":1}}],[\"追加\",{\"1\":{\"41\":1}}],[\"向上\",{\"1\":{\"41\":1}}],[\"向量\",{\"1\":{\"24\":1,\"28\":1,\"30\":1}}],[\"仓库\",{\"1\":{\"41\":2,\"42\":1,\"45\":11,\"49\":6,\"51\":2,\"55\":1}}],[\"本地\",{\"1\":{\"41\":2,\"49\":1,\"51\":1,\"55\":1}}],[\"`\",{\"1\":{\"36\":2,\"50\":2}}],[\"强制\",{\"1\":{\"35\":1}}],[\"添加\",{\"1\":{\"35\":3,\"51\":1,\"58\":3,\"89\":1}}],[\"#\",{\"1\":{\"35\":3,\"39\":1,\"41\":5,\"42\":1,\"45\":5,\"46\":10,\"47\":1,\"48\":1,\"49\":5,\"51\":4,\"53\":1,\"55\":3,\"58\":6,\"89\":4,\"91\":1,\"92\":1,\"97\":6,\"98\":1,\"99\":2,\"100\":1}}],[\"准备\",{\"1\":{\"35\":1}}],[\"工作\",{\"1\":{\"35\":1,\"42\":1,\"45\":2,\"55\":3}}],[\"|\",{\"1\":{\"35\":1,\"37\":7,\"38\":1,\"39\":3,\"41\":10,\"43\":1,\"44\":1,\"45\":2,\"48\":3,\"49\":4,\"50\":4,\"51\":12,\"52\":4,\"53\":3,\"54\":1,\"55\":20,\"57\":1,\"58\":5}}],[\"命令\",{\"0\":{\"34\":1},\"1\":{\"45\":1,\"49\":1,\"55\":1,\"58\":1,\"89\":1}}],[\"命名\",{\"1\":{\"32\":1}}],[\"终端\",{\"1\":{\"32\":1}}],[\"形式\",{\"1\":{\"32\":1,\"46\":1}}],[\"文本\",{\"0\":{\"70\":1}}],[\"文件\",{\"0\":{\"64\":1},\"1\":{\"32\":1,\"35\":3,\"46\":1,\"61\":2,\"64\":4}}],[\"文章\",{\"1\":{\"7\":1}}],[\"设置\",{\"0\":{\"92\":1},\"1\":{\"32\":1,\"42\":1,\"89\":1,\"92\":1,\"97\":2}}],[\"设备\",{\"1\":{\"1\":1}}],[\"越低\",{\"1\":{\"32\":1}}],[\"越长越\",{\"1\":{\"32\":1}}],[\"破解\",{\"1\":{\"32\":1}}],[\"大\",{\"1\":{\"60\":1}}],[\"大于\",{\"1\":{\"32\":1}}],[\"大写字母\",{\"1\":{\"16\":1}}],[\"模长\",{\"1\":{\"32\":3}}],[\"模式\",{\"0\":{\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1},\"1\":{\"22\":2,\"23\":2,\"24\":1,\"26\":1,\"27\":1,\"28\":5,\"29\":6,\"61\":1}}],[\"生成\",{\"1\":{\"32\":1,\"41\":1,\"61\":2,\"65\":1}}],[\"随机\",{\"1\":{\"32\":1}}],[\"首字母\",{\"1\":{\"32\":1,\"60\":1}}],[\"人\",{\"1\":{\"32\":1}}],[\"德曼\",{\"1\":{\"32\":1}}],[\"伦纳德\",{\"1\":{\"32\":1}}],[\"尔\",{\"1\":{\"32\":1}}],[\"莫\",{\"1\":{\"32\":1}}],[\"萨\",{\"1\":{\"32\":1}}],[\"迪\",{\"1\":{\"32\":1}}],[\"阿\",{\"1\":{\"32\":2}}],[\"阿拉伯数字\",{\"1\":{\"16\":1}}],[\"维斯特\",{\"1\":{\"32\":1}}],[\"李\",{\"1\":{\"32\":1}}],[\"·\",{\"1\":{\"32\":3}}],[\"罗纳德\",{\"1\":{\"32\":1}}],[\"由近\",{\"1\":{\"46\":1}}],[\"由\",{\"1\":{\"32\":1}}],[\"由于\",{\"1\":{\"6\":1,\"19\":1,\"28\":1,\"30\":1,\"60\":1}}],[\"年\",{\"1\":{\"32\":1,\"60\":1}}],[\"替代\",{\"1\":{\"31\":1}}],[\"替换\",{\"1\":{\"29\":1}}],[\"该类\",{\"1\":{\"61\":1}}],[\"该\",{\"1\":{\"30\":1}}],[\"连续\",{\"1\":{\"30\":2}}],[\"名称\",{\"1\":{\"30\":1}}],[\"次\",{\"1\":{\"30\":1,\"46\":1}}],[\"支持\",{\"1\":{\"29\":1,\"31\":2,\"60\":1}}],[\"全部\",{\"1\":{\"35\":1,\"49\":1,\"55\":1,\"58\":2,\"61\":2}}],[\"全部内容\",{\"1\":{\"8\":1}}],[\"全称\",{\"1\":{\"29\":1,\"31\":1}}],[\"扩展\",{\"1\":{\"28\":1}}],[\"校验\",{\"1\":{\"28\":1,\"63\":1}}],[\"误导\",{\"1\":{\"28\":1}}],[\"暂存\",{\"1\":{\"55\":3}}],[\"暂存区\",{\"1\":{\"35\":1,\"41\":1,\"55\":1}}],[\"暂时\",{\"1\":{\"55\":1}}],[\"暂\",{\"1\":{\"28\":1}}],[\"深入\",{\"1\":{\"28\":1}}],[\"未\",{\"1\":{\"28\":1,\"55\":3}}],[\"要求\",{\"1\":{\"28\":2}}],[\"包括\",{\"1\":{\"28\":1,\"55\":1}}],[\"包含\",{\"1\":{\"0\":1,\"46\":2}}],[\"以便\",{\"1\":{\"55\":1}}],[\"以\",{\"1\":{\"32\":1,\"63\":1,\"64\":1}}],[\"以及\",{\"1\":{\"29\":1,\"60\":1}}],[\"以下\",{\"1\":{\"28\":1,\"45\":1}}],[\"以上\",{\"1\":{\"4\":1,\"8\":1,\"31\":1}}],[\"封装\",{\"1\":{\"28\":1,\"61\":1}}],[\"部分\",{\"1\":{\"28\":1}}],[\"共\",{\"1\":{\"27\":1}}],[\"各\",{\"1\":{\"27\":1,\"30\":1}}],[\"当前目录\",{\"1\":{\"35\":1}}],[\"当\",{\"1\":{\"27\":1}}],[\"当做\",{\"1\":{\"21\":2}}],[\"填充\",{\"0\":{\"27\":1},\"1\":{\"27\":4,\"28\":10,\"29\":1,\"30\":1,\"31\":1}}],[\"得\",{\"1\":{\"26\":2}}],[\"得出\",{\"1\":{\"15\":1,\"22\":1}}],[\"细小\",{\"1\":{\"26\":1}}],[\"反馈\",{\"0\":{\"25\":1,\"26\":1}}],[\"异或\",{\"1\":{\"24\":3,\"25\":3,\"26\":2}}],[\"前者\",{\"1\":{\"30\":1}}],[\"前\",{\"1\":{\"24\":1,\"25\":1,\"26\":3,\"30\":2}}],[\"前面\",{\"1\":{\"6\":1}}],[\"链接\",{\"0\":{\"74\":1},\"1\":{\"92\":1}}],[\"链\",{\"0\":{\"24\":1}}],[\"块\",{\"0\":{\"24\":1,\"73\":1},\"1\":{\"23\":1,\"26\":2,\"27\":3,\"28\":2,\"29\":1,\"31\":1}}],[\"严重\",{\"1\":{\"23\":1}}],[\"严谨\",{\"1\":{\"4\":1}}],[\"步骤\",{\"1\":{\"23\":1}}],[\"拼接\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"合并\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"41\":1,\"89\":1}}],[\"合法\",{\"1\":{\"12\":1}}],[\"简化\",{\"1\":{\"46\":1}}],[\"简要\",{\"1\":{\"28\":1}}],[\"简称\",{\"1\":{\"23\":1,\"24\":2,\"25\":1,\"26\":1}}],[\"简单\",{\"1\":{\"1\":1,\"5\":1,\"23\":1}}],[\"英译\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"60\":1}}],[\"英文字母\",{\"1\":{\"8\":1}}],[\"密码\",{\"1\":{\"60\":1,\"89\":1}}],[\"密码本\",{\"0\":{\"23\":1}}],[\"密文\",{\"1\":{\"23\":3,\"24\":4,\"25\":3,\"26\":12,\"32\":1}}],[\"密钥\",{\"0\":{\"21\":1},\"1\":{\"17\":2,\"19\":1,\"21\":4,\"23\":1,\"24\":2,\"25\":2,\"26\":2,\"28\":1,\"29\":1,\"30\":6,\"31\":2,\"32\":3,\"97\":1}}],[\"电子\",{\"0\":{\"23\":1}}],[\"衍生\",{\"1\":{\"22\":1}}],[\"暴力破解\",{\"1\":{\"22\":1}}],[\"防止\",{\"1\":{\"22\":1}}],[\"短\",{\"1\":{\"22\":1,\"61\":1}}],[\"若\",{\"1\":{\"30\":1}}],[\"若干块\",{\"1\":{\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"若想\",{\"1\":{\"8\":1}}],[\"固定\",{\"1\":{\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"29\":1}}],[\"成\",{\"1\":{\"22\":1,\"23\":2,\"24\":2,\"25\":2,\"26\":2,\"28\":1,\"31\":1,\"89\":1}}],[\"适合\",{\"1\":{\"22\":1}}],[\"主要\",{\"1\":{\"22\":1,\"28\":3,\"45\":1,\"61\":1}}],[\"主线\",{\"1\":{\"0\":1,\"1\":2,\"2\":1,\"4\":3,\"5\":3,\"6\":2}}],[\"端\",{\"1\":{\"21\":1}}],[\"长\",{\"1\":{\"21\":1,\"22\":2}}],[\"长度\",{\"1\":{\"8\":1,\"15\":3,\"16\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"31\":1,\"32\":1}}],[\"优\",{\"1\":{\"22\":1}}],[\"优于\",{\"1\":{\"21\":1}}],[\"优势\",{\"1\":{\"15\":1}}],[\"加解密\",{\"1\":{\"21\":1,\"28\":1}}],[\"加密算法\",{\"1\":{\"7\":1,\"17\":2,\"19\":2,\"21\":7,\"22\":2,\"31\":1,\"32\":1,\"65\":1}}],[\"加密\",{\"0\":{\"7\":1,\"19\":2,\"22\":1,\"24\":1,\"25\":1,\"60\":1},\"1\":{\"7\":3,\"19\":3,\"21\":8,\"22\":5,\"23\":4,\"24\":3,\"25\":2,\"26\":4,\"27\":3,\"28\":7,\"29\":3,\"30\":4,\"31\":1}}],[\"区\",{\"1\":{\"35\":1,\"45\":2,\"55\":2}}],[\"区别\",{\"1\":{\"21\":1,\"26\":2}}],[\"区分\",{\"1\":{\"21\":1}}],[\"判别\",{\"1\":{\"21\":1}}],[\"判断\",{\"0\":{\"1\":1},\"1\":{\"1\":1,\"10\":1,\"64\":1}}],[\"划\",{\"1\":{\"21\":1}}],[\"划分\",{\"1\":{\"15\":1,\"22\":1,\"31\":1}}],[\"把\",{\"1\":{\"21\":1}}],[\"见\",{\"1\":{\"21\":1,\"27\":1}}],[\"私钥\",{\"1\":{\"21\":1,\"32\":1}}],[\"公钥\",{\"1\":{\"21\":1,\"32\":1,\"97\":1}}],[\"写\",{\"1\":{\"19\":1}}],[\"具有\",{\"1\":{\"61\":1}}],[\"具体\",{\"1\":{\"19\":1,\"27\":1,\"61\":2}}],[\"具备\",{\"1\":{\"6\":1,\"17\":1}}],[\"针对\",{\"1\":{\"19\":1,\"61\":1}}],[\"还有\",{\"1\":{\"28\":1}}],[\"还\",{\"1\":{\"19\":1,\"60\":1}}],[\"还原\",{\"1\":{\"19\":1,\"65\":1}}],[\"难\",{\"1\":{\"19\":1,\"32\":1}}],[\"原理\",{\"1\":{\"19\":1}}],[\"原则\",{\"1\":{\"0\":1}}],[\"算法\",{\"1\":{\"19\":3,\"28\":3,\"29\":1,\"30\":8,\"31\":1,\"60\":8,\"61\":3,\"63\":1,\"64\":1,\"65\":3}}],[\"就\",{\"1\":{\"19\":1,\"28\":1}}],[\"知道\",{\"1\":{\"19\":4}}],[\"任何人\",{\"1\":{\"19\":1}}],[\"任意\",{\"1\":{\"2\":1,\"6\":2}}],[\"同时\",{\"1\":{\"41\":1}}],[\"同一个\",{\"1\":{\"21\":2,\"23\":1}}],[\"同\",{\"1\":{\"19\":1,\"30\":1}}],[\"关联\",{\"1\":{\"51\":1}}],[\"关于\",{\"1\":{\"19\":1,\"28\":1}}],[\"关系\",{\"1\":{\"1\":1,\"10\":1,\"15\":1,\"98\":1}}],[\"明文\",{\"1\":{\"17\":1,\"22\":1,\"23\":1,\"24\":2,\"25\":2,\"26\":3,\"27\":3,\"28\":4,\"29\":1,\"31\":1}}],[\"正确性\",{\"1\":{\"28\":1}}],[\"正确\",{\"1\":{\"17\":2}}],[\"却\",{\"1\":{\"17\":1,\"65\":1}}],[\"他们\",{\"1\":{\"17\":1,\"32\":1}}],[\"总结\",{\"0\":{\"17\":1,\"65\":1}}],[\"寻找\",{\"1\":{\"16\":1}}],[\"末尾\",{\"1\":{\"16\":1}}],[\"检查\",{\"1\":{\"16\":1,\"51\":1}}],[\"处理\",{\"1\":{\"16\":2,\"30\":1}}],[\"两行\",{\"1\":{\"89\":1}}],[\"两种\",{\"1\":{\"61\":1,\"98\":1}}],[\"两段\",{\"1\":{\"30\":1}}],[\"两块\",{\"1\":{\"27\":1}}],[\"两位\",{\"1\":{\"16\":3}}],[\"两个\",{\"1\":{\"8\":1,\"12\":2,\"16\":1,\"27\":1}}],[\"保护\",{\"1\":{\"49\":1}}],[\"保留\",{\"1\":{\"16\":3,\"55\":1}}],[\"保存\",{\"1\":{\"16\":1,\"35\":1,\"51\":1,\"55\":2}}],[\"六位\",{\"1\":{\"16\":2}}],[\"剩余\",{\"1\":{\"16\":2}}],[\"号\",{\"1\":{\"16\":3}}],[\"等同于\",{\"1\":{\"30\":1}}],[\"等\",{\"1\":{\"16\":3}}],[\"小写字母\",{\"1\":{\"16\":1}}],[\"小伙伴\",{\"1\":{\"8\":1}}],[\"练手\",{\"1\":{\"16\":1}}],[\"入门\",{\"1\":{\"16\":1}}],[\"场景\",{\"1\":{\"16\":1,\"61\":1}}],[\"⌉\",{\"1\":{\"15\":1}}],[\"⌈\",{\"1\":{\"15\":1}}],[\"体现\",{\"1\":{\"15\":1,\"22\":1}}],[\"并用\",{\"1\":{\"16\":1}}],[\"并\",{\"1\":{\"15\":1,\"19\":1,\"32\":1,\"41\":1,\"45\":1,\"58\":1,\"60\":1}}],[\"标题\",{\"0\":{\"69\":1}}],[\"标签\",{\"0\":{\"83\":1},\"1\":{\"49\":3,\"58\":2}}],[\"标准\",{\"1\":{\"29\":1,\"31\":1,\"46\":1}}],[\"标记\",{\"1\":{\"15\":1,\"16\":1}}],[\"标识\",{\"1\":{\"1\":1,\"58\":1}}],[\"补丁\",{\"1\":{\"46\":1}}],[\"补位\",{\"1\":{\"15\":1,\"16\":2}}],[\"补充\",{\"1\":{\"15\":2,\"16\":1}}],[\"后者\",{\"1\":{\"30\":1}}],[\"后续\",{\"1\":{\"19\":1,\"27\":1,\"51\":1}}],[\"后\",{\"1\":{\"15\":7,\"16\":6,\"24\":1,\"25\":3,\"26\":2,\"27\":3,\"28\":1,\"30\":1,\"55\":2}}],[\"整分\",{\"1\":{\"27\":1}}],[\"整数倍\",{\"1\":{\"15\":1}}],[\"整除\",{\"1\":{\"15\":3}}],[\"整取\",{\"1\":{\"11\":1}}],[\"被\",{\"1\":{\"15\":3,\"49\":1,\"63\":1,\"64\":1}}],[\"案例\",{\"1\":{\"15\":1}}],[\"几个\",{\"1\":{\"15\":1,\"19\":1,\"28\":1}}],[\"试\",{\"1\":{\"15\":1}}],[\"keep\",{\"1\":{\"39\":2,\"43\":2,\"44\":1,\"48\":2,\"50\":4,\"52\":3,\"55\":2}}],[\"keys\",{\"1\":{\"97\":2}}],[\"keyid\",{\"1\":{\"39\":1,\"41\":1,\"53\":1,\"97\":1}}],[\"keypair\",{\"1\":{\"32\":4}}],[\"keypairgenerator\",{\"1\":{\"32\":2}}],[\"keygener\",{\"1\":{\"32\":4}}],[\"key\",{\"1\":{\"21\":4,\"29\":7,\"30\":7,\"31\":7,\"37\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"58\":5,\"97\":4}}],[\"k\",{\"1\":{\"14\":2,\"16\":2,\"43\":1,\"44\":1,\"48\":1,\"55\":2}}],[\"zkf\",{\"1\":{\"89\":7}}],[\"zuo\",{\"1\":{\"45\":2,\"46\":1}}],[\"zdiff3\",{\"1\":{\"38\":1,\"57\":1}}],[\"zero\",{\"1\":{\"36\":1,\"44\":2,\"54\":1}}],[\"z\",{\"1\":{\"14\":2,\"16\":4,\"36\":1,\"41\":1,\"42\":1,\"56\":1}}],[\"jobs\",{\"1\":{\"40\":1,\"43\":1,\"48\":1}}],[\"just\",{\"1\":{\"35\":1}}],[\"jdk\",{\"1\":{\"29\":1,\"60\":1}}],[\"java\",{\"1\":{\"19\":1,\"27\":1,\"28\":2,\"31\":1,\"61\":1}}],[\"j\",{\"1\":{\"14\":2,\"16\":2,\"40\":1,\"43\":1,\"48\":1}}],[\"your\",{\"1\":{\"95\":2,\"97\":1}}],[\"yes\",{\"1\":{\"49\":1}}],[\"y\",{\"1\":{\"14\":2,\"16\":2}}],[\"weighted\",{\"1\":{\"44\":1}}],[\"we\",{\"1\":{\"43\":1,\"48\":1}}],[\"write\",{\"1\":{\"43\":4}}],[\"would\",{\"1\":{\"41\":1}}],[\"workspace\",{\"1\":{\"92\":1}}],[\"worktree\",{\"1\":{\"38\":2,\"42\":3,\"57\":1}}],[\"worktrees\",{\"1\":{\"38\":1,\"57\":1}}],[\"working\",{\"1\":{\"35\":1,\"36\":2,\"40\":1,\"45\":1,\"47\":1,\"52\":2}}],[\"wheel\",{\"1\":{\"89\":1}}],[\"where\",{\"1\":{\"50\":1}}],[\"when\",{\"1\":{\"36\":2,\"37\":1,\"42\":2,\"56\":2,\"58\":1}}],[\"what\",{\"1\":{\"41\":1,\"50\":2}}],[\"while\",{\"1\":{\"40\":1,\"44\":1,\"64\":1}}],[\"whitespace\",{\"1\":{\"36\":5,\"50\":3}}],[\"which\",{\"1\":{\"35\":1,\"40\":1,\"44\":1,\"45\":1}}],[\"way\",{\"1\":{\"36\":2,\"38\":1,\"57\":1}}],[\"was\",{\"1\":{\"12\":1,\"16\":1}}],[\"windows\",{\"1\":{\"42\":1}}],[\"within\",{\"1\":{\"43\":1}}],[\"without\",{\"1\":{\"36\":1,\"43\":1}}],[\"with\",{\"1\":{\"35\":2,\"36\":3,\"38\":3,\"39\":2,\"41\":4,\"42\":2,\"44\":2,\"47\":1,\"49\":2,\"50\":2,\"52\":2,\"53\":1,\"54\":3,\"56\":1,\"57\":1}}],[\"will\",{\"1\":{\"35\":1,\"40\":3,\"45\":1,\"52\":1}}],[\"w\",{\"1\":{\"14\":2,\"16\":2}}],[\"quit\",{\"1\":{\"39\":2,\"47\":1,\"50\":1,\"53\":2}}],[\"quiet\",{\"1\":{\"36\":2,\"37\":1,\"38\":1,\"40\":2,\"41\":1,\"43\":2,\"44\":1,\"45\":3,\"47\":2,\"48\":2,\"49\":2,\"50\":2,\"52\":2,\"54\":2,\"55\":6,\"57\":1}}],[\"q\",{\"1\":{\"14\":2,\"16\":2,\"36\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1,\"43\":1,\"44\":1,\"45\":2,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"52\":4,\"54\":1,\"55\":6,\"57\":1}}],[\"考究\",{\"1\":{\"13\":1}}],[\"考虑\",{\"1\":{\"4\":1,\"16\":1}}],[\"没\",{\"1\":{\"13\":1}}],[\"没有\",{\"1\":{\"6\":1,\"19\":1,\"24\":1}}],[\"瞎编\",{\"1\":{\"13\":1}}],[\"楼主\",{\"1\":{\"13\":1}}],[\"诞生\",{\"1\":{\"13\":2}}],[\"因此\",{\"1\":{\"13\":2,\"15\":3,\"16\":1,\"19\":1,\"21\":1,\"22\":1,\"24\":1,\"30\":1,\"32\":1,\"60\":1}}],[\"因为\",{\"1\":{\"4\":1,\"6\":1}}],[\"减半\",{\"1\":{\"13\":1}}],[\"都\",{\"1\":{\"13\":1,\"45\":1,\"60\":1}}],[\"耗费\",{\"1\":{\"13\":1}}],[\"但\",{\"1\":{\"13\":1,\"17\":1,\"19\":1,\"55\":1}}],[\"但是\",{\"1\":{\"0\":1,\"6\":1,\"8\":1,\"15\":1,\"32\":1}}],[\"虽然\",{\"1\":{\"13\":1,\"17\":1}}],[\"翻\",{\"1\":{\"13\":1}}],[\"需补位\",{\"1\":{\"15\":1}}],[\"需\",{\"1\":{\"13\":1,\"64\":1}}],[\"需要\",{\"1\":{\"1\":2,\"2\":1,\"4\":1,\"8\":1,\"10\":1,\"12\":2,\"15\":1,\"17\":1,\"19\":1,\"21\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":2,\"28\":5,\"29\":1,\"30\":3,\"49\":1,\"55\":1,\"58\":1}}],[\"?\",{\"1\":{\"12\":2}}],[\"<\",{\"1\":{\"12\":5,\"16\":24,\"35\":3,\"36\":12,\"37\":28,\"38\":12,\"39\":8,\"40\":22,\"41\":26,\"42\":6,\"43\":20,\"44\":32,\"45\":12,\"47\":12,\"48\":19,\"49\":9,\"50\":16,\"51\":24,\"52\":8,\"53\":8,\"54\":3,\"55\":15,\"56\":8,\"57\":8,\"58\":34}}],[\"!\",{\"1\":{\"12\":1,\"16\":2,\"50\":2,\"64\":1}}],[\"%\",{\"1\":{\"12\":1,\"16\":3}}],[\"解释\",{\"0\":{\"34\":1},\"1\":{\"19\":1,\"86\":2}}],[\"解密\",{\"1\":{\"17\":1,\"19\":1,\"21\":2,\"28\":3,\"29\":1,\"30\":2}}],[\"解码\",{\"1\":{\"12\":1,\"16\":1,\"17\":1,\"19\":1}}],[\"解决\",{\"1\":{\"0\":1,\"1\":2,\"55\":1}}],[\"&\",{\"1\":{\"12\":7,\"16\":21}}],[\">\",{\"1\":{\"12\":4,\"16\":15,\"35\":3,\"36\":12,\"37\":28,\"38\":12,\"39\":8,\"40\":22,\"41\":26,\"42\":6,\"43\":20,\"44\":32,\"45\":12,\"47\":12,\"48\":19,\"49\":9,\"50\":16,\"51\":24,\"52\":8,\"53\":8,\"54\":3,\"55\":15,\"56\":8,\"57\":8,\"58\":34,\"64\":1}}],[\"]\",{\"1\":{\"12\":16,\"16\":20,\"29\":6,\"30\":6,\"31\":6,\"32\":4,\"35\":2,\"36\":2,\"37\":27,\"38\":5,\"39\":9,\"40\":5,\"41\":31,\"42\":10,\"43\":8,\"44\":13,\"45\":10,\"47\":4,\"48\":9,\"49\":5,\"50\":13,\"51\":17,\"52\":14,\"53\":8,\"54\":10,\"55\":37,\"56\":9,\"57\":4,\"58\":22,\"61\":1,\"63\":1,\"64\":3,\"97\":1}}],[\"[\",{\"1\":{\"12\":16,\"16\":20,\"29\":6,\"30\":6,\"31\":6,\"32\":4,\"35\":2,\"36\":2,\"37\":27,\"38\":5,\"39\":9,\"40\":5,\"41\":31,\"42\":10,\"43\":8,\"44\":13,\"45\":10,\"47\":4,\"48\":9,\"49\":5,\"50\":13,\"51\":17,\"52\":14,\"53\":8,\"54\":10,\"55\":37,\"56\":9,\"57\":4,\"58\":22,\"61\":1,\"63\":1,\"64\":3,\"97\":1}}],[\"相对路径\",{\"1\":{\"35\":1}}],[\"相关\",{\"0\":{\"20\":1,\"61\":1},\"1\":{\"19\":1,\"30\":1}}],[\"相加\",{\"1\":{\"12\":1,\"16\":2}}],[\"相同\",{\"1\":{\"6\":1,\"21\":1}}],[\"高级\",{\"1\":{\"31\":1}}],[\"高\",{\"1\":{\"12\":1}}],[\"找出\",{\"1\":{\"12\":1}}],[\"每次\",{\"1\":{\"30\":1,\"46\":1,\"58\":1}}],[\"每块\",{\"1\":{\"23\":2,\"24\":1,\"25\":1}}],[\"每\",{\"1\":{\"12\":1}}],[\"每个\",{\"1\":{\"0\":1,\"12\":1,\"14\":1,\"26\":1,\"28\":1,\"29\":1,\"30\":1,\"46\":1}}],[\"最新\",{\"1\":{\"58\":2}}],[\"最近\",{\"1\":{\"46\":1,\"55\":2}}],[\"最终\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"最\",{\"1\":{\"21\":1,\"23\":1}}],[\"最后\",{\"1\":{\"12\":1}}],[\"最小\",{\"1\":{\"8\":1}}],[\"索引\",{\"1\":{\"12\":1,\"14\":4,\"15\":4,\"16\":1}}],[\"然后\",{\"1\":{\"12\":2}}],[\"第三段\",{\"1\":{\"30\":1}}],[\"第二个\",{\"1\":{\"28\":1}}],[\"第二块\",{\"1\":{\"27\":1}}],[\"第一块\",{\"1\":{\"24\":1,\"25\":1,\"26\":1}}],[\"第一次\",{\"1\":{\"1\":1}}],[\"第四位\",{\"1\":{\"12\":2}}],[\"四个\",{\"1\":{\"16\":1}}],[\"四位\",{\"1\":{\"12\":4,\"16\":2}}],[\"四种\",{\"1\":{\"6\":1,\"22\":1}}],[\"运算\",{\"1\":{\"12\":1}}],[\"运行\",{\"1\":{\"0\":2,\"1\":1,\"2\":1,\"5\":3}}],[\"规则\",{\"1\":{\"12\":1,\"13\":1,\"19\":1}}],[\"分区\",{\"1\":{\"91\":1}}],[\"分支\",{\"1\":{\"45\":1,\"49\":4,\"51\":1,\"55\":1}}],[\"分系统\",{\"1\":{\"42\":1}}],[\"分为\",{\"1\":{\"28\":1}}],[\"分成\",{\"1\":{\"27\":1}}],[\"分块\",{\"1\":{\"27\":1}}],[\"分割线\",{\"0\":{\"79\":1}}],[\"分割\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"分别\",{\"1\":{\"11\":1,\"12\":2,\"23\":1,\"30\":1}}],[\"分配\",{\"1\":{\"1\":1}}],[\"再用\",{\"1\":{\"24\":2}}],[\"再\",{\"1\":{\"11\":1,\"25\":1,\"27\":1}}],[\"+\",{\"1\":{\"11\":1,\"12\":5,\"14\":1,\"16\":24,\"35\":1,\"44\":1}}],[\"余\",{\"1\":{\"11\":1}}],[\"计算\",{\"0\":{\"63\":1,\"64\":1},\"1\":{\"11\":1,\"61\":3,\"63\":1,\"64\":3,\"65\":1}}],[\"计算机\",{\"1\":{\"8\":1,\"13\":1}}],[\"计算机领域\",{\"1\":{\"8\":1}}],[\"转\",{\"1\":{\"12\":3,\"16\":3}}],[\"转成\",{\"1\":{\"11\":3,\"12\":2,\"16\":2}}],[\"转换\",{\"1\":{\"10\":1,\"28\":2,\"42\":1}}],[\"换算\",{\"0\":{\"11\":1,\"15\":1},\"1\":{\"12\":1,\"15\":2}}],[\"换成\",{\"1\":{\"6\":1}}],[\"发布\",{\"1\":{\"60\":1}}],[\"发行\",{\"1\":{\"58\":1}}],[\"发现\",{\"1\":{\"10\":1,\"11\":1,\"13\":1}}],[\"发送\",{\"1\":{\"5\":1,\"6\":1}}],[\"7\",{\"1\":{\"10\":1,\"12\":1,\"14\":2,\"16\":1,\"28\":4}}],[\"59\",{\"1\":{\"14\":1}}],[\"58\",{\"1\":{\"14\":1}}],[\"57\",{\"1\":{\"14\":1}}],[\"56\",{\"1\":{\"14\":1}}],[\"55\",{\"1\":{\"14\":1}}],[\"54\",{\"1\":{\"14\":1}}],[\"53\",{\"1\":{\"14\":1}}],[\"52\",{\"1\":{\"14\":1,\"16\":1,\"38\":2}}],[\"51\",{\"1\":{\"14\":1}}],[\"50\",{\"1\":{\"14\":1}}],[\"5\",{\"1\":{\"10\":1,\"12\":1,\"14\":2,\"15\":1,\"16\":1}}],[\"5.\",{\"0\":{\"5\":1}}],[\"均\",{\"1\":{\"10\":1}}],[\"与其\",{\"1\":{\"24\":1}}],[\"与\",{\"0\":{\"89\":1},\"1\":{\"10\":1,\"16\":2,\"19\":1,\"24\":1,\"25\":2,\"26\":4}}],[\"！\",{\"1\":{\"10\":1}}],[\"哦\",{\"1\":{\"10\":1}}],[\"它\",{\"1\":{\"10\":1,\"15\":1,\"60\":1,\"65\":1}}],[\"9\",{\"1\":{\"10\":3,\"12\":1,\"14\":2,\"16\":2}}],[\"97\",{\"1\":{\"10\":1,\"15\":1}}],[\"基本一致\",{\"1\":{\"31\":1}}],[\"基数\",{\"1\":{\"10\":7,\"12\":3,\"14\":6,\"16\":1}}],[\"基于\",{\"1\":{\"10\":1,\"24\":1}}],[\"引入\",{\"1\":{\"10\":1,\"24\":1}}],[\"引用\",{\"0\":{\"72\":1},\"1\":{\"2\":1}}],[\"63\",{\"1\":{\"14\":1,\"16\":1}}],[\"62\",{\"1\":{\"14\":1,\"16\":1}}],[\"61\",{\"1\":{\"14\":1}}],[\"60\",{\"1\":{\"14\":1}}],[\"64\",{\"1\":{\"14\":2,\"16\":1,\"29\":1}}],[\"6\",{\"1\":{\"10\":1,\"11\":2,\"12\":1,\"14\":4,\"15\":3,\"16\":3,\"40\":1,\"43\":1,\"48\":1,\"49\":1}}],[\"65\",{\"1\":{\"10\":1,\"15\":2}}],[\"6.\",{\"0\":{\"6\":1}}],[\"nth\",{\"1\":{\"44\":1}}],[\"needs\",{\"1\":{\"58\":1}}],[\"negotiate\",{\"1\":{\"43\":1}}],[\"negotiation\",{\"1\":{\"43\":2,\"48\":1}}],[\"negotiating\",{\"1\":{\"43\":1}}],[\"newurl\",{\"1\":{\"51\":2}}],[\"newbase\",{\"1\":{\"50\":2}}],[\"new\",{\"1\":{\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"12\":3,\"16\":3,\"29\":2,\"30\":3,\"31\":2,\"36\":3,\"37\":2,\"38\":5,\"40\":1,\"42\":2,\"51\":1,\"57\":4,\"64\":4}}],[\"named\",{\"1\":{\"38\":1,\"47\":1,\"48\":1,\"57\":1}}],[\"names\",{\"1\":{\"37\":2,\"42\":1,\"44\":1,\"58\":1}}],[\"name\",{\"1\":{\"37\":4,\"39\":1,\"40\":2,\"42\":13,\"45\":4,\"46\":1,\"47\":3,\"49\":3,\"51\":10,\"58\":8,\"95\":2,\"99\":1}}],[\"non\",{\"1\":{\"47\":1}}],[\"now\",{\"1\":{\"41\":1}}],[\"nothing\",{\"1\":{\"54\":1}}],[\"not\",{\"1\":{\"36\":1,\"37\":2,\"38\":2,\"40\":1,\"43\":2,\"47\":2,\"48\":2,\"50\":1,\"54\":1,\"56\":1,\"57\":1,\"58\":1,\"102\":1}}],[\"notation\",{\"1\":{\"36\":1}}],[\"normal\",{\"1\":{\"36\":1,\"41\":1,\"56\":1}}],[\"no\",{\"1\":{\"35\":1,\"36\":1,\"37\":3,\"38\":1,\"39\":1,\"40\":3,\"41\":5,\"43\":3,\"44\":3,\"47\":1,\"48\":1,\"49\":3,\"50\":4,\"51\":1,\"52\":1,\"53\":2,\"55\":2,\"56\":3,\"57\":1,\"58\":5}}],[\"nosuchpaddingexception\",{\"1\":{\"32\":2}}],[\"nosuchalgorithmexception\",{\"1\":{\"32\":3,\"63\":1,\"64\":1}}],[\"nopadding\",{\"1\":{\"28\":1}}],[\"nul\",{\"1\":{\"35\":2,\"36\":1,\"38\":2,\"41\":4,\"42\":1,\"52\":3,\"54\":3,\"55\":1,\"56\":1}}],[\"null\",{\"1\":{\"10\":1,\"12\":4,\"16\":4,\"29\":2,\"30\":2,\"31\":2,\"32\":3,\"41\":1,\"42\":1,\"56\":1,\"63\":1,\"64\":1}}],[\"numbering\",{\"1\":{\"44\":1}}],[\"numbered\",{\"1\":{\"44\":3}}],[\"number\",{\"1\":{\"36\":1,\"39\":2,\"40\":1,\"42\":1,\"43\":1,\"44\":2,\"48\":1,\"53\":2}}],[\"numstat\",{\"1\":{\"36\":1}}],[\"num\",{\"1\":{\"16\":7,\"36\":2,\"46\":2,\"58\":1}}],[\"n\",{\"1\":{\"14\":2,\"16\":2,\"35\":2,\"36\":3,\"37\":2,\"39\":2,\"40\":2,\"41\":1,\"43\":3,\"44\":7,\"47\":3,\"48\":5,\"49\":1,\"50\":2,\"51\":2,\"52\":1,\"53\":2,\"54\":2,\"56\":1,\"58\":5}}],[\"十进制\",{\"1\":{\"10\":1}}],[\"十六进制\",{\"0\":{\"9\":1},\"1\":{\"12\":1}}],[\"意义\",{\"1\":{\"10\":2}}],[\"及其\",{\"1\":{\"10\":1,\"19\":1,\"61\":1}}],[\"数学公式\",{\"0\":{\"80\":1}}],[\"数\",{\"1\":{\"12\":2}}],[\"数组\",{\"1\":{\"12\":4,\"16\":3}}],[\"数字\",{\"1\":{\"11\":1,\"28\":1}}],[\"数值\",{\"1\":{\"10\":1}}],[\"数据处理\",{\"1\":{\"19\":1}}],[\"数据编码\",{\"1\":{\"15\":1}}],[\"数据\",{\"0\":{\"19\":1},\"1\":{\"6\":3,\"7\":1,\"8\":2,\"15\":1,\"19\":1,\"21\":2,\"22\":3,\"23\":2,\"24\":1,\"25\":1,\"26\":1,\"28\":5,\"29\":1,\"61\":5,\"63\":1}}],[\"些\",{\"1\":{\"10\":1}}],[\"概念\",{\"0\":{\"10\":1,\"14\":1,\"20\":1},\"1\":{\"10\":1,\"24\":1}}],[\"码表\",{\"1\":{\"8\":1}}],[\"兴趣\",{\"1\":{\"8\":1}}],[\"'\",{\"1\":{\"8\":6,\"10\":6,\"12\":32,\"16\":163,\"35\":5,\"36\":3,\"37\":2,\"38\":2,\"39\":1,\"40\":7,\"41\":6,\"42\":2,\"43\":4,\"44\":7,\"46\":8,\"49\":7,\"50\":6,\"53\":3,\"57\":2,\"58\":11}}],[\"xc0\",{\"1\":{\"16\":1}}],[\"xf0\",{\"1\":{\"16\":1}}],[\"xfc\",{\"1\":{\"16\":1}}],[\"xff\",{\"1\":{\"8\":1}}],[\"x3c\",{\"1\":{\"16\":2}}],[\"x30\",{\"1\":{\"16\":2}}],[\"x3f\",{\"1\":{\"16\":2}}],[\"x31\",{\"1\":{\"8\":1,\"10\":1,\"15\":3}}],[\"x\",{\"1\":{\"14\":2,\"16\":2,\"35\":1,\"39\":3,\"47\":1,\"48\":1,\"50\":2,\"53\":1}}],[\"x64\",{\"1\":{\"11\":2}}],[\"x61\",{\"1\":{\"8\":1,\"10\":1,\"15\":1}}],[\"x41\",{\"1\":{\"8\":1,\"10\":1,\"15\":2}}],[\"x0f\",{\"1\":{\"10\":1,\"12\":3,\"16\":3}}],[\"x0e\",{\"1\":{\"10\":1}}],[\"x0d\",{\"1\":{\"10\":1}}],[\"x0c\",{\"1\":{\"10\":1}}],[\"x0b\",{\"1\":{\"10\":1}}],[\"x0a\",{\"1\":{\"10\":1}}],[\"x09\",{\"1\":{\"10\":1}}],[\"x08\",{\"1\":{\"10\":1}}],[\"x07\",{\"1\":{\"10\":1}}],[\"x06\",{\"1\":{\"10\":1}}],[\"x05\",{\"1\":{\"10\":1}}],[\"x04\",{\"1\":{\"10\":1}}],[\"x03\",{\"1\":{\"10\":1,\"16\":3}}],[\"x02\",{\"1\":{\"10\":1}}],[\"x01\",{\"1\":{\"8\":1,\"10\":2}}],[\"x00\",{\"1\":{\"8\":1,\"10\":2}}],[\"进制\",{\"1\":{\"8\":1,\"10\":14,\"11\":2,\"12\":9,\"13\":2,\"15\":10,\"17\":1},\"2\":{\"18\":1}}],[\"进行\",{\"1\":{\"8\":1,\"11\":1,\"12\":1,\"19\":2,\"22\":1,\"23\":1,\"24\":2,\"25\":3,\"26\":5,\"27\":2,\"31\":1}}],[\"进程\",{\"1\":{\"0\":2,\"1\":1}}],[\"完整\",{\"1\":{\"8\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"28\":1,\"61\":1}}],[\"根据\",{\"1\":{\"8\":1,\"12\":1,\"15\":2,\"65\":2}}],[\"^\",{\"1\":{\"8\":1,\"10\":1,\"14\":1}}],[\"即使\",{\"1\":{\"19\":1,\"35\":1}}],[\"即\",{\"1\":{\"8\":1,\"11\":1,\"21\":1,\"30\":1,\"65\":1}}],[\"个数\",{\"1\":{\"16\":1}}],[\"个\",{\"1\":{\"8\":2,\"14\":1,\"16\":3,\"28\":5}}],[\"字母\",{\"1\":{\"8\":1}}],[\"字符串\",{\"0\":{\"63\":1},\"1\":{\"12\":5,\"15\":3,\"16\":1,\"63\":1,\"65\":2}}],[\"字符\",{\"1\":{\"8\":3,\"15\":1,\"16\":2}}],[\"字节\",{\"0\":{\"7\":1},\"1\":{\"7\":1,\"8\":4,\"12\":5,\"15\":2,\"16\":6,\"19\":1,\"27\":5,\"28\":8,\"29\":2,\"30\":6,\"31\":7,\"32\":2,\"61\":4}}],[\"上标\",{\"0\":{\"77\":1}}],[\"上述\",{\"1\":{\"23\":1,\"29\":1,\"89\":1}}],[\"上面\",{\"1\":{\"15\":1}}],[\"上表\",{\"1\":{\"15\":1}}],[\"上\",{\"1\":{\"8\":1,\"12\":1,\"13\":1}}],[\"上时\",{\"1\":{\"1\":1}}],[\"屏幕\",{\"1\":{\"8\":1}}],[\"显示\",{\"1\":{\"8\":3,\"13\":1,\"46\":7}}],[\"局限于\",{\"1\":{\"8\":1}}],[\"仅\",{\"1\":{\"8\":1}}],[\"47\",{\"1\":{\"14\":1}}],[\"46\",{\"1\":{\"14\":1}}],[\"45\",{\"1\":{\"14\":1}}],[\"44\",{\"1\":{\"14\":1}}],[\"43\",{\"1\":{\"14\":1}}],[\"42\",{\"1\":{\"14\":1}}],[\"41\",{\"1\":{\"14\":1}}],[\"404\",{\"1\":{\"102\":1}}],[\"4096\",{\"1\":{\"97\":1}}],[\"40\",{\"1\":{\"14\":1}}],[\"48\",{\"1\":{\"14\":1}}],[\"49\",{\"1\":{\"10\":1,\"14\":1,\"15\":3}}],[\"4\",{\"1\":{\"8\":1,\"10\":3,\"11\":3,\"12\":3,\"14\":2,\"15\":4,\"16\":10,\"40\":1,\"43\":1,\"48\":1,\"49\":1}}],[\"4.\",{\"0\":{\"4\":1,\"17\":1}}],[\"采用\",{\"1\":{\"8\":1}}],[\"汉字\",{\"1\":{\"8\":1}}],[\"占用\",{\"1\":{\"8\":1}}],[\"占\",{\"1\":{\"8\":1,\"14\":1}}],[\"8\",{\"1\":{\"8\":3,\"10\":1,\"12\":1,\"14\":2,\"15\":1,\"16\":1,\"28\":4,\"29\":2,\"30\":3,\"31\":1}}],[\"状态\",{\"1\":{\"8\":1}}],[\"位补\",{\"1\":{\"15\":2}}],[\"位\",{\"1\":{\"8\":1,\"15\":9,\"16\":2,\"29\":1}}],[\"位置\",{\"1\":{\"4\":1,\"42\":1}}],[\"容量\",{\"1\":{\"8\":1}}],[\"叫\",{\"1\":{\"8\":1}}],[\"存储空间\",{\"1\":{\"13\":2}}],[\"存储单元\",{\"1\":{\"8\":1}}],[\"存储\",{\"1\":{\"8\":1,\"32\":1,\"42\":3}}],[\"存在\",{\"1\":{\"4\":1,\"23\":1,\"55\":1}}],[\"介绍\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"13\":1,\"19\":1,\"27\":1,\"28\":1}}],[\"信息\",{\"0\":{\"60\":1},\"1\":{\"7\":1,\"46\":4,\"51\":3,\"60\":5,\"61\":2,\"65\":1,\"97\":1}}],[\"术语\",{\"1\":{\"7\":1}}],[\"常见\",{\"1\":{\"7\":1,\"10\":1,\"19\":1,\"28\":1,\"60\":1}}],[\"常用命令\",{\"1\":{\"34\":1,\"51\":1}}],[\"常用\",{\"1\":{\"7\":1}}],[\"编辑器\",{\"0\":{\"90\":1}}],[\"编程语言\",{\"1\":{\"16\":1}}],[\"编程\",{\"1\":{\"7\":1}}],[\"编码方式\",{\"1\":{\"10\":1}}],[\"编码\",{\"0\":{\"7\":2,\"8\":1,\"9\":1,\"13\":1,\"19\":1,\"60\":1},\"1\":{\"7\":1,\"8\":3,\"10\":2,\"12\":1,\"13\":4,\"15\":6,\"16\":1,\"17\":1,\"19\":3}}],[\"下标\",{\"0\":{\"77\":1}}],[\"下来\",{\"1\":{\"64\":2}}],[\"下载\",{\"1\":{\"64\":3}}],[\"下表\",{\"1\":{\"10\":2}}],[\"下\",{\"1\":{\"7\":1,\"35\":1,\"45\":1}}],[\"下面\",{\"1\":{\"1\":2,\"4\":2,\"21\":1,\"42\":1,\"45\":1}}],[\"科普\",{\"1\":{\"7\":1}}],[\"三种\",{\"1\":{\"31\":1}}],[\"三段\",{\"1\":{\"30\":1}}],[\"三次\",{\"1\":{\"30\":1}}],[\"三\",{\"0\":{\"19\":1}}],[\"三篇\",{\"1\":{\"7\":1}}],[\"三个\",{\"1\":{\"1\":1,\"7\":1,\"16\":1,\"29\":1,\"42\":2,\"60\":1,\"61\":1}}],[\"接下来\",{\"1\":{\"7\":1,\"19\":1}}],[\"接收\",{\"1\":{\"6\":1,\"28\":2,\"29\":1,\"61\":3}}],[\"那么\",{\"1\":{\"7\":1,\"23\":1,\"28\":1}}],[\"非对称\",{\"1\":{\"7\":1,\"21\":5,\"32\":1}}],[\"说明\",{\"1\":{\"19\":1}}],[\"说\",{\"1\":{\"7\":1}}],[\"说法\",{\"1\":{\"4\":1}}],[\"更改\",{\"1\":{\"35\":1,\"55\":4}}],[\"更\",{\"1\":{\"29\":1}}],[\"更加\",{\"1\":{\"19\":1}}],[\"更有甚者\",{\"1\":{\"7\":1}}],[\"更新\",{\"1\":{\"0\":1,\"1\":1,\"6\":1}}],[\"过\",{\"1\":{\"7\":1,\"19\":1,\"21\":1,\"22\":1,\"28\":1,\"60\":1,\"63\":1,\"64\":1}}],[\"过程\",{\"1\":{\"7\":2,\"10\":1,\"21\":1,\"22\":1,\"27\":1,\"63\":1,\"64\":1}}],[\"回答\",{\"1\":{\"7\":1}}],[\"普遍\",{\"1\":{\"7\":1}}],[\"”\",{\"1\":{\"7\":3}}],[\"请\",{\"1\":{\"7\":1}}],[\"“\",{\"1\":{\"7\":3}}],[\"求职者\",{\"1\":{\"7\":1}}],[\"许多\",{\"1\":{\"7\":1}}],[\"面试\",{\"1\":{\"7\":1}}],[\"题目\",{\"1\":{\"7\":1}}],[\"取出\",{\"1\":{\"55\":1}}],[\"取决于\",{\"1\":{\"27\":1}}],[\"取前\",{\"1\":{\"16\":3}}],[\"取低\",{\"1\":{\"12\":1}}],[\"取高\",{\"1\":{\"12\":2}}],[\"取\",{\"1\":{\"7\":1,\"11\":1}}],[\"—\",{\"0\":{\"7\":2,\"19\":2,\"60\":2},\"1\":{\"8\":2,\"10\":2,\"28\":2,\"61\":2}}],[\"摘要\",{\"0\":{\"7\":1,\"19\":1,\"60\":2},\"1\":{\"7\":1,\"19\":2,\"60\":6,\"61\":7,\"65\":1}}],[\"只是\",{\"1\":{\"60\":1}}],[\"只\",{\"1\":{\"19\":1,\"31\":1,\"46\":1,\"64\":1}}],[\"只要\",{\"1\":{\"19\":2}}],[\"只不过\",{\"1\":{\"6\":1}}],[\"只有\",{\"1\":{\"6\":1,\"17\":1}}],[\"bin\",{\"1\":{\"89\":2}}],[\"binary\",{\"1\":{\"44\":2}}],[\"bits\",{\"1\":{\"38\":1}}],[\"bit\",{\"1\":{\"8\":3,\"10\":1,\"11\":1,\"14\":1,\"35\":1}}],[\"blob\",{\"1\":{\"42\":4}}],[\"block\",{\"1\":{\"24\":1}}],[\"body\",{\"1\":{\"44\":2}}],[\"boundary\",{\"1\":{\"44\":2}}],[\"bootstrap\",{\"1\":{\"100\":1}}],[\"bool\",{\"1\":{\"42\":5}}],[\"book\",{\"1\":{\"23\":1}}],[\"both\",{\"1\":{\"37\":1}}],[\"buff\",{\"1\":{\"64\":3}}],[\"but\",{\"1\":{\"47\":1,\"49\":1,\"50\":1,\"52\":1}}],[\"build\",{\"1\":{\"36\":2}}],[\"bundles\",{\"1\":{\"40\":1}}],[\"bundle\",{\"1\":{\"5\":1,\"40\":1}}],[\"bypass\",{\"1\":{\"41\":2,\"47\":1,\"49\":1}}],[\"by\",{\"1\":{\"36\":1,\"39\":1,\"41\":2,\"44\":2,\"47\":1,\"48\":2,\"50\":1,\"53\":1}}],[\"byteslen\",{\"1\":{\"16\":2}}],[\"byte\",{\"1\":{\"8\":4,\"10\":1,\"12\":6,\"16\":7,\"29\":6,\"30\":6,\"31\":6,\"32\":4,\"42\":1,\"61\":1,\"63\":1,\"64\":3}}],[\"begin\",{\"1\":{\"50\":1}}],[\"become\",{\"1\":{\"50\":1}}],[\"because\",{\"1\":{\"35\":1}}],[\"being\",{\"1\":{\"50\":2}}],[\"behind\",{\"1\":{\"41\":2,\"56\":2}}],[\"before\",{\"1\":{\"40\":1,\"46\":1,\"47\":2,\"48\":2,\"50\":1,\"51\":1}}],[\"be\",{\"1\":{\"35\":3,\"36\":2,\"40\":4,\"41\":1,\"43\":2,\"45\":3,\"47\":2,\"48\":2,\"49\":5,\"50\":1,\"51\":2,\"52\":2,\"56\":1}}],[\"bash\",{\"1\":{\"89\":2}}],[\"based\",{\"1\":{\"36\":1,\"43\":1,\"44\":1,\"48\":1}}],[\"base\",{\"1\":{\"16\":1,\"44\":2,\"45\":1,\"50\":5}}],[\"base64str\",{\"1\":{\"16\":12}}],[\"base64strbuff\",{\"1\":{\"16\":11}}],[\"base64\",{\"0\":{\"13\":1},\"1\":{\"7\":2,\"13\":2,\"14\":1,\"15\":9,\"16\":11,\"17\":1,\"21\":1},\"2\":{\"18\":1}}],[\"bare\",{\"1\":{\"40\":3,\"45\":3}}],[\"back\",{\"1\":{\"36\":1}}],[\"badpaddingexception\",{\"1\":{\"32\":2}}],[\"branchname\",{\"1\":{\"55\":1}}],[\"branches\",{\"1\":{\"37\":8,\"43\":2,\"48\":2,\"50\":1,\"51\":1}}],[\"branch\",{\"0\":{\"37\":1},\"1\":{\"37\":32,\"38\":13,\"40\":7,\"41\":2,\"44\":1,\"45\":5,\"48\":1,\"50\":5,\"51\":3,\"55\":1,\"56\":2,\"57\":10}}],[\"break\",{\"1\":{\"16\":11}}],[\"broadcastreceiver\",{\"1\":{\"6\":1}}],[\"b\",{\"1\":{\"12\":4,\"14\":2,\"16\":2,\"38\":4,\"40\":1,\"45\":3,\"56\":1}}],[\"提供\",{\"1\":{\"61\":1}}],[\"提示\",{\"0\":{\"82\":1},\"1\":{\"55\":1}}],[\"提交者\",{\"1\":{\"46\":1}}],[\"提交\",{\"1\":{\"35\":1,\"41\":4,\"45\":2,\"46\":10,\"55\":3,\"58\":4}}],[\"提出\",{\"1\":{\"32\":1}}],[\"提到\",{\"1\":{\"22\":1}}],[\"提下\",{\"1\":{\"6\":1}}],[\"提高\",{\"1\":{\"0\":1}}],[\"顺便\",{\"1\":{\"6\":1}}],[\"复用\",{\"1\":{\"6\":1}}],[\"复杂\",{\"1\":{\"1\":1,\"16\":1}}],[\"建议\",{\"1\":{\"6\":1,\"21\":1,\"28\":1,\"32\":2,\"42\":1}}],[\"用户名\",{\"1\":{\"45\":1}}],[\"用户\",{\"0\":{\"89\":1},\"1\":{\"42\":1,\"45\":1,\"89\":1}}],[\"用于\",{\"1\":{\"13\":1,\"31\":1,\"45\":1,\"61\":1,\"63\":1}}],[\"用\",{\"1\":{\"7\":1,\"8\":1,\"10\":2,\"11\":1,\"15\":1,\"21\":1,\"23\":1,\"25\":1,\"26\":1,\"29\":1,\"30\":1,\"45\":1,\"60\":1}}],[\"用途\",{\"0\":{\"62\":1},\"1\":{\"6\":1}}],[\"用作\",{\"1\":{\"6\":1}}],[\"用法\",{\"1\":{\"6\":1,\"26\":1}}],[\"所\",{\"1\":{\"13\":1}}],[\"所示\",{\"1\":{\"6\":1}}],[\"所以\",{\"1\":{\"6\":1,\"11\":1}}],[\"对齐\",{\"0\":{\"84\":1}}],[\"对比\",{\"1\":{\"19\":1}}],[\"对于\",{\"1\":{\"19\":1}}],[\"对应\",{\"1\":{\"15\":3,\"17\":1,\"32\":1}}],[\"对称\",{\"1\":{\"7\":1,\"21\":5,\"22\":2,\"31\":1}}],[\"对\",{\"1\":{\"7\":1,\"8\":1,\"11\":2,\"12\":1,\"15\":2,\"16\":1,\"23\":1,\"24\":1,\"27\":1,\"28\":2,\"32\":3,\"58\":4,\"60\":1,\"61\":1,\"92\":1}}],[\"对此\",{\"1\":{\"6\":1}}],[\"对象\",{\"1\":{\"6\":4,\"28\":2,\"61\":1}}],[\"载体\",{\"1\":{\"6\":2}}],[\"交互\",{\"1\":{\"6\":1}}],[\"间\",{\"1\":{\"6\":1}}],[\"间通信\",{\"0\":{\"0\":1}}],[\"才能\",{\"1\":{\"17\":1}}],[\"才\",{\"1\":{\"6\":1}}],[\"牵强\",{\"1\":{\"6\":1}}],[\"做\",{\"1\":{\"6\":1,\"12\":1,\"13\":2,\"16\":1,\"28\":1,\"30\":4,\"61\":1}}],[\"如需\",{\"1\":{\"64\":1}}],[\"如下\",{\"1\":{\"51\":1}}],[\"如\",{\"1\":{\"6\":1,\"27\":1,\"28\":1,\"45\":1,\"49\":1,\"55\":1,\"58\":1}}],[\"如何\",{\"1\":{\"6\":1}}],[\"如果\",{\"1\":{\"1\":1,\"3\":1,\"23\":1}}],[\"了解\",{\"1\":{\"28\":1}}],[\"了\",{\"1\":{\"6\":1,\"7\":1,\"13\":1,\"22\":1,\"28\":1,\"60\":1,\"61\":3}}],[\"演示\",{\"1\":{\"6\":1}}],[\"传输\",{\"1\":{\"13\":1,\"63\":1,\"64\":1}}],[\"传递\",{\"1\":{\"6\":2}}],[\"传递数据\",{\"0\":{\"6\":1}}],[\"传入\",{\"1\":{\"4\":1}}],[\"消息\",{\"1\":{\"5\":1}}],[\"ubuntu\",{\"0\":{\"88\":1},\"1\":{\"88\":1}}],[\"url\",{\"1\":{\"42\":2,\"51\":6}}],[\"urlmatch\",{\"1\":{\"42\":1}}],[\"uri\",{\"1\":{\"40\":3}}],[\"up\",{\"1\":{\"50\":1,\"54\":1}}],[\"upload\",{\"1\":{\"40\":2,\"43\":2,\"48\":2}}],[\"upstream\",{\"1\":{\"37\":6,\"40\":1,\"43\":2,\"44\":2,\"48\":2,\"49\":2,\"50\":7}}],[\"updating\",{\"1\":{\"35\":1,\"38\":1,\"43\":1,\"52\":1,\"54\":1,\"57\":1}}],[\"updated\",{\"1\":{\"43\":1,\"48\":1}}],[\"updates\",{\"1\":{\"43\":2,\"48\":2,\"49\":2}}],[\"update\",{\"1\":{\"35\":2,\"38\":1,\"39\":1,\"43\":4,\"47\":2,\"48\":2,\"50\":3,\"51\":1,\"53\":1,\"57\":1,\"61\":2,\"64\":1,\"90\":1}}],[\"usermod\",{\"1\":{\"89\":1}}],[\"useradd\",{\"1\":{\"89\":2}}],[\"users\",{\"1\":{\"45\":1}}],[\"user\",{\"1\":{\"42\":3,\"46\":2,\"50\":1,\"58\":1,\"95\":2,\"97\":1}}],[\"used\",{\"1\":{\"40\":1,\"41\":1,\"45\":1,\"49\":1}}],[\"use\",{\"1\":{\"36\":1,\"37\":3,\"38\":1,\"40\":6,\"41\":3,\"42\":7,\"43\":3,\"44\":6,\"45\":1,\"47\":2,\"48\":4,\"49\":3,\"50\":6,\"53\":1,\"58\":2}}],[\"usage\",{\"1\":{\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1}}],[\"unmatch\",{\"1\":{\"54\":2}}],[\"unmerged\",{\"1\":{\"38\":2}}],[\"under\",{\"1\":{\"50\":1}}],[\"unchanged\",{\"1\":{\"50\":2}}],[\"unrelated\",{\"1\":{\"47\":2,\"48\":2}}],[\"unregister\",{\"1\":{\"5\":1}}],[\"until\",{\"1\":{\"46\":1}}],[\"untracked\",{\"1\":{\"35\":1,\"41\":2,\"55\":4,\"56\":4}}],[\"unparented\",{\"1\":{\"38\":1,\"57\":1}}],[\"unshallow\",{\"1\":{\"43\":1,\"48\":1}}],[\"unset\",{\"1\":{\"37\":2,\"42\":2}}],[\"unsafe\",{\"1\":{\"36\":1}}],[\"unidiff\",{\"1\":{\"36\":1}}],[\"u\",{\"1\":{\"14\":2,\"16\":2,\"35\":2,\"37\":1,\"40\":1,\"41\":2,\"43\":1,\"49\":1,\"55\":3,\"56\":1,\"58\":2}}],[\"utf\",{\"1\":{\"8\":1}}],[\"uid\",{\"1\":{\"1\":3}}],[\"ui\",{\"1\":{\"0\":2,\"1\":1,\"2\":1,\"3\":1,\"5\":1,\"6\":1}}],[\"监听\",{\"1\":{\"5\":2}}],[\"注脚\",{\"0\":{\"76\":1},\"1\":{\"86\":2}}],[\"注意\",{\"1\":{\"30\":1,\"97\":1}}],[\"注销\",{\"1\":{\"5\":1}}],[\"注册\",{\"1\":{\"5\":1}}],[\"注解\",{\"1\":{\"5\":1}}],[\"阻塞\",{\"1\":{\"5\":2}}],[\"ln\",{\"1\":{\"92\":1}}],[\"lf\",{\"1\":{\"42\":1}}],[\"linux\",{\"1\":{\"45\":1}}],[\"line\",{\"1\":{\"36\":3,\"42\":1}}],[\"lines\",{\"1\":{\"36\":3,\"50\":1,\"58\":1}}],[\"limit\",{\"1\":{\"38\":1}}],[\"listing\",{\"1\":{\"58\":1}}],[\"list\",{\"1\":{\"37\":4,\"42\":2,\"50\":3,\"54\":1,\"55\":2,\"56\":1,\"58\":3,\"97\":1}}],[\"listed\",{\"1\":{\"35\":1}}],[\"later\",{\"1\":{\"35\":1,\"40\":1,\"52\":1}}],[\"layout\",{\"1\":{\"5\":1}}],[\"len\",{\"1\":{\"64\":3}}],[\"length\",{\"1\":{\"12\":3,\"16\":5,\"44\":2}}],[\"let\",{\"1\":{\"50\":1}}],[\"letter\",{\"1\":{\"44\":5}}],[\"lease\",{\"1\":{\"49\":1}}],[\"least\",{\"1\":{\"36\":2}}],[\"leave\",{\"1\":{\"36\":1,\"47\":1}}],[\"leading\",{\"1\":{\"36\":1}}],[\"leonard\",{\"1\":{\"32\":1}}],[\"leftbit\",{\"1\":{\"16\":10}}],[\"l\",{\"1\":{\"12\":5,\"14\":2,\"16\":2,\"37\":2,\"38\":1,\"40\":1,\"42\":1,\"58\":3}}],[\"lookup\",{\"1\":{\"42\":1}}],[\"loop\",{\"1\":{\"4\":1}}],[\"looper\",{\"1\":{\"4\":4}}],[\"location\",{\"1\":{\"42\":1}}],[\"locally\",{\"1\":{\"49\":2}}],[\"localhost\",{\"1\":{\"45\":1}}],[\"local\",{\"1\":{\"37\":1,\"38\":1,\"40\":3,\"42\":3,\"43\":2,\"45\":3,\"48\":1,\"52\":1,\"57\":2,\"58\":1}}],[\"longer\",{\"1\":{\"43\":2,\"48\":1}}],[\"long\",{\"1\":{\"41\":2,\"56\":2,\"97\":1}}],[\"low\",{\"1\":{\"12\":4}}],[\"log\",{\"0\":{\"46\":1},\"1\":{\"1\":1,\"46\":10,\"47\":1,\"48\":1,\"55\":1}}],[\"rf\",{\"1\":{\"100\":1}}],[\"rfc\",{\"1\":{\"44\":2}}],[\"rm\",{\"0\":{\"54\":1},\"1\":{\"54\":2,\"100\":1}}],[\"rather\",{\"1\":{\"48\":1}}],[\"range\",{\"1\":{\"44\":2}}],[\"rc\",{\"1\":{\"38\":2}}],[\"roll\",{\"1\":{\"44\":1}}],[\"root\",{\"1\":{\"36\":2,\"40\":1,\"50\":3}}],[\"ron\",{\"1\":{\"32\":1}}],[\"rivest\",{\"1\":{\"32\":1}}],[\"rsa4096\",{\"1\":{\"97\":1}}],[\"rsa\",{\"0\":{\"32\":1},\"1\":{\"19\":1,\"32\":2,\"97\":1},\"2\":{\"33\":1}}],[\"request\",{\"1\":{\"49\":1}}],[\"require\",{\"1\":{\"49\":2}}],[\"relevant\",{\"1\":{\"49\":1}}],[\"related\",{\"1\":{\"48\":2}}],[\"rebasing\",{\"1\":{\"48\":1}}],[\"rebased\",{\"1\":{\"50\":1}}],[\"rebase\",{\"0\":{\"50\":1},\"1\":{\"48\":1,\"50\":14}}],[\"reroll\",{\"1\":{\"44\":2}}],[\"rerere\",{\"1\":{\"39\":1,\"47\":1,\"50\":1,\"53\":1}}],[\"reapply\",{\"1\":{\"50\":1}}],[\"real\",{\"1\":{\"47\":1}}],[\"reachable\",{\"1\":{\"43\":1,\"48\":1,\"50\":1}}],[\"readable\",{\"1\":{\"41\":1,\"49\":1,\"56\":1}}],[\"read\",{\"1\":{\"35\":1,\"38\":1,\"41\":2,\"42\":1,\"47\":1,\"52\":1,\"54\":1,\"58\":1,\"64\":1}}],[\"re\",{\"1\":{\"43\":1,\"44\":1,\"50\":1}}],[\"reply\",{\"1\":{\"44\":2}}],[\"replace\",{\"1\":{\"42\":2,\"58\":1}}],[\"report\",{\"1\":{\"43\":1,\"48\":1,\"52\":1}}],[\"reporting\",{\"1\":{\"38\":2,\"40\":1,\"43\":1,\"47\":1,\"48\":1,\"49\":1,\"57\":2}}],[\"repository\",{\"1\":{\"40\":8,\"42\":1,\"43\":4,\"45\":2,\"48\":3,\"49\":3}}],[\"repo\",{\"1\":{\"40\":3,\"42\":1,\"49\":1}}],[\"regex\",{\"1\":{\"42\":1}}],[\"regexp\",{\"1\":{\"42\":2}}],[\"register\",{\"1\":{\"5\":1}}],[\"rewrite\",{\"1\":{\"41\":2}}],[\"reword\",{\"1\":{\"41\":3}}],[\"reuse\",{\"1\":{\"41\":3}}],[\"reused\",{\"1\":{\"39\":1,\"47\":1,\"50\":1,\"53\":1}}],[\"reedit\",{\"1\":{\"41\":1}}],[\"rev\",{\"1\":{\"40\":1,\"43\":1,\"44\":2,\"48\":1}}],[\"revision\",{\"1\":{\"40\":1,\"43\":2,\"44\":1,\"48\":2,\"50\":1}}],[\"revert\",{\"0\":{\"53\":1},\"1\":{\"39\":3,\"53\":6}}],[\"reverse\",{\"1\":{\"36\":2}}],[\"redundant\",{\"1\":{\"39\":2}}],[\"reschedule\",{\"1\":{\"50\":1}}],[\"resulting\",{\"1\":{\"44\":1}}],[\"resume\",{\"1\":{\"39\":1,\"53\":1}}],[\"respect\",{\"1\":{\"42\":1,\"58\":1}}],[\"resolution\",{\"1\":{\"39\":1,\"47\":1,\"50\":1,\"53\":1}}],[\"reset\",{\"0\":{\"52\":1},\"1\":{\"38\":1,\"41\":2,\"50\":1,\"52\":12,\"57\":1}}],[\"refine\",{\"1\":{\"50\":1}}],[\"refname\",{\"1\":{\"49\":1}}],[\"refmap\",{\"1\":{\"43\":3,\"48\":3}}],[\"refer\",{\"1\":{\"53\":1}}],[\"references\",{\"1\":{\"43\":2}}],[\"reference\",{\"1\":{\"40\":5,\"43\":1,\"53\":2}}],[\"refetch\",{\"1\":{\"43\":1}}],[\"refs\",{\"1\":{\"43\":3,\"48\":1,\"49\":5,\"50\":1}}],[\"refspecs\",{\"1\":{\"43\":1}}],[\"refspec\",{\"1\":{\"43\":2,\"44\":2,\"48\":1,\"49\":1}}],[\"ref\",{\"1\":{\"38\":1,\"43\":1,\"49\":1,\"57\":1}}],[\"reflog\",{\"1\":{\"37\":4,\"38\":1,\"58\":3}}],[\"refreshing\",{\"1\":{\"52\":1}}],[\"refresh\",{\"1\":{\"35\":2,\"52\":1}}],[\"renames\",{\"1\":{\"56\":4}}],[\"rename\",{\"1\":{\"37\":3,\"42\":2,\"51\":2}}],[\"renormalize\",{\"1\":{\"35\":2}}],[\"remote\",{\"0\":{\"51\":1},\"1\":{\"37\":2,\"40\":5,\"43\":4,\"45\":1,\"48\":3,\"49\":2,\"51\":21}}],[\"remotes\",{\"1\":{\"37\":1,\"43\":2,\"48\":1}}],[\"remove\",{\"1\":{\"36\":1,\"42\":4,\"51\":2,\"54\":1}}],[\"removed\",{\"1\":{\"35\":1,\"49\":1,\"52\":1,\"54\":1}}],[\"removal\",{\"1\":{\"35\":1,\"54\":1}}],[\"receive\",{\"1\":{\"49\":5}}],[\"recursive\",{\"1\":{\"38\":1,\"40\":1,\"43\":1,\"48\":1,\"49\":1,\"52\":1,\"54\":1,\"57\":1}}],[\"recurse\",{\"1\":{\"37\":3,\"38\":1,\"40\":2,\"43\":1,\"48\":1,\"49\":1,\"52\":1,\"57\":1}}],[\"recount\",{\"1\":{\"36\":1}}],[\"record\",{\"1\":{\"35\":1,\"52\":1}}],[\"rej\",{\"1\":{\"36\":1}}],[\"rejected\",{\"1\":{\"36\":1}}],[\"reject\",{\"1\":{\"36\":1,\"40\":1}}],[\"return\",{\"1\":{\"12\":6,\"16\":13,\"29\":4,\"30\":4,\"31\":4,\"32\":4,\"36\":1,\"63\":3,\"64\":3}}],[\"r\",{\"1\":{\"5\":1,\"14\":2,\"16\":2,\"36\":1,\"37\":5,\"48\":1,\"50\":1,\"54\":2}}],[\"runonuithread\",{\"0\":{\"3\":1},\"1\":{\"3\":3}}],[\"run\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":2,\"35\":3,\"41\":2,\"43\":4,\"48\":2,\"49\":2,\"50\":1,\"51\":1,\"54\":2}}],[\"runnable\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":3,\"6\":1}}],[\"sf\",{\"1\":{\"92\":1}}],[\"sfx\",{\"1\":{\"44\":2}}],[\"sda1\",{\"1\":{\"91\":2}}],[\"sm3\",{\"1\":{\"60\":1}}],[\"soft\",{\"1\":{\"52\":2}}],[\"sorting\",{\"1\":{\"37\":1,\"58\":1}}],[\"sort\",{\"1\":{\"37\":2,\"58\":3}}],[\"sc\",{\"1\":{\"97\":1}}],[\"schedule\",{\"1\":{\"50\":1}}],[\"scope\",{\"1\":{\"42\":2}}],[\"synonym\",{\"1\":{\"47\":1}}],[\"system\",{\"1\":{\"42\":4}}],[\"slot\",{\"1\":{\"42\":2}}],[\"slashes\",{\"1\":{\"36\":1}}],[\"squash\",{\"1\":{\"41\":3,\"47\":1,\"48\":1,\"50\":1}}],[\"similarity\",{\"1\":{\"56\":1}}],[\"simple\",{\"1\":{\"44\":1}}],[\"side\",{\"1\":{\"49\":1}}],[\"single\",{\"1\":{\"40\":1,\"44\":3,\"47\":1,\"48\":1}}],[\"since\",{\"1\":{\"40\":2,\"43\":1,\"44\":1,\"46\":1,\"48\":1}}],[\"signingkey\",{\"1\":{\"97\":1}}],[\"signatures\",{\"1\":{\"47\":1,\"48\":1}}],[\"signature\",{\"1\":{\"44\":5,\"47\":1,\"48\":1}}],[\"sign\",{\"1\":{\"39\":2,\"41\":2,\"47\":2,\"48\":2,\"49\":1,\"50\":2,\"53\":2,\"58\":2}}],[\"signed\",{\"1\":{\"39\":1,\"41\":1,\"44\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"58\":1}}],[\"signoff\",{\"1\":{\"39\":1,\"41\":1,\"44\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1}}],[\"specify\",{\"1\":{\"43\":1,\"45\":2,\"48\":1}}],[\"specified\",{\"1\":{\"41\":7}}],[\"specific\",{\"1\":{\"37\":1,\"40\":2,\"42\":1,\"43\":1,\"48\":1,\"49\":1}}],[\"spaces\",{\"1\":{\"39\":1,\"41\":1,\"47\":1,\"48\":1,\"53\":1,\"58\":1}}],[\"space\",{\"1\":{\"36\":1}}],[\"sparse\",{\"1\":{\"35\":2,\"38\":1,\"40\":2,\"54\":2}}],[\"shortlog\",{\"1\":{\"47\":1,\"48\":1}}],[\"short\",{\"1\":{\"41\":1,\"56\":1}}],[\"show\",{\"1\":{\"36\":1,\"37\":3,\"41\":6,\"42\":5,\"43\":1,\"44\":5,\"47\":2,\"48\":3,\"50\":3,\"51\":1,\"55\":1,\"56\":7,\"58\":1}}],[\"sha\",{\"1\":{\"64\":2}}],[\"sha256\",{\"1\":{\"60\":2,\"61\":1,\"64\":1},\"2\":{\"66\":1}}],[\"sha1\",{\"1\":{\"60\":2,\"61\":1,\"64\":2},\"2\":{\"66\":1}}],[\"shared\",{\"1\":{\"40\":2,\"45\":3}}],[\"shallow\",{\"1\":{\"40\":9,\"43\":8,\"44\":1,\"48\":8}}],[\"shamir\",{\"1\":{\"32\":1}}],[\"skipping\",{\"1\":{\"50\":1}}],[\"skip\",{\"1\":{\"35\":1,\"38\":1,\"39\":3,\"50\":3,\"52\":1,\"53\":3}}],[\"save\",{\"1\":{\"55\":1}}],[\"savedinstancestate\",{\"1\":{\"5\":2}}],[\"same\",{\"1\":{\"35\":1}}],[\"switch\",{\"0\":{\"57\":1},\"1\":{\"16\":2,\"57\":5}}],[\"s\",{\"1\":{\"14\":2,\"16\":2,\"37\":1,\"39\":4,\"40\":2,\"41\":6,\"44\":2,\"47\":2,\"48\":2,\"50\":3,\"53\":4,\"55\":2,\"56\":1,\"58\":2,\"89\":2}}],[\"store\",{\"1\":{\"44\":1,\"55\":1}}],[\"stdin\",{\"1\":{\"43\":2}}],[\"stdout\",{\"1\":{\"42\":1,\"44\":1}}],[\"strategies\",{\"1\":{\"50\":2}}],[\"strategy\",{\"1\":{\"39\":5,\"47\":5,\"48\":5,\"50\":5,\"53\":5}}],[\"str\",{\"1\":{\"42\":1}}],[\"strip\",{\"1\":{\"39\":1,\"41\":1,\"44\":1,\"47\":1,\"48\":1,\"53\":1,\"58\":1}}],[\"stringbuffer\",{\"1\":{\"12\":2,\"16\":2}}],[\"string\",{\"1\":{\"12\":3,\"16\":3,\"29\":2,\"30\":3,\"31\":2,\"32\":1,\"42\":2,\"63\":2,\"64\":2}}],[\"styles\",{\"1\":{\"44\":1}}],[\"style\",{\"1\":{\"37\":1,\"38\":2,\"44\":1,\"56\":1,\"57\":2,\"58\":1}}],[\"staged\",{\"1\":{\"55\":2}}],[\"stash\",{\"0\":{\"55\":1},\"1\":{\"47\":2,\"48\":2,\"50\":2,\"55\":23,\"56\":2}}],[\"start\",{\"1\":{\"37\":1,\"44\":2}}],[\"status\",{\"0\":{\"56\":1},\"1\":{\"41\":5,\"49\":1,\"54\":1,\"56\":4}}],[\"stat\",{\"1\":{\"36\":2,\"44\":2,\"46\":1,\"47\":2,\"48\":1,\"50\":2}}],[\"static\",{\"1\":{\"12\":3,\"16\":4,\"29\":4,\"30\":5,\"31\":4,\"32\":6,\"61\":1,\"63\":1,\"64\":1}}],[\"standard\",{\"1\":{\"29\":1,\"31\":1,\"42\":1,\"44\":1}}],[\"several\",{\"1\":{\"45\":1}}],[\"series\",{\"1\":{\"44\":2}}],[\"server\",{\"1\":{\"40\":2,\"43\":2,\"48\":2,\"49\":1}}],[\"separate\",{\"1\":{\"40\":2,\"45\":3}}],[\"separated\",{\"1\":{\"35\":1,\"36\":1,\"38\":1,\"41\":1,\"52\":1,\"54\":1}}],[\"sequence\",{\"1\":{\"39\":3,\"44\":1,\"53\":3}}],[\"setting\",{\"1\":{\"42\":1}}],[\"setup\",{\"1\":{\"40\":1}}],[\"set\",{\"1\":{\"37\":2,\"38\":1,\"40\":1,\"43\":2,\"44\":1,\"48\":2,\"49\":2,\"51\":5,\"56\":1,\"57\":1}}],[\"setcontentview\",{\"1\":{\"5\":1}}],[\"see\",{\"1\":{\"36\":1}}],[\"selected\",{\"1\":{\"47\":1,\"48\":1}}],[\"select\",{\"1\":{\"35\":1,\"38\":1,\"39\":1,\"52\":1,\"53\":1}}],[\"sec\",{\"1\":{\"97\":1}}],[\"secret\",{\"1\":{\"97\":1}}],[\"secretkeyspec\",{\"1\":{\"29\":2,\"30\":2,\"31\":2}}],[\"secure\",{\"1\":{\"60\":1}}],[\"section\",{\"1\":{\"42\":5}}],[\"second\",{\"1\":{\"16\":3,\"38\":1,\"57\":1}}],[\"sendmessage\",{\"1\":{\"6\":1}}],[\"sudo\",{\"1\":{\"89\":6,\"90\":1,\"91\":1,\"94\":1,\"98\":1,\"99\":1,\"100\":1}}],[\"suffix\",{\"1\":{\"44\":1}}],[\"succeeds\",{\"1\":{\"47\":1,\"48\":1}}],[\"successful\",{\"1\":{\"41\":1}}],[\"such\",{\"1\":{\"38\":1,\"57\":1}}],[\"suppress\",{\"1\":{\"37\":1,\"38\":1,\"41\":1,\"57\":1}}],[\"super\",{\"1\":{\"5\":3}}],[\"subcommand\",{\"1\":{\"51\":1}}],[\"subject\",{\"1\":{\"37\":1,\"44\":2}}],[\"submodules\",{\"1\":{\"37\":3,\"38\":2,\"40\":10,\"43\":3,\"48\":3,\"49\":2,\"52\":2,\"56\":2,\"57\":2}}],[\"subscribe\",{\"1\":{\"5\":1}}],[\"sure\",{\"1\":{\"36\":1}}],[\"summary\",{\"1\":{\"36\":3,\"41\":1,\"47\":1}}],[\"each\",{\"1\":{\"50\":2,\"58\":1}}],[\"etc\",{\"1\":{\"42\":1}}],[\"equality\",{\"1\":{\"42\":1}}],[\"equalsigncount\",{\"1\":{\"16\":3}}],[\"error\",{\"1\":{\"36\":1}}],[\"errors\",{\"1\":{\"35\":2,\"36\":1,\"52\":1}}],[\"email\",{\"1\":{\"42\":1,\"44\":3,\"46\":1,\"95\":2,\"97\":1}}],[\"empty\",{\"1\":{\"36\":2,\"39\":5,\"41\":2,\"50\":2}}],[\"embedded\",{\"1\":{\"36\":1}}],[\"eof\",{\"1\":{\"36\":1}}],[\"eol\",{\"1\":{\"35\":1}}],[\"env\",{\"0\":{\"99\":1},\"1\":{\"99\":2}}],[\"enable\",{\"1\":{\"44\":1}}],[\"entry\",{\"1\":{\"42\":1}}],[\"entries\",{\"1\":{\"35\":1,\"38\":1,\"41\":1,\"47\":1,\"48\":1,\"54\":1,\"56\":1}}],[\"end\",{\"1\":{\"36\":1,\"39\":1,\"43\":1,\"47\":2,\"48\":3,\"53\":1}}],[\"ensure\",{\"1\":{\"36\":1}}],[\"encrypt\",{\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":2}}],[\"encryption\",{\"1\":{\"29\":1,\"31\":1}}],[\"encode\",{\"1\":{\"12\":1,\"16\":1,\"63\":1,\"64\":1}}],[\"even\",{\"1\":{\"35\":1,\"37\":3,\"44\":3,\"50\":3,\"54\":1}}],[\"event\",{\"1\":{\"5\":3}}],[\"eventbus\",{\"0\":{\"5\":1},\"1\":{\"5\":7,\"6\":3}}],[\"editable\",{\"1\":{\"50\":1}}],[\"editor\",{\"1\":{\"42\":1,\"90\":1}}],[\"edit\",{\"1\":{\"35\":2,\"37\":2,\"39\":3,\"41\":3,\"42\":1,\"47\":2,\"48\":2,\"50\":4,\"53\":3,\"58\":2}}],[\"ecb\",{\"1\":{\"23\":1,\"24\":1,\"29\":3,\"31\":1}}],[\"elements\",{\"1\":{\"35\":1,\"38\":1,\"41\":1,\"52\":1,\"54\":1}}],[\"electronic\",{\"1\":{\"23\":1}}],[\"else\",{\"1\":{\"16\":5}}],[\"e\",{\"1\":{\"12\":1,\"14\":2,\"16\":2,\"29\":4,\"30\":5,\"31\":4,\"32\":22,\"35\":1,\"39\":1,\"41\":2,\"42\":1,\"44\":1,\"47\":1,\"53\":1,\"58\":2,\"63\":2,\"64\":6}}],[\"exit\",{\"1\":{\"54\":1}}],[\"exists\",{\"1\":{\"37\":2,\"58\":1,\"64\":1}}],[\"exec\",{\"1\":{\"49\":1,\"50\":7}}],[\"executable\",{\"1\":{\"35\":1}}],[\"execute\",{\"1\":{\"6\":1}}],[\"example\",{\"1\":{\"42\":2}}],[\"export\",{\"1\":{\"97\":1}}],[\"expiry\",{\"1\":{\"42\":2}}],[\"expect\",{\"1\":{\"36\":1,\"49\":1}}],[\"excluding\",{\"1\":{\"40\":1,\"43\":1,\"48\":1}}],[\"exclude\",{\"1\":{\"36\":1,\"40\":1,\"43\":1,\"48\":1}}],[\"exception\",{\"1\":{\"29\":2,\"30\":2,\"31\":2}}],[\"extends\",{\"1\":{\"5\":1}}],[\"示例\",{\"0\":{\"68\":1},\"1\":{\"5\":1,\"32\":1}}],[\"*\",{\"1\":{\"5\":10,\"11\":1,\"12\":18,\"15\":3,\"16\":32,\"36\":1,\"61\":16,\"63\":7,\"64\":7}}],[\"_\",{\"1\":{\"5\":3,\"29\":11,\"30\":11,\"31\":11,\"32\":10,\"43\":2,\"48\":1}}],[\"md2md4\",{\"1\":{\"60\":1}}],[\"md5\",{\"1\":{\"7\":2,\"21\":1,\"60\":3,\"61\":1,\"63\":4,\"64\":4,\"65\":3},\"2\":{\"66\":1}}],[\"msg\",{\"1\":{\"41\":2,\"47\":1,\"48\":1,\"58\":1}}],[\"mixed\",{\"1\":{\"52\":2}}],[\"mirror\",{\"1\":{\"40\":2,\"49\":3,\"51\":1}}],[\"missing\",{\"1\":{\"35\":2,\"36\":1,\"42\":1,\"49\":1}}],[\"mount\",{\"1\":{\"91\":1}}],[\"most\",{\"1\":{\"47\":1,\"48\":1}}],[\"move\",{\"1\":{\"37\":4,\"50\":1}}],[\"more\",{\"1\":{\"36\":2,\"40\":2,\"43\":2,\"47\":2,\"48\":2,\"49\":2}}],[\"modify\",{\"1\":{\"43\":1}}],[\"modifications\",{\"1\":{\"38\":1,\"57\":2}}],[\"modified\",{\"1\":{\"36\":1}}],[\"modes\",{\"1\":{\"41\":1,\"56\":2}}],[\"mode\",{\"1\":{\"25\":1,\"26\":1,\"29\":2,\"30\":2,\"31\":2,\"32\":2,\"38\":1,\"39\":1,\"41\":4,\"44\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"56\":2,\"58\":1}}],[\"media\",{\"1\":{\"91\":2,\"92\":2}}],[\"merging\",{\"1\":{\"47\":1,\"48\":3,\"50\":1}}],[\"merges\",{\"1\":{\"48\":1,\"50\":2}}],[\"merged\",{\"1\":{\"37\":8,\"50\":1,\"58\":6}}],[\"merge\",{\"0\":{\"47\":1},\"1\":{\"36\":1,\"38\":3,\"39\":2,\"47\":16,\"48\":8,\"50\":5,\"52\":2,\"53\":2,\"57\":3}}],[\"messaging\",{\"1\":{\"44\":1}}],[\"messagedigest\",{\"1\":{\"61\":2,\"63\":4,\"64\":5}}],[\"messages\",{\"1\":{\"37\":1,\"39\":1}}],[\"message\",{\"1\":{\"6\":4,\"39\":3,\"41\":19,\"44\":3,\"46\":1,\"47\":7,\"48\":3,\"53\":2,\"55\":6,\"58\":12,\"60\":1}}],[\"me\",{\"1\":{\"41\":1}}],[\"master\",{\"1\":{\"51\":1}}],[\"mail\",{\"1\":{\"44\":2}}],[\"maintenance\",{\"1\":{\"43\":3}}],[\"mainline\",{\"1\":{\"39\":2,\"53\":2}}],[\"mainactivity\",{\"1\":{\"5\":1}}],[\"main\",{\"1\":{\"5\":6,\"45\":3,\"49\":4,\"51\":1}}],[\"max\",{\"1\":{\"44\":2}}],[\"machine\",{\"1\":{\"41\":1,\"49\":1,\"56\":1}}],[\"matched\",{\"1\":{\"54\":1}}],[\"matches\",{\"1\":{\"42\":1}}],[\"match\",{\"1\":{\"36\":1,\"50\":1}}],[\"matching\",{\"1\":{\"36\":2,\"42\":1,\"44\":1,\"56\":1}}],[\"markdown\",{\"0\":{\"67\":1},\"2\":{\"87\":1}}],[\"mark\",{\"1\":{\"36\":1,\"44\":1}}],[\"make\",{\"1\":{\"36\":1,\"40\":1,\"44\":1,\"50\":1}}],[\"made\",{\"1\":{\"36\":1}}],[\"must\",{\"1\":{\"51\":1}}],[\"multiple\",{\"1\":{\"43\":3,\"44\":1}}],[\"mufh\",{\"1\":{\"15\":1}}],[\"mue\",{\"1\":{\"15\":1}}],[\"mq\",{\"1\":{\"15\":1}}],[\"m\",{\"1\":{\"14\":2,\"16\":2,\"37\":5,\"38\":1,\"39\":2,\"41\":6,\"43\":1,\"44\":1,\"47\":1,\"50\":1,\"51\":1,\"53\":2,\"55\":2,\"56\":1,\"57\":1,\"58\":3,\"60\":1,\"89\":2,\"99\":1}}],[\"myuid\",{\"1\":{\"1\":1}}],[\"mypid\",{\"1\":{\"1\":1}}],[\"mytid\",{\"1\":{\"1\":1}}],[\"使\",{\"1\":{\"5\":1}}],[\"使用\",{\"0\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"8\":1,\"10\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":2,\"25\":1,\"26\":3,\"28\":1,\"29\":1,\"30\":5,\"32\":1,\"41\":1,\"45\":1,\"46\":1,\"51\":3,\"60\":1,\"61\":5,\"97\":2}}],[\"哪个\",{\"1\":{\"5\":1}}],[\"订阅\",{\"1\":{\"5\":3}}],[\"gc\",{\"1\":{\"43\":1}}],[\"grep\",{\"1\":{\"46\":1}}],[\"greenrobot\",{\"1\":{\"5\":1}}],[\"graph\",{\"1\":{\"43\":2,\"46\":1}}],[\"group\",{\"1\":{\"43\":2,\"51\":1}}],[\"global\",{\"1\":{\"42\":7,\"95\":3,\"97\":2}}],[\"gpgsign\",{\"1\":{\"97\":1}}],[\"gpg\",{\"0\":{\"96\":1},\"1\":{\"39\":2,\"41\":3,\"47\":3,\"48\":3,\"49\":1,\"50\":2,\"53\":2,\"58\":1,\"97\":5}}],[\"guess\",{\"1\":{\"38\":2,\"57\":2}}],[\"give\",{\"1\":{\"37\":1}}],[\"given\",{\"1\":{\"36\":2,\"38\":1,\"42\":3,\"50\":2,\"57\":1}}],[\"gitlab\",{\"1\":{\"49\":1,\"97\":1}}],[\"gitee\",{\"1\":{\"45\":1,\"49\":1}}],[\"github\",{\"1\":{\"45\":1,\"49\":1,\"51\":7}}],[\"gitconfig\",{\"1\":{\"42\":2}}],[\"gitdir\",{\"1\":{\"40\":1,\"45\":1}}],[\"gitignore\",{\"1\":{\"35\":1}}],[\"git\",{\"0\":{\"34\":1,\"93\":1},\"1\":{\"34\":1,\"35\":5,\"36\":3,\"37\":12,\"38\":6,\"39\":3,\"40\":5,\"41\":8,\"42\":7,\"43\":8,\"44\":2,\"45\":14,\"46\":10,\"47\":4,\"48\":5,\"49\":9,\"50\":6,\"51\":22,\"52\":5,\"53\":3,\"54\":2,\"55\":17,\"56\":2,\"57\":3,\"58\":10,\"94\":1,\"95\":3,\"97\":4},\"2\":{\"59\":1}}],[\"gen\",{\"1\":{\"97\":1}}],[\"generating\",{\"1\":{\"44\":1}}],[\"generate\",{\"1\":{\"44\":2}}],[\"generatekeypair\",{\"1\":{\"32\":1}}],[\"generic\",{\"1\":{\"37\":1}}],[\"get\",{\"0\":{\"100\":1},\"1\":{\"42\":11,\"51\":1,\"100\":4}}],[\"getpublic\",{\"1\":{\"32\":1}}],[\"getprivate\",{\"1\":{\"32\":1}}],[\"getbytes\",{\"1\":{\"30\":1,\"63\":1}}],[\"getinstance\",{\"1\":{\"28\":1,\"29\":3,\"30\":2,\"31\":2,\"32\":3,\"61\":1,\"63\":1,\"64\":2}}],[\"getcharindex\",{\"1\":{\"16\":5}}],[\"getdefault\",{\"1\":{\"5\":3}}],[\"getmainlooper\",{\"1\":{\"4\":2}}],[\"g\",{\"1\":{\"14\":2,\"16\":2,\"89\":2}}],[\"gbk\",{\"1\":{\"8\":1}}],[\"=\",{\"1\":{\"4\":1,\"5\":1,\"8\":1,\"10\":1,\"11\":4,\"12\":21,\"14\":1,\"15\":7,\"16\":52,\"29\":4,\"30\":5,\"31\":4,\"32\":8,\"37\":4,\"38\":2,\"39\":1,\"40\":3,\"41\":7,\"42\":1,\"43\":1,\"44\":4,\"45\":5,\"47\":3,\"48\":7,\"49\":2,\"50\":2,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":6,\"57\":2,\"58\":6,\"63\":2,\"64\":6}}],[\"情况\",{\"1\":{\"4\":1}}],[\"事\",{\"1\":{\"4\":1}}],[\"初始化\",{\"1\":{\"4\":4,\"24\":1,\"28\":2,\"30\":1}}],[\"比较简单\",{\"1\":{\"11\":1}}],[\"比较\",{\"1\":{\"4\":1,\"7\":1,\"28\":1,\"60\":1,\"61\":1}}],[\"https\",{\"1\":{\"100\":1}}],[\"histories\",{\"1\":{\"47\":2,\"48\":2}}],[\"history\",{\"1\":{\"40\":1,\"43\":4,\"48\":4}}],[\"hierarchy\",{\"1\":{\"0\":1}}],[\"hook\",{\"1\":{\"41\":1,\"49\":1,\"50\":1}}],[\"hooks\",{\"1\":{\"41\":1,\"47\":1,\"48\":1}}],[\"how\",{\"1\":{\"39\":1,\"41\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"58\":1}}],[\"holding\",{\"1\":{\"38\":1,\"57\":1}}],[\"hunk\",{\"1\":{\"36\":1}}],[\"hunks\",{\"1\":{\"35\":1,\"36\":2,\"38\":1,\"52\":1}}],[\"hard\",{\"1\":{\"52\":2}}],[\"hardlinks\",{\"1\":{\"40\":2}}],[\"handle\",{\"1\":{\"50\":1}}],[\"handler\",{\"0\":{\"4\":1},\"1\":{\"4\":9,\"6\":3}}],[\"has\",{\"1\":{\"47\":1,\"48\":1}}],[\"hash\",{\"1\":{\"37\":1,\"44\":1,\"45\":2,\"60\":1}}],[\"have\",{\"1\":{\"36\":1,\"43\":1,\"48\":1}}],[\"h\",{\"1\":{\"12\":5,\"14\":2,\"16\":2,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1}}],[\"header\",{\"1\":{\"44\":7}}],[\"headers\",{\"1\":{\"36\":1}}],[\"head\",{\"1\":{\"38\":1,\"40\":2,\"43\":5,\"48\":1,\"50\":1,\"51\":1,\"52\":5,\"57\":1}}],[\"height\",{\"1\":{\"12\":4}}],[\"hexutil\",{\"1\":{\"63\":1,\"64\":1}}],[\"hexstr\",{\"1\":{\"12\":8}}],[\"hexsrtbuff\",{\"1\":{\"12\":4}}],[\"hex\",{\"1\":{\"12\":12}}],[\"实际\",{\"1\":{\"22\":1,\"32\":1}}],[\"实例\",{\"1\":{\"3\":1,\"4\":2,\"6\":2,\"45\":1,\"61\":1}}],[\"实现\",{\"0\":{\"12\":1,\"16\":1,\"28\":1},\"1\":{\"0\":1,\"2\":1,\"13\":1,\"16\":1,\"19\":3,\"21\":1,\"27\":1,\"31\":1,\"61\":1}}],[\"直接\",{\"1\":{\"3\":1,\"21\":1,\"61\":1}}],[\"31\",{\"1\":{\"14\":1}}],[\"31.584\",{\"1\":{\"1\":1}}],[\"30\",{\"1\":{\"14\":1}}],[\"39\",{\"1\":{\"14\":1}}],[\"38\",{\"1\":{\"14\":1}}],[\"37\",{\"1\":{\"14\":1}}],[\"36\",{\"1\":{\"14\":1}}],[\"35\",{\"1\":{\"14\":1}}],[\"34\",{\"1\":{\"14\":1,\"15\":1}}],[\"33\",{\"1\":{\"14\":1,\"15\":1}}],[\"32\",{\"1\":{\"14\":1,\"27\":1,\"31\":2}}],[\"3\",{\"0\":{\"30\":1},\"1\":{\"10\":1,\"12\":1,\"14\":2,\"15\":1,\"16\":5,\"19\":1,\"30\":4,\"32\":1,\"36\":2,\"38\":2,\"57\":1},\"2\":{\"33\":1}}],[\"3.3\",{\"0\":{\"16\":1}}],[\"3.2\",{\"0\":{\"15\":1}}],[\"3.1\",{\"0\":{\"14\":1}}],[\"3.\",{\"0\":{\"3\":1,\"13\":1,\"65\":1}}],[\"}\",{\"1\":{\"2\":2,\"3\":2,\"4\":2,\"5\":7,\"12\":6,\"16\":10,\"29\":6,\"30\":6,\"31\":6,\"32\":17,\"50\":1,\"63\":3,\"64\":6}}],[\"执行\",{\"1\":{\"2\":1,\"3\":1,\"4\":4,\"5\":2,\"6\":1,\"41\":1,\"45\":1,\"49\":1,\"55\":3,\"61\":1}}],[\"virtual\",{\"0\":{\"99\":1},\"1\":{\"99\":2}}],[\"views\",{\"1\":{\"0\":1}}],[\"view\",{\"0\":{\"2\":1},\"1\":{\"0\":1,\"2\":1}}],[\"vuepress\",{\"0\":{\"67\":1}}],[\"valid\",{\"1\":{\"47\":1,\"48\":1}}],[\"values\",{\"1\":{\"41\":1,\"42\":4,\"56\":1}}],[\"value\",{\"1\":{\"40\":1,\"41\":1,\"42\":21,\"47\":1,\"48\":1,\"49\":2}}],[\"variable\",{\"1\":{\"42\":3}}],[\"variables\",{\"1\":{\"42\":1}}],[\"var\",{\"1\":{\"42\":1}}],[\"v2\",{\"1\":{\"38\":2}}],[\"venv\",{\"1\":{\"99\":2}}],[\"verify\",{\"1\":{\"41\":2,\"47\":3,\"48\":3,\"49\":1,\"50\":1,\"58\":2}}],[\"version\",{\"1\":{\"38\":2,\"56\":1}}],[\"verbose\",{\"1\":{\"35\":2,\"36\":2,\"37\":1,\"40\":2,\"41\":1,\"43\":2,\"47\":2,\"48\":2,\"49\":2,\"50\":1,\"51\":5,\"56\":2}}],[\"vector\",{\"1\":{\"24\":1}}],[\"v\",{\"1\":{\"14\":2,\"16\":2,\"35\":1,\"36\":1,\"37\":1,\"40\":1,\"41\":2,\"43\":1,\"44\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":5,\"56\":1,\"58\":2}}],[\"void\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":5,\"61\":1}}],[\"@\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":5,\"12\":4,\"16\":6,\"42\":1,\"45\":1,\"51\":1,\"63\":2,\"64\":2}}],[\"{\",{\"1\":{\"2\":2,\"3\":2,\"4\":2,\"5\":7,\"12\":6,\"16\":10,\"29\":6,\"30\":6,\"31\":6,\"32\":17,\"50\":1,\"63\":3,\"64\":6}}],[\"放在\",{\"1\":{\"2\":1}}],[\"将长\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"将\",{\"1\":{\"2\":1,\"6\":1,\"11\":1,\"12\":2,\"13\":1,\"19\":1,\"22\":1,\"23\":1,\"24\":2,\"25\":2,\"26\":2,\"27\":1,\"32\":1,\"35\":1,\"41\":1,\"49\":1,\"55\":1,\"60\":1,\"61\":1,\"64\":1,\"89\":1,\"91\":1}}],[\"此时\",{\"1\":{\"27\":1,\"28\":2}}],[\"此类\",{\"1\":{\"6\":1}}],[\"此处\",{\"1\":{\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"10\":1,\"19\":1,\"24\":1}}],[\"此\",{\"1\":{\"2\":1,\"61\":2,\"97\":1}}],[\"到子\",{\"1\":{\"6\":1}}],[\"到\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"16\":1,\"19\":1,\"35\":1,\"41\":2,\"42\":1,\"45\":1,\"46\":1,\"49\":3,\"51\":2,\"55\":1,\"60\":1,\"89\":1,\"91\":1,\"97\":1}}],[\"能\",{\"1\":{\"2\":1}}],[\"能够\",{\"1\":{\"1\":1,\"3\":1,\"19\":1,\"55\":1}}],[\"f212d2cfebf50880\",{\"1\":{\"97\":4}}],[\"full\",{\"1\":{\"41\":1,\"56\":1,\"97\":1}}],[\"fully\",{\"1\":{\"37\":1}}],[\"fetched\",{\"1\":{\"43\":2}}],[\"fetches\",{\"1\":{\"40\":1}}],[\"fetch\",{\"0\":{\"43\":1},\"1\":{\"43\":16,\"48\":5,\"51\":1}}],[\"fetching\",{\"1\":{\"40\":1,\"43\":4,\"48\":2}}],[\"feedback\",{\"1\":{\"25\":1,\"26\":1}}],[\"ff\",{\"1\":{\"39\":2,\"47\":2,\"48\":2,\"50\":1}}],[\"failed\",{\"1\":{\"50\":1}}],[\"fails\",{\"1\":{\"36\":1,\"50\":1}}],[\"false\",{\"1\":{\"42\":1,\"48\":1}}],[\"fall\",{\"1\":{\"36\":1}}],[\"fast\",{\"1\":{\"39\":1,\"47\":3,\"48\":2}}],[\"fake\",{\"1\":{\"36\":1}}],[\"factor\",{\"1\":{\"44\":1}}],[\"fact\",{\"1\":{\"35\":1,\"52\":1}}],[\"from\",{\"1\":{\"35\":4,\"36\":1,\"38\":3,\"39\":1,\"40\":4,\"41\":8,\"42\":1,\"43\":4,\"44\":8,\"45\":2,\"47\":3,\"48\":4,\"52\":4,\"53\":1,\"54\":5,\"55\":1,\"58\":2}}],[\"fragment\",{\"1\":{\"2\":1}}],[\"fixed\",{\"1\":{\"42\":1}}],[\"fixup\",{\"1\":{\"41\":3,\"50\":1}}],[\"filters\",{\"1\":{\"40\":1}}],[\"filter\",{\"1\":{\"40\":2,\"43\":1}}],[\"filtering\",{\"1\":{\"37\":1,\"40\":1,\"43\":1,\"58\":1}}],[\"filenotfoundexception\",{\"1\":{\"64\":1}}],[\"filename\",{\"1\":{\"44\":2}}],[\"filenames\",{\"1\":{\"36\":1,\"44\":1}}],[\"fileinputstream\",{\"1\":{\"64\":1}}],[\"filemd5\",{\"1\":{\"64\":1}}],[\"filepath\",{\"1\":{\"46\":1}}],[\"file\",{\"1\":{\"35\":7,\"36\":2,\"38\":6,\"40\":1,\"41\":14,\"42\":10,\"43\":1,\"44\":4,\"47\":2,\"50\":1,\"52\":7,\"54\":8,\"55\":3,\"58\":4,\"64\":6}}],[\"files\",{\"1\":{\"35\":7,\"36\":2,\"38\":3,\"40\":1,\"41\":6,\"44\":2,\"47\":1,\"54\":1,\"56\":4,\"57\":1}}],[\"field\",{\"1\":{\"37\":1,\"58\":1}}],[\"find\",{\"1\":{\"42\":2,\"56\":1}}],[\"finding\",{\"1\":{\"36\":2}}],[\"final\",{\"1\":{\"12\":2,\"16\":2,\"29\":4,\"30\":5,\"31\":4,\"32\":3,\"63\":1,\"64\":1}}],[\"first\",{\"1\":{\"16\":3,\"44\":1}}],[\"found\",{\"1\":{\"102\":1}}],[\"four\",{\"1\":{\"16\":3}}],[\"follow\",{\"1\":{\"40\":1,\"49\":1}}],[\"fork\",{\"1\":{\"50\":2}}],[\"forward\",{\"1\":{\"39\":1,\"47\":3,\"48\":2}}],[\"formatted\",{\"1\":{\"41\":2}}],[\"format\",{\"0\":{\"44\":1},\"1\":{\"37\":4,\"41\":1,\"44\":3,\"45\":3,\"53\":1,\"56\":1,\"58\":8,\"97\":1}}],[\"forced\",{\"1\":{\"43\":2,\"48\":2}}],[\"force\",{\"1\":{\"35\":1,\"37\":2,\"38\":3,\"40\":1,\"41\":1,\"43\":3,\"44\":1,\"47\":1,\"48\":3,\"49\":5,\"50\":1,\"54\":2,\"57\":4,\"58\":2}}],[\"for\",{\"1\":{\"12\":2,\"16\":3,\"36\":3,\"37\":3,\"38\":3,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":2,\"44\":1,\"47\":2,\"48\":4,\"49\":1,\"53\":1,\"58\":1}}],[\"f\",{\"1\":{\"10\":1,\"12\":1,\"14\":2,\"16\":2,\"35\":2,\"37\":2,\"38\":1,\"41\":2,\"42\":1,\"43\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"54\":2,\"57\":1,\"58\":4}}],[\"flueky\",{\"1\":{\"1\":1,\"45\":2,\"46\":1,\"51\":1}}],[\"29\",{\"1\":{\"14\":1}}],[\"28\",{\"1\":{\"14\":1}}],[\"27\",{\"1\":{\"14\":1}}],[\"26\",{\"1\":{\"14\":1,\"16\":3}}],[\"25\",{\"1\":{\"14\":1}}],[\"256\",{\"1\":{\"8\":1,\"32\":1,\"64\":1}}],[\"24\",{\"1\":{\"14\":1,\"15\":2,\"30\":3,\"31\":2}}],[\"22\",{\"1\":{\"14\":1}}],[\"21\",{\"1\":{\"14\":1}}],[\"2010\",{\"1\":{\"60\":1}}],[\"2024\",{\"1\":{\"46\":2,\"97\":1}}],[\"2048\",{\"1\":{\"32\":3}}],[\"200\",{\"1\":{\"15\":1}}],[\"20\",{\"1\":{\"14\":1,\"15\":2,\"97\":1}}],[\"2\",{\"1\":{\"8\":2,\"10\":7,\"11\":1,\"12\":5,\"14\":3,\"15\":5,\"16\":9,\"38\":1,\"86\":1}}],[\"2.4\",{\"0\":{\"32\":1}}],[\"2.3\",{\"0\":{\"12\":1,\"31\":1}}],[\"2.2\",{\"0\":{\"11\":1,\"30\":1,\"64\":1}}],[\"2.1\",{\"0\":{\"10\":1,\"29\":1,\"63\":1}}],[\"2.\",{\"0\":{\"2\":1,\"9\":1,\"28\":1,\"62\":1},\"1\":{\"61\":1}}],[\"23\",{\"1\":{\"14\":1}}],[\"2393\",{\"1\":{\"1\":3}}],[\"2368\",{\"1\":{\"1\":4}}],[\"这么\",{\"1\":{\"60\":1}}],[\"这\",{\"1\":{\"13\":1,\"60\":1}}],[\"这些\",{\"1\":{\"1\":1}}],[\"这个\",{\"1\":{\"0\":1,\"7\":1,\"51\":1}}],[\"操作\",{\"1\":{\"1\":1,\"6\":1,\"17\":1,\"22\":1,\"27\":1,\"28\":1,\"30\":4,\"55\":1}}],[\"遇到\",{\"1\":{\"1\":1,\"27\":1,\"55\":1}}],[\"py\",{\"1\":{\"100\":4}}],[\"pypa\",{\"1\":{\"100\":1}}],[\"python3\",{\"1\":{\"98\":1,\"99\":2,\"100\":1}}],[\"python\",{\"0\":{\"98\":1},\"1\":{\"98\":2}}],[\"placed\",{\"1\":{\"51\":1}}],[\"place\",{\"1\":{\"43\":1}}],[\"pushing\",{\"1\":{\"49\":1}}],[\"push\",{\"0\":{\"49\":1},\"1\":{\"45\":1,\"49\":14,\"51\":4,\"55\":1}}],[\"pulled\",{\"1\":{\"48\":1}}],[\"pull\",{\"0\":{\"48\":1},\"1\":{\"43\":1,\"48\":3,\"49\":1}}],[\"publickey\",{\"1\":{\"32\":4}}],[\"public\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":3,\"12\":2,\"16\":2,\"21\":1,\"29\":2,\"30\":2,\"31\":2,\"32\":2,\"63\":1,\"64\":1}}],[\"permissions\",{\"1\":{\"45\":2}}],[\"percentage\",{\"1\":{\"44\":1}}],[\"per\",{\"1\":{\"42\":1}}],[\"perform\",{\"1\":{\"38\":1,\"47\":1,\"48\":1,\"57\":1}}],[\"pop\",{\"1\":{\"47\":1,\"48\":1,\"50\":1,\"55\":3}}],[\"porcelain\",{\"1\":{\"41\":1,\"49\":1,\"56\":1}}],[\"possible\",{\"1\":{\"39\":1,\"47\":2,\"48\":1,\"50\":1,\"53\":1}}],[\"post\",{\"0\":{\"2\":1,\"4\":1},\"1\":{\"2\":2,\"4\":3,\"5\":1,\"41\":2}}],[\"points\",{\"1\":{\"37\":2,\"58\":2}}],[\"point\",{\"1\":{\"37\":1,\"50\":3}}],[\"pip\",{\"0\":{\"100\":1},\"1\":{\"98\":2,\"100\":5}}],[\"picks\",{\"1\":{\"50\":1}}],[\"pick\",{\"0\":{\"39\":1},\"1\":{\"39\":6,\"50\":2,\"53\":3}}],[\"picking\",{\"1\":{\"35\":1}}],[\"pid\",{\"1\":{\"1\":2}}],[\"passwd\",{\"1\":{\"89\":1}}],[\"pass\",{\"1\":{\"50\":1}}],[\"passed\",{\"1\":{\"50\":2}}],[\"packfile\",{\"1\":{\"43\":1}}],[\"pack\",{\"1\":{\"40\":2,\"43\":3,\"48\":3,\"49\":6}}],[\"parts\",{\"1\":{\"44\":1}}],[\"partial\",{\"1\":{\"40\":1}}],[\"parallel\",{\"1\":{\"40\":1,\"43\":1,\"48\":1}}],[\"param\",{\"1\":{\"12\":2,\"16\":3,\"63\":1,\"64\":1}}],[\"parent\",{\"1\":{\"39\":3,\"53\":3}}],[\"paht\",{\"1\":{\"35\":1}}],[\"pattern\",{\"1\":{\"37\":1,\"42\":7,\"58\":1}}],[\"paths\",{\"1\":{\"35\":1,\"36\":3,\"52\":1}}],[\"pathspecs\",{\"1\":{\"38\":1}}],[\"pathspec\",{\"1\":{\"35\":6,\"38\":5,\"40\":2,\"41\":8,\"52\":9,\"54\":8,\"55\":3,\"56\":1}}],[\"path\",{\"1\":{\"35\":2,\"36\":4,\"40\":2,\"42\":2,\"43\":2,\"47\":1,\"48\":2,\"64\":3}}],[\"patches\",{\"1\":{\"36\":1,\"44\":4}}],[\"patch\",{\"0\":{\"44\":1},\"1\":{\"35\":1,\"36\":12,\"38\":1,\"41\":2,\"44\":19,\"50\":3,\"52\":2,\"55\":2}}],[\"pkcs5padding\",{\"1\":{\"28\":2,\"29\":3,\"30\":1,\"31\":1}}],[\"p\",{\"1\":{\"14\":2,\"16\":3,\"35\":1,\"36\":1,\"38\":1,\"41\":1,\"43\":2,\"44\":1,\"46\":1,\"48\":1,\"51\":1,\"52\":1,\"55\":2}}],[\"prune\",{\"1\":{\"43\":4,\"48\":2,\"49\":2,\"51\":2}}],[\"present\",{\"1\":{\"50\":1}}],[\"preserve\",{\"1\":{\"39\":1}}],[\"prerequisite\",{\"1\":{\"44\":1}}],[\"prefix\",{\"1\":{\"44\":3}}],[\"prefetch\",{\"1\":{\"43\":2}}],[\"previous\",{\"1\":{\"41\":1}}],[\"pre\",{\"1\":{\"41\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1}}],[\"prepend\",{\"1\":{\"36\":1}}],[\"prepare\",{\"1\":{\"4\":1}}],[\"print\",{\"1\":{\"37\":5,\"43\":1,\"44\":2,\"58\":6}}],[\"printstacktrace\",{\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":11,\"63\":1,\"64\":3}}],[\"privatekey\",{\"1\":{\"32\":4}}],[\"private\",{\"1\":{\"16\":1,\"21\":1,\"29\":2,\"30\":3,\"31\":2,\"32\":3}}],[\"program\",{\"1\":{\"49\":2}}],[\"progress\",{\"1\":{\"38\":3,\"40\":2,\"43\":2,\"44\":2,\"47\":4,\"48\":2,\"49\":2,\"57\":3}}],[\"protected\",{\"1\":{\"5\":3}}],[\"process\",{\"1\":{\"1\":3}}],[\"方便\",{\"1\":{\"6\":1,\"13\":1,\"28\":1}}],[\"方法\",{\"1\":{\"2\":1,\"3\":2,\"4\":1,\"6\":3,\"28\":2,\"29\":1,\"61\":6}}],[\"方式\",{\"1\":{\"1\":2,\"2\":1,\"5\":1,\"6\":1,\"8\":1,\"11\":1,\"21\":1,\"98\":1}}],[\"方案\",{\"1\":{\"0\":1}}],[\"获取\",{\"1\":{\"1\":4,\"2\":1,\"3\":1,\"28\":1,\"61\":2}}],[\"重命名\",{\"1\":{\"51\":1}}],[\"重载\",{\"1\":{\"28\":1,\"61\":1}}],[\"重复\",{\"1\":{\"23\":2}}],[\"重点\",{\"1\":{\"21\":1,\"60\":1}}],[\"重新分配\",{\"1\":{\"1\":1}}],[\"重要\",{\"1\":{\"0\":1}}],[\"卸载\",{\"1\":{\"1\":1}}],[\"变化\",{\"1\":{\"1\":1}}],[\"覆盖\",{\"1\":{\"1\":1}}],[\"唯一\",{\"1\":{\"1\":1}}],[\"其他\",{\"1\":{\"28\":1,\"29\":1,\"55\":1}}],[\"其实\",{\"1\":{\"4\":1,\"60\":1}}],[\"其\",{\"1\":{\"1\":1,\"8\":1,\"12\":1,\"24\":1}}],[\"其中\",{\"1\":{\"1\":1,\"6\":1,\"29\":1,\"49\":1}}],[\"作为\",{\"1\":{\"1\":1,\"6\":2,\"12\":1,\"27\":1}}],[\"给出\",{\"1\":{\"7\":1,\"42\":1}}],[\"给\",{\"1\":{\"1\":1}}],[\"序号\",{\"1\":{\"1\":1}}],[\"会\",{\"1\":{\"1\":2,\"2\":1,\"3\":1,\"5\":2,\"6\":1,\"19\":1,\"55\":1}}],[\"听过\",{\"1\":{\"1\":1}}],[\"则\",{\"1\":{\"1\":1,\"4\":1,\"55\":1}}],[\"io\",{\"1\":{\"100\":1}}],[\"ioexception\",{\"1\":{\"64\":1}}],[\"it\",{\"1\":{\"50\":1}}],[\"its\",{\"1\":{\"0\":1,\"37\":2}}],[\"ipv6\",{\"1\":{\"40\":2,\"43\":2,\"48\":2,\"49\":2}}],[\"ipv4\",{\"1\":{\"40\":2,\"43\":2,\"48\":2,\"49\":2}}],[\"ish\",{\"1\":{\"52\":3}}],[\"is\",{\"1\":{\"36\":2,\"38\":1,\"41\":1,\"42\":8,\"44\":1,\"45\":1,\"47\":1,\"48\":1,\"50\":2,\"57\":1,\"64\":1}}],[\"ignore\",{\"1\":{\"35\":4,\"36\":5,\"37\":1,\"38\":3,\"44\":1,\"47\":1,\"50\":3,\"54\":2,\"56\":2,\"57\":2,\"58\":1}}],[\"ignored\",{\"1\":{\"35\":2,\"38\":1,\"47\":1,\"56\":2,\"57\":1}}],[\"implies\",{\"1\":{\"35\":1,\"40\":1,\"50\":1}}],[\"ivparameterspec\",{\"1\":{\"30\":1}}],[\"iv\",{\"1\":{\"24\":2,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"30\":2}}],[\"i\",{\"1\":{\"12\":6,\"14\":2,\"16\":13,\"35\":1,\"37\":1,\"41\":2,\"50\":4,\"58\":1}}],[\"illegalblocksizeexception\",{\"1\":{\"32\":2}}],[\"illegal\",{\"1\":{\"12\":1,\"16\":1,\"64\":1}}],[\"illegalargumentexception\",{\"1\":{\"12\":1,\"16\":1,\"64\":1}}],[\"inline\",{\"1\":{\"44\":2}}],[\"inside\",{\"1\":{\"40\":1}}],[\"insensitive\",{\"1\":{\"37\":1,\"58\":1}}],[\"install\",{\"1\":{\"94\":1,\"98\":1,\"99\":1}}],[\"instanceof\",{\"1\":{\"5\":1}}],[\"instead\",{\"1\":{\"36\":3,\"40\":2,\"43\":2,\"44\":5,\"47\":2,\"48\":2,\"50\":2}}],[\"info\",{\"1\":{\"37\":2,\"44\":1}}],[\"informational\",{\"1\":{\"37\":1}}],[\"information\",{\"1\":{\"36\":1,\"41\":1,\"56\":2}}],[\"inherit\",{\"1\":{\"37\":1,\"38\":1,\"57\":1}}],[\"incorporate\",{\"1\":{\"48\":1}}],[\"incorrectly\",{\"1\":{\"36\":1}}],[\"includes\",{\"1\":{\"42\":1,\"49\":1}}],[\"include\",{\"1\":{\"36\":1,\"40\":1,\"41\":2,\"42\":1,\"44\":1,\"55\":3}}],[\"inaccurate\",{\"1\":{\"36\":1}}],[\"inputstream\",{\"1\":{\"64\":3}}],[\"input\",{\"1\":{\"36\":2,\"42\":2,\"95\":1}}],[\"in\",{\"1\":{\"35\":2,\"36\":6,\"37\":1,\"40\":2,\"41\":3,\"43\":1,\"44\":8,\"47\":2,\"48\":1,\"50\":1,\"56\":2,\"58\":1}}],[\"invalidkeyexception\",{\"1\":{\"32\":2}}],[\"initial\",{\"1\":{\"45\":3}}],[\"initially\",{\"1\":{\"39\":1}}],[\"initialize\",{\"1\":{\"32\":1,\"40\":2}}],[\"initialization\",{\"1\":{\"24\":1}}],[\"init\",{\"0\":{\"45\":1},\"1\":{\"28\":1,\"29\":3,\"30\":2,\"31\":2,\"32\":2,\"45\":5}}],[\"index\",{\"1\":{\"16\":16,\"35\":1,\"36\":4,\"39\":1,\"41\":1,\"47\":2,\"50\":1,\"52\":4,\"53\":1,\"54\":1,\"55\":4,\"56\":1}}],[\"into\",{\"1\":{\"47\":1}}],[\"integrated\",{\"1\":{\"49\":1}}],[\"interdiff\",{\"1\":{\"44\":1}}],[\"interactively\",{\"1\":{\"35\":1,\"38\":1,\"41\":2,\"52\":1}}],[\"interactive\",{\"1\":{\"35\":2,\"41\":2,\"48\":1,\"50\":2}}],[\"intent\",{\"1\":{\"35\":1,\"36\":2,\"52\":1}}],[\"int\",{\"1\":{\"12\":5,\"16\":16,\"42\":3,\"64\":1}}],[\"if\",{\"1\":{\"5\":1,\"12\":3,\"16\":13,\"35\":1,\"36\":2,\"37\":3,\"38\":1,\"39\":1,\"40\":1,\"44\":3,\"47\":3,\"48\":2,\"49\":2,\"50\":3,\"53\":1,\"54\":1,\"57\":1,\"58\":1,\"64\":1}}],[\"identical\",{\"1\":{\"44\":1}}],[\"ident\",{\"1\":{\"44\":3}}],[\"id\",{\"1\":{\"1\":3,\"39\":1,\"41\":1,\"42\":1,\"44\":2,\"46\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"58\":3,\"97\":1}}],[\"指定\",{\"1\":{\"28\":1,\"29\":1,\"35\":2,\"46\":4,\"58\":2,\"61\":1}}],[\"指\",{\"1\":{\"1\":2,\"28\":1}}],[\"/\",{\"1\":{\"1\":8,\"2\":4,\"3\":4,\"4\":8,\"5\":12,\"12\":14,\"14\":1,\"15\":1,\"16\":34,\"28\":2,\"29\":8,\"30\":4,\"31\":2,\"36\":2,\"37\":3,\"38\":2,\"41\":4,\"42\":5,\"43\":5,\"44\":2,\"46\":2,\"47\":1,\"48\":4,\"49\":3,\"50\":2,\"51\":2,\"56\":1,\"57\":1,\"61\":6,\"63\":2,\"64\":2,\"89\":5,\"91\":6,\"92\":5,\"97\":1,\"100\":3}}],[\"04\",{\"1\":{\"97\":1}}],[\"02\",{\"1\":{\"46\":1}}],[\"0.0\",{\"1\":{\"38\":2}}],[\"000101\",{\"1\":{\"15\":1}}],[\"000100\",{\"1\":{\"15\":1}}],[\"00001111\",{\"1\":{\"10\":1}}],[\"00001110\",{\"1\":{\"10\":1}}],[\"00001101\",{\"1\":{\"10\":1}}],[\"00001100\",{\"1\":{\"10\":1}}],[\"00001011\",{\"1\":{\"10\":1}}],[\"00001010\",{\"1\":{\"10\":1}}],[\"00001001\",{\"1\":{\"10\":1}}],[\"00001000\",{\"1\":{\"10\":1}}],[\"00000111\",{\"1\":{\"10\":1}}],[\"00000110\",{\"1\":{\"10\":1}}],[\"00000101\",{\"1\":{\"10\":1}}],[\"00000100\",{\"1\":{\"10\":1}}],[\"00000011\",{\"1\":{\"10\":1}}],[\"00000010\",{\"1\":{\"10\":1}}],[\"00000001\",{\"1\":{\"10\":2}}],[\"00000000\",{\"1\":{\"8\":1,\"10\":2}}],[\"00\",{\"1\":{\"15\":1}}],[\"001100\",{\"1\":{\"15\":3,\"16\":1}}],[\"00110001\",{\"1\":{\"10\":1,\"15\":3,\"16\":1}}],[\"0\",{\"1\":{\"8\":8,\"10\":26,\"11\":3,\"12\":8,\"14\":2,\"15\":8,\"16\":33,\"64\":2}}],[\"08\",{\"1\":{\"1\":1}}],[\"010100\",{\"1\":{\"15\":2}}],[\"010000\",{\"1\":{\"15\":1,\"16\":1}}],[\"01000001\",{\"1\":{\"10\":1,\"15\":2}}],[\"0100\",{\"1\":{\"11\":1}}],[\"01100100\",{\"1\":{\"11\":1}}],[\"01100001\",{\"1\":{\"10\":1,\"15\":1}}],[\"0110\",{\"1\":{\"11\":1}}],[\"01\",{\"1\":{\"1\":1,\"46\":1}}],[\":\",{\"1\":{\"1\":3,\"12\":3,\"16\":6,\"35\":1,\"36\":1,\"37\":9,\"38\":2,\"39\":2,\"40\":1,\"41\":6,\"42\":16,\"43\":4,\"44\":5,\"45\":2,\"47\":3,\"48\":1,\"49\":3,\"50\":3,\"51\":14,\"52\":4,\"53\":2,\"54\":1,\"55\":11,\"56\":7,\"57\":1,\"58\":4,\"100\":1}}],[\"1977\",{\"1\":{\"32\":1}}],[\"19\",{\"1\":{\"14\":1}}],[\"18\",{\"1\":{\"14\":1,\"15\":1}}],[\"17\",{\"1\":{\"14\":1,\"27\":1}}],[\"15\",{\"1\":{\"10\":1,\"12\":2,\"14\":1,\"27\":1}}],[\"14\",{\"1\":{\"10\":1,\"14\":1}}],[\"136\",{\"1\":{\"15\":1}}],[\"13\",{\"1\":{\"10\":1,\"14\":1}}],[\"128\",{\"1\":{\"32\":1}}],[\"12345678\",{\"1\":{\"30\":1}}],[\"12\",{\"1\":{\"10\":1,\"14\":1,\"15\":4,\"60\":1}}],[\"1024\",{\"1\":{\"32\":2,\"64\":1}}],[\"10\",{\"1\":{\"10\":4,\"12\":8,\"14\":1,\"15\":3,\"16\":1,\"46\":2}}],[\"100001\",{\"1\":{\"15\":1}}],[\"100\",{\"1\":{\"8\":1,\"11\":5,\"15\":3}}],[\"1\",{\"1\":{\"8\":9,\"10\":6,\"11\":1,\"12\":2,\"14\":2,\"15\":4,\"16\":7,\"28\":3,\"44\":1,\"64\":1,\"86\":1}}],[\"16\",{\"1\":{\"1\":1,\"8\":1,\"10\":7,\"11\":3,\"12\":7,\"13\":2,\"14\":1,\"15\":6,\"17\":1,\"27\":2,\"28\":1,\"31\":2},\"2\":{\"18\":1}}],[\"11111111\",{\"1\":{\"8\":1}}],[\"11\",{\"1\":{\"1\":1,\"10\":1,\"14\":1}}],[\"1.3\",{\"0\":{\"27\":1}}],[\"1.2.4\",{\"0\":{\"26\":1}}],[\"1.2.3\",{\"0\":{\"25\":1}}],[\"1.2.2\",{\"0\":{\"24\":1}}],[\"1.2.1\",{\"0\":{\"23\":1}}],[\"1.2\",{\"0\":{\"22\":1}}],[\"1.1\",{\"0\":{\"21\":1}}],[\"1.\",{\"0\":{\"1\":1,\"8\":1,\"20\":1,\"61\":1},\"1\":{\"61\":1}}],[\"-\",{\"0\":{\"39\":1,\"44\":1,\"100\":1},\"1\":{\"1\":3,\"8\":5,\"10\":3,\"12\":4,\"16\":8,\"28\":1,\"35\":71,\"36\":88,\"37\":123,\"38\":76,\"39\":80,\"40\":119,\"41\":186,\"42\":120,\"43\":132,\"44\":124,\"45\":49,\"46\":26,\"47\":96,\"48\":132,\"49\":88,\"50\":151,\"51\":56,\"52\":70,\"53\":62,\"54\":56,\"55\":84,\"56\":44,\"57\":48,\"58\":109,\"64\":2,\"89\":7,\"90\":3,\"92\":1,\"95\":6,\"97\":21,\"99\":2,\"100\":6}}],[\";\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":4,\"5\":8,\"12\":19,\"16\":67,\"29\":12,\"30\":13,\"31\":12,\"32\":28,\"43\":1,\"51\":1,\"63\":5,\"64\":13}}],[\")\",{\"1\":{\"1\":4,\"2\":3,\"3\":3,\"4\":8,\"5\":21,\"6\":1,\"12\":27,\"16\":57,\"29\":14,\"30\":16,\"31\":14,\"32\":35,\"35\":3,\"36\":1,\"37\":5,\"38\":6,\"39\":1,\"40\":1,\"41\":10,\"42\":3,\"43\":2,\"44\":2,\"47\":6,\"48\":3,\"49\":4,\"50\":1,\"51\":2,\"53\":1,\"55\":2,\"56\":4,\"57\":4,\"63\":7,\"64\":19}}],[\"\\\"\",{\"1\":{\"1\":4,\"12\":2,\"16\":2,\"29\":4,\"30\":6,\"31\":4,\"32\":2,\"42\":8,\"63\":2,\"64\":4,\"95\":4,\"97\":2,\"99\":2}}],[\"(\",{\"1\":{\"1\":4,\"2\":3,\"3\":3,\"4\":8,\"5\":21,\"6\":1,\"12\":27,\"16\":57,\"29\":14,\"30\":16,\"31\":14,\"32\":35,\"35\":3,\"36\":1,\"37\":5,\"38\":6,\"39\":1,\"40\":1,\"41\":9,\"42\":3,\"43\":2,\"44\":2,\"47\":6,\"48\":3,\"49\":4,\"50\":1,\"51\":2,\"53\":1,\"55\":2,\"56\":4,\"57\":4,\"63\":7,\"64\":19}}],[\"drop\",{\"1\":{\"50\":1,\"55\":3}}],[\"dry\",{\"1\":{\"35\":3,\"41\":2,\"43\":2,\"48\":2,\"49\":2,\"51\":1,\"54\":2}}],[\"during\",{\"1\":{\"50\":1}}],[\"date\",{\"1\":{\"41\":5,\"42\":2,\"50\":7,\"54\":1}}],[\"data\",{\"1\":{\"12\":7,\"16\":15,\"29\":5,\"30\":4,\"31\":4,\"32\":4,\"63\":3,\"64\":1,\"91\":2,\"92\":2}}],[\"digest\",{\"1\":{\"60\":1,\"61\":2,\"63\":3,\"64\":3}}],[\"digits\",{\"1\":{\"37\":1}}],[\"discard\",{\"1\":{\"57\":1}}],[\"dissociate\",{\"1\":{\"40\":1}}],[\"display\",{\"1\":{\"37\":1,\"50\":1}}],[\"dirty\",{\"1\":{\"56\":1}}],[\"dir\",{\"1\":{\"40\":3,\"44\":2,\"45\":4}}],[\"directives\",{\"1\":{\"42\":1}}],[\"direct\",{\"1\":{\"37\":1,\"38\":1,\"57\":1}}],[\"directory\",{\"1\":{\"36\":1,\"40\":2,\"42\":1,\"44\":1,\"45\":4}}],[\"diffs\",{\"1\":{\"44\":1}}],[\"diffstat\",{\"1\":{\"36\":1,\"47\":2,\"48\":2,\"50\":2}}],[\"diff3\",{\"1\":{\"38\":1,\"57\":1}}],[\"diff\",{\"1\":{\"35\":1,\"36\":1,\"41\":1,\"44\":1,\"55\":1}}],[\"docs\",{\"1\":{\"51\":1}}],[\"doing\",{\"1\":{\"47\":1,\"48\":1}}],[\"downloaded\",{\"1\":{\"43\":1,\"48\":1}}],[\"downloading\",{\"1\":{\"40\":1}}],[\"do\",{\"1\":{\"36\":1,\"38\":2,\"43\":2,\"47\":1,\"48\":1,\"50\":1,\"54\":1,\"56\":1,\"57\":1}}],[\"don\",{\"1\":{\"35\":1,\"36\":3,\"37\":1,\"39\":1,\"40\":4,\"44\":4,\"53\":1,\"58\":1}}],[\"dofinal\",{\"1\":{\"28\":1,\"29\":2,\"30\":2,\"31\":2,\"32\":2}}],[\"deep\",{\"1\":{\"44\":1}}],[\"deepen\",{\"1\":{\"40\":1,\"43\":5,\"48\":5}}],[\"demand\",{\"1\":{\"43\":1,\"48\":1,\"49\":1}}],[\"demo\",{\"1\":{\"1\":1}}],[\"depth\",{\"1\":{\"40\":3,\"43\":2,\"48\":2}}],[\"detach\",{\"1\":{\"38\":2,\"57\":2}}],[\"detected\",{\"1\":{\"36\":1}}],[\"detect\",{\"1\":{\"36\":1,\"56\":2}}],[\"dev\",{\"1\":{\"37\":2,\"38\":1,\"91\":1}}],[\"deletion\",{\"1\":{\"37\":1}}],[\"delete\",{\"1\":{\"37\":3,\"49\":2,\"51\":2,\"58\":2}}],[\"deleted\",{\"1\":{\"36\":1}}],[\"decimal\",{\"1\":{\"36\":1,\"42\":1}}],[\"decrypt\",{\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":2}}],[\"decode\",{\"1\":{\"12\":1,\"16\":1}}],[\"default\",{\"1\":{\"29\":3,\"30\":3,\"31\":3,\"32\":4,\"38\":3,\"41\":2,\"42\":3,\"44\":1,\"47\":3,\"48\":1,\"56\":4,\"57\":1}}],[\"description\",{\"1\":{\"37\":2,\"44\":3}}],[\"desede\",{\"1\":{\"30\":4}}],[\"des\",{\"0\":{\"29\":1,\"30\":1},\"1\":{\"19\":3,\"28\":1,\"29\":4,\"30\":10,\"31\":2},\"2\":{\"33\":2}}],[\"d\",{\"1\":{\"1\":2,\"12\":1,\"14\":2,\"16\":2,\"30\":1,\"37\":5,\"38\":1,\"49\":3,\"51\":1,\"57\":1,\"58\":3,\"60\":1}}],[\"也\",{\"1\":{\"1\":3,\"4\":1,\"6\":3,\"19\":1,\"23\":1,\"31\":1,\"60\":1,\"61\":1}}],[\"也许\",{\"1\":{\"1\":1,\"15\":1}}],[\"法子\",{\"1\":{\"1\":1}}],[\"巧\",{\"1\":{\"1\":1}}],[\"不要\",{\"1\":{\"65\":1}}],[\"不是\",{\"1\":{\"17\":1}}],[\"不\",{\"1\":{\"12\":1,\"15\":1,\"19\":1,\"21\":1,\"28\":2,\"55\":1,\"60\":1,\"65\":1}}],[\"不难\",{\"1\":{\"10\":1,\"13\":1}}],[\"不再\",{\"1\":{\"8\":1}}],[\"不足\",{\"1\":{\"8\":1,\"15\":2}}],[\"不同\",{\"1\":{\"8\":1,\"30\":1}}],[\"不服\",{\"1\":{\"6\":1}}],[\"不够\",{\"1\":{\"4\":1,\"27\":2}}],[\"不会\",{\"1\":{\"1\":1,\"5\":1}}],[\"不过\",{\"1\":{\"1\":1}}],[\"不能\",{\"1\":{\"0\":1,\"15\":3,\"19\":1,\"49\":1,\"65\":1}}],[\"之所以\",{\"1\":{\"7\":1}}],[\"之前\",{\"1\":{\"6\":1,\"16\":2,\"19\":1,\"22\":1,\"28\":1,\"46\":1,\"60\":1}}],[\"之后\",{\"1\":{\"1\":1,\"46\":1,\"58\":1,\"61\":1}}],[\"之间\",{\"1\":{\"0\":1}}],[\"阅读\",{\"1\":{\"1\":1}}],[\"去\",{\"1\":{\"1\":2}}],[\"精力\",{\"1\":{\"1\":1}}],[\"花费\",{\"1\":{\"1\":1}}],[\"可撤回\",{\"1\":{\"55\":1}}],[\"可用\",{\"1\":{\"35\":1}}],[\"可逆\",{\"1\":{\"17\":1,\"19\":3,\"65\":1}}],[\"可供\",{\"1\":{\"16\":1}}],[\"可见\",{\"1\":{\"8\":1}}],[\"可\",{\"1\":{\"8\":1,\"41\":1,\"46\":1,\"61\":1}}],[\"可变\",{\"1\":{\"8\":1}}],[\"可能\",{\"1\":{\"1\":2,\"5\":1}}],[\"可以\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"6\":5,\"8\":2,\"10\":1,\"13\":1,\"15\":1,\"29\":1,\"31\":2,\"32\":1,\"61\":1,\"65\":1,\"89\":1}}],[\"调用\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"6\":1}}],[\"嵌套\",{\"1\":{\"1\":1}}],[\"函数\",{\"1\":{\"1\":1,\"5\":3}}],[\"、\",{\"0\":{\"7\":1,\"19\":1,\"60\":1},\"1\":{\"1\":1,\"7\":2,\"10\":2,\"16\":4,\"19\":3,\"28\":1,\"29\":2,\"30\":4,\"31\":2,\"32\":1,\"60\":3}}],[\"依赖\",{\"1\":{\"1\":1,\"98\":1}}],[\"类型\",{\"1\":{\"6\":1,\"19\":1,\"28\":2}}],[\"类\",{\"1\":{\"1\":1,\"28\":1}}],[\"通俗易懂\",{\"1\":{\"19\":1}}],[\"通过观察\",{\"1\":{\"10\":1}}],[\"通过\",{\"1\":{\"1\":1,\"5\":1,\"6\":1,\"7\":1,\"61\":1,\"64\":2,\"98\":1}}],[\"通常\",{\"1\":{\"1\":1,\"8\":3,\"46\":1,\"64\":1}}],[\"通信\",{\"1\":{\"0\":1}}],[\"或\",{\"1\":{\"1\":1,\"2\":1,\"5\":1,\"28\":1,\"30\":1,\"32\":1,\"55\":1}}],[\"出现\",{\"1\":{\"60\":1}}],[\"出来\",{\"1\":{\"23\":2,\"24\":1}}],[\"出原\",{\"1\":{\"19\":1}}],[\"出自\",{\"1\":{\"5\":1}}],[\"出\",{\"1\":{\"1\":1,\"15\":1,\"17\":1,\"65\":2}}],[\"辨别\",{\"1\":{\"1\":1}}],[\"清晰\",{\"1\":{\"1\":1}}],[\"逻辑\",{\"1\":{\"1\":1}}],[\"一致\",{\"1\":{\"97\":1}}],[\"一起\",{\"1\":{\"32\":1}}],[\"一样\",{\"1\":{\"30\":2}}],[\"一种\",{\"1\":{\"28\":1,\"29\":1,\"60\":2,\"65\":2}}],[\"一块\",{\"1\":{\"24\":2,\"25\":2,\"26\":3}}],[\"一定\",{\"1\":{\"15\":1}}],[\"一共\",{\"1\":{\"14\":1,\"15\":3}}],[\"一倍\",{\"1\":{\"13\":1}}],[\"一次\",{\"1\":{\"13\":1,\"41\":1,\"61\":2}}],[\"一组\",{\"1\":{\"12\":1,\"16\":1}}],[\"一节\",{\"1\":{\"12\":1,\"13\":1}}],[\"一串\",{\"1\":{\"10\":1}}],[\"一一列举\",{\"1\":{\"8\":1}}],[\"一般\",{\"1\":{\"8\":1,\"17\":1,\"61\":1}}],[\"一\",{\"0\":{\"7\":1},\"1\":{\"88\":1}}],[\"一行\",{\"1\":{\"1\":1,\"89\":1}}],[\"一些\",{\"1\":{\"1\":1,\"64\":1}}],[\"一个\",{\"1\":{\"0\":2,\"1\":2,\"8\":2,\"10\":2,\"23\":1,\"24\":1,\"27\":1,\"41\":1,\"45\":1,\"65\":1}}],[\"）\",{\"0\":{\"7\":1,\"19\":1,\"60\":1},\"1\":{\"0\":1,\"10\":1,\"13\":1,\"14\":1,\"21\":2,\"30\":1,\"32\":3,\"55\":1,\"60\":1,\"97\":1}}],[\"（\",{\"0\":{\"7\":1,\"19\":1,\"60\":1},\"1\":{\"0\":1,\"10\":1,\"13\":1,\"14\":1,\"21\":2,\"30\":1,\"32\":3,\"55\":1,\"60\":1,\"97\":1}}],[\"程中\",{\"1\":{\"1\":2,\"2\":1,\"4\":3,\"5\":3,\"6\":2}}],[\"程\",{\"1\":{\"0\":1}}],[\"和\",{\"0\":{\"7\":1,\"19\":1,\"60\":1},\"1\":{\"0\":1,\"6\":2,\"7\":1,\"8\":1,\"11\":2,\"12\":2,\"13\":2,\"17\":1,\"19\":2,\"21\":4,\"26\":1,\"28\":3,\"31\":2,\"32\":3,\"41\":1,\"46\":2,\"49\":1,\"55\":2,\"58\":1,\"60\":1,\"64\":3,\"97\":2}}],[\"子\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"5\":2}}],[\"问题\",{\"1\":{\"0\":1,\"7\":1,\"23\":1}}],[\"为例\",{\"1\":{\"63\":1,\"64\":1}}],[\"为\",{\"1\":{\"0\":1,\"5\":1,\"21\":1,\"22\":1,\"28\":1,\"32\":1,\"45\":1}}],[\".\",{\"0\":{\"2\":1,\"3\":1,\"4\":1},\"1\":{\"0\":1,\"1\":6,\"2\":1,\"3\":1,\"4\":6,\"5\":15,\"6\":2,\"12\":8,\"16\":20,\"29\":10,\"30\":11,\"31\":10,\"32\":24,\"35\":5,\"36\":4,\"37\":6,\"38\":7,\"39\":3,\"41\":8,\"42\":9,\"43\":8,\"44\":1,\"45\":2,\"46\":3,\"47\":3,\"48\":8,\"49\":3,\"50\":1,\"51\":9,\"52\":6,\"53\":3,\"54\":3,\"55\":3,\"56\":6,\"58\":9,\"63\":5,\"64\":9,\"95\":3,\"97\":2,\"100\":6}}],[\"type\",{\"1\":{\"42\":4}}],[\"tty\",{\"1\":{\"42\":1}}],[\"tips\",{\"1\":{\"43\":1}}],[\"tip\",{\"1\":{\"43\":1,\"48\":1}}],[\"time\",{\"1\":{\"40\":2,\"43\":2,\"48\":2}}],[\"tid\",{\"1\":{\"1\":3}}],[\"target\",{\"1\":{\"37\":2,\"47\":1}}],[\"tagname\",{\"1\":{\"58\":3}}],[\"tags\",{\"1\":{\"38\":1,\"40\":2,\"43\":7,\"48\":2,\"49\":6,\"51\":2,\"58\":7}}],[\"tag\",{\"0\":{\"58\":1},\"1\":{\"1\":2,\"49\":4,\"58\":34}}],[\"twice\",{\"1\":{\"37\":1}}],[\"two\",{\"1\":{\"16\":4}}],[\"true\",{\"1\":{\"42\":2,\"48\":1,\"97\":1}}],[\"trust\",{\"1\":{\"36\":1}}],[\"transaction\",{\"1\":{\"43\":1,\"49\":1}}],[\"transmit\",{\"1\":{\"40\":1,\"43\":1,\"48\":1,\"49\":1}}],[\"trailer\",{\"1\":{\"39\":1,\"41\":5,\"44\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1}}],[\"tracking\",{\"1\":{\"37\":3,\"38\":1,\"40\":1,\"43\":1,\"48\":1,\"57\":1}}],[\"track\",{\"1\":{\"37\":1,\"38\":1,\"40\":1,\"57\":1}}],[\"tracked\",{\"1\":{\"35\":3}}],[\"traditional\",{\"1\":{\"36\":1,\"56\":2}}],[\"tree\",{\"1\":{\"35\":1,\"36\":1,\"40\":1,\"44\":1,\"45\":1,\"47\":1,\"52\":5}}],[\"tripledes\",{\"1\":{\"30\":1}}],[\"try\",{\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":3,\"50\":1,\"63\":1,\"64\":1}}],[\"t\",{\"1\":{\"14\":2,\"16\":2,\"35\":1,\"36\":3,\"37\":2,\"38\":1,\"39\":1,\"40\":4,\"41\":1,\"42\":1,\"43\":1,\"44\":4,\"48\":1,\"49\":1,\"51\":1,\"53\":1,\"57\":1,\"58\":1}}],[\"todo\",{\"1\":{\"50\":3}}],[\"token\",{\"1\":{\"41\":1}}],[\"tolerate\",{\"1\":{\"36\":1}}],[\"to\",{\"1\":{\"35\":1,\"36\":4,\"37\":4,\"38\":1,\"39\":1,\"40\":7,\"41\":4,\"42\":1,\"43\":7,\"44\":8,\"45\":2,\"47\":4,\"48\":9,\"49\":3,\"50\":13,\"52\":1,\"53\":3,\"54\":1,\"56\":1,\"57\":2,\"58\":4}}],[\"tostring\",{\"1\":{\"12\":1,\"16\":1}}],[\"touches\",{\"1\":{\"36\":1}}],[\"touching\",{\"1\":{\"36\":1}}],[\"touch\",{\"1\":{\"0\":1}}],[\"terminate\",{\"1\":{\"41\":1,\"42\":1,\"56\":1}}],[\"templates\",{\"1\":{\"40\":1,\"45\":1}}],[\"template\",{\"1\":{\"40\":2,\"41\":4,\"45\":4}}],[\"temporary\",{\"1\":{\"36\":1}}],[\"textview\",{\"1\":{\"2\":1}}],[\"test\",{\"1\":{\"1\":2,\"45\":6}}],[\"those\",{\"1\":{\"50\":1}}],[\"than\",{\"1\":{\"48\":1}}],[\"that\",{\"1\":{\"0\":1,\"35\":1,\"36\":3,\"37\":4,\"40\":1,\"43\":2,\"45\":1,\"47\":1,\"48\":3,\"50\":5,\"52\":1,\"58\":4}}],[\"thin\",{\"1\":{\"49\":2}}],[\"third\",{\"1\":{\"16\":3}}],[\"this\",{\"1\":{\"5\":2,\"42\":1,\"43\":1,\"48\":1,\"49\":1}}],[\"through\",{\"1\":{\"37\":1,\"50\":1}}],[\"throw\",{\"1\":{\"12\":1,\"16\":1,\"38\":1,\"57\":2,\"64\":1}}],[\"three\",{\"1\":{\"16\":4,\"36\":1}}],[\"threading\",{\"1\":{\"44\":1}}],[\"threadmode\",{\"1\":{\"5\":4}}],[\"thread\",{\"1\":{\"0\":1,\"44\":1}}],[\"thr\",{\"1\":{\"16\":1}}],[\"them\",{\"1\":{\"40\":1,\"50\":1}}],[\"their\",{\"1\":{\"38\":1,\"40\":1}}],[\"theirs\",{\"1\":{\"38\":1}}],[\"the\",{\"1\":{\"0\":1,\"12\":1,\"35\":7,\"36\":19,\"37\":9,\"38\":2,\"39\":2,\"40\":4,\"41\":1,\"42\":3,\"43\":3,\"44\":6,\"45\":4,\"47\":10,\"48\":6,\"49\":1,\"50\":13,\"52\":2,\"53\":3,\"54\":3,\"57\":2,\"58\":6,\"64\":1}}],[\"cmd\",{\"1\":{\"50\":2}}],[\"cc\",{\"1\":{\"44\":2}}],[\"crlf\",{\"1\":{\"42\":1}}],[\"creation\",{\"1\":{\"37\":1,\"44\":2,\"58\":1}}],[\"create\",{\"1\":{\"37\":2,\"38\":3,\"40\":5,\"45\":1,\"47\":1,\"48\":1,\"55\":1,\"57\":4,\"58\":3}}],[\"created\",{\"1\":{\"0\":1}}],[\"curl\",{\"1\":{\"100\":1}}],[\"current\",{\"1\":{\"35\":1,\"36\":1,\"37\":2,\"39\":1,\"47\":2,\"50\":4,\"53\":1}}],[\"custom\",{\"1\":{\"41\":1}}],[\"clear\",{\"1\":{\"55\":1}}],[\"cleanup\",{\"1\":{\"39\":1,\"41\":2,\"47\":1,\"48\":1,\"53\":1,\"58\":1}}],[\"clobber\",{\"1\":{\"43\":1}}],[\"cloning\",{\"1\":{\"40\":1}}],[\"cloned\",{\"1\":{\"40\":3}}],[\"clone\",{\"0\":{\"40\":1},\"1\":{\"40\":11,\"43\":3,\"48\":3}}],[\"class\",{\"1\":{\"5\":1}}],[\"cherry\",{\"0\":{\"39\":1},\"1\":{\"39\":6,\"50\":3,\"53\":3}}],[\"checkout\",{\"0\":{\"38\":1},\"1\":{\"35\":1,\"38\":12,\"40\":4,\"54\":1,\"57\":2}}],[\"check\",{\"1\":{\"35\":1,\"36\":2,\"38\":1,\"43\":1,\"48\":1,\"49\":1,\"50\":1,\"54\":1,\"57\":1}}],[\"chmod\",{\"1\":{\"35\":1}}],[\"changed\",{\"1\":{\"41\":1,\"43\":1,\"50\":2}}],[\"change\",{\"1\":{\"36\":1,\"37\":1}}],[\"changes\",{\"1\":{\"35\":1,\"36\":4,\"41\":1,\"44\":2,\"48\":1,\"50\":2,\"52\":1,\"56\":1,\"57\":1}}],[\"chaining\",{\"1\":{\"24\":1}}],[\"character\",{\"1\":{\"35\":1,\"36\":1,\"38\":1,\"41\":1,\"52\":1,\"54\":1}}],[\"charat\",{\"1\":{\"12\":2,\"16\":5}}],[\"char\",{\"1\":{\"12\":3,\"16\":2}}],[\"cfb\",{\"1\":{\"25\":1,\"26\":3,\"29\":1}}],[\"cbc\",{\"1\":{\"24\":1,\"29\":1,\"30\":1}}],[\"cipher\",{\"1\":{\"24\":1,\"25\":1,\"28\":2,\"29\":15,\"30\":15,\"31\":15,\"32\":16}}],[\"core\",{\"1\":{\"95\":1}}],[\"corresponding\",{\"1\":{\"36\":1}}],[\"count\",{\"1\":{\"44\":2}}],[\"counts\",{\"1\":{\"36\":1}}],[\"cover\",{\"1\":{\"44\":7}}],[\"columns\",{\"1\":{\"37\":1,\"56\":1,\"58\":1}}],[\"column\",{\"1\":{\"37\":1,\"56\":1,\"58\":3}}],[\"colors\",{\"1\":{\"58\":1}}],[\"colorbool\",{\"1\":{\"42\":1}}],[\"colored\",{\"1\":{\"37\":1}}],[\"color\",{\"1\":{\"37\":1,\"42\":3,\"58\":1}}],[\"copy\",{\"1\":{\"37\":3,\"40\":1}}],[\"convert\",{\"1\":{\"43\":1,\"48\":1}}],[\"concisely\",{\"1\":{\"41\":1,\"56\":1}}],[\"configured\",{\"1\":{\"42\":1}}],[\"configuration\",{\"1\":{\"37\":1,\"38\":1,\"57\":1}}],[\"config\",{\"0\":{\"42\":1},\"1\":{\"40\":2,\"42\":15,\"51\":1,\"90\":1,\"95\":3,\"97\":3}}],[\"conflict\",{\"1\":{\"38\":2,\"39\":1,\"47\":1,\"50\":1,\"53\":1,\"57\":2}}],[\"contents\",{\"1\":{\"41\":1}}],[\"context\",{\"1\":{\"36\":4}}],[\"continue\",{\"1\":{\"39\":3,\"47\":3,\"50\":4,\"53\":3}}],[\"control\",{\"1\":{\"38\":1,\"43\":1,\"48\":2,\"49\":1,\"52\":1,\"57\":1}}],[\"contain\",{\"1\":{\"37\":2,\"58\":2}}],[\"contains\",{\"1\":{\"37\":2,\"58\":4}}],[\"cone\",{\"1\":{\"35\":1,\"54\":1}}],[\"code\",{\"1\":{\"23\":1}}],[\"complete\",{\"1\":{\"43\":1,\"48\":1}}],[\"comparing\",{\"1\":{\"42\":1}}],[\"compute\",{\"1\":{\"41\":1,\"56\":1}}],[\"common\",{\"1\":{\"43\":1}}],[\"command\",{\"1\":{\"42\":2}}],[\"comments\",{\"1\":{\"39\":1,\"41\":1,\"47\":1,\"48\":1,\"53\":1,\"58\":1}}],[\"committing\",{\"1\":{\"47\":1,\"48\":1}}],[\"committer\",{\"1\":{\"44\":1,\"50\":2}}],[\"committed\",{\"1\":{\"41\":1}}],[\"commits\",{\"1\":{\"39\":4,\"43\":1,\"50\":8,\"53\":1}}],[\"commit\",{\"0\":{\"41\":1},\"1\":{\"37\":6,\"38\":1,\"39\":7,\"41\":39,\"43\":2,\"44\":3,\"47\":10,\"48\":8,\"50\":2,\"52\":1,\"53\":6,\"55\":1,\"57\":1,\"58\":12,\"97\":1}}],[\"com\",{\"1\":{\"1\":1,\"42\":1,\"51\":1}}],[\"cached\",{\"1\":{\"36\":1,\"54\":2}}],[\"catch\",{\"1\":{\"29\":2,\"30\":2,\"31\":2,\"32\":11,\"63\":1,\"64\":3}}],[\"case\",{\"1\":{\"16\":6,\"37\":2,\"58\":2}}],[\"cancel\",{\"1\":{\"39\":1,\"53\":1}}],[\"cannot\",{\"1\":{\"35\":1}}],[\"can\",{\"1\":{\"0\":1,\"49\":1}}],[\"c\",{\"1\":{\"12\":1,\"14\":2,\"16\":15,\"36\":1,\"37\":4,\"40\":1,\"41\":6,\"50\":1,\"57\":2}}],[\"apt\",{\"1\":{\"94\":1,\"98\":1,\"99\":1}}],[\"applied\",{\"1\":{\"50\":1}}],[\"applicable\",{\"1\":{\"36\":2}}],[\"applying\",{\"1\":{\"36\":3}}],[\"apply\",{\"0\":{\"36\":1},\"1\":{\"35\":1,\"36\":8,\"40\":1,\"50\":5,\"55\":1}}],[\"append\",{\"1\":{\"12\":2,\"16\":9,\"39\":1,\"43\":2,\"48\":2}}],[\"amongst\",{\"1\":{\"45\":1}}],[\"amend\",{\"1\":{\"41\":8}}],[\"against\",{\"1\":{\"44\":2}}],[\"ahead\",{\"1\":{\"41\":2,\"56\":2}}],[\"after\",{\"1\":{\"41\":1,\"43\":3,\"46\":1,\"47\":1,\"48\":1,\"50\":2,\"52\":1}}],[\"authored\",{\"1\":{\"41\":1}}],[\"author\",{\"1\":{\"41\":7,\"46\":1,\"50\":4}}],[\"autostash\",{\"1\":{\"47\":1,\"48\":1,\"50\":1}}],[\"autosquash\",{\"1\":{\"41\":2,\"50\":1}}],[\"auto\",{\"1\":{\"43\":4,\"51\":1}}],[\"autocrlf\",{\"1\":{\"42\":1,\"95\":1}}],[\"autoupdate\",{\"1\":{\"39\":1,\"47\":1,\"50\":1,\"53\":1}}],[\"automatically\",{\"1\":{\"39\":1,\"47\":1,\"48\":1,\"50\":2,\"53\":1}}],[\"armor\",{\"1\":{\"97\":1}}],[\"argument\",{\"1\":{\"50\":1}}],[\"args\",{\"1\":{\"40\":1,\"43\":1}}],[\"area\",{\"1\":{\"36\":1}}],[\"are\",{\"1\":{\"35\":2,\"36\":1,\"37\":3,\"38\":1,\"41\":1,\"50\":1,\"52\":1,\"54\":1,\"58\":3}}],[\"absent\",{\"1\":{\"44\":1}}],[\"able\",{\"1\":{\"40\":1}}],[\"abort\",{\"1\":{\"39\":2,\"47\":5,\"48\":1,\"50\":4,\"53\":2}}],[\"abbrev\",{\"1\":{\"37\":1}}],[\"away\",{\"1\":{\"38\":1,\"57\":2}}],[\"attach\",{\"1\":{\"44\":2}}],[\"attempt\",{\"1\":{\"36\":1}}],[\"atomic\",{\"1\":{\"43\":2,\"49\":2}}],[\"at\",{\"1\":{\"36\":3,\"37\":2,\"38\":1,\"40\":1,\"44\":1,\"47\":3,\"48\":3,\"49\":1,\"57\":1,\"58\":2}}],[\"annotated\",{\"1\":{\"58\":2}}],[\"annotate\",{\"1\":{\"58\":1}}],[\"an\",{\"1\":{\"42\":2,\"50\":1}}],[\"any\",{\"1\":{\"40\":3,\"50\":1}}],[\"another\",{\"1\":{\"38\":1,\"57\":1,\"58\":1}}],[\"ancestors\",{\"1\":{\"43\":1}}],[\"ancestor\",{\"1\":{\"36\":1}}],[\"and\",{\"1\":{\"35\":2,\"36\":1,\"37\":5,\"38\":2,\"39\":2,\"40\":1,\"41\":3,\"43\":2,\"47\":4,\"48\":4,\"50\":5,\"52\":3,\"53\":2,\"57\":2,\"58\":3}}],[\"android\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}],[\"act\",{\"1\":{\"37\":1}}],[\"actions\",{\"1\":{\"37\":1}}],[\"action\",{\"1\":{\"36\":1,\"42\":1,\"50\":1}}],[\"activity\",{\"0\":{\"3\":1},\"1\":{\"2\":1,\"3\":2,\"5\":2}}],[\"accept\",{\"1\":{\"36\":1,\"43\":2,\"48\":1}}],[\"alternatives\",{\"1\":{\"90\":1}}],[\"already\",{\"1\":{\"50\":1}}],[\"alone\",{\"1\":{\"47\":1}}],[\"alias\",{\"1\":{\"40\":1}}],[\"always\",{\"1\":{\"40\":1}}],[\"also\",{\"1\":{\"36\":1,\"40\":1}}],[\"all\",{\"1\":{\"35\":3,\"36\":1,\"37\":1,\"41\":4,\"42\":7,\"43\":7,\"44\":1,\"48\":4,\"49\":4,\"50\":4,\"51\":1,\"55\":2,\"56\":4}}],[\"allow\",{\"1\":{\"35\":2,\"36\":3,\"39\":4,\"41\":2,\"43\":1,\"47\":3,\"48\":3,\"50\":1,\"54\":2}}],[\"algorithm\",{\"1\":{\"29\":6,\"30\":6,\"31\":6,\"32\":4,\"45\":1,\"60\":1,\"61\":1}}],[\"address\",{\"1\":{\"44\":1}}],[\"addresses\",{\"1\":{\"40\":2,\"43\":2,\"48\":2,\"49\":2}}],[\"additions\",{\"1\":{\"36\":1}}],[\"adding\",{\"1\":{\"35\":1}}],[\"added\",{\"1\":{\"35\":2,\"36\":1,\"52\":1}}],[\"add\",{\"0\":{\"35\":1},\"1\":{\"35\":9,\"36\":4,\"39\":1,\"41\":6,\"42\":2,\"44\":9,\"45\":1,\"47\":2,\"48\":2,\"50\":2,\"51\":4,\"52\":1,\"53\":1}}],[\"adleman\",{\"1\":{\"32\":1}}],[\"adi\",{\"1\":{\"32\":1}}],[\"advanced\",{\"1\":{\"31\":1}}],[\"aes\",{\"0\":{\"31\":1},\"1\":{\"19\":2,\"31\":4},\"2\":{\"33\":1}}],[\"aa\",{\"1\":{\"15\":1}}],[\"ask\",{\"1\":{\"50\":1}}],[\"asked\",{\"1\":{\"49\":1}}],[\"associated\",{\"1\":{\"43\":1,\"48\":1}}],[\"as\",{\"1\":{\"35\":1,\"40\":1,\"44\":1,\"50\":1}}],[\"ascii\",{\"1\":{\"8\":2}}],[\"asynctask\",{\"1\":{\"6\":2}}],[\"a\",{\"1\":{\"0\":1,\"8\":2,\"10\":3,\"12\":1,\"14\":2,\"15\":1,\"16\":6,\"35\":1,\"36\":4,\"37\":8,\"38\":3,\"39\":1,\"40\":8,\"41\":4,\"42\":4,\"43\":3,\"44\":11,\"45\":1,\"47\":8,\"48\":9,\"50\":2,\"51\":2,\"53\":1,\"54\":1,\"55\":2,\"57\":3,\"58\":5,\"89\":1}}],[\"ok\",{\"1\":{\"43\":1}}],[\"open\",{\"1\":{\"42\":1}}],[\"optionally\",{\"1\":{\"56\":1}}],[\"optional\",{\"1\":{\"41\":1,\"56\":3}}],[\"option\",{\"1\":{\"39\":3,\"40\":2,\"43\":2,\"47\":3,\"48\":5,\"49\":2,\"50\":2,\"53\":3}}],[\"options\",{\"1\":{\"35\":1,\"36\":1,\"37\":9,\"38\":2,\"40\":1,\"41\":2,\"42\":1,\"43\":4,\"44\":1,\"47\":1,\"48\":3,\"49\":1,\"50\":2,\"55\":2,\"56\":1,\"57\":1,\"58\":3}}],[\"our\",{\"1\":{\"38\":1}}],[\"ours\",{\"1\":{\"38\":1}}],[\"out\",{\"1\":{\"44\":1,\"50\":1}}],[\"outside\",{\"1\":{\"35\":1,\"36\":1,\"54\":1}}],[\"output\",{\"1\":{\"26\":1,\"36\":2,\"37\":2,\"41\":1,\"44\":5,\"49\":1,\"56\":1,\"58\":1}}],[\"others\",{\"2\":{\"101\":1}}],[\"other\",{\"1\":{\"38\":1,\"42\":1,\"57\":1}}],[\"otherwise\",{\"1\":{\"35\":1}}],[\"oldurl\",{\"1\":{\"51\":1}}],[\"old\",{\"1\":{\"37\":2,\"42\":1,\"49\":1,\"51\":1}}],[\"overwriting\",{\"1\":{\"43\":1,\"48\":1}}],[\"overwrite\",{\"1\":{\"38\":1,\"43\":1,\"47\":1,\"48\":1,\"57\":1}}],[\"overlay\",{\"1\":{\"38\":2}}],[\"overlapping\",{\"1\":{\"36\":1}}],[\"overlap\",{\"1\":{\"36\":1}}],[\"override\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":4,\"35\":1,\"41\":2,\"45\":1,\"54\":1}}],[\"off\",{\"1\":{\"39\":1,\"41\":1,\"44\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1}}],[\"of\",{\"1\":{\"35\":4,\"36\":7,\"37\":1,\"38\":1,\"40\":6,\"41\":1,\"42\":2,\"43\":10,\"44\":7,\"45\":1,\"47\":4,\"48\":12,\"49\":2,\"50\":7,\"52\":1,\"54\":1,\"57\":1,\"58\":3}}],[\"ofb\",{\"1\":{\"26\":3,\"29\":1}}],[\"o\",{\"1\":{\"14\":2,\"16\":2,\"40\":1,\"41\":2,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"100\":1}}],[\"obtain\",{\"1\":{\"6\":1}}],[\"obj\",{\"1\":{\"6\":1}}],[\"objects\",{\"1\":{\"43\":2,\"48\":2}}],[\"object\",{\"1\":{\"5\":1,\"37\":3,\"40\":1,\"42\":1,\"43\":2,\"45\":2,\"48\":1,\"58\":4}}],[\"onto\",{\"1\":{\"50\":4}}],[\"on\",{\"1\":{\"36\":2,\"37\":2,\"40\":1,\"42\":1,\"43\":6,\"44\":1,\"48\":5,\"49\":2,\"58\":1}}],[\"oneline\",{\"1\":{\"46\":1}}],[\"one\",{\"1\":{\"16\":3,\"36\":1,\"40\":1}}],[\"onpostexecute\",{\"1\":{\"6\":2}}],[\"onstop\",{\"1\":{\"5\":2}}],[\"onstart\",{\"1\":{\"5\":2}}],[\"onmessageevent\",{\"1\":{\"5\":1}}],[\"oncreate\",{\"1\":{\"5\":2}}],[\"only\",{\"1\":{\"0\":1,\"35\":2,\"37\":5,\"38\":1,\"40\":5,\"41\":2,\"42\":2,\"43\":4,\"47\":1,\"48\":4,\"49\":2,\"52\":3,\"54\":1,\"55\":1,\"58\":5}}],[\"origin\",{\"1\":{\"40\":3,\"42\":2,\"49\":9,\"51\":3}}],[\"original\",{\"1\":{\"0\":1,\"50\":1}}],[\"orphan\",{\"1\":{\"38\":1,\"57\":1}}],[\"or\",{\"1\":{\"36\":1,\"37\":7,\"38\":2,\"39\":4,\"40\":1,\"41\":1,\"42\":6,\"43\":3,\"44\":3,\"47\":2,\"49\":1,\"50\":3,\"51\":12,\"52\":3,\"53\":4,\"55\":10,\"57\":1,\"58\":3}}],[\"ordered\",{\"1\":{\"5\":2}}],[\",\",{\"1\":{\"0\":2,\"1\":10,\"2\":1,\"3\":1,\"4\":3,\"5\":2,\"6\":4,\"8\":2,\"10\":78,\"11\":2,\"12\":18,\"14\":136,\"15\":15,\"16\":64,\"19\":4,\"21\":4,\"23\":4,\"24\":5,\"25\":4,\"26\":8,\"27\":1,\"28\":6,\"29\":9,\"30\":11,\"31\":9,\"32\":4,\"35\":14,\"36\":10,\"37\":19,\"38\":13,\"39\":8,\"40\":17,\"41\":24,\"42\":20,\"43\":17,\"44\":11,\"45\":9,\"46\":1,\"47\":9,\"48\":17,\"49\":14,\"50\":17,\"51\":4,\"52\":8,\"53\":7,\"54\":5,\"55\":6,\"56\":17,\"57\":10,\"58\":16,\"60\":2,\"61\":2,\"63\":2,\"64\":5,\"86\":1,\"98\":1},\"2\":{\"18\":1,\"33\":3,\"66\":2}}],[\"：\",{\"1\":{\"0\":1,\"7\":2,\"8\":1,\"10\":2,\"11\":1,\"12\":3,\"15\":2,\"16\":4,\"19\":2,\"21\":1,\"24\":1,\"28\":1,\"29\":1,\"51\":1,\"55\":1,\"60\":1,\"63\":1,\"64\":1}}],[\"很大\",{\"1\":{\"1\":1}}],[\"很\",{\"1\":{\"0\":1,\"1\":1,\"19\":1}}],[\"有没有\",{\"1\":{\"60\":1}}],[\"有些\",{\"1\":{\"26\":1}}],[\"有空\",{\"1\":{\"19\":1}}],[\"有点\",{\"1\":{\"6\":1}}],[\"有人\",{\"1\":{\"1\":1}}],[\"有\",{\"1\":{\"0\":2,\"1\":1,\"8\":2,\"14\":1,\"23\":1,\"28\":2,\"98\":1}}],[\"多次\",{\"1\":{\"61\":1}}],[\"多\",{\"1\":{\"29\":1}}],[\"多少\",{\"1\":{\"28\":2}}],[\"多重\",{\"1\":{\"0\":1}}],[\"多线程\",{\"1\":{\"0\":1}}],[\"多个\",{\"1\":{\"0\":1,\"28\":1}}],[\"。\",{\"1\":{\"0\":3,\"1\":10,\"2\":1,\"3\":1,\"4\":2,\"5\":4,\"6\":9,\"7\":2,\"8\":13,\"10\":9,\"11\":5,\"12\":4,\"13\":5,\"14\":2,\"15\":24,\"16\":2,\"17\":2,\"19\":5,\"21\":6,\"22\":4,\"23\":5,\"24\":6,\"25\":5,\"26\":9,\"27\":7,\"28\":14,\"29\":6,\"30\":8,\"31\":4,\"32\":4,\"35\":2,\"41\":3,\"42\":4,\"45\":6,\"46\":10,\"49\":2,\"51\":2,\"55\":5,\"58\":2,\"60\":5,\"61\":11,\"63\":1,\"64\":2,\"65\":2,\"86\":2,\"88\":1,\"97\":2,\"98\":2}}],[\"效率\",{\"1\":{\"0\":1,\"13\":1,\"21\":1,\"22\":1,\"32\":1}}],[\"的\",{\"0\":{\"1\":1},\"1\":{\"0\":3,\"1\":5,\"2\":2,\"4\":3,\"5\":1,\"6\":5,\"7\":5,\"8\":8,\"10\":5,\"12\":3,\"13\":3,\"15\":8,\"16\":5,\"17\":4,\"19\":8,\"21\":2,\"22\":1,\"23\":7,\"24\":5,\"25\":4,\"26\":10,\"27\":5,\"28\":5,\"29\":2,\"30\":4,\"31\":1,\"32\":4,\"35\":2,\"42\":3,\"45\":6,\"46\":9,\"49\":4,\"51\":1,\"55\":10,\"58\":4,\"60\":6,\"61\":9,\"63\":1,\"64\":4,\"65\":2,\"88\":1,\"97\":1,\"98\":1}}],[\"独立\",{\"1\":{\"0\":1,\"12\":1}}],[\"是否是\",{\"1\":{\"21\":1}}],[\"是否\",{\"1\":{\"13\":1,\"21\":1,\"63\":1,\"64\":1}}],[\"是因为\",{\"1\":{\"7\":1}}],[\"是\",{\"1\":{\"0\":1,\"1\":4,\"7\":2,\"8\":2,\"10\":1,\"15\":1,\"17\":1,\"19\":4,\"21\":2,\"22\":1,\"26\":1,\"28\":1,\"30\":1,\"32\":4,\"45\":1,\"61\":2,\"65\":3,\"97\":1}}],[\"时间\",{\"1\":{\"46\":2}}],[\"时候\",{\"1\":{\"13\":1,\"64\":1}}],[\"时\",{\"1\":{\"0\":1,\"1\":3,\"2\":1,\"4\":2,\"8\":1,\"16\":1,\"21\":2,\"27\":1,\"28\":1,\"29\":1,\"30\":1}}],[\"在于\",{\"1\":{\"21\":1,\"26\":1}}],[\"在子\",{\"1\":{\"0\":1,\"1\":2,\"2\":1,\"3\":1,\"4\":4,\"5\":1,\"6\":1}}],[\"在\",{\"1\":{\"0\":2,\"1\":7,\"2\":2,\"3\":1,\"4\":3,\"5\":5,\"6\":2,\"7\":2,\"8\":2,\"16\":1,\"21\":1,\"22\":1,\"28\":1,\"29\":2,\"32\":1,\"35\":1,\"42\":3,\"45\":4,\"46\":1,\"51\":1,\"55\":1,\"60\":2,\"61\":1,\"63\":1,\"64\":1}}],[\"应用\",{\"1\":{\"0\":1,\"1\":2,\"32\":1}}],[\"，\",{\"1\":{\"0\":4,\"1\":11,\"2\":2,\"3\":1,\"4\":6,\"5\":5,\"6\":7,\"7\":7,\"8\":14,\"10\":5,\"11\":3,\"12\":5,\"13\":7,\"15\":9,\"16\":5,\"17\":4,\"19\":11,\"21\":10,\"22\":4,\"23\":4,\"24\":3,\"25\":2,\"26\":1,\"27\":4,\"28\":16,\"29\":5,\"30\":6,\"31\":3,\"32\":6,\"35\":3,\"41\":2,\"42\":3,\"45\":3,\"46\":4,\"49\":2,\"51\":3,\"55\":7,\"58\":2,\"60\":4,\"61\":5,\"64\":2,\"65\":5,\"97\":6}}],[\"中间\",{\"1\":{\"26\":7}}],[\"中\",{\"1\":{\"0\":4,\"1\":6,\"2\":2,\"3\":1,\"4\":4,\"5\":2,\"6\":1,\"7\":2,\"8\":1,\"16\":1,\"21\":1,\"22\":2,\"27\":2,\"28\":1,\"29\":1,\"30\":3,\"32\":2,\"35\":1,\"41\":2,\"46\":1,\"55\":1,\"63\":1,\"64\":1,\"97\":1}}],[\"系统\",{\"1\":{\"0\":1,\"1\":2}}],[\"线程\",{\"0\":{\"0\":1,\"1\":1},\"1\":{\"0\":4,\"1\":4,\"2\":3,\"3\":2,\"4\":4,\"5\":5,\"6\":3}}],[\" \",{\"0\":{\"0\":1,\"1\":1,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":2,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"34\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"67\":2,\"88\":1,\"99\":1},\"1\":{\"0\":16,\"1\":36,\"2\":22,\"3\":20,\"4\":35,\"5\":90,\"6\":34,\"7\":10,\"8\":32,\"10\":7,\"11\":29,\"12\":209,\"14\":6,\"15\":89,\"16\":530,\"17\":4,\"19\":7,\"21\":8,\"23\":6,\"24\":15,\"25\":8,\"26\":17,\"27\":12,\"28\":45,\"29\":106,\"30\":123,\"31\":100,\"32\":164,\"34\":2,\"35\":171,\"36\":276,\"37\":288,\"38\":176,\"39\":129,\"40\":270,\"41\":337,\"42\":267,\"43\":305,\"44\":287,\"45\":122,\"46\":63,\"47\":228,\"48\":335,\"49\":203,\"50\":333,\"51\":166,\"52\":120,\"53\":113,\"54\":78,\"55\":146,\"56\":100,\"57\":112,\"58\":274,\"60\":18,\"61\":39,\"63\":40,\"64\":102,\"65\":5,\"86\":2,\"88\":2,\"89\":37,\"90\":3,\"91\":8,\"92\":7,\"94\":3,\"95\":16,\"97\":54,\"98\":11,\"99\":15,\"100\":12,\"102\":2}}]],\"serializationVersion\":2}}")).map(([localePath, index]) => [
    localePath,
    loadIndex(index, {
        fields: [/** Heading */ "h", /** Text */ "t", /** CustomFields */ "c"],
        storeFields: [
            /** Heading */ "h",
            /** Text */ "t",
            /** CustomFields */ "c",
        ],
    }),
]));
self.onmessage = ({ data: { type = "all", query, locale, options, id }, }) => {
    const searchLocaleIndex = searchIndex[locale];
    if (type === "suggest")
        self.postMessage([
            type,
            id,
            getSuggestions(query, searchLocaleIndex, options),
        ]);
    else if (type === "search")
        self.postMessage([type, id, getResults(query, searchLocaleIndex, options)]);
    else
        self.postMessage({
            suggestions: [
                type,
                id,
                getSuggestions(query, searchLocaleIndex, options),
            ],
            results: [type, id, getResults(query, searchLocaleIndex, options)],
        });
};
//# sourceMappingURL=index.js.map