import { entries, fromEntries } from "@vuepress/helper/client";
import { loadIndex } from "slimsearch";
import { getResults } from "../client/worker/result.js";
import { getSuggestions } from "../client/worker/suggestion.js";
const searchIndex = fromEntries(entries(JSON.parse("{\"/\":{\"documentCount\":96,\"nextId\":96,\"documentIds\":{\"0\":\"1\",\"1\":\"1#_1-编码介绍\",\"2\":\"1#_2-十六进制编码\",\"3\":\"1#_2-1-概念\",\"4\":\"1#_2-2-换算\",\"5\":\"1#_2-3-代码实现\",\"6\":\"1#_3-base64-编码\",\"7\":\"1#_3-1-概念\",\"8\":\"1#_3-2-换算\",\"9\":\"1#_3-3-代码实现\",\"10\":\"1#_4-总结\",\"11\":\"1@0\",\"12\":\"2\",\"13\":\"2#_1-相关概念\",\"14\":\"2#_1-1-密钥\",\"15\":\"2#_1-2-加密模式\",\"16\":\"2#_1-2-1-电子密码本模式\",\"17\":\"2#_1-2-2-加密块链模式\",\"18\":\"2#_1-2-3-加密反馈模式\",\"19\":\"2#_1-2-4-输出反馈模式\",\"20\":\"2#_1-3-填充模式\",\"21\":\"2#_2-代码实现\",\"22\":\"2#_2-1-des\",\"23\":\"2#_2-2-3des\",\"24\":\"2#_2-3-aes\",\"25\":\"2#_2-4-rsa\",\"26\":\"2@0\",\"27\":\"3\",\"28\":\"3#add\",\"29\":\"3#apply\",\"30\":\"3#branch\",\"31\":\"3#checkout\",\"32\":\"3#cherry-pick\",\"33\":\"3#clone\",\"34\":\"3#commit\",\"35\":\"3#config\",\"36\":\"3#fetch\",\"37\":\"3#format-patch\",\"38\":\"3#init\",\"39\":\"3#log\",\"40\":\"3#merge\",\"41\":\"3#pull\",\"42\":\"3#push\",\"43\":\"3#rebase\",\"44\":\"3#remote\",\"45\":\"3#reset\",\"46\":\"3#revert\",\"47\":\"3#rm\",\"48\":\"3#stash\",\"49\":\"3#status\",\"50\":\"3#switch\",\"51\":\"3#tag\",\"52\":\"3@0\",\"53\":\"4\",\"54\":\"4#_1-相关代码\",\"55\":\"4#_2-用途\",\"56\":\"4#_2-1-计算字符串\",\"57\":\"4#_2-2-计算文件\",\"58\":\"4#_3-总结\",\"59\":\"4@0\",\"60\":\"5\",\"61\":\"5#示例\",\"62\":\"5#标题\",\"63\":\"5#文本\",\"64\":\"5#列表\",\"65\":\"5#引用\",\"66\":\"5#代码块\",\"67\":\"5#链接\",\"68\":\"5#图像\",\"69\":\"5#注脚\",\"70\":\"5#上标下标\",\"71\":\"5#表格\",\"72\":\"5#分割线\",\"73\":\"5#数学公式\",\"74\":\"5#警告\",\"75\":\"5#提示\",\"76\":\"5#标签\",\"77\":\"5#自定义对齐\",\"78\":\"5#思维导图\",\"79\":\"5#流程图\",\"80\":\"5@0\",\"81\":\"6\",\"82\":\"6#用户与组\",\"83\":\"6#编辑器\",\"84\":\"6#挂载硬盘\",\"85\":\"6#设置快捷方式\",\"86\":\"6#git\",\"87\":\"6#安装\",\"88\":\"6#配置\",\"89\":\"6#gpg\",\"90\":\"6#配置-1\",\"91\":\"6#python\",\"92\":\"6#virtual-env\",\"93\":\"6#get-pip\",\"94\":\"6@0\",\"95\":\"7\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[11,57],\"1\":[4,101],\"2\":[4],\"3\":[3,116],\"4\":[3,40],\"5\":[4,131],\"6\":[4,49],\"7\":[3,135],\"8\":[3,102],\"9\":[4,217],\"10\":[3,31],\"11\":[null,null,4],\"12\":[11,78],\"13\":[4],\"14\":[3,61],\"15\":[4,40],\"16\":[5,49],\"17\":[6,57],\"18\":[5,40],\"19\":[5,51],\"20\":[4,49],\"21\":[4,108],\"22\":[3,101],\"23\":[4,109],\"24\":[3,89],\"25\":[3,137],\"26\":[null,null,5],\"27\":[4,4],\"28\":[1,143],\"29\":[1,180],\"30\":[1,139],\"31\":[1,136],\"32\":[3,99],\"33\":[1,163],\"34\":[1,190],\"35\":[1,165],\"36\":[1,182],\"37\":[3,175],\"38\":[1,110],\"39\":[1,74],\"40\":[1,149],\"41\":[1,218],\"42\":[1,157],\"43\":[1,198],\"44\":[1,100],\"45\":[1,77],\"46\":[1,90],\"47\":[1,69],\"48\":[1,116],\"49\":[1,84],\"50\":[1,97],\"51\":[1,142],\"52\":[null,null,1],\"53\":[11,81],\"54\":[4,83],\"55\":[3],\"56\":[4,59],\"57\":[4,102],\"58\":[3,30],\"59\":[null,null,4],\"60\":[4],\"61\":[1],\"62\":[1],\"63\":[1],\"64\":[1],\"65\":[1],\"66\":[2],\"67\":[1],\"68\":[1],\"69\":[1],\"70\":[2],\"71\":[1],\"72\":[1],\"73\":[1],\"74\":[1],\"75\":[1],\"76\":[1],\"77\":[2],\"78\":[2],\"79\":[1,9],\"80\":[null,null,1],\"81\":[4,10],\"82\":[3,32],\"83\":[1,7],\"84\":[2,13],\"85\":[2,13],\"86\":[1],\"87\":[1,5],\"88\":[1,14],\"89\":[1],\"90\":[1,73],\"91\":[1,20],\"92\":[3,16],\"93\":[3,20],\"94\":[null,null,1],\"95\":[0,4]},\"averageFieldLength\":[2.5183715444866883,91.98297606971191,0.5832634849252408],\"storedFields\":{\"0\":{\"h\":\"编码、摘要和加密（一）—— 字节编码\",\"t\":[\"之所以取这个题目，是因为在面试的过程中，许多求职者对问题“请列举常用的加密算法”给出了比较普遍的回答：“用过 MD5 和 Base64 ”，更有甚者说，“ Base64 是对称加密， MD5 是非对称加密”。那么，通过接下来的三篇文章科普下，在编程过程中常见的三个术语：字节编码 、信息摘要、 数据加密。\"]},\"1\":{\"h\":\"1. 编码介绍\",\"t\":[\"在计算机领域，数据存储单位叫字节——byte，最小的存储单元的容量是1位-1bit。一个bit有两个状态 0 和 1。1byte = 8bit。通常，一个英文字母占1字节，汉字采用GBK编码时，占用2字节。UTF-8是可变长度编码，一般用 0-4 字节表示。\",\"以上介绍，仅局限于计算机可以显示在屏幕上的字符。但是 1byte 通常可表示 256 个不同的数据。二进制表示：00000000-11111111，即 2^8 。根据 ASCII 中显示，可见字符不足 100 个。若想完整的显示 1byte 表示的全部内容，需要对其进行编码。通常使用16进制的方式，0x00-0xFF。0x31 表示字符 '1' ，0x01 表示字母 1，0x41 表示 'A' ,0x61 表示 'a' 。不再一一列举，有兴趣的小伙伴可以查阅 ASCII 码表。\"]},\"2\":{\"h\":\"2. 十六进制编码\"},\"3\":{\"h\":\"2.1 概念\",\"t\":[\"16进制编码，是基于2进制转换的过程。下表列举些常见的数值编码及其意义。\",\"十进制\",\"2进制\",\"16进制\",\"意义\",\"0\",\"00000000\",\"0x00\",\"null\",\"1\",\"00000001\",\"0x01\",\"1\",\"49\",\"00110001\",\"0x31\",\"'1'\",\"65\",\"01000001\",\"0x41\",\"'A'\",\"97\",\"01100001\",\"0x61\",\"'a'\",\"此处，需要引入一个概念——基数。2 进制基数：0、1。10进制基数：0-9。16进制基数0-9，A-F。通过观察表示一串内容的基数，可以快速判断它使用的编码方式哦！\",\"下表表示16进制基数与10进制、2进制的关系。均用 1byte 表示。\",\"16进制\",\"10进制\",\"2进制\",\"0x00\",\"0\",\"00000000\",\"0x01\",\"1\",\"00000001\",\"0x02\",\"2\",\"00000010\",\"0x03\",\"3\",\"00000011\",\"0x04\",\"4\",\"00000100\",\"0x05\",\"5\",\"00000101\",\"0x06\",\"6\",\"00000110\",\"0x07\",\"7\",\"00000111\",\"0x08\",\"8\",\"00001000\",\"0x09\",\"9\",\"00001001\",\"0x0A\",\"10\",\"00001010\",\"0x0B\",\"11\",\"00001011\",\"0x0C\",\"12\",\"00001100\",\"0x0D\",\"13\",\"00001101\",\"0x0E\",\"14\",\"00001110\",\"0x0F\",\"15\",\"00001111\",\"不难发现，16进制用 4bit 表示一个基数（16 = 2^4）。\"]},\"4\":{\"h\":\"2.2 换算\",\"t\":[\"将数字 100 转成 16进制表示：\",\"计算方式比较简单，对 100 用 16 进行取整取余。发现 100 = 6 * 16 + 4。即，100 = 0x64。再转成2进制，分别对 6 和 4 转成 4bit 0和1 表示。0110 0100。\",\"所以 100 = 0x64 = 01100100\"]},\"5\":{\"h\":\"2.3 代码实现\",\"t\":[\"根据上一节的换算规则：\",\"将字节数组转16进制字符串，需要对每个字节进行独立运算。分别取高四位和第四位，然后转成两个10进制数作为基数索引，最后组合成16进制表示。\",\"将16进制字符串转成字节数组，需要每两个16进制基数一组。分别找出其表示的10进制数，然后做高四位和第四位相加。\",\"/** * 16 进制基数 */ static char[] hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}; /** * 编码：字节数组转 16 进制字符串 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer hexSrtBuff = new StringBuffer(); for (byte b : data) { int height = b >> 4 & 0x0f; // 取高四位 int low = b & 0x0f;// 取低四位 hexSrtBuff.append(hex[height]); hexSrtBuff.append(hex[low]); } return hexSrtBuff.toString(); } /** * 解码：16 进制字符串转字节数组 * * @param hexStr * @return */ public static final byte[] decode(String hexStr) { if (hexStr == null) return null; if (hexStr.length() % 2 != 0) { // 不合法的十六进制字符串参数 throw new IllegalArgumentException(\\\"The hex string was illegal\\\"); } byte[] data = new byte[hexStr.length() / 2]; for (int i = 0; i < hexStr.length(); i += 2) { char h = hexStr.charAt(i); char l = hexStr.charAt(i + 1); int height = (h >= hex[10] && h <= hex[15]) ? (h - hex[10] + 10) : (h - hex[0]); int low = (l >= hex[10] && l <= hex[15]) ? (l - hex[10] + 10) : (l - hex[0]); data[i / 2] = (byte) ((height << 4) + (low & 0x0f)); } return data; }\"]},\"6\":{\"h\":\"3. Base64 编码\",\"t\":[\"上一节介绍了16进制的编码规则和代码实现。不难发现，做一次16进制编码时候，所需的存储空间翻一倍。这虽然方便计算机显示，可以用于网络通信，但耗费的存储空间和传输效率都将减半。因此，base64编码诞生。（楼主瞎编，base64编码是否因此诞生，没做考究）。\"]},\"7\":{\"h\":\"3.1 概念\",\"t\":[\"base64 一共有 64 个基数。每个基数占 6bit（64 = 2^6）。\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"0\",\"A\",\"16\",\"Q\",\"32\",\"g\",\"48\",\"w\",\"1\",\"B\",\"17\",\"R\",\"33\",\"h\",\"49\",\"x\",\"2\",\"C\",\"18\",\"S\",\"34\",\"i\",\"50\",\"y\",\"3\",\"D\",\"19\",\"T\",\"35\",\"j\",\"51\",\"z\",\"4\",\"E\",\"20\",\"U\",\"36\",\"k\",\"52\",\"0\",\"5\",\"F\",\"21\",\"V\",\"37\",\"l\",\"53\",\"1\",\"6\",\"G\",\"22\",\"W\",\"38\",\"m\",\"54\",\"2\",\"7\",\"H\",\"23\",\"X\",\"39\",\"n\",\"55\",\"3\",\"8\",\"I\",\"24\",\"Y\",\"40\",\"o\",\"56\",\"4\",\"9\",\"J\",\"25\",\"Z\",\"41\",\"p\",\"57\",\"5\",\"10\",\"K\",\"26\",\"a\",\"42\",\"q\",\"58\",\"6\",\"11\",\"L\",\"27\",\"b\",\"43\",\"r\",\"59\",\"7\",\"12\",\"M\",\"28\",\"c\",\"44\",\"s\",\"60\",\"8\",\"13\",\"N\",\"29\",\"d\",\"45\",\"t\",\"61\",\"9\",\"14\",\"O\",\"30\",\"e\",\"46\",\"u\",\"62\",\"+\",\"15\",\"P\",\"31\",\"f\",\"47\",\"v\",\"63\",\"/\"]},\"8\":{\"h\":\"3.2 换算\",\"t\":[\"根据上表的索引关系，试换算几个案例。\",\"字符 1\",\"10进制表示 49 。 16进制表示 0x31。 2进制表示 00110001。\",\"一共8位 ，不能被6位整除，因此不足位补 0。 补充后12位 001100 010000。 对应 base64 索引 12 16。 base64 MQ==\",\"对补位的00，需要用 = 标记。\",\"字符串 1A\",\"10进制表示 49 65。 16进制表示 0x31 0x41。 2进制表示 00110001 01000001。\",\"一共16位，不能被6位整除，因此不足位补 0。 补充后18位 001100 010100 000100。 对应 base64 索引 12 20 4。 base64 MUE=\",\"字符串 1Aa\",\"10进制表示 49 65 97。 16进制表示 0x31 0x41 0x61。 2进制表示 00110001 01000001 01100001。\",\"一共24位，可以被6位整除，因此不需补位。 划分后24位 001100 010100 000101 100001。 对应 base64 索引 12 20 5 33。 base64 MUFh\",\"根据上面的换算得出，base64 编码后的字符串长度一定是4的整数倍。也许1 2 字节的数据使用 base64 编码后并不能体现出它的优势。但是对100字节的数据编码：\",\"16进制编码\",\"编码后长度：100 * 2 = 200。\",\"base64 编码\",\"编码后长度 ⌈100 / 3⌉ * 4 = 34 *4 = 136。\"]},\"9\":{\"h\":\"3.3 代码实现\",\"t\":[\"考虑到补位场景，因此实现较为复杂。可供编程语言入门时，练手使用。\",\"/** * base 64 基数：26个大写字母、26个小写字母、10个阿拉伯数字、'+、'/' */ static char[] base64 = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' , '+', '/' }; /** * 编码：字节数组转 base64 * <p> * 字符 '1' 二进制：00110001 转base64后 001100 010000 补充 两个等号 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer base64StrBuff = new StringBuffer(); int leftBit = 0; //保存剩余字节 int index = 0; int num; for (index = 0; index < data.length; index++) { switch (index % 3) { case 0: num = data[index] >> 2 & 0x3f; // 取前六位 leftBit = data[index] & 0x03; // 保留后两位 base64StrBuff.append(base64[num]); break; case 1: num = (leftBit << 4 & 0x30) + (data[index] >> 4 & 0x0f); // 取前4位 与之前的后两位相加 leftBit = data[index] & 0x0f; // 保留后四位 base64StrBuff.append(base64[num]); break; case 2: num = (leftBit << 2 & 0x3c) + (data[index] >> 6 & 0x03); // 取前两位 与之前的后四位相加 leftBit = data[index] & 0x3f;// 保留后六位 base64StrBuff.append(base64[num]); base64StrBuff.append(base64[leftBit]); leftBit = 0; break; } } /** * 对剩余位做补位处理，并用等号标记 */ switch (index % 3) { case 0: break; case 1: base64StrBuff.append(base64[leftBit << 4 & 0x30]); base64StrBuff.append('='); base64StrBuff.append('='); break; case 2: base64StrBuff.append(base64[leftBit << 2 & 0x3c]); base64StrBuff.append('='); break; } return base64StrBuff.toString(); } /** * 解码： base64 转字节数组 * * @param base64Str * @return */ public static final byte[] decode(String base64Str) { if (base64Str == null) return null; if (base64Str.length() % 4 != 0) throw new IllegalArgumentException(\\\"thr base64 string was illegal\\\"); // 检查末尾等号的个数， int equalSignCount = 0; for (int i = base64Str.length() - 1; i > 0; i--) { if (base64Str.charAt(i) != '=') { break; } equalSignCount++; } // 转成字节数组的长度 int bytesLen = base64Str.length() / 4 * 3 - equalSignCount; byte[] data = new byte[bytesLen]; int index = 0; for (int i = 0; i < base64Str.length(); i += 4) { // 四个字节一组处理，转成三个字节 int one = getCharIndex(base64Str.charAt(i)); int two = getCharIndex(base64Str.charAt(i + 1)); int three = getCharIndex(base64Str.charAt(i + 2)); int four = getCharIndex(base64Str.charAt(i + 3)); if (one < 0) break; int first = one << 2 & 0xfc; if (two < 0) break; first += (two >> 4 & 0x03); data[index++] = (byte) first; if (three < 0) break; int second = (two << 4 & 0xf0); second += (three >> 2 & 0x0f); data[index++] = (byte) second; if (four < 0) break; int third = (three << 6 & 0xc0); third += four; data[index++] = (byte) third; } return data; } /** * 寻找字符在字符串中的索引 * * @param c * @return */ private static int getCharIndex(char c) { if (c >= 'A' && c <= 'Z') return c - 'A'; else if (c >= 'a' && c <= 'z') return c - 'a' + 26; else if (c >= '0' && c <= '9') return c - '0' + 52; else if (c == '+') return 62; else if (c == '/') return 63; else return -1; }\"]},\"10\":{\"h\":\"4. 总结\",\"t\":[\"虽然 16 进制和 Base64 编码是可逆的，具备对应的解码操作，但他们却不是加密算法。加密算法一般需要使用密钥，只有正确的密钥，才能解密出正确的明文。\"]},\"11\":{\"c\":[\"16进制\",\"base64\"]},\"12\":{\"h\":\"编码、摘要和加密（三）—— 数据加密\",\"t\":[\"关于加密，此处没有更加通俗易懂的解释。与同是对于字节类型数据处理的编码和摘要对比：\",\"编码是可逆的，任何人只要知道编码规则，就能够进行解码。\",\"摘要是不可逆的，即使知道只要算法的实现原理，也很难还原出原数据。\",\"加密是可逆的，但只知道加密算法并不能解密，还需要知道加密密钥。\",\"接下来，将针对几个常见的加密算法：DES、3DES、AES、RSA 的 Java 实现及其相关进行介绍，由于之前实现过 DES 和 AES 算法，因此具体算法说明，后续有空会写到。\"]},\"13\":{\"h\":\"1. 相关概念\"},\"14\":{\"h\":\"1.1 密钥\",\"t\":[\"在代码实现的过程中，密钥即是 key 。使用对称加密算法时，加密和解密是同一个密钥。使用非对称加密算法时，加密和解密密钥不相同，区分为公钥（public key）和私钥（private key）。\",\"见过把 base64 当做对称加密， md5 当做非对称加密，因此下面划重点：\",\"判别加密算法最直接的方式，是否需要密钥。\",\"对称加密和非对称加密区别在于，加解密是否是同一个key。\",\"对称加密算法效率优于非对称加密算法，建议用对称加密算法加密长数据，非对称加密算法加密端数据。\"]},\"15\":{\"h\":\"1.2 加密模式\",\"t\":[\"加密模式主要体现在对称加密算法中。之前提到过，对称加密算法效率优，适合加密长数据。实际加密过程中，是将长数据划分成固定长度的若干块短数据进行加密操作。为防止暴力破解得出明文，因此衍生了四种加密模式。\"]},\"16\":{\"h\":\"1.2.1 电子密码本模式\",\"t\":[\"英译 Electronic Code Book ，简称 ECB 模式，最简单的加密模式。\",\"将长数据分割成固定长度的若干块。\",\"分别对每块数据用同一个密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"上述步骤存在一个严重的问题，如果有重复的明文块，那么加密出来的密文也重复。\"]},\"17\":{\"h\":\"1.2.2 加密块链模式\",\"t\":[\"英译 Cipher Block Chaining ，简称 CBC,基于 ECB 模式的改进版。 此处引入一个概念：初始化向量 Initialization Vector 简称 IV 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块的密文与后一块明文进行异或，再用密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"第一块明文没有密文与其异或，因此需要 IV 对其异或再用密钥加密。\"]},\"18\":{\"h\":\"1.2.3 加密反馈模式\",\"t\":[\"英译 Cipher Feedback Mode ，简称 CFB 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块密文使用密钥进行加密，再与后一块明文进行异或。\",\"将每块异或后的密文合并拼接成最终的完整密文。\",\"第一块明文需要与用密钥加密后的 IV 进行异或。\"]},\"19\":{\"h\":\"1.2.4 输出反馈模式\",\"t\":[\"英译 Output Feedback Mode , 简称 OFB ，与 CFB 模式有些细小的区别。\",\"将长数据分割成固定长度的若干块。\",\"将前一块中间密文使用密钥进行加密得中间密文。中间密文与明文进行异或得密文。\",\"将每个中间密文与明文块异或后的密文进行合并拼接成最终的完整密文。\",\"第一块明文需要的中间密文是用密钥加密后的 IV 。\",\"CFB 与 OFB 的区别在于中间密文和密文块的用法 。\",\"CFB 使用前一块的密文进行加密。\",\"OFB 使用前一块的中间密文进行加密。\"]},\"20\":{\"h\":\"1.3 填充模式\",\"t\":[\"分块加密的过程中，遇到不够整分的块。如，将 16 字节作为一个明文块。当加密 17 字节时，不够分成两块。此时需要对第二块明文进行填充。填充后的两个明文块各 16 字节共 32 字节后再进行加密操作。\",\"后 15 字节的填充内容，需要取决于具体的填充模式。见后续 Java 代码实现中介绍。\"]},\"21\":{\"h\":\"2. 代码实现\",\"t\":[\"Java 对加密部分做了比较完整的封装—— Cipher 类。\",\"以下列举几个主要方法：\",\"getInstance 获取 Cipher 对象，主要接收转换类型参数对象。转换类型参数分为 算法 和 算法/模式/填充 。\",\"init 初始化加密参数。包括指定加解密模式、密钥和初始化向量-IV。\",\"doFinal 结束加密和解密操作，有多个重载方法，主要接收需要加密或解密的数据。\",\"关于填充，之前简要介绍过。在 Java 代码中常见的填充模式是 PKCS5Padding 。还有一种模式 NoPadding 由于对明文长度有要求，不建议使用。其他填充模式未深入了解，暂不误导。\",\"PKCS5Padding 指，需要填充多少字节，就填充多少个字节的数字。如 DES 算法要求每个明文块 8 字节，那么，加密 1 字节数据，需要填充 7 个字节，此时填充 7 个 7 。加密 7 字节数据，需要填充 1 个 1 。加密 8 字节数据时，为方便校验解密后的明文正确性，需要扩展成 16 字节数据，此时第二个明文块填充 8 个 8 。\"]},\"22\":{\"h\":\"2.1 DES\",\"t\":[\"DES 全称 Data Encryption Standard ，数据加密标准算法。固定密钥 8 字节，64 位。每个明文块长度 8 字节。\",\"getInstance 接收参数：DES/ECB/PKCS5Padding ，其中 ECB 表示加密模式，可以用上述的其他三个模式替换以及更多 JDK 支持的模式。PKCS5Padding 表示一种填充模式。\",\"在使用 CBC 、 CFB 、 OFB 时，需要在 init 方法中指定 IV 。\",\"private static final String KEY_ALGORITHM = \\\"DES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 加密模式 cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 解密模式 cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"23\":{\"h\":\"2.2 3DES\",\"t\":[\"3DES 即使用 3 次 DES 算法。由于每个 DES 算法处理需要 8 字节密钥，因此 3DES 算法需要 24 字节密钥。\",\"需要注意，3DES 算法名称使用 DESede 或 TripleDES。e 表示做 DES 加密操作，d 表示做 DES 解密操作。前者表示用 DES 连续做加密 、解密、加密操作，后者表示连续做三次加密操作。每次使用的密钥，分别是 24 字节密钥中不同的三段（前、中、后各8字节）。\",\"若使用 DESede 算法时 24 字节密钥中的前两段一样，该算法等同于 DES 算法使用第三段的 8 字节密钥。\",\"填充相关同 DES 算法一样。\",\"private static final String KEY_ALGORITHM = \\\"DESede\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DESede/CBC/PKCS5Padding\\\"; // 初始化向量 private static final String IV = \\\"12345678\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM),new IvParameterSpec(IV.getBytes())); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"24\":{\"h\":\"2.3 AES\",\"t\":[\"AES 全称 Advanced Encryption Standard ，高级加密标准算法，用于替代 DES 。\",\"DES 只支持 8 字节密钥，AES 可以支持 16 字节、24 字节和 32 字节密钥。明文块长度也可以划分成 16 字节 、24 字节和 32 字节进行填充。\",\" private static final String KEY_ALGORITHM = \\\"AES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"AES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\",\"以上三种对称加密算法的 Java 代码实现基本一致。\"]},\"25\":{\"h\":\"2.4 RSA\",\"t\":[\"RSA是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的非对称加密算法，因此使用他们 3 人姓氏首字母命名。\",\"示例代码中的公钥和私钥是随机生成的密钥对，密钥对模长建议是 1024 或 2048，对应密文长度是 128 字节和 256 字节。模长可以大于 2048 ， 越长越难破解，但是效率越低。 实际应用中，建议将密钥对模长设置为 2048 并以文件的形式存储在终端。\",\"private static PrivateKey privateKey; private static PublicKey publicKey; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"RSA\\\"; static { KeyPairGenerator keyGener = null; try { keyGener = KeyPairGenerator.getInstance(DEFAULT_CIPHER_ALGORITHM); keyGener.initialize(1024); KeyPair keyPair = keyGener.generateKeyPair(); privateKey = keyPair.getPrivate(); publicKey = keyPair.getPublic(); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } } public static final byte[] encrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, publicKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, privateKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; }\"]},\"26\":{\"c\":[\"aes\",\"des\",\"3des\",\"rsa\"]},\"27\":{\"h\":\"Git 命令解释\",\"t\":[\"记录 Git 常用命令\"]},\"28\":{\"h\":\"add\",\"t\":[\"git add -h\",\"usage: git add [<options>] [--] <pathspec>... -n, --dry-run dry run -v, --verbose be verbose -i, --interactive interactive picking -p, --patch select hunks interactively -e, --edit edit current diff and apply -f, --force allow adding otherwise ignored files -u, --update update tracked files --renormalize renormalize EOL of tracked files (implies -u) -N, --intent-to-add record only the fact that the path will be added later -A, --all add changes from all tracked and untracked files --ignore-removal ignore paths removed in the working tree (same as --no-all) --refresh don't add, only refresh the index --ignore-errors just skip files which cannot be added because of errors --ignore-missing check if - even missing - files are ignored in dry run --sparse allow updating entries outside of the sparse-checkout cone --chmod (+|-)x override the executable bit of the listed files --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"add 将工作区的更改保存到暂存区，准备提交。\",\"git add . # 添加当前目录下的全部文件 git add 'file path' # 添加指定文件，可用相对路径。 git add -f 'file paht' # 强制添加指定文件，即使在 .gitignore 中\"]},\"29\":{\"h\":\"apply\",\"t\":[\"git apply -h\",\"usage: git apply [<options>] [<patch>...] --exclude <path> don't apply changes matching the given path --include <path> apply changes matching the given path -p <num> remove <num> leading slashes from traditional diff paths --no-add ignore additions made by the patch --stat instead of applying the patch, output diffstat for the input --numstat show number of added and deleted lines in decimal notation --summary instead of applying the patch, output a summary for the input --check instead of applying the patch, see if the patch is applicable --index make sure the patch is applicable to the current index -N, --intent-to-add mark new files with `git add --intent-to-add` --cached apply a patch without touching the working tree --unsafe-paths accept a patch that touches outside the working area --apply also apply the patch (use with --stat/--summary/--check) -3, --3way attempt three-way merge, fall back on normal patch if that fails --build-fake-ancestor <file> build a temporary index based on embedded index information -z paths are separated with NUL character -C <n> ensure at least <n> lines of context match --whitespace <action> detect new or modified lines that have whitespace errors --ignore-space-change ignore changes in whitespace when finding context --ignore-whitespace ignore changes in whitespace when finding context -R, --reverse apply the patch in reverse --unidiff-zero don't expect at least one line of context --reject leave the rejected hunks in corresponding *.rej files --allow-overlap allow overlapping hunks -v, --verbose be more verbose -q, --quiet be more quiet --inaccurate-eof tolerate incorrectly detected missing new-line at the end of file --recount do not trust the line counts in the hunk headers --directory <root> prepend <root> to all filenames --allow-empty don't return error for empty patches\"]},\"30\":{\"h\":\"branch\",\"t\":[\"git branch -h\",\"usage: git branch [<options>] [-r | -a] [--merged] [--no-merged] or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>] or: git branch [<options>] [-l] [<pattern>...] or: git branch [<options>] [-r] (-d | -D) <branch-name>... or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch> or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch> or: git branch [<options>] [-r | -a] [--points-at] or: git branch [<options>] [-r | -a] [--format] Generic options -v, --verbose show hash and subject, give twice for upstream branch -q, --quiet suppress informational messages -t, --track[=(direct|inherit)] set branch tracking configuration -u, --set-upstream-to <upstream> change the upstream info --unset-upstream unset the upstream info --color[=<when>] use colored output -r, --remotes act on remote-tracking branches --contains <commit> print only branches that contain the commit --no-contains <commit> print only branches that don't contain the commit --abbrev[=<n>] use <n> digits to display object names Specific git-branch actions: -a, --all list both remote-tracking and local branches -d, --delete delete fully merged branch -D delete branch (even if not merged) -m, --move move/rename a branch and its reflog -M move/rename a branch, even if target exists -c, --copy copy a branch and its reflog -C copy a branch, even if target exists -l, --list list branch names --show-current show current branch name --create-reflog create the branch's reflog --edit-description edit the description for the branch -f, --force force creation, move/rename, deletion --merged <commit> print only branches that are merged --no-merged <commit> print only branches that are not merged --column[=<style>] list branches in columns --sort <key> field name to sort on --points-at <object> print only branches of the object -i, --ignore-case sorting and filtering are case insensitive --recurse-submodules recurse through submodules --format <format> format to use for the output\",\"git branch -M dev-branch git branch -D dev-branch\"]},\"31\":{\"h\":\"checkout\",\"t\":[\"git checkout -h\",\"usage: git checkout [<options>] <branch> or: git checkout [<options>] [<branch>] -- <file>... -b <branch> create and checkout a new branch -B <branch> create/reset and checkout a branch -l create reflog for new branch --guess second guess 'git checkout <no-such-branch>' (default) --overlay use overlay mode (default) -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref -2, --ours checkout our version for unmerged files -3, --theirs checkout their version for unmerged files -p, --patch select hunks interactively --ignore-skip-worktree-bits do not limit pathspecs to sparse entries only --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"git checkout -b dev-branch git checkout tags/v2.0.0-rc.52 -b v2.0.0-rc.52\"]},\"32\":{\"h\":\"cherry-pick\",\"t\":[\"git cherry-pick -h\",\"usage: git cherry-pick [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff] [-S[<keyid>]] <commit>... or: git cherry-pick (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit -x append commit name --ff allow fast-forward --allow-empty preserve initially empty commits --allow-empty-message allow commits with empty messages --keep-redundant-commits keep redundant, empty commits\"]},\"33\":{\"h\":\"clone\",\"t\":[\"git clone -h\",\"usage: git clone [<options>] [--] <repo> [<dir>] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --reject-shallow don't clone shallow repository -n, --no-checkout don't create a checkout --bare create a bare repository --mirror create a mirror repository (implies bare) -l, --local to clone from a local repository --no-hardlinks don't use local hardlinks, always copy -s, --shared setup as shared repository --recurse-submodules[=<pathspec>] initialize submodules in the clone --recursive[=<pathspec>] alias of --recurse-submodules -j, --jobs <n> number of submodules cloned in parallel --template <template-directory> directory from which templates will be used --reference <repo> reference repository --reference-if-able <repo> reference repository --dissociate use --reference only while cloning -o, --origin <name> use <name> instead of 'origin' to track upstream -b, --branch <branch> checkout <branch> instead of the remote's HEAD -u, --upload-pack <path> path to git-upload-pack on the remote --depth <depth> create a shallow clone of that depth --shallow-since <time> create a shallow clone since a specific time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --single-branch clone only one branch, HEAD or --branch --no-tags don't clone any tags, and make later fetches not to follow them --shallow-submodules any cloned submodules will be shallow --separate-git-dir <gitdir> separate git dir from working tree -c, --config <key=value> set config inside the new repository --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --filter <args> object filtering --also-filter-submodules apply partial clone filters to submodules --remote-submodules any cloned submodules will use their remote-tracking branch --sparse initialize sparse-checkout file to include only files at root --bundle-uri <uri> a URI for downloading bundles before fetching from origin remote\"]},\"34\":{\"h\":\"commit\",\"t\":[\"git commit -h\",\"usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend] [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)] [-F <file> | -m <msg>] [--reset-author] [--allow-empty] [--allow-empty-message] [--no-verify] [-e] [--author=<author>] [--date=<date>] [--cleanup=<mode>] [--[no-]status] [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]] [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]] [--] [<pathspec>...] -q, --quiet suppress summary after successful commit -v, --verbose show diff in commit message template Commit message options -F, --file <file> read message from file --author <author> override author for commit --date <date> override date for commit -m, --message <message> commit message -c, --reedit-message <commit> reuse and edit message from specified commit -C, --reuse-message <commit> reuse message from specified commit --fixup [(amend|reword):]commit use autosquash formatted message to fixup or amend/reword specified commit --squash <commit> use autosquash formatted message to squash specified commit --reset-author the commit is authored by me now (used with -C/-c/--amend) --trailer <trailer> add custom trailer(s) -s, --signoff add a Signed-off-by trailer -t, --template <file> use specified template file -e, --edit force edit of commit --cleanup <mode> how to strip spaces and #comments from message --status include status in commit message template -S, --gpg-sign[=<key-id>] GPG sign commit Commit contents options -a, --all commit all changed files -i, --include add specified files to index for commit --interactive interactively add files -p, --patch interactively add changes -o, --only commit only specified files -n, --no-verify bypass pre-commit and commit-msg hooks --dry-run show what would be committed --short show status concisely --branch show branch information --ahead-behind compute full ahead/behind values --porcelain machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL --amend amend previous commit --no-post-rewrite bypass post-rewrite hook -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"commit 将暂存区内容，提交到本地仓库中，并生成一个提交记录。\",\"git commit -m 'commit message' # 提交代码到本地仓库 git commit --amend # 向上一次提交记录中追加改动。可同时修改 commit message。 git commit -S -m 'commit message' # 使用 GPG 签名 git commit -a -m 'commit message' # 合并 执行 git add . 和 git commit -m\"]},\"35\":{\"h\":\"config\",\"t\":[\"git config -h\",\"usage: git config [<options>] Config file location --global use global config file --system use system config file --local use repository config file --worktree use per-worktree config file -f, --file <file> use given config file --blob <blob-id> read config from given blob object Action --get get value: name [value-pattern] --get-all get all values: key [value-pattern] --get-regexp get values for regexp: name-regex [value-pattern] --get-urlmatch get value specific for the URL: section[.var] URL --replace-all replace all matching variables: name value [value-pattern] --add add a new variable: name value --unset remove a variable: name [value-pattern] --unset-all remove all matches: name [value-pattern] --rename-section rename section: old-name new-name --remove-section remove a section: name -l, --list list all --fixed-value use string equality when comparing values to 'value-pattern' -e, --edit open an editor --get-color find the color configured: slot [default] --get-colorbool find the color setting: slot [stdout-is-tty] Type -t, --type <type> value is given this type --bool value is \\\"true\\\" or \\\"false\\\" --int value is decimal number --bool-or-int value is --bool or --int --bool-or-str value is --bool or string --path value is a path (file or directory name) --expiry-date value is an expiry date Other -z, --null terminate values with NUL byte --name-only show variable names only --includes respect include directives on lookup --show-origin show origin of config (file, standard input, blob, command line) --show-scope show scope of config (worktree, local, global, system, command) --default <value> with --get, use default value when missing entry\",\"配置 git 工作环境。分系统，用户，仓库三个级别的配置。\",\"下面给出三个配置文件的位置。\",\"system: 存储在 /etc/gitconfig.\",\"global: 存储在 ~/.gitconfig.\",\"local: 存储在 <repo>/.git/config.\",\"git config --global user.name \\\"user name\\\" git config --global user.email \\\"example@example.com\\\" git config --global autocrlf=input # 配置 crlf 到 lf 的转换，windows 建议设置 true。\"]},\"36\":{\"h\":\"fetch\",\"t\":[\"git fetch -h\",\"usage: git fetch [<options>] [<repository> [<refspec>...]] or: git fetch [<options>] <group> or: git fetch --multiple [<options>] [(<repository> | <group>)...] or: git fetch --all [<options>] -v, --verbose be more verbose -q, --quiet be more quiet --all fetch from all remotes --set-upstream set upstream for git pull/fetch -a, --append append to .git/FETCH_HEAD instead of overwriting --atomic use atomic transaction to update references --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local reference -m, --multiple fetch from multiple remotes -t, --tags fetch all tags and associated objects -n do not fetch all tags (--no-tags) -j, --jobs <n> number of submodules fetched in parallel --prefetch modify the refspec to place all refs within refs/prefetch/ -p, --prune prune remote-tracking branches no longer on remote -P, --prune-tags prune local tags no longer on remote and clobber changed tags --recurse-submodules[=<on-demand>] control recursive fetching of submodules --dry-run dry run --write-fetch-head write fetched references to the FETCH_HEAD file -k, --keep keep downloaded pack -u, --update-head-ok allow updating of HEAD ref --progress force progress reporting --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --refetch re-fetch without negotiating common commits --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --negotiate-only do not fetch a packfile; instead, print ancestors of negotiation tips --filter <args> object filtering --auto-maintenance run 'maintenance --auto' after fetching --auto-gc run 'maintenance --auto' after fetching --show-forced-updates check for forced-updates on all updated branches --write-commit-graph write the commit-graph after fetching --stdin accept refspecs from stdin\"]},\"37\":{\"h\":\"format-patch\",\"t\":[\"git format-patch -h\",\"usage: git format-patch [<options>] [<since> | <revision-range>] -n, --numbered use [PATCH n/m] even with a single patch -N, --no-numbered use [PATCH] even with multiple patches -s, --signoff add a Signed-off-by trailer --stdout print patches to standard out --cover-letter generate a cover letter --numbered-files use simple number sequence for output file names --suffix <sfx> use <sfx> instead of '.patch' --start-number <n> start numbering patches at <n> instead of 1 -v, --reroll-count <reroll-count> mark the series as Nth re-roll --filename-max-length <n> max length of output filename --rfc use [RFC PATCH] instead of [PATCH] --cover-from-description <cover-from-description-mode> generate parts of a cover letter based on a branch's description --subject-prefix <prefix> use [<prefix>] instead of [PATCH] -o, --output-directory <dir> store resulting files in <dir> -k, --keep-subject don't strip/add [PATCH] --no-binary don't output binary diffs --zero-commit output all-zero hash in From header --ignore-if-in-upstream don't include a patch matching a commit upstream -p, --no-stat show patch format instead of default (patch + stat) Messaging --add-header <header> add email header --to <email> add To: header --cc <email> add Cc: header --from[=<ident>] set From address to <ident> (or committer ident if absent) --in-reply-to <message-id> make first mail a reply to <message-id> --attach[=<boundary>] attach the patch --inline[=<boundary>] inline the patch --thread[=<style>] enable message threading, styles: shallow, deep --signature <signature> add a signature --base <base-commit> add prerequisite tree info to the patch series --signature-file <file> add a signature from a file -q, --quiet don't print the patch filenames --progress show progress while generating patches --interdiff <rev> show changes against <rev> in cover letter or single patch --range-diff <refspec> show changes against <refspec> in cover letter or single patch --creation-factor <n> percentage by which creation is weighted --force-in-body-from show in-body From: even if identical to the e-mail header\"]},\"38\":{\"h\":\"init\",\"t\":[\"git init -h\",\"usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--separate-git-dir <git-dir>] [--object-format=<format>] [-b <branch-name> | --initial-branch=<branch-name>] [--shared[=<permissions>]] [<directory>] --template <template-directory> directory from which templates will be used --bare create a bare repository --shared[=<permissions>] specify that the git repository is to be shared amongst several users -q, --quiet be quiet --separate-git-dir <gitdir> separate git dir from working tree -b, --initial-branch <name> override the name of the initial branch --object-format <hash> specify the hash algorithm to use\",\"创建一个空的 git 仓库。\",\"git init test # 创建目录为 test 的仓库 git init -b main test # 创建默认分支 main 的仓库\",\"创建裸仓库\",\"默认创建的仓库都带工作区。裸仓库主要用在远程服务仓库，如 github，gitee， 用于开发者提交自己的代码。\",\"下面是在 linux 环境创建并使用裸仓库的实例。 用户名 flueky.zuo\",\"git init --base test # 在用户目录下创建 test 裸仓库 # 以下命令在 git 工作区仓库执行。 git remote add local flueky.zuo@localhost:test git push local main # 提交代码到 local 仓库。\"]},\"39\":{\"h\":\"log\",\"t\":[\"查看提交记录。\",\"git log # 默认按照标准格式，由近到远输出提交记录 git log --oneline # 简化输出，只显示提交 id 和信息。 git log --author 'flueky.zuo' # 查看指定提交者的信息，通常记录在 user.name 和 user.email 中。 git log --since/--after '2024-10-01' # 显示指定时间之后的提交。 git log --until/--before '2024-10-02' # 显示指定时间之前的提交。 git log --grep 'message' # 查看包含指定信息的提交。 git log --graph # 显示包含图形的提交记录 git log -p # 补丁的形式，显示每个提交的差异。可结合 -- filepath 使用。 git log --stat # 显示每次修改提交的文件统计信息。 git log -num # 显示最近 num 次的提交。\"]},\"40\":{\"h\":\"merge\",\"t\":[\"git merge -h\",\"usage: git merge [<options>] [<commit>...] or: git merge --abort or: git merge --continue -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --summary (synonym to --stat) --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) -e, --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward (default) --ff-only abort if fast-forward is not possible --rerere-autoupdate update the index with reused conflict resolution if possible --verify-signatures verify that the named commit has a valid GPG signature -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -m, --message <message> merge commit message (for a non-fast-forward merge) -F, --file <path> read message from file --into-name <name> use <name> instead of the real target -v, --verbose be more verbose -q, --quiet be more quiet --abort abort the current in-progress merge --quit --abort but leave index and working tree alone --continue continue the current in-progress merge --allow-unrelated-histories allow merging unrelated histories --progress force progress reporting -S, --gpg-sign[=<key-id>] GPG sign commit --autostash automatically stash/stash pop before and after --overwrite-ignore update ignored files (default) --signoff add a Signed-off-by trailer --no-verify bypass pre-merge-commit and commit-msg hooks\"]},\"41\":{\"h\":\"pull\",\"t\":[\"git pull -h\",\"usage: git pull [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --recurse-submodules[=<on-demand>] control for recursive fetching of submodules Options related to merging -r, --rebase[=(false|true|merges|interactive)] incorporate changes by rebasing rather than merging -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --signoff[=...] add a Signed-off-by trailer --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward --ff-only abort if fast-forward is not possible --verify control use of pre-merge-commit and commit-msg hooks --verify-signatures verify that the named commit has a valid GPG signature --autostash automatically stash/stash pop before and after -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --allow-unrelated-histories allow merging unrelated histories Options related to fetching --all fetch from all remotes -a, --append append to .git/FETCH_HEAD instead of overwriting --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local branch -t, --tags fetch all tags and associated objects -p, --prune prune remote-tracking branches no longer on remote -j, --jobs[=<n>] number of submodules pulled in parallel --dry-run dry run -k, --keep keep downloaded pack --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --show-forced-updates check for forced-updates on all updated branches --set-upstream set upstream for git pull/fetch\"]},\"42\":{\"h\":\"push\",\"t\":[\"git push -h\",\"usage: git push [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --repo <repository> repository --all push all refs --mirror mirror all refs -d, --delete delete refs --tags push tags (can't be used with --all or --mirror) -n, --dry-run dry run --porcelain machine-readable output -f, --force force updates --force-with-lease[=<refname>:<expect>] require old value of ref to be at this value --force-if-includes require remote updates to be integrated locally --recurse-submodules (check|on-demand|no) control recursive pushing of submodules --thin use thin pack --receive-pack <receive-pack> receive pack program --exec <receive-pack> receive pack program -u, --set-upstream set upstream for git pull/status --progress force progress reporting --prune prune locally removed refs --no-verify bypass pre-push hook --follow-tags push missing but relevant tags --signed[=(yes|no|if-asked)] GPG sign the push --atomic request atomic transaction on remote side -o, --push-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only\",\"push 命令将本地仓库的改动推送到远程仓库。如 Github, Gitee, Gitlab 。\",\"git push origin main # 推送 main 分支到 origin 仓库 git push -d origin main # 删除 origin 仓库的 main 分支，(其中默认分支和受保护的分支不能被删除) git push origin 'tag name' # 推送单个标签 git push origin --tags # 推送全部标签到 origin 仓库 git push origin :refs/tags/'tag name' # 删除 origin 仓库的标签，需要先执行 git tag -d 'tag name'\"]},\"43\":{\"h\":\"rebase\",\"t\":[\"git rebase -h\",\"usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase> | --keep-base] [<upstream> [<branch>]] or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>] or: git rebase --continue | --abort | --skip | --edit-todo --onto <revision> rebase onto given branch instead of upstream --keep-base use the merge-base of upstream and branch as the current base --no-verify allow pre-rebase hook to run -q, --quiet be quiet. implies --no-stat -v, --verbose display a diffstat of what changed upstream -n, --no-stat do not show diffstat of what changed upstream --signoff add a Signed-off-by trailer to each commit --committer-date-is-author-date make committer date match author date --reset-author-date ignore author date and use current date -C <n> passed to 'git apply' --ignore-whitespace ignore changes in whitespace --whitespace <action> passed to 'git apply' -f, --force-rebase cherry-pick all commits, even if unchanged --no-ff cherry-pick all commits, even if unchanged --continue continue --skip skip current patch and continue --abort abort and check out the original branch --quit abort but keep HEAD where it is --edit-todo edit the todo list during an interactive rebase --show-current-patch show the patch file being applied or merged --apply use apply strategies to rebase -m, --merge use merging strategies to rebase -i, --interactive let the user edit the list of commits to rebase --rerere-autoupdate update the index with reused conflict resolution if possible --empty <{drop,keep,ask}> how to handle commits that become empty --autosquash move commits that begin with squash!/fixup! under -i --update-refs update branches that point to commits that are being rebased -S, --gpg-sign[=<key-id>] GPG-sign commits --autostash automatically stash/stash pop before and after -x, --exec <exec> add exec lines after each commit of the editable list -r, --rebase-merges[=<mode>] try to rebase merges instead of skipping them --fork-point use 'merge-base --fork-point' to refine upstream -s, --strategy <strategy> use the given merge strategy -X, --strategy-option <option> pass the argument through to the merge strategy --root rebase all reachable commits up to the root(s) --reschedule-failed-exec automatically re-schedule any `exec` that fails --reapply-cherry-picks apply all changes, even those already present upstream\"]},\"44\":{\"h\":\"remote\",\"t\":[\"git remote -h\",\"usage: git remote [-v | --verbose] or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url> or: git remote rename <old> <new> or: git remote remove <name> or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>) or: git remote [-v | --verbose] show [-n] <name> or: git remote prune [-n | --dry-run] <name> or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...] or: git remote set-branches [--add] <name> <branch>... or: git remote get-url [--push] [--all] <name> or: git remote set-url [--push] <name> <newurl> [<oldurl>] or: git remote set-url --add <name> <newurl> or: git remote set-url --delete <name> <url> -v, --verbose be verbose; must be placed before a subcommand\",\"本地仓库关联到远程仓库的信息，使用 remote 管理。配置信息保存在 .git/config。 常用命令如下：\",\"git remote -v # 检查 remote 信息 # 添加 GitHub 地址， 使用 git push github main 推送 git remote add github git@github.com:flueky/docs.git # 重命名 github 到 origin，后续使用 origin 推送代码 git remote rename github origin # 删除这个分支 git remote remove github\"]},\"45\":{\"h\":\"reset\",\"t\":[\"git reset -h\",\"usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>] or: git reset [-q] [<tree-ish>] [--] <pathspec>... or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [<tree-ish>] or: git reset --patch [<tree-ish>] [--] [<pathspec>...] -q, --quiet be quiet, only report errors --no-refresh skip refreshing the index after reset --mixed reset HEAD and index --soft reset only HEAD --hard reset HEAD, index and working tree --merge reset HEAD, index and working tree --keep reset HEAD but keep local changes --recurse-submodules[=<reset>] control recursive updating of submodules -p, --patch select hunks interactively -N, --intent-to-add record only the fact that removed paths will be added later --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"46\":{\"h\":\"revert\",\"t\":[\"git revert -h\",\"usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>... or: git revert (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --reference use the 'reference' format to refer to commits\"]},\"47\":{\"h\":\"rm\",\"t\":[\"git rm -h\",\"usage: git rm [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch] [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...] -n, --dry-run dry run -q, --quiet do not list removed files --cached only remove from the index -f, --force override the up-to-date check -r allow recursive removal --ignore-unmatch exit with a zero status even if nothing matched --sparse allow updating entries outside of the sparse-checkout cone --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"48\":{\"h\":\"stash\",\"t\":[\"git stash -h\",\"usage: git stash list [<log-options>] or: git stash show [-u | --include-untracked | --only-untracked] [<diff-options>] [<stash>] or: git stash drop [-q | --quiet] [<stash>] or: git stash pop [--index] [-q | --quiet] [<stash>] or: git stash apply [--index] [-q | --quiet] [<stash>] or: git stash branch <branchname> [<stash>] or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [(-m | --message) <message>] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...]] or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [<message>] or: git stash clear or: git stash create [<message>] or: git stash store [(-m | --message) <message>] [-q | --quiet] <commit>\",\"stash 命令将未提交的更改保存到 临时堆栈，（暂时保存在本地仓库中，可撤回）。以便能够切换分支或执行其他操作，但不丢失未提交的工作。\",\"未提交的更改包括：工作区的更改，和暂存区的更改。\",\"git stash list # 查看全部暂存的记录 git stash pop # 取出最近暂存的修改记录 git stash drop # 丢弃最近暂存的修改记录\",\"提示\",\"执行 git stash pop 后，如遇到和工作区的改动存在冲突，则会保留栈顶的记录。待解决冲突后，需要执行 git stash drop。\"]},\"49\":{\"h\":\"status\",\"t\":[\"git status -h\",\"usage: git status [<options>] [--] [<pathspec>...] -v, --verbose be verbose -s, --short show status concisely -b, --branch show branch information --show-stash show stash information --ahead-behind compute full ahead/behind values --porcelain[=<version>] machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --ignored[=<mode>] show ignored files, optional modes: traditional, matching, no. (Default: traditional) --ignore-submodules[=<when>] ignore changes to submodules, optional when: all, dirty, untracked. (Default: all) --column[=<style>] list untracked files in columns --no-renames do not detect renames -M, --find-renames[=<n>] detect renames, optionally set similarity index\"]},\"50\":{\"h\":\"switch\",\"t\":[\"git switch -h\",\"usage: git switch [<options>] [<branch>] -c, --create <branch> create and switch to a new branch -C, --force-create <branch> create/reset and switch to a branch --guess second guess 'git switch <no-such-branch>' --discard-changes throw away local modifications -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref\"]},\"51\":{\"h\":\"tag\",\"t\":[\"git tag -h\",\"usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] [-e] <tagname> [<commit> | <object>] or: git tag -d <tagname>... or: git tag [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>] [--points-at <object>] [--column[=<options>] | --no-column] [--create-reflog] [--sort=<key>] [--format=<format>] [--merged <commit>] [--no-merged <commit>] [<pattern>...] or: git tag -v [--format=<format>] <tagname>... -l, --list list tag names -n[<n>] print <n> lines of each tag message -d, --delete delete tags -v, --verify verify tags Tag creation options -a, --annotate annotated tag, needs a message -m, --message <message> tag message -F, --file <file> read message from file -e, --edit force edit of tag message -s, --sign annotated and GPG-signed tag --cleanup <mode> how to strip spaces and #comments from message -u, --local-user <key-id> use another key to sign the tag -f, --force replace the tag if exists --create-reflog create a reflog Tag listing options --column[=<style>] show tag list in columns --contains <commit> print only tags that contain the commit --no-contains <commit> print only tags that don't contain the commit --merged <commit> print only tags that are merged --no-merged <commit> print only tags that are not merged --sort <key> field name to sort on --points-at <object> print only tags of the object --format <format> format to use for the output --color[=<when>] respect format colors -i, --ignore-case sorting and filtering are case insensitive\",\"tag 命令对提交记录添加标签标识。 如每次发行版本之后，对最新的提交记录打上标签。\",\"git tag -a 'tag name' -m 'tag message' # 对最新的提交添加 tag name, 并记为 tag message git tag 'tag name' 'commit id' # 对指定的提交记录添加 tag name，而后需要动态输入 tag message git tag -l # 列出全部 tag name git tag -n # 列出全部 tag name 和 tag message git tag -d 'tag name' # 删除指定的 tag\"]},\"52\":{\"c\":[\"Git\"]},\"53\":{\"h\":\"编码、摘要和加密（二）—— 信息摘要\",\"t\":[\"信息摘要，英译 Message Digest 。看见首字母这么大的 M 、D有没有立即联想到 MD5 算法。其实 MD5算法只是目前比较流行的信息摘要算法，在它之前，还出现过 MD2MD4,以及目前仍然在用的安全散列算法（Secure Hash Algorithm） SHA1 和 SHA256都属于信息摘要算法的一种。国家密码管理局于2010年12月也发布了一种信息摘要算法 SM3 。\",\"由于对信息摘要算法研究并不透彻，因此这篇文章将重点讲 jdk 支持的三个常见摘要算法的使用：MD5、SHA1、SHA256。\"]},\"54\":{\"h\":\"1. 相关代码\",\"t\":[\"Java 对信息摘要算法做了比较完整的封装——MessageDigest。该类是抽象类，针对具体信息摘要算法的实现使用了代理模式。主要提供了三个方法及其重载方法。\",\"/** * 获取摘要算法对象。 * 通过指定参数 algorithm 是 MD5 SHA1 SHA256 ,获取具体的实例。 */ static MessageDigest getInstance /** * 接收参与摘要计算的字节数据，可多次执行。一般用于文件的的摘要计算。 * 也可以一次将文件的全部字节读取至内存，使用 digest 方法一次计算。 */ void update /** * 具有两种使用场景。 * 1. 在 update 方法接收全部的字节数据之后，使用此方法生成摘要数据。 * 2. 直接使用此方法接收较短的字节数据，生成摘要数据。 */ byte[] digest\"]},\"55\":{\"h\":\"2. 用途\"},\"56\":{\"h\":\"2.1 计算字符串\",\"t\":[\"用于校验报文数据在网络传输的过程中是否被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算字符串md5 * * @param data * @return */ public static final String md5(String data) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); byte[] digest = messageDigest.digest(data.getBytes()); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return null; }\"]},\"57\":{\"h\":\"2.2 计算文件\",\"t\":[\"通过网络下载一些文件的时候，通常通过计算下载下来文件的 MD5 和 SHA1 判断下载下来的文件是否在传输过程中被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算文件md5 * * @param data * @return */ public static final String fileMd5(String path) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); File file = new File(path); if (!file.exists()) throw new IllegalArgumentException(\\\"The file path is illegal\\\"); InputStream inputStream = new FileInputStream(file); byte[] buff = new byte[1024]; int len; while ((len = inputStream.read(buff)) > 0) { messageDigest.update(buff, 0, len); } byte[] digest = messageDigest.digest(); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return null; }\",\"如需计算 SHA1 和 SHA256 ，只需将 getInstance 的参数值改成 SHA-1 和 SHA-256。\"]},\"58\":{\"h\":\"3. 总结\",\"t\":[\"千万不要认为 MD5 是加密算法。信息摘要算法，是一种单向散列算法，是一种不可逆的算法，即，可以根据一个字符串计算出 MD5，却不能根据 MD5 还原出生成它的字符串。\"]},\"59\":{\"c\":[\"md5\",\"sha1\",\"sha256\"]},\"60\":{\"h\":\"Vuepress Markdown 语法\"},\"61\":{\"h\":\"示例\"},\"62\":{\"h\":\"标题\"},\"63\":{\"h\":\"文本\"},\"64\":{\"h\":\"列表\"},\"65\":{\"h\":\"引用\"},\"66\":{\"h\":\"代码块\"},\"67\":{\"h\":\"链接\"},\"68\":{\"h\":\"图像\"},\"69\":{\"h\":\"注脚\"},\"70\":{\"h\":\"上标下标\"},\"71\":{\"h\":\"表格\"},\"72\":{\"h\":\"分割线\"},\"73\":{\"h\":\"数学公式\"},\"74\":{\"h\":\"警告\"},\"75\":{\"h\":\"提示\"},\"76\":{\"h\":\"标签\"},\"77\":{\"h\":\"自定义对齐\"},\"78\":{\"h\":\"思维导图\"},\"79\":{\"h\":\"流程图\",\"t\":[\"注脚解释1。 ↩︎\",\"注脚解释2。 ↩︎\"]},\"80\":{\"c\":[\"Markdown\"]},\"81\":{\"h\":\"Ubuntu 开箱配置\",\"t\":[\"记录 Ubuntu 从零到一的开箱配置。\"]},\"82\":{\"h\":\"用户与组\",\"t\":[\"sudo useradd -m -s /bin/bash zkf # 新增用户 zkf sudo usermod -a -G sudo zkf # 将 zkf 添加到 sudo 组 # 上述两行命令可以合并成一行 sudo useradd -m -G wheel -s /bin/bash zkf sudo passwd zkf # 设置/修改 zkf 密码\"]},\"83\":{\"h\":\"编辑器\",\"t\":[\"sudo update-alternatives --config editor\"]},\"84\":{\"h\":\"挂载硬盘\",\"t\":[\"sudo mount /dev/sda1 /media/data # 将 sda1 分区挂载到 /media/data\"]},\"85\":{\"h\":\"设置快捷方式\",\"t\":[\"ln -sf /media/data ~/workspace # 对 /media/data 设置链接\"]},\"86\":{\"h\":\"Git\"},\"87\":{\"h\":\"安装\",\"t\":[\"sudo apt install git\"]},\"88\":{\"h\":\"配置\",\"t\":[\"git config --global user.name \\\"your name\\\" git config --global user.email \\\"your email\\\" git config --global core.autocrlf input\"]},\"89\":{\"h\":\"GPG\"},\"90\":{\"h\":\"配置\",\"t\":[\"gpg --full-gen-key # 选择 rsa，4096，失效日期，姓名和邮箱地址（注意和 git config 设置的一致） gpg --list-secret-keys --keyid-format LONG \\\"your email\\\" # 列出 Key 信息。 # sec rsa4096/F212D2CFEBF50880 2024-04-20 [SC] 中，是 F212D2CFEBF50880 key id gpg --armor --export F212D2CFEBF50880 # 导出公钥，配置到 gitlab GPG Keys 页面。 git config --global user.signingkey F212D2CFEBF50880 # 告诉 git，使用此密钥签名 git config --global commit.gpgsign true # 设置默认使用 GPG key 签名\"]},\"91\":{\"h\":\"Python\",\"t\":[\"sudo apt install python3 # 安装 python\",\"python 通过 pip 管理安装包的依赖关系。安装 pip 有两种方式。\"]},\"92\":{\"h\":\"virtual env\",\"t\":[\"sudo apt install python3-venv # 安装 virtual env python3 -m venv \\\"virtual env name\\\" # 创建虚拟环境\"]},\"93\":{\"h\":\"get-pip\",\"t\":[\"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python3 get-pip.py # 安装 pip rm -rf get-pip.py\"]},\"94\":{\"c\":[\"Others\"]},\"95\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"虚拟环境\",{\"1\":{\"92\":1}}],[\"依赖\",{\"1\":{\"91\":1}}],[\"告诉\",{\"1\":{\"90\":1}}],[\"页面\",{\"1\":{\"90\":1}}],[\"导出\",{\"1\":{\"90\":1}}],[\"导图\",{\"0\":{\"78\":1}}],[\"邮箱地址\",{\"1\":{\"90\":1}}],[\"姓名\",{\"1\":{\"90\":1}}],[\"姓氏\",{\"1\":{\"25\":1}}],[\"日期\",{\"1\":{\"90\":1}}],[\"失效\",{\"1\":{\"90\":1}}],[\"选择\",{\"1\":{\"90\":1}}],[\"安装包\",{\"1\":{\"91\":1}}],[\"安装\",{\"0\":{\"87\":1},\"1\":{\"91\":2,\"92\":1,\"93\":1}}],[\"安全\",{\"1\":{\"53\":1}}],[\"快捷方式\",{\"0\":{\"85\":1}}],[\"快速\",{\"1\":{\"3\":1}}],[\"硬盘\",{\"0\":{\"84\":1}}],[\"挂载\",{\"0\":{\"84\":1},\"1\":{\"84\":1}}],[\"新增\",{\"1\":{\"82\":1}}],[\"组\",{\"0\":{\"82\":1},\"1\":{\"82\":1}}],[\"组合成\",{\"1\":{\"5\":1}}],[\"零到\",{\"1\":{\"81\":1}}],[\"从\",{\"1\":{\"81\":1}}],[\"开箱\",{\"0\":{\"81\":1},\"1\":{\"81\":1}}],[\"开发者\",{\"1\":{\"38\":1}}],[\"︎\",{\"1\":{\"79\":2}}],[\"↩\",{\"1\":{\"79\":2}}],[\"流程图\",{\"0\":{\"79\":1}}],[\"流行\",{\"1\":{\"53\":1}}],[\"思维\",{\"0\":{\"78\":1}}],[\"自定义\",{\"0\":{\"77\":1}}],[\"自己\",{\"1\":{\"38\":1}}],[\"警告\",{\"0\":{\"74\":1}}],[\"表格\",{\"0\":{\"71\":1}}],[\"表示\",{\"1\":{\"1\":8,\"3\":4,\"4\":2,\"5\":2,\"8\":9,\"22\":2,\"23\":4}}],[\"注脚\",{\"0\":{\"69\":1},\"1\":{\"79\":2}}],[\"注意\",{\"1\":{\"23\":1,\"90\":1}}],[\"图像\",{\"0\":{\"68\":1}}],[\"图形\",{\"1\":{\"39\":1}}],[\"引用\",{\"0\":{\"65\":1}}],[\"引入\",{\"1\":{\"3\":1,\"17\":1}}],[\"语法\",{\"0\":{\"60\":1}}],[\"认为\",{\"1\":{\"58\":1}}],[\"千万\",{\"1\":{\"58\":1}}],[\"篡改\",{\"1\":{\"56\":1,\"57\":1}}],[\"网络\",{\"1\":{\"56\":1,\"57\":1}}],[\"网络通信\",{\"1\":{\"6\":1}}],[\"报文\",{\"1\":{\"56\":1}}],[\"较\",{\"1\":{\"54\":1}}],[\"较为\",{\"1\":{\"9\":1}}],[\"内存\",{\"1\":{\"54\":1}}],[\"内容\",{\"1\":{\"3\":1,\"20\":1,\"34\":1}}],[\"至\",{\"1\":{\"54\":1}}],[\"读取\",{\"1\":{\"54\":1}}],[\"参与\",{\"1\":{\"54\":1}}],[\"参数值\",{\"1\":{\"57\":1}}],[\"参数\",{\"1\":{\"5\":1,\"21\":3,\"22\":1,\"54\":1}}],[\"代理\",{\"1\":{\"54\":1}}],[\"代码\",{\"0\":{\"5\":1,\"9\":1,\"21\":1,\"54\":1,\"66\":1},\"1\":{\"6\":1,\"14\":1,\"20\":1,\"21\":1,\"24\":1,\"25\":1,\"34\":1,\"38\":2,\"44\":1}}],[\"抽象类\",{\"1\":{\"54\":1}}],[\"讲\",{\"1\":{\"53\":1}}],[\"篇文章\",{\"1\":{\"53\":1}}],[\"透彻\",{\"1\":{\"53\":1}}],[\"研究\",{\"1\":{\"53\":1}}],[\"月\",{\"1\":{\"53\":1}}],[\"于\",{\"1\":{\"53\":1}}],[\"国家\",{\"1\":{\"53\":1}}],[\"属于\",{\"1\":{\"53\":1}}],[\"散列\",{\"1\":{\"53\":1,\"58\":1}}],[\"仍然\",{\"1\":{\"53\":1}}],[\"目前\",{\"1\":{\"53\":2}}],[\"目录\",{\"1\":{\"38\":2}}],[\"联想\",{\"1\":{\"53\":1}}],[\"立即\",{\"1\":{\"53\":1}}],[\"看见\",{\"1\":{\"53\":1}}],[\"二\",{\"0\":{\"53\":1}}],[\"二进制\",{\"1\":{\"1\":1,\"9\":1}}],[\"列表\",{\"0\":{\"64\":1}}],[\"列出\",{\"1\":{\"51\":2,\"90\":1}}],[\"列举\",{\"1\":{\"0\":1,\"3\":1,\"21\":1}}],[\"输入\",{\"1\":{\"51\":1}}],[\"输出\",{\"0\":{\"19\":1},\"1\":{\"39\":2}}],[\"动态\",{\"1\":{\"51\":1}}],[\"而后\",{\"1\":{\"51\":1}}],[\"记为\",{\"1\":{\"51\":1}}],[\"记录\",{\"1\":{\"27\":1,\"34\":2,\"39\":4,\"48\":4,\"51\":3,\"81\":1}}],[\"打上\",{\"1\":{\"51\":1}}],[\"版本\",{\"1\":{\"51\":1}}],[\"发布\",{\"1\":{\"53\":1}}],[\"发行\",{\"1\":{\"51\":1}}],[\"发现\",{\"1\":{\"3\":1,\"4\":1,\"6\":1}}],[\"待\",{\"1\":{\"48\":1}}],[\"栈顶\",{\"1\":{\"48\":1}}],[\"则\",{\"1\":{\"48\":1}}],[\"冲突\",{\"1\":{\"48\":2}}],[\"丢弃\",{\"1\":{\"48\":1}}],[\"丢失\",{\"1\":{\"48\":1}}],[\"切换\",{\"1\":{\"48\":1}}],[\"堆栈\",{\"1\":{\"48\":1}}],[\"临时\",{\"1\":{\"48\":1}}],[\"地址\",{\"1\":{\"44\":1}}],[\"管理局\",{\"1\":{\"53\":1}}],[\"管理\",{\"1\":{\"44\":1,\"91\":1}}],[\"先\",{\"1\":{\"42\":1}}],[\"单向\",{\"1\":{\"58\":1}}],[\"单个\",{\"1\":{\"42\":1}}],[\"单位\",{\"1\":{\"1\":1}}],[\"受\",{\"1\":{\"42\":1}}],[\"删除\",{\"1\":{\"42\":3,\"44\":1,\"51\":1}}],[\"推送\",{\"1\":{\"42\":4,\"44\":2}}],[\"统计\",{\"1\":{\"39\":1}}],[\"结合\",{\"1\":{\"39\":1}}],[\"结束\",{\"1\":{\"21\":1}}],[\"差异\",{\"1\":{\"39\":1}}],[\"包含\",{\"1\":{\"39\":2}}],[\"包括\",{\"1\":{\"21\":1,\"48\":1}}],[\"远\",{\"1\":{\"39\":1}}],[\"远程\",{\"1\":{\"38\":1,\"42\":1,\"44\":1}}],[\"格式\",{\"1\":{\"39\":1}}],[\"按照\",{\"1\":{\"39\":1}}],[\"查看\",{\"1\":{\"39\":3,\"48\":1}}],[\"查阅\",{\"1\":{\"1\":1}}],[\"服务\",{\"1\":{\"38\":1}}],[\"带\",{\"1\":{\"38\":1}}],[\"裸\",{\"1\":{\"38\":4}}],[\"默认\",{\"1\":{\"38\":2,\"39\":1,\"42\":1,\"90\":1}}],[\"空\",{\"1\":{\"38\":1}}],[\"创建\",{\"1\":{\"38\":7,\"92\":1}}],[\"~\",{\"1\":{\"35\":1,\"85\":1}}],[\"级别\",{\"1\":{\"35\":1}}],[\"环境\",{\"1\":{\"35\":1,\"38\":1}}],[\"配置文件\",{\"1\":{\"35\":1}}],[\"配置\",{\"0\":{\"81\":1,\"88\":1,\"90\":1},\"1\":{\"35\":3,\"44\":1,\"81\":1,\"90\":1}}],[\"执行\",{\"1\":{\"34\":1,\"38\":1,\"42\":1,\"48\":3,\"54\":1}}],[\"签名\",{\"1\":{\"34\":1,\"90\":2}}],[\"修改\",{\"1\":{\"34\":1,\"39\":1,\"48\":2,\"82\":1}}],[\"改成\",{\"1\":{\"57\":1}}],[\"改动\",{\"1\":{\"34\":1,\"42\":1,\"48\":1}}],[\"改进版\",{\"1\":{\"17\":1}}],[\"追加\",{\"1\":{\"34\":1}}],[\"向上\",{\"1\":{\"34\":1}}],[\"向量\",{\"1\":{\"17\":1,\"21\":1,\"23\":1}}],[\"仓库\",{\"1\":{\"34\":2,\"35\":1,\"38\":11,\"42\":6,\"44\":2,\"48\":1}}],[\"本地\",{\"1\":{\"34\":2,\"42\":1,\"44\":1,\"48\":1}}],[\"`\",{\"1\":{\"29\":2,\"43\":2}}],[\"强制\",{\"1\":{\"28\":1}}],[\"添加\",{\"1\":{\"28\":3,\"44\":1,\"51\":3,\"82\":1}}],[\"#\",{\"1\":{\"28\":3,\"32\":1,\"34\":5,\"35\":1,\"38\":5,\"39\":10,\"40\":1,\"41\":1,\"42\":5,\"44\":4,\"46\":1,\"48\":3,\"51\":6,\"82\":4,\"84\":1,\"85\":1,\"90\":6,\"91\":1,\"92\":2,\"93\":1}}],[\"准备\",{\"1\":{\"28\":1}}],[\"工作\",{\"1\":{\"28\":1,\"35\":1,\"38\":2,\"48\":3}}],[\"|\",{\"1\":{\"28\":1,\"30\":7,\"31\":1,\"32\":3,\"34\":10,\"36\":1,\"37\":1,\"38\":2,\"41\":3,\"42\":4,\"43\":4,\"44\":12,\"45\":4,\"46\":3,\"47\":1,\"48\":20,\"50\":1,\"51\":5}}],[\"命令\",{\"0\":{\"27\":1},\"1\":{\"38\":1,\"42\":1,\"48\":1,\"51\":1,\"82\":1}}],[\"命名\",{\"1\":{\"25\":1}}],[\"终端\",{\"1\":{\"25\":1}}],[\"形式\",{\"1\":{\"25\":1,\"39\":1}}],[\"文本\",{\"0\":{\"63\":1}}],[\"文件\",{\"0\":{\"57\":1},\"1\":{\"25\":1,\"28\":3,\"39\":1,\"54\":2,\"57\":4}}],[\"文章\",{\"1\":{\"0\":1}}],[\"设置\",{\"0\":{\"85\":1},\"1\":{\"25\":1,\"35\":1,\"82\":1,\"85\":1,\"90\":2}}],[\"应用\",{\"1\":{\"25\":1}}],[\"越低\",{\"1\":{\"25\":1}}],[\"越长越\",{\"1\":{\"25\":1}}],[\"破解\",{\"1\":{\"25\":1}}],[\"大\",{\"1\":{\"53\":1}}],[\"大于\",{\"1\":{\"25\":1}}],[\"大写字母\",{\"1\":{\"9\":1}}],[\"模长\",{\"1\":{\"25\":3}}],[\"模式\",{\"0\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1},\"1\":{\"15\":2,\"16\":2,\"17\":1,\"19\":1,\"20\":1,\"21\":5,\"22\":6,\"54\":1}}],[\"生成\",{\"1\":{\"25\":1,\"34\":1,\"54\":2,\"58\":1}}],[\"随机\",{\"1\":{\"25\":1}}],[\"示例\",{\"0\":{\"61\":1},\"1\":{\"25\":1}}],[\"首字母\",{\"1\":{\"25\":1,\"53\":1}}],[\"人\",{\"1\":{\"25\":1}}],[\"提供\",{\"1\":{\"54\":1}}],[\"提示\",{\"0\":{\"75\":1},\"1\":{\"48\":1}}],[\"提交者\",{\"1\":{\"39\":1}}],[\"提交\",{\"1\":{\"28\":1,\"34\":4,\"38\":2,\"39\":10,\"48\":3,\"51\":4}}],[\"提出\",{\"1\":{\"25\":1}}],[\"提到\",{\"1\":{\"15\":1}}],[\"德曼\",{\"1\":{\"25\":1}}],[\"伦纳德\",{\"1\":{\"25\":1}}],[\"尔\",{\"1\":{\"25\":1}}],[\"莫\",{\"1\":{\"25\":1}}],[\"萨\",{\"1\":{\"25\":1}}],[\"迪\",{\"1\":{\"25\":1}}],[\"阿\",{\"1\":{\"25\":2}}],[\"阿拉伯数字\",{\"1\":{\"9\":1}}],[\"维斯特\",{\"1\":{\"25\":1}}],[\"李\",{\"1\":{\"25\":1}}],[\"·\",{\"1\":{\"25\":3}}],[\"罗纳德\",{\"1\":{\"25\":1}}],[\"由近\",{\"1\":{\"39\":1}}],[\"由\",{\"1\":{\"25\":1}}],[\"由于\",{\"1\":{\"12\":1,\"21\":1,\"23\":1,\"53\":1}}],[\"年\",{\"1\":{\"25\":1,\"53\":1}}],[\"替代\",{\"1\":{\"24\":1}}],[\"替换\",{\"1\":{\"22\":1}}],[\"该类\",{\"1\":{\"54\":1}}],[\"该\",{\"1\":{\"23\":1}}],[\"连续\",{\"1\":{\"23\":2}}],[\"名称\",{\"1\":{\"23\":1}}],[\"次\",{\"1\":{\"23\":1,\"39\":1}}],[\"_\",{\"1\":{\"22\":11,\"23\":11,\"24\":11,\"25\":10,\"36\":2,\"41\":1}}],[\"支持\",{\"1\":{\"22\":1,\"24\":2,\"53\":1}}],[\"标题\",{\"0\":{\"62\":1}}],[\"标识\",{\"1\":{\"51\":1}}],[\"标签\",{\"0\":{\"76\":1},\"1\":{\"42\":3,\"51\":2}}],[\"标准\",{\"1\":{\"22\":1,\"24\":1,\"39\":1}}],[\"标记\",{\"1\":{\"8\":1,\"9\":1}}],[\"全部\",{\"1\":{\"28\":1,\"42\":1,\"48\":1,\"51\":2,\"54\":2}}],[\"全部内容\",{\"1\":{\"1\":1}}],[\"全称\",{\"1\":{\"22\":1,\"24\":1}}],[\"扩展\",{\"1\":{\"21\":1}}],[\"校验\",{\"1\":{\"21\":1,\"56\":1}}],[\"多次\",{\"1\":{\"54\":1}}],[\"多\",{\"1\":{\"22\":1}}],[\"多少\",{\"1\":{\"21\":2}}],[\"多个\",{\"1\":{\"21\":1}}],[\"指\",{\"1\":{\"21\":1}}],[\"指定\",{\"1\":{\"21\":1,\"22\":1,\"28\":2,\"39\":4,\"51\":2,\"54\":1}}],[\"误导\",{\"1\":{\"21\":1}}],[\"暂存\",{\"1\":{\"48\":3}}],[\"暂存区\",{\"1\":{\"28\":1,\"34\":1,\"48\":1}}],[\"暂时\",{\"1\":{\"48\":1}}],[\"暂\",{\"1\":{\"21\":1}}],[\"深入\",{\"1\":{\"21\":1}}],[\"未\",{\"1\":{\"21\":1,\"48\":3}}],[\"要求\",{\"1\":{\"21\":2}}],[\"或\",{\"1\":{\"21\":1,\"23\":1,\"25\":1,\"48\":1}}],[\"接收\",{\"1\":{\"21\":2,\"22\":1,\"54\":3}}],[\"接下来\",{\"1\":{\"0\":1,\"12\":1}}],[\"获取\",{\"1\":{\"21\":1,\"54\":2}}],[\"以便\",{\"1\":{\"48\":1}}],[\"以\",{\"1\":{\"25\":1,\"56\":1,\"57\":1}}],[\"以及\",{\"1\":{\"22\":1,\"53\":1}}],[\"以下\",{\"1\":{\"21\":1,\"38\":1}}],[\"以上\",{\"1\":{\"1\":1,\"24\":1}}],[\"类\",{\"1\":{\"21\":1}}],[\"类型\",{\"1\":{\"12\":1,\"21\":2}}],[\"封装\",{\"1\":{\"21\":1,\"54\":1}}],[\"部分\",{\"1\":{\"21\":1}}],[\"共\",{\"1\":{\"20\":1}}],[\"各\",{\"1\":{\"20\":1,\"23\":1}}],[\"此\",{\"1\":{\"54\":2,\"90\":1}}],[\"此时\",{\"1\":{\"20\":1,\"21\":2}}],[\"此处\",{\"1\":{\"3\":1,\"12\":1,\"17\":1}}],[\"当前目录\",{\"1\":{\"28\":1}}],[\"当\",{\"1\":{\"20\":1}}],[\"当做\",{\"1\":{\"14\":2}}],[\"如需\",{\"1\":{\"57\":1}}],[\"如下\",{\"1\":{\"44\":1}}],[\"如\",{\"1\":{\"20\":1,\"21\":1,\"38\":1,\"42\":1,\"48\":1,\"51\":1}}],[\"如果\",{\"1\":{\"16\":1}}],[\"遇到\",{\"1\":{\"20\":1,\"48\":1}}],[\"填充\",{\"0\":{\"20\":1},\"1\":{\"20\":4,\"21\":10,\"22\":1,\"23\":1,\"24\":1}}],[\"得\",{\"1\":{\"19\":2}}],[\"得出\",{\"1\":{\"8\":1,\"15\":1}}],[\"细小\",{\"1\":{\"19\":1}}],[\"反馈\",{\"0\":{\"18\":1,\"19\":1}}],[\"第三段\",{\"1\":{\"23\":1}}],[\"第二个\",{\"1\":{\"21\":1}}],[\"第二块\",{\"1\":{\"20\":1}}],[\"第一块\",{\"1\":{\"17\":1,\"18\":1,\"19\":1}}],[\"第四位\",{\"1\":{\"5\":2}}],[\"异或\",{\"1\":{\"17\":3,\"18\":3,\"19\":2}}],[\"前者\",{\"1\":{\"23\":1}}],[\"前\",{\"1\":{\"17\":1,\"18\":1,\"19\":3,\"23\":2}}],[\"初始化\",{\"1\":{\"17\":1,\"21\":2,\"23\":1}}],[\"链接\",{\"0\":{\"67\":1},\"1\":{\"85\":1}}],[\"链\",{\"0\":{\"17\":1}}],[\"块\",{\"0\":{\"17\":1,\"66\":1},\"1\":{\"16\":1,\"19\":2,\"20\":3,\"21\":2,\"22\":1,\"24\":1}}],[\"重命名\",{\"1\":{\"44\":1}}],[\"重载\",{\"1\":{\"21\":1,\"54\":1}}],[\"重复\",{\"1\":{\"16\":2}}],[\"重点\",{\"1\":{\"14\":1,\"53\":1}}],[\"严重\",{\"1\":{\"16\":1}}],[\"存在\",{\"1\":{\"16\":1,\"48\":1}}],[\"存储空间\",{\"1\":{\"6\":2}}],[\"存储单元\",{\"1\":{\"1\":1}}],[\"存储\",{\"1\":{\"1\":1,\"25\":1,\"35\":3}}],[\"步骤\",{\"1\":{\"16\":1}}],[\"拼接\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1}}],[\"合并\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"34\":1,\"82\":1}}],[\"合法\",{\"1\":{\"5\":1}}],[\"分区\",{\"1\":{\"84\":1}}],[\"分支\",{\"1\":{\"38\":1,\"42\":4,\"44\":1,\"48\":1}}],[\"分系统\",{\"1\":{\"35\":1}}],[\"分为\",{\"1\":{\"21\":1}}],[\"分成\",{\"1\":{\"20\":1}}],[\"分块\",{\"1\":{\"20\":1}}],[\"分割线\",{\"0\":{\"72\":1}}],[\"分割\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1}}],[\"分别\",{\"1\":{\"4\":1,\"5\":2,\"16\":1,\"23\":1}}],[\"简化\",{\"1\":{\"39\":1}}],[\"简要\",{\"1\":{\"21\":1}}],[\"简单\",{\"1\":{\"16\":1}}],[\"简称\",{\"1\":{\"16\":1,\"17\":2,\"18\":1,\"19\":1}}],[\"英译\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"53\":1}}],[\"英文字母\",{\"1\":{\"1\":1}}],[\"密码\",{\"1\":{\"53\":1,\"82\":1}}],[\"密码本\",{\"0\":{\"16\":1}}],[\"密文\",{\"1\":{\"16\":3,\"17\":4,\"18\":3,\"19\":12,\"25\":1}}],[\"密钥\",{\"0\":{\"14\":1},\"1\":{\"10\":2,\"12\":1,\"14\":4,\"16\":1,\"17\":2,\"18\":2,\"19\":2,\"21\":1,\"22\":1,\"23\":6,\"24\":2,\"25\":3,\"90\":1}}],[\"电子\",{\"0\":{\"16\":1}}],[\"衍生\",{\"1\":{\"15\":1}}],[\"暴力破解\",{\"1\":{\"15\":1}}],[\"防止\",{\"1\":{\"15\":1}}],[\"短\",{\"1\":{\"15\":1,\"54\":1}}],[\"若\",{\"1\":{\"23\":1}}],[\"若干块\",{\"1\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1}}],[\"若想\",{\"1\":{\"1\":1}}],[\"固定\",{\"1\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"22\":1}}],[\"成\",{\"1\":{\"15\":1,\"16\":2,\"17\":2,\"18\":2,\"19\":2,\"21\":1,\"24\":1,\"82\":1}}],[\"实例\",{\"1\":{\"38\":1,\"54\":1}}],[\"实际\",{\"1\":{\"15\":1,\"25\":1}}],[\"实现\",{\"0\":{\"5\":1,\"9\":1,\"21\":1},\"1\":{\"6\":1,\"9\":1,\"12\":3,\"14\":1,\"20\":1,\"24\":1,\"54\":1}}],[\"适合\",{\"1\":{\"15\":1}}],[\"主要\",{\"1\":{\"15\":1,\"21\":3,\"38\":1,\"54\":1}}],[\"端\",{\"1\":{\"14\":1}}],[\"长\",{\"1\":{\"14\":1,\"15\":2}}],[\"长度\",{\"1\":{\"1\":1,\"8\":3,\"9\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1}}],[\"建议\",{\"1\":{\"14\":1,\"21\":1,\"25\":2,\"35\":1}}],[\"优\",{\"1\":{\"15\":1}}],[\"优于\",{\"1\":{\"14\":1}}],[\"优势\",{\"1\":{\"8\":1}}],[\"加解密\",{\"1\":{\"14\":1,\"21\":1}}],[\"加密算法\",{\"1\":{\"0\":1,\"10\":2,\"12\":2,\"14\":7,\"15\":2,\"24\":1,\"25\":1,\"58\":1}}],[\"加密\",{\"0\":{\"0\":1,\"12\":2,\"15\":1,\"17\":1,\"18\":1,\"53\":1},\"1\":{\"0\":3,\"12\":3,\"14\":8,\"15\":5,\"16\":4,\"17\":3,\"18\":2,\"19\":4,\"20\":3,\"21\":7,\"22\":3,\"23\":4,\"24\":1}}],[\"区\",{\"1\":{\"28\":1,\"38\":2,\"48\":2}}],[\"区别\",{\"1\":{\"14\":1,\"19\":2}}],[\"区分\",{\"1\":{\"14\":1}}],[\"直接\",{\"1\":{\"14\":1,\"54\":1}}],[\"判别\",{\"1\":{\"14\":1}}],[\"判断\",{\"1\":{\"3\":1,\"57\":1}}],[\"划\",{\"1\":{\"14\":1}}],[\"划分\",{\"1\":{\"8\":1,\"15\":1,\"24\":1}}],[\"把\",{\"1\":{\"14\":1}}],[\"见\",{\"1\":{\"14\":1,\"20\":1}}],[\"私钥\",{\"1\":{\"14\":1,\"25\":1}}],[\"公钥\",{\"1\":{\"14\":1,\"25\":1,\"90\":1}}],[\"为例\",{\"1\":{\"56\":1,\"57\":1}}],[\"为\",{\"1\":{\"14\":1,\"15\":1,\"21\":1,\"25\":1,\"38\":1}}],[\"写\",{\"1\":{\"12\":1}}],[\"会\",{\"1\":{\"12\":1,\"48\":1}}],[\"具有\",{\"1\":{\"54\":1}}],[\"具体\",{\"1\":{\"12\":1,\"20\":1,\"54\":2}}],[\"具备\",{\"1\":{\"10\":1}}],[\"相对路径\",{\"1\":{\"28\":1}}],[\"相同\",{\"1\":{\"14\":1}}],[\"相关\",{\"0\":{\"13\":1,\"54\":1},\"1\":{\"12\":1,\"23\":1}}],[\"相加\",{\"1\":{\"5\":1,\"9\":2}}],[\"针对\",{\"1\":{\"12\":1,\"54\":1}}],[\"还有\",{\"1\":{\"21\":1}}],[\"还\",{\"1\":{\"12\":1,\"53\":1}}],[\"还原\",{\"1\":{\"12\":1,\"58\":1}}],[\"难\",{\"1\":{\"12\":1,\"25\":1}}],[\"很\",{\"1\":{\"12\":1}}],[\"也\",{\"1\":{\"12\":1,\"16\":1,\"24\":1,\"53\":1,\"54\":1}}],[\"也许\",{\"1\":{\"8\":1}}],[\"原理\",{\"1\":{\"12\":1}}],[\"算法\",{\"1\":{\"12\":3,\"21\":3,\"22\":1,\"23\":8,\"24\":1,\"53\":8,\"54\":3,\"56\":1,\"57\":1,\"58\":3}}],[\"能够\",{\"1\":{\"12\":1,\"48\":1}}],[\"就\",{\"1\":{\"12\":1,\"21\":1}}],[\"知道\",{\"1\":{\"12\":4}}],[\"只是\",{\"1\":{\"53\":1}}],[\"只\",{\"1\":{\"12\":1,\"24\":1,\"39\":1,\"57\":1}}],[\"只要\",{\"1\":{\"12\":2}}],[\"只有\",{\"1\":{\"10\":1}}],[\"任何人\",{\"1\":{\"12\":1}}],[\"同时\",{\"1\":{\"34\":1}}],[\"同一个\",{\"1\":{\"14\":2,\"16\":1}}],[\"同\",{\"1\":{\"12\":1,\"23\":1}}],[\"更改\",{\"1\":{\"28\":1,\"48\":4}}],[\"更\",{\"1\":{\"22\":1}}],[\"更加\",{\"1\":{\"12\":1}}],[\"更有甚者\",{\"1\":{\"0\":1}}],[\"关联\",{\"1\":{\"44\":1}}],[\"关于\",{\"1\":{\"12\":1,\"21\":1}}],[\"关系\",{\"1\":{\"3\":1,\"8\":1,\"91\":1}}],[\"明文\",{\"1\":{\"10\":1,\"15\":1,\"16\":1,\"17\":2,\"18\":2,\"19\":3,\"20\":3,\"21\":4,\"22\":1,\"24\":1}}],[\"解决\",{\"1\":{\"48\":1}}],[\"解释\",{\"0\":{\"27\":1},\"1\":{\"12\":1,\"79\":2}}],[\"解密\",{\"1\":{\"10\":1,\"12\":1,\"14\":2,\"21\":3,\"22\":1,\"23\":2}}],[\"解码\",{\"1\":{\"5\":1,\"9\":1,\"10\":1,\"12\":1}}],[\"才能\",{\"1\":{\"10\":1}}],[\"正确性\",{\"1\":{\"21\":1}}],[\"正确\",{\"1\":{\"10\":2}}],[\"却\",{\"1\":{\"10\":1,\"58\":1}}],[\"他们\",{\"1\":{\"10\":1,\"25\":1}}],[\"操作\",{\"1\":{\"10\":1,\"15\":1,\"20\":1,\"21\":1,\"23\":4,\"48\":1}}],[\"总结\",{\"0\":{\"10\":1,\"58\":1}}],[\"寻找\",{\"1\":{\"9\":1}}],[\"四种\",{\"1\":{\"15\":1}}],[\"四个\",{\"1\":{\"9\":1}}],[\"四位\",{\"1\":{\"5\":4,\"9\":2}}],[\"末尾\",{\"1\":{\"9\":1}}],[\"检查\",{\"1\":{\"9\":1,\"44\":1}}],[\"处理\",{\"1\":{\"9\":2,\"23\":1}}],[\"之后\",{\"1\":{\"39\":1,\"51\":1,\"54\":1}}],[\"之前\",{\"1\":{\"9\":2,\"12\":1,\"15\":1,\"21\":1,\"39\":1,\"53\":1}}],[\"之所以\",{\"1\":{\"0\":1}}],[\"两行\",{\"1\":{\"82\":1}}],[\"两种\",{\"1\":{\"54\":1,\"91\":1}}],[\"两段\",{\"1\":{\"23\":1}}],[\"两块\",{\"1\":{\"20\":1}}],[\"两位\",{\"1\":{\"9\":3}}],[\"两个\",{\"1\":{\"1\":1,\"5\":2,\"9\":1,\"20\":1}}],[\"保护\",{\"1\":{\"42\":1}}],[\"保留\",{\"1\":{\"9\":3,\"48\":1}}],[\"保存\",{\"1\":{\"9\":1,\"28\":1,\"44\":1,\"48\":2}}],[\"六位\",{\"1\":{\"9\":2}}],[\"剩余\",{\"1\":{\"9\":2}}],[\"号\",{\"1\":{\"9\":3}}],[\"等同于\",{\"1\":{\"23\":1}}],[\"等\",{\"1\":{\"9\":3}}],[\"小写字母\",{\"1\":{\"9\":1}}],[\"小伙伴\",{\"1\":{\"1\":1}}],[\"练手\",{\"1\":{\"9\":1}}],[\"入门\",{\"1\":{\"9\":1}}],[\"复杂\",{\"1\":{\"9\":1}}],[\"场景\",{\"1\":{\"9\":1,\"54\":1}}],[\"到\",{\"1\":{\"9\":1,\"12\":1,\"28\":1,\"34\":2,\"35\":1,\"38\":1,\"39\":1,\"42\":3,\"44\":2,\"48\":1,\"53\":1,\"82\":1,\"84\":1,\"90\":1}}],[\"考虑\",{\"1\":{\"9\":1}}],[\"考究\",{\"1\":{\"6\":1}}],[\"⌉\",{\"1\":{\"8\":1}}],[\"⌈\",{\"1\":{\"8\":1}}],[\"出现\",{\"1\":{\"53\":1}}],[\"出来\",{\"1\":{\"16\":2,\"17\":1}}],[\"出原\",{\"1\":{\"12\":1}}],[\"出\",{\"1\":{\"8\":1,\"10\":1,\"58\":2}}],[\"体现\",{\"1\":{\"8\":1,\"15\":1}}],[\"并用\",{\"1\":{\"9\":1}}],[\"并\",{\"1\":{\"8\":1,\"12\":1,\"25\":1,\"34\":1,\"38\":1,\"51\":1,\"53\":1}}],[\"补丁\",{\"1\":{\"39\":1}}],[\"补位\",{\"1\":{\"8\":1,\"9\":2}}],[\"补充\",{\"1\":{\"8\":2,\"9\":1}}],[\"后者\",{\"1\":{\"23\":1}}],[\"后续\",{\"1\":{\"12\":1,\"20\":1,\"44\":1}}],[\"后\",{\"1\":{\"8\":7,\"9\":6,\"17\":1,\"18\":3,\"19\":2,\"20\":3,\"21\":1,\"23\":1,\"48\":2}}],[\"整分\",{\"1\":{\"20\":1}}],[\"整数倍\",{\"1\":{\"8\":1}}],[\"整除\",{\"1\":{\"8\":3}}],[\"整取\",{\"1\":{\"4\":1}}],[\"被\",{\"1\":{\"8\":3,\"42\":1,\"56\":1,\"57\":1}}],[\"案例\",{\"1\":{\"8\":1}}],[\"几个\",{\"1\":{\"8\":1,\"12\":1,\"21\":1}}],[\"试\",{\"1\":{\"8\":1}}],[\"ok\",{\"1\":{\"36\":1}}],[\"open\",{\"1\":{\"35\":1}}],[\"optionally\",{\"1\":{\"49\":1}}],[\"optional\",{\"1\":{\"34\":1,\"49\":3}}],[\"option\",{\"1\":{\"32\":3,\"33\":2,\"36\":2,\"40\":3,\"41\":5,\"42\":2,\"43\":2,\"46\":3}}],[\"options\",{\"1\":{\"28\":1,\"29\":1,\"30\":9,\"31\":2,\"33\":1,\"34\":2,\"35\":1,\"36\":4,\"37\":1,\"40\":1,\"41\":3,\"42\":1,\"43\":2,\"48\":2,\"49\":1,\"50\":1,\"51\":3}}],[\"our\",{\"1\":{\"31\":1}}],[\"ours\",{\"1\":{\"31\":1}}],[\"out\",{\"1\":{\"37\":1,\"43\":1}}],[\"outside\",{\"1\":{\"28\":1,\"29\":1,\"47\":1}}],[\"output\",{\"1\":{\"19\":1,\"29\":2,\"30\":2,\"34\":1,\"37\":5,\"42\":1,\"49\":1,\"51\":1}}],[\"others\",{\"2\":{\"94\":1}}],[\"other\",{\"1\":{\"31\":1,\"35\":1,\"50\":1}}],[\"otherwise\",{\"1\":{\"28\":1}}],[\"objects\",{\"1\":{\"36\":2,\"41\":2}}],[\"object\",{\"1\":{\"30\":3,\"33\":1,\"35\":1,\"36\":2,\"38\":2,\"41\":1,\"51\":4}}],[\"oldurl\",{\"1\":{\"44\":1}}],[\"old\",{\"1\":{\"30\":2,\"35\":1,\"42\":1,\"44\":1}}],[\"overwriting\",{\"1\":{\"36\":1,\"41\":1}}],[\"overwrite\",{\"1\":{\"31\":1,\"36\":1,\"40\":1,\"41\":1,\"50\":1}}],[\"overlay\",{\"1\":{\"31\":2}}],[\"overlapping\",{\"1\":{\"29\":1}}],[\"overlap\",{\"1\":{\"29\":1}}],[\"override\",{\"1\":{\"28\":1,\"34\":2,\"38\":1,\"47\":1}}],[\"original\",{\"1\":{\"43\":1}}],[\"origin\",{\"1\":{\"33\":3,\"35\":2,\"42\":9,\"44\":3}}],[\"orphan\",{\"1\":{\"31\":1,\"50\":1}}],[\"or\",{\"1\":{\"29\":1,\"30\":7,\"31\":2,\"32\":4,\"33\":1,\"34\":1,\"35\":6,\"36\":3,\"37\":3,\"40\":2,\"42\":1,\"43\":3,\"44\":12,\"45\":3,\"46\":4,\"48\":10,\"50\":1,\"51\":3}}],[\"onto\",{\"1\":{\"43\":4}}],[\"on\",{\"1\":{\"29\":2,\"30\":2,\"33\":1,\"35\":1,\"36\":6,\"37\":1,\"41\":5,\"42\":2,\"51\":1}}],[\"only\",{\"1\":{\"28\":2,\"30\":5,\"31\":1,\"33\":5,\"34\":2,\"35\":2,\"36\":4,\"40\":1,\"41\":4,\"42\":2,\"45\":3,\"47\":1,\"48\":1,\"51\":5}}],[\"oneline\",{\"1\":{\"39\":1}}],[\"one\",{\"1\":{\"9\":3,\"29\":1,\"33\":1}}],[\"off\",{\"1\":{\"32\":1,\"34\":1,\"37\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1}}],[\"of\",{\"1\":{\"28\":4,\"29\":7,\"30\":1,\"31\":1,\"33\":6,\"34\":1,\"35\":2,\"36\":10,\"37\":7,\"38\":1,\"40\":4,\"41\":12,\"42\":2,\"43\":7,\"45\":1,\"47\":1,\"50\":1,\"51\":3}}],[\"ofb\",{\"1\":{\"19\":3,\"22\":1}}],[\"o\",{\"1\":{\"7\":2,\"9\":2,\"33\":1,\"34\":2,\"36\":1,\"37\":1,\"41\":1,\"42\":1,\"93\":1}}],[\"md2md4\",{\"1\":{\"53\":1}}],[\"md5\",{\"1\":{\"0\":2,\"14\":1,\"53\":3,\"54\":1,\"56\":4,\"57\":4,\"58\":3},\"2\":{\"59\":1}}],[\"msg\",{\"1\":{\"34\":2,\"40\":1,\"41\":1,\"51\":1}}],[\"mixed\",{\"1\":{\"45\":2}}],[\"mirror\",{\"1\":{\"33\":2,\"42\":3,\"44\":1}}],[\"missing\",{\"1\":{\"28\":2,\"29\":1,\"35\":1,\"42\":1}}],[\"media\",{\"1\":{\"84\":2,\"85\":2}}],[\"merging\",{\"1\":{\"40\":1,\"41\":3,\"43\":1}}],[\"merges\",{\"1\":{\"41\":1,\"43\":2}}],[\"merged\",{\"1\":{\"30\":8,\"43\":1,\"51\":6}}],[\"merge\",{\"0\":{\"40\":1},\"1\":{\"29\":1,\"31\":3,\"32\":2,\"40\":16,\"41\":8,\"43\":5,\"45\":2,\"46\":2,\"50\":3}}],[\"messaging\",{\"1\":{\"37\":1}}],[\"messagedigest\",{\"1\":{\"54\":2,\"56\":4,\"57\":5}}],[\"message\",{\"1\":{\"32\":3,\"34\":19,\"37\":3,\"39\":1,\"40\":7,\"41\":3,\"46\":2,\"48\":6,\"51\":12,\"53\":1}}],[\"messages\",{\"1\":{\"30\":1,\"32\":1}}],[\"me\",{\"1\":{\"34\":1}}],[\"mount\",{\"1\":{\"84\":1}}],[\"most\",{\"1\":{\"40\":1,\"41\":1}}],[\"move\",{\"1\":{\"30\":4,\"43\":1}}],[\"more\",{\"1\":{\"29\":2,\"33\":2,\"36\":2,\"40\":2,\"41\":2,\"42\":2}}],[\"modify\",{\"1\":{\"36\":1}}],[\"modifications\",{\"1\":{\"31\":1,\"50\":2}}],[\"modified\",{\"1\":{\"29\":1}}],[\"modes\",{\"1\":{\"34\":1,\"49\":2}}],[\"mode\",{\"1\":{\"18\":1,\"19\":1,\"22\":2,\"23\":2,\"24\":2,\"25\":2,\"31\":1,\"32\":1,\"34\":4,\"37\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1,\"49\":2,\"51\":1}}],[\"master\",{\"1\":{\"44\":1}}],[\"mail\",{\"1\":{\"37\":2}}],[\"main\",{\"1\":{\"38\":3,\"42\":4,\"44\":1}}],[\"maintenance\",{\"1\":{\"36\":3}}],[\"mainline\",{\"1\":{\"32\":2,\"46\":2}}],[\"max\",{\"1\":{\"37\":2}}],[\"machine\",{\"1\":{\"34\":1,\"42\":1,\"49\":1}}],[\"matched\",{\"1\":{\"47\":1}}],[\"matches\",{\"1\":{\"35\":1}}],[\"match\",{\"1\":{\"29\":1,\"43\":1}}],[\"matching\",{\"1\":{\"29\":2,\"35\":1,\"37\":1,\"49\":1}}],[\"markdown\",{\"0\":{\"60\":1},\"2\":{\"80\":1}}],[\"mark\",{\"1\":{\"29\":1,\"37\":1}}],[\"make\",{\"1\":{\"29\":1,\"33\":1,\"37\":1,\"43\":1}}],[\"made\",{\"1\":{\"29\":1}}],[\"must\",{\"1\":{\"44\":1}}],[\"multiple\",{\"1\":{\"36\":3,\"37\":1}}],[\"mufh\",{\"1\":{\"8\":1}}],[\"mue\",{\"1\":{\"8\":1}}],[\"mq\",{\"1\":{\"8\":1}}],[\"m\",{\"1\":{\"7\":2,\"9\":2,\"30\":5,\"31\":1,\"32\":2,\"34\":6,\"36\":1,\"37\":1,\"40\":1,\"43\":1,\"44\":1,\"46\":2,\"48\":2,\"49\":1,\"50\":1,\"51\":3,\"53\":1,\"82\":2,\"92\":1}}],[\"virtual\",{\"0\":{\"92\":1},\"1\":{\"92\":2}}],[\"vuepress\",{\"0\":{\"60\":1}}],[\"void\",{\"1\":{\"54\":1}}],[\"valid\",{\"1\":{\"40\":1,\"41\":1}}],[\"values\",{\"1\":{\"34\":1,\"35\":4,\"49\":1}}],[\"value\",{\"1\":{\"33\":1,\"34\":1,\"35\":21,\"40\":1,\"41\":1,\"42\":2}}],[\"variable\",{\"1\":{\"35\":3}}],[\"variables\",{\"1\":{\"35\":1}}],[\"var\",{\"1\":{\"35\":1}}],[\"v2\",{\"1\":{\"31\":2}}],[\"venv\",{\"1\":{\"92\":2}}],[\"verify\",{\"1\":{\"34\":2,\"40\":3,\"41\":3,\"42\":1,\"43\":1,\"51\":2}}],[\"version\",{\"1\":{\"31\":2,\"49\":1}}],[\"verbose\",{\"1\":{\"28\":2,\"29\":2,\"30\":1,\"33\":2,\"34\":1,\"36\":2,\"40\":2,\"41\":2,\"42\":2,\"43\":1,\"44\":5,\"49\":2}}],[\"vector\",{\"1\":{\"17\":1}}],[\"v\",{\"1\":{\"7\":2,\"9\":2,\"28\":1,\"29\":1,\"30\":1,\"33\":1,\"34\":2,\"36\":1,\"37\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":5,\"49\":1,\"51\":2}}],[\"keep\",{\"1\":{\"32\":2,\"36\":2,\"37\":1,\"41\":2,\"43\":4,\"45\":3,\"48\":2}}],[\"keys\",{\"1\":{\"90\":2}}],[\"keyid\",{\"1\":{\"32\":1,\"34\":1,\"46\":1,\"90\":1}}],[\"keypair\",{\"1\":{\"25\":4}}],[\"keypairgenerator\",{\"1\":{\"25\":2}}],[\"keygener\",{\"1\":{\"25\":4}}],[\"key\",{\"1\":{\"14\":4,\"22\":7,\"23\":7,\"24\":7,\"30\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1,\"51\":5,\"90\":4}}],[\"k\",{\"1\":{\"7\":2,\"9\":2,\"36\":1,\"37\":1,\"41\":1,\"48\":2}}],[\"ubuntu\",{\"0\":{\"81\":1},\"1\":{\"81\":1}}],[\"url\",{\"1\":{\"35\":2,\"44\":6}}],[\"urlmatch\",{\"1\":{\"35\":1}}],[\"uri\",{\"1\":{\"33\":3}}],[\"up\",{\"1\":{\"43\":1,\"47\":1}}],[\"upload\",{\"1\":{\"33\":2,\"36\":2,\"41\":2}}],[\"upstream\",{\"1\":{\"30\":6,\"33\":1,\"36\":2,\"37\":2,\"41\":2,\"42\":2,\"43\":7}}],[\"updating\",{\"1\":{\"28\":1,\"31\":1,\"36\":1,\"45\":1,\"47\":1,\"50\":1}}],[\"updated\",{\"1\":{\"36\":1,\"41\":1}}],[\"updates\",{\"1\":{\"36\":2,\"41\":2,\"42\":2}}],[\"update\",{\"1\":{\"28\":2,\"31\":1,\"32\":1,\"36\":4,\"40\":2,\"41\":2,\"43\":3,\"44\":1,\"46\":1,\"50\":1,\"54\":2,\"57\":1,\"83\":1}}],[\"usermod\",{\"1\":{\"82\":1}}],[\"useradd\",{\"1\":{\"82\":2}}],[\"users\",{\"1\":{\"38\":1}}],[\"user\",{\"1\":{\"35\":3,\"39\":2,\"43\":1,\"51\":1,\"88\":2,\"90\":1}}],[\"used\",{\"1\":{\"33\":1,\"34\":1,\"38\":1,\"42\":1}}],[\"use\",{\"1\":{\"29\":1,\"30\":3,\"31\":1,\"33\":6,\"34\":3,\"35\":7,\"36\":3,\"37\":6,\"38\":1,\"40\":2,\"41\":4,\"42\":3,\"43\":6,\"46\":1,\"51\":2}}],[\"usage\",{\"1\":{\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1}}],[\"unmatch\",{\"1\":{\"47\":2}}],[\"unmerged\",{\"1\":{\"31\":2}}],[\"under\",{\"1\":{\"43\":1}}],[\"unchanged\",{\"1\":{\"43\":2}}],[\"unrelated\",{\"1\":{\"40\":2,\"41\":2}}],[\"until\",{\"1\":{\"39\":1}}],[\"untracked\",{\"1\":{\"28\":1,\"34\":2,\"48\":4,\"49\":4}}],[\"unparented\",{\"1\":{\"31\":1,\"50\":1}}],[\"unshallow\",{\"1\":{\"36\":1,\"41\":1}}],[\"unset\",{\"1\":{\"30\":2,\"35\":2}}],[\"unsafe\",{\"1\":{\"29\":1}}],[\"unidiff\",{\"1\":{\"29\":1}}],[\"u\",{\"1\":{\"7\":2,\"9\":2,\"28\":2,\"30\":1,\"33\":1,\"34\":2,\"36\":1,\"42\":1,\"48\":3,\"49\":1,\"51\":2}}],[\"utf\",{\"1\":{\"1\":1}}],[\"zkf\",{\"1\":{\"82\":7}}],[\"zuo\",{\"1\":{\"38\":2,\"39\":1}}],[\"zdiff3\",{\"1\":{\"31\":1,\"50\":1}}],[\"zero\",{\"1\":{\"29\":1,\"37\":2,\"47\":1}}],[\"z\",{\"1\":{\"7\":2,\"9\":4,\"29\":1,\"34\":1,\"35\":1,\"49\":1}}],[\"jobs\",{\"1\":{\"33\":1,\"36\":1,\"41\":1}}],[\"just\",{\"1\":{\"28\":1}}],[\"jdk\",{\"1\":{\"22\":1,\"53\":1}}],[\"java\",{\"1\":{\"12\":1,\"20\":1,\"21\":2,\"24\":1,\"54\":1}}],[\"j\",{\"1\":{\"7\":2,\"9\":2,\"33\":1,\"36\":1,\"41\":1}}],[\"your\",{\"1\":{\"88\":2,\"90\":1}}],[\"yes\",{\"1\":{\"42\":1}}],[\"y\",{\"1\":{\"7\":2,\"9\":2}}],[\"sf\",{\"1\":{\"85\":1}}],[\"sfx\",{\"1\":{\"37\":2}}],[\"sda1\",{\"1\":{\"84\":2}}],[\"sm3\",{\"1\":{\"53\":1}}],[\"save\",{\"1\":{\"48\":1}}],[\"same\",{\"1\":{\"28\":1}}],[\"soft\",{\"1\":{\"45\":2}}],[\"sorting\",{\"1\":{\"30\":1,\"51\":1}}],[\"sort\",{\"1\":{\"30\":2,\"51\":3}}],[\"sc\",{\"1\":{\"90\":1}}],[\"schedule\",{\"1\":{\"43\":1}}],[\"scope\",{\"1\":{\"35\":2}}],[\"synonym\",{\"1\":{\"40\":1}}],[\"system\",{\"1\":{\"35\":4}}],[\"slot\",{\"1\":{\"35\":2}}],[\"slashes\",{\"1\":{\"29\":1}}],[\"squash\",{\"1\":{\"34\":3,\"40\":1,\"41\":1,\"43\":1}}],[\"similarity\",{\"1\":{\"49\":1}}],[\"simple\",{\"1\":{\"37\":1}}],[\"side\",{\"1\":{\"42\":1}}],[\"single\",{\"1\":{\"33\":1,\"37\":3,\"40\":1,\"41\":1}}],[\"since\",{\"1\":{\"33\":2,\"36\":1,\"37\":1,\"39\":1,\"41\":1}}],[\"signingkey\",{\"1\":{\"90\":1}}],[\"signatures\",{\"1\":{\"40\":1,\"41\":1}}],[\"signature\",{\"1\":{\"37\":5,\"40\":1,\"41\":1}}],[\"sign\",{\"1\":{\"32\":2,\"34\":2,\"40\":2,\"41\":2,\"42\":1,\"43\":2,\"46\":2,\"51\":2}}],[\"signed\",{\"1\":{\"32\":1,\"34\":1,\"37\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"46\":1,\"51\":1}}],[\"signoff\",{\"1\":{\"32\":1,\"34\":1,\"37\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1}}],[\"specify\",{\"1\":{\"36\":1,\"38\":2,\"41\":1}}],[\"specified\",{\"1\":{\"34\":7}}],[\"specific\",{\"1\":{\"30\":1,\"33\":2,\"35\":1,\"36\":1,\"41\":1,\"42\":1}}],[\"spaces\",{\"1\":{\"32\":1,\"34\":1,\"40\":1,\"41\":1,\"46\":1,\"51\":1}}],[\"space\",{\"1\":{\"29\":1}}],[\"sparse\",{\"1\":{\"28\":2,\"31\":1,\"33\":2,\"47\":2}}],[\"sudo\",{\"1\":{\"82\":6,\"83\":1,\"84\":1,\"87\":1,\"91\":1,\"92\":1,\"93\":1}}],[\"suffix\",{\"1\":{\"37\":1}}],[\"succeeds\",{\"1\":{\"40\":1,\"41\":1}}],[\"successful\",{\"1\":{\"34\":1}}],[\"such\",{\"1\":{\"31\":1,\"50\":1}}],[\"suppress\",{\"1\":{\"30\":1,\"31\":1,\"34\":1,\"50\":1}}],[\"subcommand\",{\"1\":{\"44\":1}}],[\"subject\",{\"1\":{\"30\":1,\"37\":2}}],[\"submodules\",{\"1\":{\"30\":3,\"31\":2,\"33\":10,\"36\":3,\"41\":3,\"42\":2,\"45\":2,\"49\":2,\"50\":2}}],[\"sure\",{\"1\":{\"29\":1}}],[\"summary\",{\"1\":{\"29\":3,\"34\":1,\"40\":1}}],[\"shortlog\",{\"1\":{\"40\":1,\"41\":1}}],[\"short\",{\"1\":{\"34\":1,\"49\":1}}],[\"show\",{\"1\":{\"29\":1,\"30\":3,\"34\":6,\"35\":5,\"36\":1,\"37\":5,\"40\":2,\"41\":3,\"43\":3,\"44\":1,\"48\":1,\"49\":7,\"51\":1}}],[\"sha\",{\"1\":{\"57\":2}}],[\"sha256\",{\"1\":{\"53\":2,\"54\":1,\"57\":1},\"2\":{\"59\":1}}],[\"sha1\",{\"1\":{\"53\":2,\"54\":1,\"57\":2},\"2\":{\"59\":1}}],[\"shared\",{\"1\":{\"33\":2,\"38\":3}}],[\"shallow\",{\"1\":{\"33\":9,\"36\":8,\"37\":1,\"41\":8}}],[\"shamir\",{\"1\":{\"25\":1}}],[\"skipping\",{\"1\":{\"43\":1}}],[\"skip\",{\"1\":{\"28\":1,\"31\":1,\"32\":3,\"43\":3,\"45\":1,\"46\":3}}],[\"several\",{\"1\":{\"38\":1}}],[\"series\",{\"1\":{\"37\":2}}],[\"server\",{\"1\":{\"33\":2,\"36\":2,\"41\":2,\"42\":1}}],[\"separate\",{\"1\":{\"33\":2,\"38\":3}}],[\"separated\",{\"1\":{\"28\":1,\"29\":1,\"31\":1,\"34\":1,\"45\":1,\"47\":1}}],[\"sequence\",{\"1\":{\"32\":3,\"37\":1,\"46\":3}}],[\"setting\",{\"1\":{\"35\":1}}],[\"setup\",{\"1\":{\"33\":1}}],[\"set\",{\"1\":{\"30\":2,\"31\":1,\"33\":1,\"36\":2,\"37\":1,\"41\":2,\"42\":2,\"44\":5,\"49\":1,\"50\":1}}],[\"see\",{\"1\":{\"29\":1}}],[\"selected\",{\"1\":{\"40\":1,\"41\":1}}],[\"select\",{\"1\":{\"28\":1,\"31\":1,\"32\":1,\"45\":1,\"46\":1}}],[\"sec\",{\"1\":{\"90\":1}}],[\"secret\",{\"1\":{\"90\":1}}],[\"secretkeyspec\",{\"1\":{\"22\":2,\"23\":2,\"24\":2}}],[\"secure\",{\"1\":{\"53\":1}}],[\"section\",{\"1\":{\"35\":5}}],[\"second\",{\"1\":{\"9\":3,\"31\":1,\"50\":1}}],[\"switch\",{\"0\":{\"50\":1},\"1\":{\"9\":2,\"50\":5}}],[\"s\",{\"1\":{\"7\":2,\"9\":2,\"30\":1,\"32\":4,\"33\":2,\"34\":6,\"37\":2,\"40\":2,\"41\":2,\"43\":3,\"46\":4,\"48\":2,\"49\":1,\"51\":2,\"82\":2}}],[\"store\",{\"1\":{\"37\":1,\"48\":1}}],[\"stdin\",{\"1\":{\"36\":2}}],[\"stdout\",{\"1\":{\"35\":1,\"37\":1}}],[\"strategies\",{\"1\":{\"43\":2}}],[\"strategy\",{\"1\":{\"32\":5,\"40\":5,\"41\":5,\"43\":5,\"46\":5}}],[\"str\",{\"1\":{\"35\":1}}],[\"strip\",{\"1\":{\"32\":1,\"34\":1,\"37\":1,\"40\":1,\"41\":1,\"46\":1,\"51\":1}}],[\"stringbuffer\",{\"1\":{\"5\":2,\"9\":2}}],[\"string\",{\"1\":{\"5\":3,\"9\":3,\"22\":2,\"23\":3,\"24\":2,\"25\":1,\"35\":2,\"56\":2,\"57\":2}}],[\"styles\",{\"1\":{\"37\":1}}],[\"style\",{\"1\":{\"30\":1,\"31\":2,\"37\":1,\"49\":1,\"50\":2,\"51\":1}}],[\"staged\",{\"1\":{\"48\":2}}],[\"stash\",{\"0\":{\"48\":1},\"1\":{\"40\":2,\"41\":2,\"43\":2,\"48\":23,\"49\":2}}],[\"start\",{\"1\":{\"30\":1,\"37\":2}}],[\"status\",{\"0\":{\"49\":1},\"1\":{\"34\":5,\"42\":1,\"47\":1,\"49\":4}}],[\"stat\",{\"1\":{\"29\":2,\"37\":2,\"39\":1,\"40\":2,\"41\":1,\"43\":2}}],[\"static\",{\"1\":{\"5\":3,\"9\":4,\"22\":4,\"23\":5,\"24\":4,\"25\":6,\"54\":1,\"56\":1,\"57\":1}}],[\"standard\",{\"1\":{\"22\":1,\"24\":1,\"35\":1,\"37\":1}}],[\"rf\",{\"1\":{\"93\":1}}],[\"rfc\",{\"1\":{\"37\":2}}],[\"rm\",{\"0\":{\"47\":1},\"1\":{\"47\":2,\"93\":1}}],[\"rather\",{\"1\":{\"41\":1}}],[\"range\",{\"1\":{\"37\":2}}],[\"rc\",{\"1\":{\"31\":2}}],[\"roll\",{\"1\":{\"37\":1}}],[\"root\",{\"1\":{\"29\":2,\"33\":1,\"43\":3}}],[\"ron\",{\"1\":{\"25\":1}}],[\"request\",{\"1\":{\"42\":1}}],[\"require\",{\"1\":{\"42\":2}}],[\"relevant\",{\"1\":{\"42\":1}}],[\"related\",{\"1\":{\"41\":2}}],[\"rebasing\",{\"1\":{\"41\":1}}],[\"rebased\",{\"1\":{\"43\":1}}],[\"rebase\",{\"0\":{\"43\":1},\"1\":{\"41\":1,\"43\":14}}],[\"reroll\",{\"1\":{\"37\":2}}],[\"rerere\",{\"1\":{\"32\":1,\"40\":1,\"43\":1,\"46\":1}}],[\"reapply\",{\"1\":{\"43\":1}}],[\"real\",{\"1\":{\"40\":1}}],[\"reachable\",{\"1\":{\"36\":1,\"41\":1,\"43\":1}}],[\"readable\",{\"1\":{\"34\":1,\"42\":1,\"49\":1}}],[\"read\",{\"1\":{\"28\":1,\"31\":1,\"34\":2,\"35\":1,\"40\":1,\"45\":1,\"47\":1,\"51\":1,\"57\":1}}],[\"re\",{\"1\":{\"36\":1,\"37\":1,\"43\":1}}],[\"reply\",{\"1\":{\"37\":2}}],[\"replace\",{\"1\":{\"35\":2,\"51\":1}}],[\"report\",{\"1\":{\"36\":1,\"41\":1,\"45\":1}}],[\"reporting\",{\"1\":{\"31\":2,\"33\":1,\"36\":1,\"40\":1,\"41\":1,\"42\":1,\"50\":2}}],[\"repository\",{\"1\":{\"33\":8,\"35\":1,\"36\":4,\"38\":2,\"41\":3,\"42\":3}}],[\"repo\",{\"1\":{\"33\":3,\"35\":1,\"42\":1}}],[\"regex\",{\"1\":{\"35\":1}}],[\"regexp\",{\"1\":{\"35\":2}}],[\"rewrite\",{\"1\":{\"34\":2}}],[\"reword\",{\"1\":{\"34\":3}}],[\"reuse\",{\"1\":{\"34\":3}}],[\"reused\",{\"1\":{\"32\":1,\"40\":1,\"43\":1,\"46\":1}}],[\"reedit\",{\"1\":{\"34\":1}}],[\"rev\",{\"1\":{\"33\":1,\"36\":1,\"37\":2,\"41\":1}}],[\"revision\",{\"1\":{\"33\":1,\"36\":2,\"37\":1,\"41\":2,\"43\":1}}],[\"revert\",{\"0\":{\"46\":1},\"1\":{\"32\":3,\"46\":6}}],[\"reverse\",{\"1\":{\"29\":2}}],[\"redundant\",{\"1\":{\"32\":2}}],[\"reschedule\",{\"1\":{\"43\":1}}],[\"resulting\",{\"1\":{\"37\":1}}],[\"resume\",{\"1\":{\"32\":1,\"46\":1}}],[\"respect\",{\"1\":{\"35\":1,\"51\":1}}],[\"resolution\",{\"1\":{\"32\":1,\"40\":1,\"43\":1,\"46\":1}}],[\"reset\",{\"0\":{\"45\":1},\"1\":{\"31\":1,\"34\":2,\"43\":1,\"45\":12,\"50\":1}}],[\"refine\",{\"1\":{\"43\":1}}],[\"refname\",{\"1\":{\"42\":1}}],[\"refmap\",{\"1\":{\"36\":3,\"41\":3}}],[\"refer\",{\"1\":{\"46\":1}}],[\"references\",{\"1\":{\"36\":2}}],[\"reference\",{\"1\":{\"33\":5,\"36\":1,\"46\":2}}],[\"refetch\",{\"1\":{\"36\":1}}],[\"refs\",{\"1\":{\"36\":3,\"41\":1,\"42\":5,\"43\":1}}],[\"refspecs\",{\"1\":{\"36\":1}}],[\"refspec\",{\"1\":{\"36\":2,\"37\":2,\"41\":1,\"42\":1}}],[\"ref\",{\"1\":{\"31\":1,\"36\":1,\"42\":1,\"50\":1}}],[\"reflog\",{\"1\":{\"30\":4,\"31\":1,\"51\":3}}],[\"refreshing\",{\"1\":{\"45\":1}}],[\"refresh\",{\"1\":{\"28\":2,\"45\":1}}],[\"renames\",{\"1\":{\"49\":4}}],[\"rename\",{\"1\":{\"30\":3,\"35\":2,\"44\":2}}],[\"renormalize\",{\"1\":{\"28\":2}}],[\"remote\",{\"0\":{\"44\":1},\"1\":{\"30\":2,\"33\":5,\"36\":4,\"38\":1,\"41\":3,\"42\":2,\"44\":21}}],[\"remotes\",{\"1\":{\"30\":1,\"36\":2,\"41\":1}}],[\"remove\",{\"1\":{\"29\":1,\"35\":4,\"44\":2,\"47\":1}}],[\"removed\",{\"1\":{\"28\":1,\"42\":1,\"45\":1,\"47\":1}}],[\"removal\",{\"1\":{\"28\":1,\"47\":1}}],[\"receive\",{\"1\":{\"42\":5}}],[\"recursive\",{\"1\":{\"31\":1,\"33\":1,\"36\":1,\"41\":1,\"42\":1,\"45\":1,\"47\":1,\"50\":1}}],[\"recurse\",{\"1\":{\"30\":3,\"31\":1,\"33\":2,\"36\":1,\"41\":1,\"42\":1,\"45\":1,\"50\":1}}],[\"recount\",{\"1\":{\"29\":1}}],[\"record\",{\"1\":{\"28\":1,\"45\":1}}],[\"rej\",{\"1\":{\"29\":1}}],[\"rejected\",{\"1\":{\"29\":1}}],[\"reject\",{\"1\":{\"29\":1,\"33\":1}}],[\"return\",{\"1\":{\"5\":6,\"9\":13,\"22\":4,\"23\":4,\"24\":4,\"25\":4,\"29\":1,\"56\":3,\"57\":3}}],[\"run\",{\"1\":{\"28\":3,\"34\":2,\"36\":4,\"41\":2,\"42\":2,\"43\":1,\"44\":1,\"47\":2}}],[\"rivest\",{\"1\":{\"25\":1}}],[\"rsa4096\",{\"1\":{\"90\":1}}],[\"rsa\",{\"0\":{\"25\":1},\"1\":{\"12\":1,\"25\":2,\"90\":1},\"2\":{\"26\":1}}],[\"r\",{\"1\":{\"7\":2,\"9\":2,\"29\":1,\"30\":5,\"41\":1,\"43\":1,\"47\":2}}],[\"weighted\",{\"1\":{\"37\":1}}],[\"we\",{\"1\":{\"36\":1,\"41\":1}}],[\"write\",{\"1\":{\"36\":4}}],[\"would\",{\"1\":{\"34\":1}}],[\"workspace\",{\"1\":{\"85\":1}}],[\"worktree\",{\"1\":{\"31\":2,\"35\":3,\"50\":1}}],[\"worktrees\",{\"1\":{\"31\":1,\"50\":1}}],[\"working\",{\"1\":{\"28\":1,\"29\":2,\"33\":1,\"38\":1,\"40\":1,\"45\":2}}],[\"wheel\",{\"1\":{\"82\":1}}],[\"where\",{\"1\":{\"43\":1}}],[\"when\",{\"1\":{\"29\":2,\"30\":1,\"35\":2,\"49\":2,\"51\":1}}],[\"what\",{\"1\":{\"34\":1,\"43\":2}}],[\"while\",{\"1\":{\"33\":1,\"37\":1,\"57\":1}}],[\"whitespace\",{\"1\":{\"29\":5,\"43\":3}}],[\"which\",{\"1\":{\"28\":1,\"33\":1,\"37\":1,\"38\":1}}],[\"way\",{\"1\":{\"29\":2,\"31\":1,\"50\":1}}],[\"was\",{\"1\":{\"5\":1,\"9\":1}}],[\"windows\",{\"1\":{\"35\":1}}],[\"within\",{\"1\":{\"36\":1}}],[\"without\",{\"1\":{\"29\":1,\"36\":1}}],[\"with\",{\"1\":{\"28\":2,\"29\":3,\"31\":3,\"32\":2,\"34\":4,\"35\":2,\"37\":2,\"40\":1,\"42\":2,\"43\":2,\"45\":2,\"46\":1,\"47\":3,\"49\":1,\"50\":1}}],[\"will\",{\"1\":{\"28\":1,\"33\":3,\"38\":1,\"45\":1}}],[\"w\",{\"1\":{\"7\":2,\"9\":2}}],[\"grep\",{\"1\":{\"39\":1}}],[\"graph\",{\"1\":{\"36\":2,\"39\":1}}],[\"group\",{\"1\":{\"36\":2,\"44\":1}}],[\"gc\",{\"1\":{\"36\":1}}],[\"global\",{\"1\":{\"35\":7,\"88\":3,\"90\":2}}],[\"gpgsign\",{\"1\":{\"90\":1}}],[\"gpg\",{\"0\":{\"89\":1},\"1\":{\"32\":2,\"34\":3,\"40\":3,\"41\":3,\"42\":1,\"43\":2,\"46\":2,\"51\":1,\"90\":5}}],[\"guess\",{\"1\":{\"31\":2,\"50\":2}}],[\"give\",{\"1\":{\"30\":1}}],[\"given\",{\"1\":{\"29\":2,\"31\":1,\"35\":3,\"43\":2,\"50\":1}}],[\"gitlab\",{\"1\":{\"42\":1,\"90\":1}}],[\"gitee\",{\"1\":{\"38\":1,\"42\":1}}],[\"github\",{\"1\":{\"38\":1,\"42\":1,\"44\":7}}],[\"gitconfig\",{\"1\":{\"35\":2}}],[\"gitdir\",{\"1\":{\"33\":1,\"38\":1}}],[\"gitignore\",{\"1\":{\"28\":1}}],[\"git\",{\"0\":{\"27\":1,\"86\":1},\"1\":{\"27\":1,\"28\":5,\"29\":3,\"30\":12,\"31\":6,\"32\":3,\"33\":5,\"34\":8,\"35\":7,\"36\":8,\"37\":2,\"38\":14,\"39\":10,\"40\":4,\"41\":5,\"42\":9,\"43\":6,\"44\":22,\"45\":5,\"46\":3,\"47\":2,\"48\":17,\"49\":2,\"50\":3,\"51\":10,\"87\":1,\"88\":3,\"90\":4},\"2\":{\"52\":1}}],[\"gen\",{\"1\":{\"90\":1}}],[\"generating\",{\"1\":{\"37\":1}}],[\"generate\",{\"1\":{\"37\":2}}],[\"generatekeypair\",{\"1\":{\"25\":1}}],[\"generic\",{\"1\":{\"30\":1}}],[\"get\",{\"0\":{\"93\":1},\"1\":{\"35\":11,\"44\":1,\"93\":4}}],[\"getpublic\",{\"1\":{\"25\":1}}],[\"getprivate\",{\"1\":{\"25\":1}}],[\"getbytes\",{\"1\":{\"23\":1,\"56\":1}}],[\"getinstance\",{\"1\":{\"21\":1,\"22\":3,\"23\":2,\"24\":2,\"25\":3,\"54\":1,\"56\":1,\"57\":2}}],[\"getcharindex\",{\"1\":{\"9\":5}}],[\"g\",{\"1\":{\"7\":2,\"9\":2,\"82\":2}}],[\"gbk\",{\"1\":{\"1\":1}}],[\"quit\",{\"1\":{\"32\":2,\"40\":1,\"43\":1,\"46\":2}}],[\"quiet\",{\"1\":{\"29\":2,\"30\":1,\"31\":1,\"33\":2,\"34\":1,\"36\":2,\"37\":1,\"38\":3,\"40\":2,\"41\":2,\"42\":2,\"43\":2,\"45\":2,\"47\":2,\"48\":6,\"50\":1}}],[\"q\",{\"1\":{\"7\":2,\"9\":2,\"29\":1,\"30\":1,\"31\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":2,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":4,\"47\":1,\"48\":6,\"50\":1}}],[\"没有\",{\"1\":{\"12\":1,\"17\":1}}],[\"没\",{\"1\":{\"6\":1}}],[\"瞎编\",{\"1\":{\"6\":1}}],[\"楼主\",{\"1\":{\"6\":1}}],[\"诞生\",{\"1\":{\"6\":2}}],[\"因此\",{\"1\":{\"6\":2,\"8\":3,\"9\":1,\"12\":1,\"14\":1,\"15\":1,\"17\":1,\"23\":1,\"25\":1,\"53\":1}}],[\"减半\",{\"1\":{\"6\":1}}],[\"都\",{\"1\":{\"6\":1,\"38\":1,\"53\":1}}],[\"效率\",{\"1\":{\"6\":1,\"14\":1,\"15\":1,\"25\":1}}],[\"传输\",{\"1\":{\"6\":1,\"56\":1,\"57\":1}}],[\"耗费\",{\"1\":{\"6\":1}}],[\"但\",{\"1\":{\"6\":1,\"10\":1,\"12\":1,\"48\":1}}],[\"但是\",{\"1\":{\"1\":1,\"8\":1,\"25\":1}}],[\"方法\",{\"1\":{\"21\":2,\"22\":1,\"54\":6}}],[\"方便\",{\"1\":{\"6\":1,\"21\":1}}],[\"方式\",{\"1\":{\"1\":1,\"4\":1,\"14\":1,\"91\":1}}],[\"虽然\",{\"1\":{\"6\":1,\"10\":1}}],[\"这么\",{\"1\":{\"53\":1}}],[\"这\",{\"1\":{\"6\":1,\"53\":1}}],[\"这个\",{\"1\":{\"0\":1,\"44\":1}}],[\"翻\",{\"1\":{\"6\":1}}],[\"需补位\",{\"1\":{\"8\":1}}],[\"需\",{\"1\":{\"6\":1,\"57\":1}}],[\"需要\",{\"1\":{\"1\":1,\"3\":1,\"5\":2,\"8\":1,\"10\":1,\"12\":1,\"14\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":2,\"21\":5,\"22\":1,\"23\":3,\"42\":1,\"48\":1,\"51\":1}}],[\"所\",{\"1\":{\"6\":1}}],[\"所以\",{\"1\":{\"4\":1}}],[\"?\",{\"1\":{\"5\":2}}],[\"https\",{\"1\":{\"93\":1}}],[\"histories\",{\"1\":{\"40\":2,\"41\":2}}],[\"history\",{\"1\":{\"33\":1,\"36\":4,\"41\":4}}],[\"hook\",{\"1\":{\"34\":1,\"42\":1,\"43\":1}}],[\"hooks\",{\"1\":{\"34\":1,\"40\":1,\"41\":1}}],[\"how\",{\"1\":{\"32\":1,\"34\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1,\"51\":1}}],[\"holding\",{\"1\":{\"31\":1,\"50\":1}}],[\"hard\",{\"1\":{\"45\":2}}],[\"hardlinks\",{\"1\":{\"33\":2}}],[\"handle\",{\"1\":{\"43\":1}}],[\"has\",{\"1\":{\"40\":1,\"41\":1}}],[\"hash\",{\"1\":{\"30\":1,\"37\":1,\"38\":2,\"53\":1}}],[\"have\",{\"1\":{\"29\":1,\"36\":1,\"41\":1}}],[\"hunk\",{\"1\":{\"29\":1}}],[\"hunks\",{\"1\":{\"28\":1,\"29\":2,\"31\":1,\"45\":1}}],[\"h\",{\"1\":{\"5\":5,\"7\":2,\"9\":2,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1}}],[\"header\",{\"1\":{\"37\":7}}],[\"headers\",{\"1\":{\"29\":1}}],[\"head\",{\"1\":{\"31\":1,\"33\":2,\"36\":5,\"41\":1,\"43\":1,\"44\":1,\"45\":5,\"50\":1}}],[\"height\",{\"1\":{\"5\":4}}],[\"hexutil\",{\"1\":{\"56\":1,\"57\":1}}],[\"hexstr\",{\"1\":{\"5\":8}}],[\"hexsrtbuff\",{\"1\":{\"5\":4}}],[\"hex\",{\"1\":{\"5\":12}}],[\"<\",{\"1\":{\"5\":5,\"9\":24,\"28\":3,\"29\":12,\"30\":28,\"31\":12,\"32\":8,\"33\":22,\"34\":26,\"35\":6,\"36\":20,\"37\":32,\"38\":12,\"40\":12,\"41\":19,\"42\":9,\"43\":16,\"44\":24,\"45\":8,\"46\":8,\"47\":3,\"48\":15,\"49\":8,\"50\":8,\"51\":34}}],[\"\\\"\",{\"1\":{\"5\":2,\"9\":2,\"22\":4,\"23\":6,\"24\":4,\"25\":2,\"35\":8,\"56\":2,\"57\":4,\"88\":4,\"90\":2,\"92\":2}}],[\"tips\",{\"1\":{\"36\":1}}],[\"tip\",{\"1\":{\"36\":1,\"41\":1}}],[\"time\",{\"1\":{\"33\":2,\"36\":2,\"41\":2}}],[\"type\",{\"1\":{\"35\":4}}],[\"tty\",{\"1\":{\"35\":1}}],[\"test\",{\"1\":{\"38\":6}}],[\"terminate\",{\"1\":{\"34\":1,\"35\":1,\"49\":1}}],[\"templates\",{\"1\":{\"33\":1,\"38\":1}}],[\"template\",{\"1\":{\"33\":2,\"34\":4,\"38\":4}}],[\"temporary\",{\"1\":{\"29\":1}}],[\"tagname\",{\"1\":{\"51\":3}}],[\"tag\",{\"0\":{\"51\":1},\"1\":{\"42\":4,\"51\":34}}],[\"tags\",{\"1\":{\"31\":1,\"33\":2,\"36\":7,\"41\":2,\"42\":6,\"44\":2,\"51\":7}}],[\"target\",{\"1\":{\"30\":2,\"40\":1}}],[\"twice\",{\"1\":{\"30\":1}}],[\"two\",{\"1\":{\"9\":4}}],[\"todo\",{\"1\":{\"43\":3}}],[\"token\",{\"1\":{\"34\":1}}],[\"tolerate\",{\"1\":{\"29\":1}}],[\"touches\",{\"1\":{\"29\":1}}],[\"touching\",{\"1\":{\"29\":1}}],[\"to\",{\"1\":{\"28\":1,\"29\":4,\"30\":4,\"31\":1,\"32\":1,\"33\":7,\"34\":4,\"35\":1,\"36\":7,\"37\":8,\"38\":2,\"40\":4,\"41\":9,\"42\":3,\"43\":13,\"45\":1,\"46\":3,\"47\":1,\"49\":1,\"50\":2,\"51\":4}}],[\"tostring\",{\"1\":{\"5\":1,\"9\":1}}],[\"true\",{\"1\":{\"35\":2,\"41\":1,\"90\":1}}],[\"trust\",{\"1\":{\"29\":1}}],[\"transaction\",{\"1\":{\"36\":1,\"42\":1}}],[\"transmit\",{\"1\":{\"33\":1,\"36\":1,\"41\":1,\"42\":1}}],[\"trailer\",{\"1\":{\"32\":1,\"34\":5,\"37\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1}}],[\"tracking\",{\"1\":{\"30\":3,\"31\":1,\"33\":1,\"36\":1,\"41\":1,\"50\":1}}],[\"track\",{\"1\":{\"30\":1,\"31\":1,\"33\":1,\"50\":1}}],[\"tracked\",{\"1\":{\"28\":3}}],[\"traditional\",{\"1\":{\"29\":1,\"49\":2}}],[\"tree\",{\"1\":{\"28\":1,\"29\":1,\"33\":1,\"37\":1,\"38\":1,\"40\":1,\"45\":5}}],[\"tripledes\",{\"1\":{\"23\":1}}],[\"try\",{\"1\":{\"22\":2,\"23\":2,\"24\":2,\"25\":3,\"43\":1,\"56\":1,\"57\":1}}],[\"t\",{\"1\":{\"7\":2,\"9\":2,\"28\":1,\"29\":3,\"30\":2,\"31\":1,\"32\":1,\"33\":4,\"34\":1,\"35\":1,\"36\":1,\"37\":4,\"41\":1,\"42\":1,\"44\":1,\"46\":1,\"50\":1,\"51\":1}}],[\"those\",{\"1\":{\"43\":1}}],[\"than\",{\"1\":{\"41\":1}}],[\"that\",{\"1\":{\"28\":1,\"29\":3,\"30\":4,\"33\":1,\"36\":2,\"38\":1,\"40\":1,\"41\":3,\"43\":5,\"45\":1,\"51\":4}}],[\"thin\",{\"1\":{\"42\":2}}],[\"this\",{\"1\":{\"35\":1,\"36\":1,\"41\":1,\"42\":1}}],[\"third\",{\"1\":{\"9\":3}}],[\"threading\",{\"1\":{\"37\":1}}],[\"thread\",{\"1\":{\"37\":1}}],[\"three\",{\"1\":{\"9\":4,\"29\":1}}],[\"through\",{\"1\":{\"30\":1,\"43\":1}}],[\"throw\",{\"1\":{\"5\":1,\"9\":1,\"31\":1,\"50\":2,\"57\":1}}],[\"thr\",{\"1\":{\"9\":1}}],[\"them\",{\"1\":{\"33\":1,\"43\":1}}],[\"their\",{\"1\":{\"31\":1,\"33\":1}}],[\"theirs\",{\"1\":{\"31\":1}}],[\"the\",{\"1\":{\"5\":1,\"28\":7,\"29\":19,\"30\":9,\"31\":2,\"32\":2,\"33\":4,\"34\":1,\"35\":3,\"36\":3,\"37\":6,\"38\":4,\"40\":10,\"41\":6,\"42\":1,\"43\":13,\"45\":2,\"46\":3,\"47\":3,\"50\":2,\"51\":6,\"57\":1}}],[\"!\",{\"1\":{\"5\":1,\"9\":2,\"43\":2,\"57\":1}}],[\"%\",{\"1\":{\"5\":1,\"9\":3}}],[\"ln\",{\"1\":{\"85\":1}}],[\"lf\",{\"1\":{\"35\":1}}],[\"log\",{\"0\":{\"39\":1},\"1\":{\"39\":10,\"40\":1,\"41\":1,\"48\":1}}],[\"lookup\",{\"1\":{\"35\":1}}],[\"location\",{\"1\":{\"35\":1}}],[\"locally\",{\"1\":{\"42\":2}}],[\"localhost\",{\"1\":{\"38\":1}}],[\"local\",{\"1\":{\"30\":1,\"31\":1,\"33\":3,\"35\":3,\"36\":2,\"38\":3,\"41\":1,\"45\":1,\"50\":2,\"51\":1}}],[\"longer\",{\"1\":{\"36\":2,\"41\":1}}],[\"long\",{\"1\":{\"34\":2,\"49\":2,\"90\":1}}],[\"low\",{\"1\":{\"5\":4}}],[\"linux\",{\"1\":{\"38\":1}}],[\"line\",{\"1\":{\"29\":3,\"35\":1}}],[\"lines\",{\"1\":{\"29\":3,\"43\":1,\"51\":1}}],[\"limit\",{\"1\":{\"31\":1}}],[\"listing\",{\"1\":{\"51\":1}}],[\"list\",{\"1\":{\"30\":4,\"35\":2,\"43\":3,\"47\":1,\"48\":2,\"49\":1,\"51\":3,\"90\":1}}],[\"listed\",{\"1\":{\"28\":1}}],[\"later\",{\"1\":{\"28\":1,\"33\":1,\"45\":1}}],[\"len\",{\"1\":{\"57\":3}}],[\"length\",{\"1\":{\"5\":3,\"9\":5,\"37\":2}}],[\"let\",{\"1\":{\"43\":1}}],[\"letter\",{\"1\":{\"37\":5}}],[\"lease\",{\"1\":{\"42\":1}}],[\"least\",{\"1\":{\"29\":2}}],[\"leave\",{\"1\":{\"29\":1,\"40\":1}}],[\"leading\",{\"1\":{\"29\":1}}],[\"leonard\",{\"1\":{\"25\":1}}],[\"leftbit\",{\"1\":{\"9\":10}}],[\"l\",{\"1\":{\"5\":5,\"7\":2,\"9\":2,\"30\":2,\"31\":1,\"33\":1,\"35\":1,\"51\":3}}],[\".\",{\"1\":{\"5\":8,\"9\":20,\"22\":10,\"23\":11,\"24\":10,\"25\":24,\"28\":5,\"29\":4,\"30\":6,\"31\":7,\"32\":3,\"34\":8,\"35\":9,\"36\":8,\"37\":1,\"38\":2,\"39\":3,\"40\":3,\"41\":8,\"42\":3,\"43\":1,\"44\":9,\"45\":6,\"46\":3,\"47\":3,\"48\":3,\"49\":6,\"51\":9,\"56\":5,\"57\":9,\"88\":3,\"90\":2,\"93\":6}}],[\"&\",{\"1\":{\"5\":7,\"9\":21}}],[\">\",{\"1\":{\"5\":4,\"9\":15,\"28\":3,\"29\":12,\"30\":28,\"31\":12,\"32\":8,\"33\":22,\"34\":26,\"35\":6,\"36\":20,\"37\":32,\"38\":12,\"40\":12,\"41\":19,\"42\":9,\"43\":16,\"44\":24,\"45\":8,\"46\":8,\"47\":3,\"48\":15,\"49\":8,\"50\":8,\"51\":34,\"57\":1}}],[\"io\",{\"1\":{\"93\":1}}],[\"ioexception\",{\"1\":{\"57\":1}}],[\"it\",{\"1\":{\"43\":1}}],[\"its\",{\"1\":{\"30\":2}}],[\"ipv6\",{\"1\":{\"33\":2,\"36\":2,\"41\":2,\"42\":2}}],[\"ipv4\",{\"1\":{\"33\":2,\"36\":2,\"41\":2,\"42\":2}}],[\"identical\",{\"1\":{\"37\":1}}],[\"ident\",{\"1\":{\"37\":3}}],[\"id\",{\"1\":{\"32\":1,\"34\":1,\"35\":1,\"37\":2,\"39\":1,\"40\":1,\"41\":1,\"43\":1,\"46\":1,\"51\":3,\"90\":1}}],[\"ish\",{\"1\":{\"45\":3}}],[\"is\",{\"1\":{\"29\":2,\"31\":1,\"34\":1,\"35\":8,\"37\":1,\"38\":1,\"40\":1,\"41\":1,\"43\":2,\"50\":1,\"57\":1}}],[\"ignore\",{\"1\":{\"28\":4,\"29\":5,\"30\":1,\"31\":3,\"37\":1,\"40\":1,\"43\":3,\"47\":2,\"49\":2,\"50\":2,\"51\":1}}],[\"ignored\",{\"1\":{\"28\":2,\"31\":1,\"40\":1,\"49\":2,\"50\":1}}],[\"implies\",{\"1\":{\"28\":1,\"33\":1,\"43\":1}}],[\"ivparameterspec\",{\"1\":{\"23\":1}}],[\"iv\",{\"1\":{\"17\":2,\"18\":1,\"19\":1,\"21\":1,\"22\":1,\"23\":2}}],[\"inline\",{\"1\":{\"37\":2}}],[\"install\",{\"1\":{\"87\":1,\"91\":1,\"92\":1}}],[\"instead\",{\"1\":{\"29\":3,\"33\":2,\"36\":2,\"37\":5,\"40\":2,\"41\":2,\"43\":2}}],[\"inside\",{\"1\":{\"33\":1}}],[\"insensitive\",{\"1\":{\"30\":1,\"51\":1}}],[\"info\",{\"1\":{\"30\":2,\"37\":1}}],[\"informational\",{\"1\":{\"30\":1}}],[\"information\",{\"1\":{\"29\":1,\"34\":1,\"49\":2}}],[\"inherit\",{\"1\":{\"30\":1,\"31\":1,\"50\":1}}],[\"incorporate\",{\"1\":{\"41\":1}}],[\"incorrectly\",{\"1\":{\"29\":1}}],[\"includes\",{\"1\":{\"35\":1,\"42\":1}}],[\"include\",{\"1\":{\"29\":1,\"33\":1,\"34\":2,\"35\":1,\"37\":1,\"48\":3}}],[\"inaccurate\",{\"1\":{\"29\":1}}],[\"inputstream\",{\"1\":{\"57\":3}}],[\"input\",{\"1\":{\"29\":2,\"35\":2,\"88\":1}}],[\"in\",{\"1\":{\"28\":2,\"29\":6,\"30\":1,\"33\":2,\"34\":3,\"36\":1,\"37\":8,\"40\":2,\"41\":1,\"43\":1,\"49\":2,\"51\":1}}],[\"invalidkeyexception\",{\"1\":{\"25\":2}}],[\"initial\",{\"1\":{\"38\":3}}],[\"initially\",{\"1\":{\"32\":1}}],[\"initialize\",{\"1\":{\"25\":1,\"33\":2}}],[\"initialization\",{\"1\":{\"17\":1}}],[\"init\",{\"0\":{\"38\":1},\"1\":{\"21\":1,\"22\":3,\"23\":2,\"24\":2,\"25\":2,\"38\":5}}],[\"index\",{\"1\":{\"9\":16,\"28\":1,\"29\":4,\"32\":1,\"34\":1,\"40\":2,\"43\":1,\"45\":4,\"46\":1,\"47\":1,\"48\":4,\"49\":1}}],[\"into\",{\"1\":{\"40\":1}}],[\"integrated\",{\"1\":{\"42\":1}}],[\"interdiff\",{\"1\":{\"37\":1}}],[\"interactively\",{\"1\":{\"28\":1,\"31\":1,\"34\":2,\"45\":1}}],[\"interactive\",{\"1\":{\"28\":2,\"34\":2,\"41\":1,\"43\":2}}],[\"intent\",{\"1\":{\"28\":1,\"29\":2,\"45\":1}}],[\"int\",{\"1\":{\"5\":5,\"9\":16,\"35\":3,\"57\":1}}],[\"i\",{\"1\":{\"5\":6,\"7\":2,\"9\":13,\"28\":1,\"30\":1,\"34\":2,\"43\":4,\"51\":1}}],[\"illegalblocksizeexception\",{\"1\":{\"25\":2}}],[\"illegal\",{\"1\":{\"5\":1,\"9\":1,\"57\":1}}],[\"illegalargumentexception\",{\"1\":{\"5\":1,\"9\":1,\"57\":1}}],[\"if\",{\"1\":{\"5\":3,\"9\":13,\"28\":1,\"29\":2,\"30\":3,\"31\":1,\"32\":1,\"33\":1,\"37\":3,\"40\":3,\"41\":2,\"42\":2,\"43\":3,\"46\":1,\"47\":1,\"50\":1,\"51\":1,\"57\":1}}],[\":\",{\"1\":{\"5\":3,\"9\":6,\"28\":1,\"29\":1,\"30\":9,\"31\":2,\"32\":2,\"33\":1,\"34\":6,\"35\":16,\"36\":4,\"37\":5,\"38\":2,\"40\":3,\"41\":1,\"42\":3,\"43\":3,\"44\":14,\"45\":4,\"46\":2,\"47\":1,\"48\":11,\"49\":7,\"50\":1,\"51\":4,\"93\":1}}],[\"nth\",{\"1\":{\"37\":1}}],[\"needs\",{\"1\":{\"51\":1}}],[\"negotiate\",{\"1\":{\"36\":1}}],[\"negotiation\",{\"1\":{\"36\":2,\"41\":1}}],[\"negotiating\",{\"1\":{\"36\":1}}],[\"newurl\",{\"1\":{\"44\":2}}],[\"newbase\",{\"1\":{\"43\":2}}],[\"new\",{\"1\":{\"5\":3,\"9\":3,\"22\":2,\"23\":3,\"24\":2,\"29\":3,\"30\":2,\"31\":5,\"33\":1,\"35\":2,\"44\":1,\"50\":4,\"57\":4}}],[\"named\",{\"1\":{\"31\":1,\"40\":1,\"41\":1,\"50\":1}}],[\"names\",{\"1\":{\"30\":2,\"35\":1,\"37\":1,\"51\":1}}],[\"name\",{\"1\":{\"30\":4,\"32\":1,\"33\":2,\"35\":13,\"38\":4,\"39\":1,\"40\":3,\"42\":3,\"44\":10,\"51\":8,\"88\":2,\"92\":1}}],[\"non\",{\"1\":{\"40\":1}}],[\"now\",{\"1\":{\"34\":1}}],[\"nothing\",{\"1\":{\"47\":1}}],[\"not\",{\"1\":{\"29\":1,\"30\":2,\"31\":2,\"33\":1,\"36\":2,\"40\":2,\"41\":2,\"43\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"95\":1}}],[\"notation\",{\"1\":{\"29\":1}}],[\"normal\",{\"1\":{\"29\":1,\"34\":1,\"49\":1}}],[\"no\",{\"1\":{\"28\":1,\"29\":1,\"30\":3,\"31\":1,\"32\":1,\"33\":3,\"34\":5,\"36\":3,\"37\":3,\"40\":1,\"41\":1,\"42\":3,\"43\":4,\"44\":1,\"45\":1,\"46\":2,\"48\":2,\"49\":3,\"50\":1,\"51\":5}}],[\"nosuchpaddingexception\",{\"1\":{\"25\":2}}],[\"nosuchalgorithmexception\",{\"1\":{\"25\":3,\"56\":1,\"57\":1}}],[\"nopadding\",{\"1\":{\"21\":1}}],[\"nul\",{\"1\":{\"28\":2,\"29\":1,\"31\":2,\"34\":4,\"35\":1,\"45\":3,\"47\":3,\"48\":1,\"49\":1}}],[\"null\",{\"1\":{\"3\":1,\"5\":4,\"9\":4,\"22\":2,\"23\":2,\"24\":2,\"25\":3,\"34\":1,\"35\":1,\"49\":1,\"56\":1,\"57\":1}}],[\"numbering\",{\"1\":{\"37\":1}}],[\"numbered\",{\"1\":{\"37\":3}}],[\"number\",{\"1\":{\"29\":1,\"32\":2,\"33\":1,\"35\":1,\"36\":1,\"37\":2,\"41\":1,\"46\":2}}],[\"numstat\",{\"1\":{\"29\":1}}],[\"num\",{\"1\":{\"9\":7,\"29\":2,\"39\":2,\"51\":1}}],[\"n\",{\"1\":{\"7\":2,\"9\":2,\"28\":2,\"29\":3,\"30\":2,\"32\":2,\"33\":2,\"34\":1,\"36\":3,\"37\":7,\"40\":3,\"41\":5,\"42\":1,\"43\":2,\"44\":2,\"45\":1,\"46\":2,\"47\":2,\"49\":1,\"51\":5}}],[\")\",{\"1\":{\"5\":27,\"9\":57,\"22\":14,\"23\":16,\"24\":14,\"25\":35,\"28\":3,\"29\":1,\"30\":5,\"31\":6,\"32\":1,\"33\":1,\"34\":10,\"35\":3,\"36\":2,\"37\":2,\"40\":6,\"41\":3,\"42\":4,\"43\":1,\"44\":2,\"46\":1,\"48\":2,\"49\":4,\"50\":4,\"56\":7,\"57\":19}}],[\"(\",{\"1\":{\"5\":27,\"9\":57,\"22\":14,\"23\":16,\"24\":14,\"25\":35,\"28\":3,\"29\":1,\"30\":5,\"31\":6,\"32\":1,\"33\":1,\"34\":9,\"35\":3,\"36\":2,\"37\":2,\"40\":6,\"41\":3,\"42\":4,\"43\":1,\"44\":2,\"46\":1,\"48\":2,\"49\":4,\"50\":4,\"56\":7,\"57\":19}}],[\"py\",{\"1\":{\"93\":4}}],[\"pypa\",{\"1\":{\"93\":1}}],[\"python3\",{\"1\":{\"91\":1,\"92\":2,\"93\":1}}],[\"python\",{\"0\":{\"91\":1},\"1\":{\"91\":2}}],[\"pip\",{\"0\":{\"93\":1},\"1\":{\"91\":2,\"93\":5}}],[\"picks\",{\"1\":{\"43\":1}}],[\"pick\",{\"0\":{\"32\":1},\"1\":{\"32\":6,\"43\":2,\"46\":3}}],[\"picking\",{\"1\":{\"28\":1}}],[\"placed\",{\"1\":{\"44\":1}}],[\"place\",{\"1\":{\"36\":1}}],[\"pushing\",{\"1\":{\"42\":1}}],[\"push\",{\"0\":{\"42\":1},\"1\":{\"38\":1,\"42\":14,\"44\":4,\"48\":1}}],[\"pulled\",{\"1\":{\"41\":1}}],[\"pull\",{\"0\":{\"41\":1},\"1\":{\"36\":1,\"41\":3,\"42\":1}}],[\"publickey\",{\"1\":{\"25\":4}}],[\"public\",{\"1\":{\"5\":2,\"9\":2,\"14\":1,\"22\":2,\"23\":2,\"24\":2,\"25\":2,\"56\":1,\"57\":1}}],[\"permissions\",{\"1\":{\"38\":2}}],[\"percentage\",{\"1\":{\"37\":1}}],[\"per\",{\"1\":{\"35\":1}}],[\"perform\",{\"1\":{\"31\":1,\"40\":1,\"41\":1,\"50\":1}}],[\"pop\",{\"1\":{\"40\":1,\"41\":1,\"43\":1,\"48\":3}}],[\"post\",{\"1\":{\"34\":2}}],[\"possible\",{\"1\":{\"32\":1,\"40\":2,\"41\":1,\"43\":1,\"46\":1}}],[\"porcelain\",{\"1\":{\"34\":1,\"42\":1,\"49\":1}}],[\"points\",{\"1\":{\"30\":2,\"51\":2}}],[\"point\",{\"1\":{\"30\":1,\"43\":3}}],[\"program\",{\"1\":{\"42\":2}}],[\"progress\",{\"1\":{\"31\":3,\"33\":2,\"36\":2,\"37\":2,\"40\":4,\"41\":2,\"42\":2,\"50\":3}}],[\"prune\",{\"1\":{\"36\":4,\"41\":2,\"42\":2,\"44\":2}}],[\"present\",{\"1\":{\"43\":1}}],[\"preserve\",{\"1\":{\"32\":1}}],[\"prerequisite\",{\"1\":{\"37\":1}}],[\"prefix\",{\"1\":{\"37\":3}}],[\"prefetch\",{\"1\":{\"36\":2}}],[\"previous\",{\"1\":{\"34\":1}}],[\"pre\",{\"1\":{\"34\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1}}],[\"prepend\",{\"1\":{\"29\":1}}],[\"print\",{\"1\":{\"30\":5,\"36\":1,\"37\":2,\"51\":6}}],[\"printstacktrace\",{\"1\":{\"22\":2,\"23\":2,\"24\":2,\"25\":11,\"56\":1,\"57\":3}}],[\"privatekey\",{\"1\":{\"25\":4}}],[\"private\",{\"1\":{\"9\":1,\"14\":1,\"22\":2,\"23\":3,\"24\":2,\"25\":3}}],[\"passwd\",{\"1\":{\"82\":1}}],[\"pass\",{\"1\":{\"43\":1}}],[\"passed\",{\"1\":{\"43\":2}}],[\"packfile\",{\"1\":{\"36\":1}}],[\"pack\",{\"1\":{\"33\":2,\"36\":3,\"41\":3,\"42\":6}}],[\"parts\",{\"1\":{\"37\":1}}],[\"partial\",{\"1\":{\"33\":1}}],[\"parallel\",{\"1\":{\"33\":1,\"36\":1,\"41\":1}}],[\"param\",{\"1\":{\"5\":2,\"9\":3,\"56\":1,\"57\":1}}],[\"parent\",{\"1\":{\"32\":3,\"46\":3}}],[\"paht\",{\"1\":{\"28\":1}}],[\"pattern\",{\"1\":{\"30\":1,\"35\":7,\"51\":1}}],[\"paths\",{\"1\":{\"28\":1,\"29\":3,\"45\":1}}],[\"pathspecs\",{\"1\":{\"31\":1}}],[\"pathspec\",{\"1\":{\"28\":6,\"31\":5,\"33\":2,\"34\":8,\"45\":9,\"47\":8,\"48\":3,\"49\":1}}],[\"path\",{\"1\":{\"28\":2,\"29\":4,\"33\":2,\"35\":2,\"36\":2,\"40\":1,\"41\":2,\"57\":3}}],[\"patches\",{\"1\":{\"29\":1,\"37\":4}}],[\"patch\",{\"0\":{\"37\":1},\"1\":{\"28\":1,\"29\":12,\"31\":1,\"34\":2,\"37\":19,\"43\":3,\"45\":2,\"48\":2}}],[\"pkcs5padding\",{\"1\":{\"21\":2,\"22\":3,\"23\":1,\"24\":1}}],[\"p\",{\"1\":{\"7\":2,\"9\":3,\"28\":1,\"29\":1,\"31\":1,\"34\":1,\"36\":2,\"37\":1,\"39\":1,\"41\":1,\"44\":1,\"45\":1,\"48\":2}}],[\"@\",{\"1\":{\"5\":4,\"9\":6,\"35\":1,\"38\":1,\"44\":1,\"56\":2,\"57\":2}}],[\";\",{\"1\":{\"5\":19,\"9\":67,\"22\":12,\"23\":13,\"24\":12,\"25\":28,\"36\":1,\"44\":1,\"56\":5,\"57\":13}}],[\"}\",{\"1\":{\"5\":6,\"9\":10,\"22\":6,\"23\":6,\"24\":6,\"25\":17,\"43\":1,\"56\":3,\"57\":6}}],[\"each\",{\"1\":{\"43\":2,\"51\":1}}],[\"etc\",{\"1\":{\"35\":1}}],[\"equality\",{\"1\":{\"35\":1}}],[\"equalsigncount\",{\"1\":{\"9\":3}}],[\"error\",{\"1\":{\"29\":1}}],[\"errors\",{\"1\":{\"28\":2,\"29\":1,\"45\":1}}],[\"email\",{\"1\":{\"35\":1,\"37\":3,\"39\":1,\"88\":2,\"90\":1}}],[\"empty\",{\"1\":{\"29\":2,\"32\":5,\"34\":2,\"43\":2}}],[\"embedded\",{\"1\":{\"29\":1}}],[\"eof\",{\"1\":{\"29\":1}}],[\"eol\",{\"1\":{\"28\":1}}],[\"exit\",{\"1\":{\"47\":1}}],[\"exists\",{\"1\":{\"30\":2,\"51\":1,\"57\":1}}],[\"exec\",{\"1\":{\"42\":1,\"43\":7}}],[\"executable\",{\"1\":{\"28\":1}}],[\"example\",{\"1\":{\"35\":2}}],[\"export\",{\"1\":{\"90\":1}}],[\"expiry\",{\"1\":{\"35\":2}}],[\"expect\",{\"1\":{\"29\":1,\"42\":1}}],[\"excluding\",{\"1\":{\"33\":1,\"36\":1,\"41\":1}}],[\"exclude\",{\"1\":{\"29\":1,\"33\":1,\"36\":1,\"41\":1}}],[\"exception\",{\"1\":{\"22\":2,\"23\":2,\"24\":2}}],[\"env\",{\"0\":{\"92\":1},\"1\":{\"92\":2}}],[\"enable\",{\"1\":{\"37\":1}}],[\"entry\",{\"1\":{\"35\":1}}],[\"entries\",{\"1\":{\"28\":1,\"31\":1,\"34\":1,\"40\":1,\"41\":1,\"47\":1,\"49\":1}}],[\"end\",{\"1\":{\"29\":1,\"32\":1,\"36\":1,\"40\":2,\"41\":3,\"46\":1}}],[\"ensure\",{\"1\":{\"29\":1}}],[\"encrypt\",{\"1\":{\"22\":2,\"23\":2,\"24\":2,\"25\":2}}],[\"encryption\",{\"1\":{\"22\":1,\"24\":1}}],[\"encode\",{\"1\":{\"5\":1,\"9\":1,\"56\":1,\"57\":1}}],[\"even\",{\"1\":{\"28\":1,\"30\":3,\"37\":3,\"43\":3,\"47\":1}}],[\"editable\",{\"1\":{\"43\":1}}],[\"editor\",{\"1\":{\"35\":1,\"83\":1}}],[\"edit\",{\"1\":{\"28\":2,\"30\":2,\"32\":3,\"34\":3,\"35\":1,\"40\":2,\"41\":2,\"43\":4,\"46\":3,\"51\":2}}],[\"ecb\",{\"1\":{\"16\":1,\"17\":1,\"22\":3,\"24\":1}}],[\"elements\",{\"1\":{\"28\":1,\"31\":1,\"34\":1,\"45\":1,\"47\":1}}],[\"electronic\",{\"1\":{\"16\":1}}],[\"else\",{\"1\":{\"9\":5}}],[\"e\",{\"1\":{\"5\":1,\"7\":2,\"9\":2,\"22\":4,\"23\":5,\"24\":4,\"25\":22,\"28\":1,\"32\":1,\"34\":2,\"35\":1,\"37\":1,\"40\":1,\"46\":1,\"51\":2,\"56\":2,\"57\":6}}],[\"drop\",{\"1\":{\"43\":1,\"48\":3}}],[\"dry\",{\"1\":{\"28\":3,\"34\":2,\"36\":2,\"41\":2,\"42\":2,\"44\":1,\"47\":2}}],[\"during\",{\"1\":{\"43\":1}}],[\"date\",{\"1\":{\"34\":5,\"35\":2,\"43\":7,\"47\":1}}],[\"data\",{\"1\":{\"5\":7,\"9\":15,\"22\":5,\"23\":4,\"24\":4,\"25\":4,\"56\":3,\"57\":1,\"84\":2,\"85\":2}}],[\"digest\",{\"1\":{\"53\":1,\"54\":2,\"56\":3,\"57\":3}}],[\"digits\",{\"1\":{\"30\":1}}],[\"discard\",{\"1\":{\"50\":1}}],[\"dissociate\",{\"1\":{\"33\":1}}],[\"display\",{\"1\":{\"30\":1,\"43\":1}}],[\"dirty\",{\"1\":{\"49\":1}}],[\"dir\",{\"1\":{\"33\":3,\"37\":2,\"38\":4}}],[\"directives\",{\"1\":{\"35\":1}}],[\"direct\",{\"1\":{\"30\":1,\"31\":1,\"50\":1}}],[\"directory\",{\"1\":{\"29\":1,\"33\":2,\"35\":1,\"37\":1,\"38\":4}}],[\"diffs\",{\"1\":{\"37\":1}}],[\"diffstat\",{\"1\":{\"29\":1,\"40\":2,\"41\":2,\"43\":2}}],[\"diff3\",{\"1\":{\"31\":1,\"50\":1}}],[\"diff\",{\"1\":{\"28\":1,\"29\":1,\"34\":1,\"37\":1,\"48\":1}}],[\"docs\",{\"1\":{\"44\":1}}],[\"doing\",{\"1\":{\"40\":1,\"41\":1}}],[\"downloaded\",{\"1\":{\"36\":1,\"41\":1}}],[\"downloading\",{\"1\":{\"33\":1}}],[\"do\",{\"1\":{\"29\":1,\"31\":2,\"36\":2,\"40\":1,\"41\":1,\"43\":1,\"47\":1,\"49\":1,\"50\":1}}],[\"don\",{\"1\":{\"28\":1,\"29\":3,\"30\":1,\"32\":1,\"33\":4,\"37\":4,\"46\":1,\"51\":1}}],[\"dofinal\",{\"1\":{\"21\":1,\"22\":2,\"23\":2,\"24\":2,\"25\":2}}],[\"deep\",{\"1\":{\"37\":1}}],[\"deepen\",{\"1\":{\"33\":1,\"36\":5,\"41\":5}}],[\"demand\",{\"1\":{\"36\":1,\"41\":1,\"42\":1}}],[\"depth\",{\"1\":{\"33\":3,\"36\":2,\"41\":2}}],[\"detach\",{\"1\":{\"31\":2,\"50\":2}}],[\"detected\",{\"1\":{\"29\":1}}],[\"detect\",{\"1\":{\"29\":1,\"49\":2}}],[\"dev\",{\"1\":{\"30\":2,\"31\":1,\"84\":1}}],[\"deletion\",{\"1\":{\"30\":1}}],[\"delete\",{\"1\":{\"30\":3,\"42\":2,\"44\":2,\"51\":2}}],[\"deleted\",{\"1\":{\"29\":1}}],[\"decimal\",{\"1\":{\"29\":1,\"35\":1}}],[\"decrypt\",{\"1\":{\"22\":2,\"23\":2,\"24\":2,\"25\":2}}],[\"decode\",{\"1\":{\"5\":1,\"9\":1}}],[\"default\",{\"1\":{\"22\":3,\"23\":3,\"24\":3,\"25\":4,\"31\":3,\"34\":2,\"35\":3,\"37\":1,\"40\":3,\"41\":1,\"49\":4,\"50\":1}}],[\"description\",{\"1\":{\"30\":2,\"37\":3}}],[\"desede\",{\"1\":{\"23\":4}}],[\"des\",{\"0\":{\"22\":1,\"23\":1},\"1\":{\"12\":3,\"21\":1,\"22\":4,\"23\":10,\"24\":2},\"2\":{\"26\":2}}],[\"d\",{\"1\":{\"5\":1,\"7\":2,\"9\":2,\"23\":1,\"30\":5,\"31\":1,\"42\":3,\"44\":1,\"50\":1,\"51\":3,\"53\":1}}],[\"cmd\",{\"1\":{\"43\":2}}],[\"cc\",{\"1\":{\"37\":2}}],[\"crlf\",{\"1\":{\"35\":1}}],[\"creation\",{\"1\":{\"30\":1,\"37\":2,\"51\":1}}],[\"create\",{\"1\":{\"30\":2,\"31\":3,\"33\":5,\"38\":1,\"40\":1,\"41\":1,\"48\":1,\"50\":4,\"51\":3}}],[\"curl\",{\"1\":{\"93\":1}}],[\"current\",{\"1\":{\"28\":1,\"29\":1,\"30\":2,\"32\":1,\"40\":2,\"43\":4,\"46\":1}}],[\"custom\",{\"1\":{\"34\":1}}],[\"clear\",{\"1\":{\"48\":1}}],[\"cleanup\",{\"1\":{\"32\":1,\"34\":2,\"40\":1,\"41\":1,\"46\":1,\"51\":1}}],[\"clobber\",{\"1\":{\"36\":1}}],[\"cloning\",{\"1\":{\"33\":1}}],[\"cloned\",{\"1\":{\"33\":3}}],[\"clone\",{\"0\":{\"33\":1},\"1\":{\"33\":11,\"36\":3,\"41\":3}}],[\"core\",{\"1\":{\"88\":1}}],[\"corresponding\",{\"1\":{\"29\":1}}],[\"count\",{\"1\":{\"37\":2}}],[\"counts\",{\"1\":{\"29\":1}}],[\"cover\",{\"1\":{\"37\":7}}],[\"com\",{\"1\":{\"35\":1,\"44\":1}}],[\"complete\",{\"1\":{\"36\":1,\"41\":1}}],[\"comparing\",{\"1\":{\"35\":1}}],[\"compute\",{\"1\":{\"34\":1,\"49\":1}}],[\"common\",{\"1\":{\"36\":1}}],[\"command\",{\"1\":{\"35\":2}}],[\"comments\",{\"1\":{\"32\":1,\"34\":1,\"40\":1,\"41\":1,\"46\":1,\"51\":1}}],[\"committing\",{\"1\":{\"40\":1,\"41\":1}}],[\"committer\",{\"1\":{\"37\":1,\"43\":2}}],[\"committed\",{\"1\":{\"34\":1}}],[\"commits\",{\"1\":{\"32\":4,\"36\":1,\"43\":8,\"46\":1}}],[\"commit\",{\"0\":{\"34\":1},\"1\":{\"30\":6,\"31\":1,\"32\":7,\"34\":39,\"36\":2,\"37\":3,\"40\":10,\"41\":8,\"43\":2,\"45\":1,\"46\":6,\"48\":1,\"50\":1,\"51\":12,\"90\":1}}],[\"columns\",{\"1\":{\"30\":1,\"49\":1,\"51\":1}}],[\"column\",{\"1\":{\"30\":1,\"49\":1,\"51\":3}}],[\"colors\",{\"1\":{\"51\":1}}],[\"colorbool\",{\"1\":{\"35\":1}}],[\"colored\",{\"1\":{\"30\":1}}],[\"color\",{\"1\":{\"30\":1,\"35\":3,\"51\":1}}],[\"copy\",{\"1\":{\"30\":3,\"33\":1}}],[\"convert\",{\"1\":{\"36\":1,\"41\":1}}],[\"concisely\",{\"1\":{\"34\":1,\"49\":1}}],[\"configured\",{\"1\":{\"35\":1}}],[\"configuration\",{\"1\":{\"30\":1,\"31\":1,\"50\":1}}],[\"config\",{\"0\":{\"35\":1},\"1\":{\"33\":2,\"35\":15,\"44\":1,\"83\":1,\"88\":3,\"90\":3}}],[\"conflict\",{\"1\":{\"31\":2,\"32\":1,\"40\":1,\"43\":1,\"46\":1,\"50\":2}}],[\"contents\",{\"1\":{\"34\":1}}],[\"context\",{\"1\":{\"29\":4}}],[\"continue\",{\"1\":{\"32\":3,\"40\":3,\"43\":4,\"46\":3}}],[\"control\",{\"1\":{\"31\":1,\"36\":1,\"41\":2,\"42\":1,\"45\":1,\"50\":1}}],[\"contain\",{\"1\":{\"30\":2,\"51\":2}}],[\"contains\",{\"1\":{\"30\":2,\"51\":4}}],[\"cone\",{\"1\":{\"28\":1,\"47\":1}}],[\"code\",{\"1\":{\"16\":1}}],[\"cherry\",{\"0\":{\"32\":1},\"1\":{\"32\":6,\"43\":3,\"46\":3}}],[\"checkout\",{\"0\":{\"31\":1},\"1\":{\"28\":1,\"31\":12,\"33\":4,\"47\":1,\"50\":2}}],[\"check\",{\"1\":{\"28\":1,\"29\":2,\"31\":1,\"36\":1,\"41\":1,\"42\":1,\"43\":1,\"47\":1,\"50\":1}}],[\"chmod\",{\"1\":{\"28\":1}}],[\"changed\",{\"1\":{\"34\":1,\"36\":1,\"43\":2}}],[\"change\",{\"1\":{\"29\":1,\"30\":1}}],[\"changes\",{\"1\":{\"28\":1,\"29\":4,\"34\":1,\"37\":2,\"41\":1,\"43\":2,\"45\":1,\"49\":1,\"50\":1}}],[\"chaining\",{\"1\":{\"17\":1}}],[\"character\",{\"1\":{\"28\":1,\"29\":1,\"31\":1,\"34\":1,\"45\":1,\"47\":1}}],[\"charat\",{\"1\":{\"5\":2,\"9\":5}}],[\"char\",{\"1\":{\"5\":3,\"9\":2}}],[\"can\",{\"1\":{\"42\":1}}],[\"cancel\",{\"1\":{\"32\":1,\"46\":1}}],[\"cannot\",{\"1\":{\"28\":1}}],[\"cached\",{\"1\":{\"29\":1,\"47\":2}}],[\"catch\",{\"1\":{\"22\":2,\"23\":2,\"24\":2,\"25\":11,\"56\":1,\"57\":3}}],[\"case\",{\"1\":{\"9\":6,\"30\":2,\"51\":2}}],[\"cfb\",{\"1\":{\"18\":1,\"19\":3,\"22\":1}}],[\"cbc\",{\"1\":{\"17\":1,\"22\":1,\"23\":1}}],[\"cipher\",{\"1\":{\"17\":1,\"18\":1,\"21\":2,\"22\":15,\"23\":15,\"24\":15,\"25\":16}}],[\"c\",{\"1\":{\"5\":1,\"7\":2,\"9\":15,\"29\":1,\"30\":4,\"33\":1,\"34\":6,\"43\":1,\"50\":2}}],[\"{\",{\"1\":{\"5\":6,\"9\":10,\"22\":6,\"23\":6,\"24\":6,\"25\":17,\"43\":1,\"56\":3,\"57\":6}}],[\"]\",{\"1\":{\"5\":16,\"9\":20,\"22\":6,\"23\":6,\"24\":6,\"25\":4,\"28\":2,\"29\":2,\"30\":27,\"31\":5,\"32\":9,\"33\":5,\"34\":31,\"35\":10,\"36\":8,\"37\":13,\"38\":10,\"40\":4,\"41\":9,\"42\":5,\"43\":13,\"44\":17,\"45\":14,\"46\":8,\"47\":10,\"48\":37,\"49\":9,\"50\":4,\"51\":22,\"54\":1,\"56\":1,\"57\":3,\"90\":1}}],[\"[\",{\"1\":{\"5\":16,\"9\":20,\"22\":6,\"23\":6,\"24\":6,\"25\":4,\"28\":2,\"29\":2,\"30\":27,\"31\":5,\"32\":9,\"33\":5,\"34\":31,\"35\":10,\"36\":8,\"37\":13,\"38\":10,\"40\":4,\"41\":9,\"42\":5,\"43\":13,\"44\":17,\"45\":14,\"46\":8,\"47\":10,\"48\":37,\"49\":9,\"50\":4,\"51\":22,\"54\":1,\"56\":1,\"57\":3,\"90\":1}}],[\"/\",{\"1\":{\"5\":14,\"7\":1,\"8\":1,\"9\":34,\"21\":2,\"22\":8,\"23\":4,\"24\":2,\"29\":2,\"30\":3,\"31\":2,\"34\":4,\"35\":5,\"36\":5,\"37\":2,\"39\":2,\"40\":1,\"41\":4,\"42\":3,\"43\":2,\"44\":2,\"49\":1,\"50\":1,\"54\":6,\"56\":2,\"57\":2,\"82\":5,\"84\":6,\"85\":5,\"90\":1,\"93\":3}}],[\"高级\",{\"1\":{\"24\":1}}],[\"高\",{\"1\":{\"5\":1}}],[\"做\",{\"1\":{\"5\":1,\"6\":2,\"9\":1,\"21\":1,\"23\":4,\"54\":1}}],[\"找出\",{\"1\":{\"5\":1}}],[\"每次\",{\"1\":{\"23\":1,\"39\":1,\"51\":1}}],[\"每块\",{\"1\":{\"16\":2,\"17\":1,\"18\":1}}],[\"每\",{\"1\":{\"5\":1}}],[\"每个\",{\"1\":{\"5\":1,\"7\":1,\"19\":1,\"21\":1,\"22\":1,\"23\":1,\"39\":1}}],[\"最新\",{\"1\":{\"51\":2}}],[\"最近\",{\"1\":{\"39\":1,\"48\":2}}],[\"最终\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1}}],[\"最\",{\"1\":{\"14\":1,\"16\":1}}],[\"最后\",{\"1\":{\"5\":1}}],[\"最小\",{\"1\":{\"1\":1}}],[\"索引\",{\"1\":{\"5\":1,\"7\":4,\"8\":4,\"9\":1}}],[\"作为\",{\"1\":{\"5\":1,\"20\":1}}],[\"然后\",{\"1\":{\"5\":2}}],[\"运算\",{\"1\":{\"5\":1}}],[\"独立\",{\"1\":{\"5\":1}}],[\"规则\",{\"1\":{\"5\":1,\"6\":1,\"12\":1}}],[\"再用\",{\"1\":{\"17\":2}}],[\"再\",{\"1\":{\"4\":1,\"18\":1,\"20\":1}}],[\"+\",{\"1\":{\"4\":1,\"5\":5,\"7\":1,\"9\":24,\"28\":1,\"37\":1}}],[\"*\",{\"1\":{\"4\":1,\"5\":18,\"8\":3,\"9\":32,\"29\":1,\"54\":16,\"56\":7,\"57\":7}}],[\"余\",{\"1\":{\"4\":1}}],[\"计算\",{\"0\":{\"56\":1,\"57\":1},\"1\":{\"4\":1,\"54\":3,\"56\":1,\"57\":3,\"58\":1}}],[\"计算机\",{\"1\":{\"1\":1,\"6\":1}}],[\"计算机领域\",{\"1\":{\"1\":1}}],[\"转\",{\"1\":{\"5\":3,\"9\":3}}],[\"转成\",{\"1\":{\"4\":3,\"5\":2,\"9\":2}}],[\"转换\",{\"1\":{\"3\":1,\"21\":2,\"35\":1}}],[\"将长\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"19\":1}}],[\"将\",{\"1\":{\"4\":1,\"5\":2,\"6\":1,\"12\":1,\"15\":1,\"16\":1,\"17\":2,\"18\":2,\"19\":2,\"20\":1,\"25\":1,\"28\":1,\"34\":1,\"42\":1,\"48\":1,\"53\":1,\"54\":1,\"57\":1,\"82\":1,\"84\":1}}],[\"换算\",{\"0\":{\"4\":1,\"8\":1},\"1\":{\"5\":1,\"8\":2}}],[\"7\",{\"1\":{\"3\":1,\"5\":1,\"7\":2,\"9\":1,\"21\":4}}],[\"63\",{\"1\":{\"7\":1,\"9\":1}}],[\"62\",{\"1\":{\"7\":1,\"9\":1}}],[\"61\",{\"1\":{\"7\":1}}],[\"60\",{\"1\":{\"7\":1}}],[\"64\",{\"1\":{\"7\":2,\"9\":1,\"22\":1}}],[\"6\",{\"1\":{\"3\":1,\"4\":2,\"5\":1,\"7\":4,\"8\":3,\"9\":3,\"33\":1,\"36\":1,\"41\":1,\"42\":1}}],[\"65\",{\"1\":{\"3\":1,\"8\":2}}],[\"59\",{\"1\":{\"7\":1}}],[\"58\",{\"1\":{\"7\":1}}],[\"57\",{\"1\":{\"7\":1}}],[\"56\",{\"1\":{\"7\":1}}],[\"55\",{\"1\":{\"7\":1}}],[\"54\",{\"1\":{\"7\":1}}],[\"53\",{\"1\":{\"7\":1}}],[\"52\",{\"1\":{\"7\":1,\"9\":1,\"31\":2}}],[\"51\",{\"1\":{\"7\":1}}],[\"50\",{\"1\":{\"7\":1}}],[\"5\",{\"1\":{\"3\":1,\"5\":1,\"7\":2,\"8\":1,\"9\":1}}],[\"31\",{\"1\":{\"7\":1}}],[\"30\",{\"1\":{\"7\":1}}],[\"39\",{\"1\":{\"7\":1}}],[\"38\",{\"1\":{\"7\":1}}],[\"37\",{\"1\":{\"7\":1}}],[\"36\",{\"1\":{\"7\":1}}],[\"35\",{\"1\":{\"7\":1}}],[\"34\",{\"1\":{\"7\":1,\"8\":1}}],[\"33\",{\"1\":{\"7\":1,\"8\":1}}],[\"32\",{\"1\":{\"7\":1,\"20\":1,\"24\":2}}],[\"3.3\",{\"0\":{\"9\":1}}],[\"3.2\",{\"0\":{\"8\":1}}],[\"3.1\",{\"0\":{\"7\":1}}],[\"3.\",{\"0\":{\"6\":1,\"58\":1}}],[\"3\",{\"0\":{\"23\":1},\"1\":{\"3\":1,\"5\":1,\"7\":2,\"8\":1,\"9\":5,\"12\":1,\"23\":4,\"25\":1,\"29\":2,\"31\":2,\"50\":1},\"2\":{\"26\":1}}],[\"均\",{\"1\":{\"3\":1}}],[\"与其\",{\"1\":{\"17\":1}}],[\"与\",{\"0\":{\"82\":1},\"1\":{\"3\":1,\"9\":2,\"12\":1,\"17\":1,\"18\":2,\"19\":4}}],[\"！\",{\"1\":{\"3\":1}}],[\"哦\",{\"1\":{\"3\":1}}],[\"它\",{\"1\":{\"3\":1,\"8\":1,\"53\":1,\"58\":1}}],[\"f212d2cfebf50880\",{\"1\":{\"90\":4}}],[\"flueky\",{\"1\":{\"38\":2,\"39\":1,\"44\":1}}],[\"full\",{\"1\":{\"34\":1,\"49\":1,\"90\":1}}],[\"fully\",{\"1\":{\"30\":1}}],[\"fetched\",{\"1\":{\"36\":2}}],[\"fetches\",{\"1\":{\"33\":1}}],[\"fetch\",{\"0\":{\"36\":1},\"1\":{\"36\":16,\"41\":5,\"44\":1}}],[\"fetching\",{\"1\":{\"33\":1,\"36\":4,\"41\":2}}],[\"feedback\",{\"1\":{\"18\":1,\"19\":1}}],[\"ff\",{\"1\":{\"32\":2,\"40\":2,\"41\":2,\"43\":1}}],[\"failed\",{\"1\":{\"43\":1}}],[\"fails\",{\"1\":{\"29\":1,\"43\":1}}],[\"false\",{\"1\":{\"35\":1,\"41\":1}}],[\"fall\",{\"1\":{\"29\":1}}],[\"fast\",{\"1\":{\"32\":1,\"40\":3,\"41\":2}}],[\"fake\",{\"1\":{\"29\":1}}],[\"factor\",{\"1\":{\"37\":1}}],[\"fact\",{\"1\":{\"28\":1,\"45\":1}}],[\"from\",{\"1\":{\"28\":4,\"29\":1,\"31\":3,\"32\":1,\"33\":4,\"34\":8,\"35\":1,\"36\":4,\"37\":8,\"38\":2,\"40\":3,\"41\":4,\"45\":4,\"46\":1,\"47\":5,\"48\":1,\"51\":2}}],[\"fixed\",{\"1\":{\"35\":1}}],[\"fixup\",{\"1\":{\"34\":3,\"43\":1}}],[\"filters\",{\"1\":{\"33\":1}}],[\"filter\",{\"1\":{\"33\":2,\"36\":1}}],[\"filtering\",{\"1\":{\"30\":1,\"33\":1,\"36\":1,\"51\":1}}],[\"filenotfoundexception\",{\"1\":{\"57\":1}}],[\"filename\",{\"1\":{\"37\":2}}],[\"filenames\",{\"1\":{\"29\":1,\"37\":1}}],[\"fileinputstream\",{\"1\":{\"57\":1}}],[\"filemd5\",{\"1\":{\"57\":1}}],[\"filepath\",{\"1\":{\"39\":1}}],[\"file\",{\"1\":{\"28\":7,\"29\":2,\"31\":6,\"33\":1,\"34\":14,\"35\":10,\"36\":1,\"37\":4,\"40\":2,\"43\":1,\"45\":7,\"47\":8,\"48\":3,\"51\":4,\"57\":6}}],[\"files\",{\"1\":{\"28\":7,\"29\":2,\"31\":3,\"33\":1,\"34\":6,\"37\":2,\"40\":1,\"47\":1,\"49\":4,\"50\":1}}],[\"field\",{\"1\":{\"30\":1,\"51\":1}}],[\"find\",{\"1\":{\"35\":2,\"49\":1}}],[\"finding\",{\"1\":{\"29\":2}}],[\"final\",{\"1\":{\"5\":2,\"9\":2,\"22\":4,\"23\":5,\"24\":4,\"25\":3,\"56\":1,\"57\":1}}],[\"first\",{\"1\":{\"9\":3,\"37\":1}}],[\"found\",{\"1\":{\"95\":1}}],[\"four\",{\"1\":{\"9\":3}}],[\"follow\",{\"1\":{\"33\":1,\"42\":1}}],[\"fork\",{\"1\":{\"43\":2}}],[\"forward\",{\"1\":{\"32\":1,\"40\":3,\"41\":2}}],[\"formatted\",{\"1\":{\"34\":2}}],[\"format\",{\"0\":{\"37\":1},\"1\":{\"30\":4,\"34\":1,\"37\":3,\"38\":3,\"46\":1,\"49\":1,\"51\":8,\"90\":1}}],[\"forced\",{\"1\":{\"36\":2,\"41\":2}}],[\"force\",{\"1\":{\"28\":1,\"30\":2,\"31\":3,\"33\":1,\"34\":1,\"36\":3,\"37\":1,\"40\":1,\"41\":3,\"42\":5,\"43\":1,\"47\":2,\"50\":4,\"51\":2}}],[\"for\",{\"1\":{\"5\":2,\"9\":3,\"29\":3,\"30\":3,\"31\":3,\"32\":1,\"33\":1,\"34\":3,\"35\":2,\"36\":2,\"37\":1,\"40\":2,\"41\":4,\"42\":1,\"46\":1,\"51\":1}}],[\"f\",{\"1\":{\"3\":1,\"5\":1,\"7\":2,\"9\":2,\"28\":2,\"30\":2,\"31\":1,\"34\":2,\"35\":1,\"36\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"47\":2,\"50\":1,\"51\":4}}],[\"9\",{\"1\":{\"3\":3,\"5\":1,\"7\":2,\"9\":2}}],[\"97\",{\"1\":{\"3\":1,\"8\":1}}],[\"基本一致\",{\"1\":{\"24\":1}}],[\"基数\",{\"1\":{\"3\":7,\"5\":3,\"7\":6,\"9\":1}}],[\"基于\",{\"1\":{\"3\":1,\"17\":1}}],[\"十进制\",{\"1\":{\"3\":1}}],[\"十六进制\",{\"0\":{\"2\":1},\"1\":{\"5\":1}}],[\"意义\",{\"1\":{\"3\":2}}],[\"及其\",{\"1\":{\"3\":1,\"12\":1,\"54\":1}}],[\"数学公式\",{\"0\":{\"73\":1}}],[\"数\",{\"1\":{\"5\":2}}],[\"数组\",{\"1\":{\"5\":4,\"9\":3}}],[\"数字\",{\"1\":{\"4\":1,\"21\":1}}],[\"数值\",{\"1\":{\"3\":1}}],[\"数据处理\",{\"1\":{\"12\":1}}],[\"数据编码\",{\"1\":{\"8\":1}}],[\"数据\",{\"0\":{\"12\":1},\"1\":{\"0\":1,\"1\":2,\"8\":1,\"12\":1,\"14\":2,\"15\":3,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"21\":5,\"22\":1,\"54\":5,\"56\":1}}],[\"些\",{\"1\":{\"3\":1}}],[\"概念\",{\"0\":{\"3\":1,\"7\":1,\"13\":1},\"1\":{\"3\":1,\"17\":1}}],[\"码表\",{\"1\":{\"1\":1}}],[\"兴趣\",{\"1\":{\"1\":1}}],[\"apt\",{\"1\":{\"87\":1,\"91\":1,\"92\":1}}],[\"applied\",{\"1\":{\"43\":1}}],[\"applicable\",{\"1\":{\"29\":2}}],[\"applying\",{\"1\":{\"29\":3}}],[\"apply\",{\"0\":{\"29\":1},\"1\":{\"28\":1,\"29\":8,\"33\":1,\"43\":5,\"48\":1}}],[\"append\",{\"1\":{\"5\":2,\"9\":9,\"32\":1,\"36\":2,\"41\":2}}],[\"amongst\",{\"1\":{\"38\":1}}],[\"amend\",{\"1\":{\"34\":8}}],[\"against\",{\"1\":{\"37\":2}}],[\"ahead\",{\"1\":{\"34\":2,\"49\":2}}],[\"after\",{\"1\":{\"34\":1,\"36\":3,\"39\":1,\"40\":1,\"41\":1,\"43\":2,\"45\":1}}],[\"authored\",{\"1\":{\"34\":1}}],[\"author\",{\"1\":{\"34\":7,\"39\":1,\"43\":4}}],[\"autostash\",{\"1\":{\"40\":1,\"41\":1,\"43\":1}}],[\"autosquash\",{\"1\":{\"34\":2,\"43\":1}}],[\"auto\",{\"1\":{\"36\":4,\"44\":1}}],[\"autocrlf\",{\"1\":{\"35\":1,\"88\":1}}],[\"autoupdate\",{\"1\":{\"32\":1,\"40\":1,\"43\":1,\"46\":1}}],[\"automatically\",{\"1\":{\"32\":1,\"40\":1,\"41\":1,\"43\":2,\"46\":1}}],[\"armor\",{\"1\":{\"90\":1}}],[\"argument\",{\"1\":{\"43\":1}}],[\"args\",{\"1\":{\"33\":1,\"36\":1}}],[\"area\",{\"1\":{\"29\":1}}],[\"are\",{\"1\":{\"28\":2,\"29\":1,\"30\":3,\"31\":1,\"34\":1,\"43\":1,\"45\":1,\"47\":1,\"51\":3}}],[\"absent\",{\"1\":{\"37\":1}}],[\"able\",{\"1\":{\"33\":1}}],[\"abort\",{\"1\":{\"32\":2,\"40\":5,\"41\":1,\"43\":4,\"46\":2}}],[\"abbrev\",{\"1\":{\"30\":1}}],[\"away\",{\"1\":{\"31\":1,\"50\":2}}],[\"act\",{\"1\":{\"30\":1}}],[\"actions\",{\"1\":{\"30\":1}}],[\"action\",{\"1\":{\"29\":1,\"35\":1,\"43\":1}}],[\"accept\",{\"1\":{\"29\":1,\"36\":2,\"41\":1}}],[\"attach\",{\"1\":{\"37\":2}}],[\"attempt\",{\"1\":{\"29\":1}}],[\"atomic\",{\"1\":{\"36\":2,\"42\":2}}],[\"at\",{\"1\":{\"29\":3,\"30\":2,\"31\":1,\"33\":1,\"37\":1,\"40\":3,\"41\":3,\"42\":1,\"50\":1,\"51\":2}}],[\"annotated\",{\"1\":{\"51\":2}}],[\"annotate\",{\"1\":{\"51\":1}}],[\"an\",{\"1\":{\"35\":2,\"43\":1}}],[\"any\",{\"1\":{\"33\":3,\"43\":1}}],[\"another\",{\"1\":{\"31\":1,\"50\":1,\"51\":1}}],[\"ancestors\",{\"1\":{\"36\":1}}],[\"ancestor\",{\"1\":{\"29\":1}}],[\"and\",{\"1\":{\"28\":2,\"29\":1,\"30\":5,\"31\":2,\"32\":2,\"33\":1,\"34\":3,\"36\":2,\"40\":4,\"41\":4,\"43\":5,\"45\":3,\"46\":2,\"50\":2,\"51\":3}}],[\"ask\",{\"1\":{\"43\":1}}],[\"asked\",{\"1\":{\"42\":1}}],[\"associated\",{\"1\":{\"36\":1,\"41\":1}}],[\"as\",{\"1\":{\"28\":1,\"33\":1,\"37\":1,\"43\":1}}],[\"ascii\",{\"1\":{\"1\":2}}],[\"alternatives\",{\"1\":{\"83\":1}}],[\"already\",{\"1\":{\"43\":1}}],[\"alone\",{\"1\":{\"40\":1}}],[\"alias\",{\"1\":{\"33\":1}}],[\"always\",{\"1\":{\"33\":1}}],[\"also\",{\"1\":{\"29\":1,\"33\":1}}],[\"all\",{\"1\":{\"28\":3,\"29\":1,\"30\":1,\"34\":4,\"35\":7,\"36\":7,\"37\":1,\"41\":4,\"42\":4,\"43\":4,\"44\":1,\"48\":2,\"49\":4}}],[\"allow\",{\"1\":{\"28\":2,\"29\":3,\"32\":4,\"34\":2,\"36\":1,\"40\":3,\"41\":3,\"43\":1,\"47\":2}}],[\"algorithm\",{\"1\":{\"22\":6,\"23\":6,\"24\":6,\"25\":4,\"38\":1,\"53\":1,\"54\":1}}],[\"address\",{\"1\":{\"37\":1}}],[\"addresses\",{\"1\":{\"33\":2,\"36\":2,\"41\":2,\"42\":2}}],[\"additions\",{\"1\":{\"29\":1}}],[\"adding\",{\"1\":{\"28\":1}}],[\"added\",{\"1\":{\"28\":2,\"29\":1,\"45\":1}}],[\"add\",{\"0\":{\"28\":1},\"1\":{\"28\":9,\"29\":4,\"32\":1,\"34\":6,\"35\":2,\"37\":9,\"38\":1,\"40\":2,\"41\":2,\"43\":2,\"44\":4,\"45\":1,\"46\":1}}],[\"adleman\",{\"1\":{\"25\":1}}],[\"adi\",{\"1\":{\"25\":1}}],[\"advanced\",{\"1\":{\"24\":1}}],[\"aes\",{\"0\":{\"24\":1},\"1\":{\"12\":2,\"24\":4},\"2\":{\"26\":1}}],[\"aa\",{\"1\":{\"8\":1}}],[\"a\",{\"1\":{\"1\":2,\"3\":3,\"5\":1,\"7\":2,\"8\":1,\"9\":6,\"28\":1,\"29\":4,\"30\":8,\"31\":3,\"32\":1,\"33\":8,\"34\":4,\"35\":4,\"36\":3,\"37\":11,\"38\":1,\"40\":8,\"41\":9,\"43\":2,\"44\":2,\"46\":1,\"47\":1,\"48\":2,\"50\":3,\"51\":5,\"82\":1}}],[\"'\",{\"1\":{\"1\":6,\"3\":6,\"5\":32,\"9\":163,\"28\":5,\"29\":3,\"30\":2,\"31\":2,\"32\":1,\"33\":7,\"34\":6,\"35\":2,\"36\":4,\"37\":7,\"39\":8,\"42\":7,\"43\":6,\"46\":3,\"50\":2,\"51\":11}}],[\"xc0\",{\"1\":{\"9\":1}}],[\"xf0\",{\"1\":{\"9\":1}}],[\"xfc\",{\"1\":{\"9\":1}}],[\"xff\",{\"1\":{\"1\":1}}],[\"x3c\",{\"1\":{\"9\":2}}],[\"x30\",{\"1\":{\"9\":2}}],[\"x3f\",{\"1\":{\"9\":2}}],[\"x31\",{\"1\":{\"1\":1,\"3\":1,\"8\":3}}],[\"x\",{\"1\":{\"7\":2,\"9\":2,\"28\":1,\"32\":3,\"40\":1,\"41\":1,\"43\":2,\"46\":1}}],[\"x64\",{\"1\":{\"4\":2}}],[\"x61\",{\"1\":{\"1\":1,\"3\":1,\"8\":1}}],[\"x41\",{\"1\":{\"1\":1,\"3\":1,\"8\":2}}],[\"x0f\",{\"1\":{\"3\":1,\"5\":3,\"9\":3}}],[\"x0e\",{\"1\":{\"3\":1}}],[\"x0d\",{\"1\":{\"3\":1}}],[\"x0c\",{\"1\":{\"3\":1}}],[\"x0b\",{\"1\":{\"3\":1}}],[\"x0a\",{\"1\":{\"3\":1}}],[\"x09\",{\"1\":{\"3\":1}}],[\"x08\",{\"1\":{\"3\":1}}],[\"x07\",{\"1\":{\"3\":1}}],[\"x06\",{\"1\":{\"3\":1}}],[\"x05\",{\"1\":{\"3\":1}}],[\"x04\",{\"1\":{\"3\":1}}],[\"x03\",{\"1\":{\"3\":1,\"9\":3}}],[\"x02\",{\"1\":{\"3\":1}}],[\"x01\",{\"1\":{\"1\":1,\"3\":2}}],[\"x00\",{\"1\":{\"1\":1,\"3\":2}}],[\"进制\",{\"1\":{\"1\":1,\"3\":14,\"4\":2,\"5\":9,\"6\":2,\"8\":10,\"10\":1},\"2\":{\"11\":1}}],[\"进行\",{\"1\":{\"1\":1,\"4\":1,\"5\":1,\"12\":2,\"15\":1,\"16\":1,\"17\":2,\"18\":3,\"19\":5,\"20\":2,\"24\":1}}],[\"使用\",{\"1\":{\"1\":1,\"3\":1,\"8\":1,\"9\":1,\"10\":1,\"14\":2,\"18\":1,\"19\":3,\"21\":1,\"22\":1,\"23\":5,\"25\":1,\"34\":1,\"38\":1,\"39\":1,\"44\":3,\"53\":1,\"54\":5,\"90\":2}}],[\"其实\",{\"1\":{\"53\":1}}],[\"其中\",{\"1\":{\"22\":1,\"42\":1}}],[\"其他\",{\"1\":{\"21\":1,\"22\":1,\"48\":1}}],[\"其\",{\"1\":{\"1\":1,\"5\":1,\"17\":1}}],[\"完整\",{\"1\":{\"1\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"21\":1,\"54\":1}}],[\"不要\",{\"1\":{\"58\":1}}],[\"不够\",{\"1\":{\"20\":2}}],[\"不是\",{\"1\":{\"10\":1}}],[\"不能\",{\"1\":{\"8\":3,\"12\":1,\"42\":1,\"58\":1}}],[\"不\",{\"1\":{\"5\":1,\"8\":1,\"12\":1,\"14\":1,\"21\":2,\"48\":1,\"53\":1,\"58\":1}}],[\"不难\",{\"1\":{\"3\":1,\"6\":1}}],[\"不再\",{\"1\":{\"1\":1}}],[\"不足\",{\"1\":{\"1\":1,\"8\":2}}],[\"不同\",{\"1\":{\"1\":1,\"23\":1}}],[\"根据\",{\"1\":{\"1\":1,\"5\":1,\"8\":2,\"58\":2}}],[\"^\",{\"1\":{\"1\":1,\"3\":1,\"7\":1}}],[\"即使\",{\"1\":{\"12\":1,\"28\":1}}],[\"即\",{\"1\":{\"1\":1,\"4\":1,\"14\":1,\"23\":1,\"58\":1}}],[\"个数\",{\"1\":{\"9\":1}}],[\"个\",{\"1\":{\"1\":2,\"7\":1,\"9\":3,\"21\":5}}],[\"字母\",{\"1\":{\"1\":1}}],[\"字符串\",{\"0\":{\"56\":1},\"1\":{\"5\":5,\"8\":3,\"9\":1,\"56\":1,\"58\":2}}],[\"字符\",{\"1\":{\"1\":3,\"8\":1,\"9\":2}}],[\"字节\",{\"0\":{\"0\":1},\"1\":{\"0\":1,\"1\":4,\"5\":5,\"8\":2,\"9\":6,\"12\":1,\"20\":5,\"21\":8,\"22\":2,\"23\":6,\"24\":7,\"25\":2,\"54\":4}}],[\"上标\",{\"0\":{\"70\":1}}],[\"上述\",{\"1\":{\"16\":1,\"22\":1,\"82\":1}}],[\"上面\",{\"1\":{\"8\":1}}],[\"上表\",{\"1\":{\"8\":1}}],[\"上\",{\"1\":{\"1\":1,\"5\":1,\"6\":1}}],[\"屏幕\",{\"1\":{\"1\":1}}],[\"显示\",{\"1\":{\"1\":3,\"6\":1,\"39\":7}}],[\"可撤回\",{\"1\":{\"48\":1}}],[\"可用\",{\"1\":{\"28\":1}}],[\"可逆\",{\"1\":{\"10\":1,\"12\":3,\"58\":1}}],[\"可供\",{\"1\":{\"9\":1}}],[\"可见\",{\"1\":{\"1\":1}}],[\"可\",{\"1\":{\"1\":1,\"34\":1,\"39\":1,\"54\":1}}],[\"可以\",{\"1\":{\"1\":2,\"3\":1,\"6\":1,\"8\":1,\"22\":1,\"24\":2,\"25\":1,\"54\":1,\"58\":1,\"82\":1}}],[\"可变\",{\"1\":{\"1\":1}}],[\"局限于\",{\"1\":{\"1\":1}}],[\"仅\",{\"1\":{\"1\":1}}],[\",\",{\"1\":{\"1\":2,\"3\":78,\"4\":2,\"5\":18,\"7\":136,\"8\":15,\"9\":64,\"12\":4,\"14\":4,\"16\":4,\"17\":5,\"18\":4,\"19\":8,\"20\":1,\"21\":6,\"22\":9,\"23\":11,\"24\":9,\"25\":4,\"28\":14,\"29\":10,\"30\":19,\"31\":13,\"32\":8,\"33\":17,\"34\":24,\"35\":20,\"36\":17,\"37\":11,\"38\":9,\"39\":1,\"40\":9,\"41\":17,\"42\":14,\"43\":17,\"44\":4,\"45\":8,\"46\":7,\"47\":5,\"48\":6,\"49\":17,\"50\":10,\"51\":16,\"53\":2,\"54\":2,\"56\":2,\"57\":5,\"79\":1,\"91\":1},\"2\":{\"11\":1,\"26\":3,\"59\":2}}],[\"4.\",{\"0\":{\"10\":1}}],[\"47\",{\"1\":{\"7\":1}}],[\"46\",{\"1\":{\"7\":1}}],[\"45\",{\"1\":{\"7\":1}}],[\"44\",{\"1\":{\"7\":1}}],[\"43\",{\"1\":{\"7\":1}}],[\"42\",{\"1\":{\"7\":1}}],[\"41\",{\"1\":{\"7\":1}}],[\"404\",{\"1\":{\"95\":1}}],[\"4096\",{\"1\":{\"90\":1}}],[\"40\",{\"1\":{\"7\":1}}],[\"48\",{\"1\":{\"7\":1}}],[\"49\",{\"1\":{\"3\":1,\"7\":1,\"8\":3}}],[\"4\",{\"1\":{\"1\":1,\"3\":3,\"4\":3,\"5\":3,\"7\":2,\"8\":4,\"9\":10,\"33\":1,\"36\":1,\"41\":1,\"42\":1}}],[\"29\",{\"1\":{\"7\":1}}],[\"28\",{\"1\":{\"7\":1}}],[\"27\",{\"1\":{\"7\":1}}],[\"26\",{\"1\":{\"7\":1,\"9\":3}}],[\"25\",{\"1\":{\"7\":1}}],[\"256\",{\"1\":{\"1\":1,\"25\":1,\"57\":1}}],[\"24\",{\"1\":{\"7\":1,\"8\":2,\"23\":3,\"24\":2}}],[\"23\",{\"1\":{\"7\":1}}],[\"22\",{\"1\":{\"7\":1}}],[\"21\",{\"1\":{\"7\":1}}],[\"2010\",{\"1\":{\"53\":1}}],[\"2024\",{\"1\":{\"39\":2,\"90\":1}}],[\"2048\",{\"1\":{\"25\":3}}],[\"200\",{\"1\":{\"8\":1}}],[\"20\",{\"1\":{\"7\":1,\"8\":2,\"90\":1}}],[\"2.4\",{\"0\":{\"25\":1}}],[\"2.3\",{\"0\":{\"5\":1,\"24\":1}}],[\"2.2\",{\"0\":{\"4\":1,\"23\":1,\"57\":1}}],[\"2.1\",{\"0\":{\"3\":1,\"22\":1,\"56\":1}}],[\"2.\",{\"0\":{\"2\":1,\"21\":1,\"55\":1},\"1\":{\"54\":1}}],[\"2\",{\"1\":{\"1\":2,\"3\":7,\"4\":1,\"5\":5,\"7\":3,\"8\":5,\"9\":9,\"31\":1,\"79\":1}}],[\"时间\",{\"1\":{\"39\":2}}],[\"时候\",{\"1\":{\"6\":1,\"57\":1}}],[\"时\",{\"1\":{\"1\":1,\"9\":1,\"14\":2,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"采用\",{\"1\":{\"1\":1}}],[\"汉字\",{\"1\":{\"1\":1}}],[\"占用\",{\"1\":{\"1\":1}}],[\"占\",{\"1\":{\"1\":1,\"7\":1}}],[\"通俗易懂\",{\"1\":{\"12\":1}}],[\"通常\",{\"1\":{\"1\":3,\"39\":1,\"57\":1}}],[\"通过观察\",{\"1\":{\"3\":1}}],[\"通过\",{\"1\":{\"0\":1,\"54\":1,\"57\":2,\"91\":1}}],[\"8\",{\"1\":{\"1\":3,\"3\":1,\"5\":1,\"7\":2,\"8\":1,\"9\":1,\"21\":4,\"22\":2,\"23\":3,\"24\":1}}],[\"=\",{\"1\":{\"1\":1,\"3\":1,\"4\":4,\"5\":21,\"7\":1,\"8\":7,\"9\":52,\"22\":4,\"23\":5,\"24\":4,\"25\":8,\"30\":4,\"31\":2,\"32\":1,\"33\":3,\"34\":7,\"35\":1,\"36\":1,\"37\":4,\"38\":5,\"40\":3,\"41\":7,\"42\":2,\"43\":2,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":6,\"50\":2,\"51\":6,\"56\":2,\"57\":6}}],[\"04\",{\"1\":{\"90\":1}}],[\"02\",{\"1\":{\"39\":1}}],[\"0.0\",{\"1\":{\"31\":2}}],[\"01\",{\"1\":{\"39\":1}}],[\"010100\",{\"1\":{\"8\":2}}],[\"010000\",{\"1\":{\"8\":1,\"9\":1}}],[\"01000001\",{\"1\":{\"3\":1,\"8\":2}}],[\"0100\",{\"1\":{\"4\":1}}],[\"01100100\",{\"1\":{\"4\":1}}],[\"01100001\",{\"1\":{\"3\":1,\"8\":1}}],[\"0110\",{\"1\":{\"4\":1}}],[\"000101\",{\"1\":{\"8\":1}}],[\"000100\",{\"1\":{\"8\":1}}],[\"00001111\",{\"1\":{\"3\":1}}],[\"00001110\",{\"1\":{\"3\":1}}],[\"00001101\",{\"1\":{\"3\":1}}],[\"00001100\",{\"1\":{\"3\":1}}],[\"00001011\",{\"1\":{\"3\":1}}],[\"00001010\",{\"1\":{\"3\":1}}],[\"00001001\",{\"1\":{\"3\":1}}],[\"00001000\",{\"1\":{\"3\":1}}],[\"00000111\",{\"1\":{\"3\":1}}],[\"00000110\",{\"1\":{\"3\":1}}],[\"00000101\",{\"1\":{\"3\":1}}],[\"00000100\",{\"1\":{\"3\":1}}],[\"00000011\",{\"1\":{\"3\":1}}],[\"00000010\",{\"1\":{\"3\":1}}],[\"00000001\",{\"1\":{\"3\":2}}],[\"00000000\",{\"1\":{\"1\":1,\"3\":2}}],[\"00\",{\"1\":{\"8\":1}}],[\"001100\",{\"1\":{\"8\":3,\"9\":1}}],[\"00110001\",{\"1\":{\"3\":1,\"8\":3,\"9\":1}}],[\"0\",{\"1\":{\"1\":8,\"3\":26,\"4\":3,\"5\":8,\"7\":2,\"8\":8,\"9\":33,\"57\":2}}],[\"状态\",{\"1\":{\"1\":1}}],[\"有没有\",{\"1\":{\"53\":1}}],[\"有些\",{\"1\":{\"19\":1}}],[\"有空\",{\"1\":{\"12\":1}}],[\"有\",{\"1\":{\"1\":2,\"7\":1,\"16\":1,\"21\":2,\"91\":1}}],[\"-\",{\"0\":{\"32\":1,\"37\":1,\"93\":1},\"1\":{\"1\":5,\"3\":3,\"5\":4,\"9\":8,\"21\":1,\"28\":71,\"29\":88,\"30\":123,\"31\":76,\"32\":80,\"33\":119,\"34\":186,\"35\":120,\"36\":132,\"37\":124,\"38\":49,\"39\":26,\"40\":96,\"41\":132,\"42\":88,\"43\":151,\"44\":56,\"45\":70,\"46\":62,\"47\":56,\"48\":84,\"49\":44,\"50\":48,\"51\":109,\"57\":2,\"82\":7,\"83\":3,\"85\":1,\"88\":6,\"90\":21,\"92\":2,\"93\":6}}],[\"位置\",{\"1\":{\"35\":1}}],[\"位补\",{\"1\":{\"8\":2}}],[\"位\",{\"1\":{\"1\":1,\"8\":9,\"9\":2,\"22\":1}}],[\"1977\",{\"1\":{\"25\":1}}],[\"19\",{\"1\":{\"7\":1}}],[\"18\",{\"1\":{\"7\":1,\"8\":1}}],[\"17\",{\"1\":{\"7\":1,\"20\":1}}],[\"15\",{\"1\":{\"3\":1,\"5\":2,\"7\":1,\"20\":1}}],[\"14\",{\"1\":{\"3\":1,\"7\":1}}],[\"136\",{\"1\":{\"8\":1}}],[\"13\",{\"1\":{\"3\":1,\"7\":1}}],[\"128\",{\"1\":{\"25\":1}}],[\"12345678\",{\"1\":{\"23\":1}}],[\"12\",{\"1\":{\"3\":1,\"7\":1,\"8\":4,\"53\":1}}],[\"11\",{\"1\":{\"3\":1,\"7\":1}}],[\"11111111\",{\"1\":{\"1\":1}}],[\"1024\",{\"1\":{\"25\":2,\"57\":1}}],[\"10\",{\"1\":{\"3\":4,\"5\":8,\"7\":1,\"8\":3,\"9\":1,\"39\":2}}],[\"100001\",{\"1\":{\"8\":1}}],[\"100\",{\"1\":{\"1\":1,\"4\":5,\"8\":3}}],[\"16\",{\"1\":{\"1\":1,\"3\":7,\"4\":3,\"5\":7,\"6\":2,\"7\":1,\"8\":6,\"10\":1,\"20\":2,\"21\":1,\"24\":2},\"2\":{\"11\":1}}],[\"1\",{\"1\":{\"1\":9,\"3\":6,\"4\":1,\"5\":2,\"7\":2,\"8\":4,\"9\":7,\"21\":3,\"37\":1,\"57\":1,\"79\":1}}],[\"1.3\",{\"0\":{\"20\":1}}],[\"1.2.4\",{\"0\":{\"19\":1}}],[\"1.2.3\",{\"0\":{\"18\":1}}],[\"1.2.2\",{\"0\":{\"17\":1}}],[\"1.2.1\",{\"0\":{\"16\":1}}],[\"1.2\",{\"0\":{\"15\":1}}],[\"1.1\",{\"0\":{\"14\":1}}],[\"1.\",{\"0\":{\"1\":1,\"13\":1,\"54\":1},\"1\":{\"54\":1}}],[\"容量\",{\"1\":{\"1\":1}}],[\"bin\",{\"1\":{\"82\":2}}],[\"binary\",{\"1\":{\"37\":2}}],[\"bits\",{\"1\":{\"31\":1}}],[\"bit\",{\"1\":{\"1\":3,\"3\":1,\"4\":1,\"7\":1,\"28\":1}}],[\"blob\",{\"1\":{\"35\":4}}],[\"block\",{\"1\":{\"17\":1}}],[\"buff\",{\"1\":{\"57\":3}}],[\"but\",{\"1\":{\"40\":1,\"42\":1,\"43\":1,\"45\":1}}],[\"bundles\",{\"1\":{\"33\":1}}],[\"bundle\",{\"1\":{\"33\":1}}],[\"build\",{\"1\":{\"29\":2}}],[\"body\",{\"1\":{\"37\":2}}],[\"boundary\",{\"1\":{\"37\":2}}],[\"bootstrap\",{\"1\":{\"93\":1}}],[\"bool\",{\"1\":{\"35\":5}}],[\"book\",{\"1\":{\"16\":1}}],[\"both\",{\"1\":{\"30\":1}}],[\"branchname\",{\"1\":{\"48\":1}}],[\"branches\",{\"1\":{\"30\":8,\"36\":2,\"41\":2,\"43\":1,\"44\":1}}],[\"branch\",{\"0\":{\"30\":1},\"1\":{\"30\":32,\"31\":13,\"33\":7,\"34\":2,\"37\":1,\"38\":5,\"41\":1,\"43\":5,\"44\":3,\"48\":1,\"49\":2,\"50\":10}}],[\"break\",{\"1\":{\"9\":11}}],[\"bypass\",{\"1\":{\"34\":2,\"40\":1,\"42\":1}}],[\"by\",{\"1\":{\"29\":1,\"32\":1,\"34\":2,\"37\":2,\"40\":1,\"41\":2,\"43\":1,\"46\":1}}],[\"byteslen\",{\"1\":{\"9\":2}}],[\"byte\",{\"1\":{\"1\":4,\"3\":1,\"5\":6,\"9\":7,\"22\":6,\"23\":6,\"24\":6,\"25\":4,\"35\":1,\"54\":1,\"56\":1,\"57\":3}}],[\"begin\",{\"1\":{\"43\":1}}],[\"become\",{\"1\":{\"43\":1}}],[\"because\",{\"1\":{\"28\":1}}],[\"being\",{\"1\":{\"43\":2}}],[\"behind\",{\"1\":{\"34\":2,\"49\":2}}],[\"before\",{\"1\":{\"33\":1,\"39\":1,\"40\":2,\"41\":2,\"43\":1,\"44\":1}}],[\"be\",{\"1\":{\"28\":3,\"29\":2,\"33\":4,\"34\":1,\"36\":2,\"38\":3,\"40\":2,\"41\":2,\"42\":5,\"43\":1,\"44\":2,\"45\":2,\"49\":1}}],[\"bash\",{\"1\":{\"82\":2}}],[\"based\",{\"1\":{\"29\":1,\"36\":1,\"37\":1,\"41\":1}}],[\"base\",{\"1\":{\"9\":1,\"37\":2,\"38\":1,\"43\":5}}],[\"base64str\",{\"1\":{\"9\":12}}],[\"base64strbuff\",{\"1\":{\"9\":11}}],[\"base64\",{\"0\":{\"6\":1},\"1\":{\"0\":2,\"6\":2,\"7\":1,\"8\":9,\"9\":11,\"10\":1,\"14\":1},\"2\":{\"11\":1}}],[\"bare\",{\"1\":{\"33\":3,\"38\":3}}],[\"back\",{\"1\":{\"29\":1}}],[\"badpaddingexception\",{\"1\":{\"25\":2}}],[\"b\",{\"1\":{\"5\":4,\"7\":2,\"9\":2,\"31\":4,\"33\":1,\"38\":3,\"49\":1}}],[\"叫\",{\"1\":{\"1\":1}}],[\"介绍\",{\"0\":{\"1\":1},\"1\":{\"1\":1,\"6\":1,\"12\":1,\"20\":1,\"21\":1}}],[\"信息\",{\"0\":{\"53\":1},\"1\":{\"0\":1,\"39\":4,\"44\":3,\"53\":5,\"54\":2,\"58\":1,\"90\":1}}],[\"术语\",{\"1\":{\"0\":1}}],[\"三种\",{\"1\":{\"24\":1}}],[\"三段\",{\"1\":{\"23\":1}}],[\"三次\",{\"1\":{\"23\":1}}],[\"三\",{\"0\":{\"12\":1}}],[\"三个\",{\"1\":{\"0\":1,\"9\":1,\"22\":1,\"35\":2,\"53\":1,\"54\":1}}],[\"三篇\",{\"1\":{\"0\":1}}],[\"常见\",{\"1\":{\"0\":1,\"3\":1,\"12\":1,\"21\":1,\"53\":1}}],[\"常用命令\",{\"1\":{\"27\":1,\"44\":1}}],[\"常用\",{\"1\":{\"0\":1}}],[\"编辑器\",{\"0\":{\"83\":1}}],[\"编程语言\",{\"1\":{\"9\":1}}],[\"编程\",{\"1\":{\"0\":1}}],[\"编码方式\",{\"1\":{\"3\":1}}],[\"编码\",{\"0\":{\"0\":2,\"1\":1,\"2\":1,\"6\":1,\"12\":1,\"53\":1},\"1\":{\"0\":1,\"1\":3,\"3\":2,\"5\":1,\"6\":4,\"8\":6,\"9\":1,\"10\":1,\"12\":3}}],[\"下标\",{\"0\":{\"70\":1}}],[\"下来\",{\"1\":{\"57\":2}}],[\"下载\",{\"1\":{\"57\":3}}],[\"下面\",{\"1\":{\"14\":1,\"35\":1,\"38\":1}}],[\"下表\",{\"1\":{\"3\":2}}],[\"下\",{\"1\":{\"0\":1,\"28\":1,\"38\":1}}],[\"科普\",{\"1\":{\"0\":1}}],[\"那么\",{\"1\":{\"0\":1,\"16\":1,\"21\":1}}],[\"。\",{\"1\":{\"0\":2,\"1\":13,\"3\":9,\"4\":5,\"5\":4,\"6\":5,\"7\":2,\"8\":24,\"9\":2,\"10\":2,\"12\":5,\"14\":6,\"15\":4,\"16\":5,\"17\":6,\"18\":5,\"19\":9,\"20\":7,\"21\":14,\"22\":6,\"23\":8,\"24\":4,\"25\":4,\"28\":2,\"34\":3,\"35\":4,\"38\":6,\"39\":10,\"42\":2,\"44\":2,\"48\":5,\"51\":2,\"53\":5,\"54\":11,\"56\":1,\"57\":2,\"58\":2,\"79\":2,\"81\":1,\"90\":2,\"91\":2}}],[\"非对称\",{\"1\":{\"0\":1,\"14\":5,\"25\":1}}],[\"是否是\",{\"1\":{\"14\":1}}],[\"是否\",{\"1\":{\"6\":1,\"14\":1,\"56\":1,\"57\":1}}],[\"是\",{\"1\":{\"0\":2,\"1\":2,\"3\":1,\"8\":1,\"10\":1,\"12\":4,\"14\":2,\"15\":1,\"19\":1,\"21\":1,\"23\":1,\"25\":4,\"38\":1,\"54\":2,\"58\":3,\"90\":1}}],[\"是因为\",{\"1\":{\"0\":1}}],[\"说明\",{\"1\":{\"12\":1}}],[\"说\",{\"1\":{\"0\":1}}],[\"过\",{\"1\":{\"0\":1,\"12\":1,\"14\":1,\"15\":1,\"21\":1,\"53\":1,\"56\":1,\"57\":1}}],[\"过程\",{\"1\":{\"0\":2,\"3\":1,\"14\":1,\"15\":1,\"20\":1,\"56\":1,\"57\":1}}],[\"用途\",{\"0\":{\"55\":1}}],[\"用户名\",{\"1\":{\"38\":1}}],[\"用户\",{\"0\":{\"82\":1},\"1\":{\"35\":1,\"38\":1,\"82\":1}}],[\"用法\",{\"1\":{\"19\":1}}],[\"用于\",{\"1\":{\"6\":1,\"24\":1,\"38\":1,\"54\":1,\"56\":1}}],[\"用\",{\"1\":{\"0\":1,\"1\":1,\"3\":2,\"4\":1,\"8\":1,\"14\":1,\"16\":1,\"18\":1,\"19\":1,\"22\":1,\"23\":1,\"38\":1,\"53\":1}}],[\"：\",{\"1\":{\"0\":2,\"1\":1,\"3\":2,\"4\":1,\"5\":3,\"8\":2,\"9\":4,\"12\":2,\"14\":1,\"17\":1,\"21\":1,\"22\":1,\"44\":1,\"48\":1,\"53\":1,\"56\":1,\"57\":1}}],[\"回答\",{\"1\":{\"0\":1}}],[\"普遍\",{\"1\":{\"0\":1}}],[\"比较简单\",{\"1\":{\"4\":1}}],[\"比较\",{\"1\":{\"0\":1,\"21\":1,\"53\":1,\"54\":1}}],[\"了解\",{\"1\":{\"21\":1}}],[\"了\",{\"1\":{\"0\":1,\"6\":1,\"15\":1,\"21\":1,\"53\":1,\"54\":3}}],[\"给出\",{\"1\":{\"0\":1,\"35\":1}}],[\"”\",{\"1\":{\"0\":3}}],[\"请\",{\"1\":{\"0\":1}}],[\"“\",{\"1\":{\"0\":3}}],[\"问题\",{\"1\":{\"0\":1,\"16\":1}}],[\"对齐\",{\"0\":{\"77\":1}}],[\"对象\",{\"1\":{\"21\":2,\"54\":1}}],[\"对比\",{\"1\":{\"12\":1}}],[\"对于\",{\"1\":{\"12\":1}}],[\"对应\",{\"1\":{\"8\":3,\"10\":1,\"25\":1}}],[\"对称\",{\"1\":{\"0\":1,\"14\":5,\"15\":2,\"24\":1}}],[\"对\",{\"1\":{\"0\":1,\"1\":1,\"4\":2,\"5\":1,\"8\":2,\"9\":1,\"16\":1,\"17\":1,\"20\":1,\"21\":2,\"25\":3,\"51\":4,\"53\":1,\"54\":1,\"85\":1}}],[\"求职者\",{\"1\":{\"0\":1}}],[\"许多\",{\"1\":{\"0\":1}}],[\"中间\",{\"1\":{\"19\":7}}],[\"中\",{\"1\":{\"0\":2,\"1\":1,\"9\":1,\"14\":1,\"15\":2,\"20\":2,\"21\":1,\"22\":1,\"23\":3,\"25\":2,\"28\":1,\"34\":2,\"39\":1,\"48\":1,\"56\":1,\"57\":1,\"90\":1}}],[\"的\",{\"1\":{\"0\":5,\"1\":8,\"3\":5,\"5\":3,\"6\":3,\"8\":8,\"9\":5,\"10\":4,\"12\":8,\"14\":2,\"15\":1,\"16\":7,\"17\":5,\"18\":4,\"19\":10,\"20\":5,\"21\":5,\"22\":2,\"23\":4,\"24\":1,\"25\":4,\"28\":2,\"35\":3,\"38\":6,\"39\":9,\"42\":4,\"44\":1,\"48\":10,\"51\":4,\"53\":6,\"54\":9,\"56\":1,\"57\":4,\"58\":2,\"81\":1,\"90\":1,\"91\":1}}],[\"面试\",{\"1\":{\"0\":1}}],[\"在于\",{\"1\":{\"14\":1,\"19\":1}}],[\"在\",{\"1\":{\"0\":2,\"1\":2,\"9\":1,\"14\":1,\"15\":1,\"21\":1,\"22\":2,\"25\":1,\"28\":1,\"35\":3,\"38\":4,\"39\":1,\"44\":1,\"48\":1,\"53\":2,\"54\":1,\"56\":1,\"57\":1}}],[\"，\",{\"1\":{\"0\":7,\"1\":14,\"3\":5,\"4\":3,\"5\":5,\"6\":7,\"8\":9,\"9\":5,\"10\":4,\"12\":11,\"14\":10,\"15\":4,\"16\":4,\"17\":3,\"18\":2,\"19\":1,\"20\":4,\"21\":16,\"22\":5,\"23\":6,\"24\":3,\"25\":6,\"28\":3,\"34\":2,\"35\":3,\"38\":3,\"39\":4,\"42\":2,\"44\":3,\"48\":7,\"51\":2,\"53\":4,\"54\":5,\"57\":2,\"58\":5,\"90\":6}}],[\"题目\",{\"1\":{\"0\":1}}],[\"取出\",{\"1\":{\"48\":1}}],[\"取决于\",{\"1\":{\"20\":1}}],[\"取前\",{\"1\":{\"9\":3}}],[\"取低\",{\"1\":{\"5\":1}}],[\"取高\",{\"1\":{\"5\":2}}],[\"取\",{\"1\":{\"0\":1,\"4\":1}}],[\" \",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"60\":2,\"81\":1,\"92\":1},\"1\":{\"0\":10,\"1\":32,\"3\":7,\"4\":29,\"5\":209,\"7\":6,\"8\":89,\"9\":530,\"10\":4,\"12\":7,\"14\":8,\"16\":6,\"17\":15,\"18\":8,\"19\":17,\"20\":12,\"21\":45,\"22\":106,\"23\":123,\"24\":100,\"25\":164,\"27\":2,\"28\":171,\"29\":276,\"30\":288,\"31\":176,\"32\":129,\"33\":270,\"34\":337,\"35\":267,\"36\":305,\"37\":287,\"38\":122,\"39\":63,\"40\":228,\"41\":335,\"42\":203,\"43\":333,\"44\":166,\"45\":120,\"46\":113,\"47\":78,\"48\":146,\"49\":100,\"50\":112,\"51\":274,\"53\":18,\"54\":39,\"56\":40,\"57\":102,\"58\":5,\"79\":2,\"81\":2,\"82\":37,\"83\":3,\"84\":8,\"85\":7,\"87\":3,\"88\":16,\"90\":54,\"91\":11,\"92\":15,\"93\":12,\"95\":2}}],[\"—\",{\"0\":{\"0\":2,\"12\":2,\"53\":2},\"1\":{\"1\":2,\"3\":2,\"21\":2,\"54\":2}}],[\"）\",{\"0\":{\"0\":1,\"12\":1,\"53\":1},\"1\":{\"3\":1,\"6\":1,\"7\":1,\"14\":2,\"23\":1,\"25\":3,\"48\":1,\"53\":1,\"90\":1}}],[\"一致\",{\"1\":{\"90\":1}}],[\"一行\",{\"1\":{\"82\":1}}],[\"一些\",{\"1\":{\"57\":1}}],[\"一起\",{\"1\":{\"25\":1}}],[\"一样\",{\"1\":{\"23\":2}}],[\"一种\",{\"1\":{\"21\":1,\"22\":1,\"53\":2,\"58\":2}}],[\"一块\",{\"1\":{\"17\":2,\"18\":2,\"19\":3}}],[\"一定\",{\"1\":{\"8\":1}}],[\"一共\",{\"1\":{\"7\":1,\"8\":3}}],[\"一倍\",{\"1\":{\"6\":1}}],[\"一次\",{\"1\":{\"6\":1,\"34\":1,\"54\":2}}],[\"一组\",{\"1\":{\"5\":1,\"9\":1}}],[\"一节\",{\"1\":{\"5\":1,\"6\":1}}],[\"一串\",{\"1\":{\"3\":1}}],[\"一一列举\",{\"1\":{\"1\":1}}],[\"一般\",{\"1\":{\"1\":1,\"10\":1,\"54\":1}}],[\"一个\",{\"1\":{\"1\":2,\"3\":2,\"16\":1,\"17\":1,\"20\":1,\"34\":1,\"38\":1,\"58\":1}}],[\"一\",{\"0\":{\"0\":1},\"1\":{\"81\":1}}],[\"（\",{\"0\":{\"0\":1,\"12\":1,\"53\":1},\"1\":{\"3\":1,\"6\":1,\"7\":1,\"14\":2,\"23\":1,\"25\":3,\"48\":1,\"53\":1,\"90\":1}}],[\"和\",{\"0\":{\"0\":1,\"12\":1,\"53\":1},\"1\":{\"0\":1,\"1\":1,\"4\":2,\"5\":2,\"6\":2,\"10\":1,\"12\":2,\"14\":4,\"19\":1,\"21\":3,\"24\":2,\"25\":3,\"34\":1,\"39\":2,\"42\":1,\"48\":2,\"51\":1,\"53\":1,\"57\":3,\"90\":2}}],[\"摘要\",{\"0\":{\"0\":1,\"12\":1,\"53\":2},\"1\":{\"0\":1,\"12\":2,\"53\":6,\"54\":7,\"58\":1}}],[\"、\",{\"0\":{\"0\":1,\"12\":1,\"53\":1},\"1\":{\"0\":2,\"3\":2,\"9\":4,\"12\":3,\"21\":1,\"22\":2,\"23\":4,\"24\":2,\"25\":1,\"53\":3}}]],\"serializationVersion\":2}}")).map(([localePath, index]) => [
    localePath,
    loadIndex(index, {
        fields: [/** Heading */ "h", /** Text */ "t", /** CustomFields */ "c"],
        storeFields: [
            /** Heading */ "h",
            /** Text */ "t",
            /** CustomFields */ "c",
        ],
    }),
]));
self.onmessage = ({ data: { type = "all", query, locale, options, id }, }) => {
    const searchLocaleIndex = searchIndex[locale];
    if (type === "suggest")
        self.postMessage([
            type,
            id,
            getSuggestions(query, searchLocaleIndex, options),
        ]);
    else if (type === "search")
        self.postMessage([type, id, getResults(query, searchLocaleIndex, options)]);
    else
        self.postMessage({
            suggestions: [
                type,
                id,
                getSuggestions(query, searchLocaleIndex, options),
            ],
            results: [type, id, getResults(query, searchLocaleIndex, options)],
        });
};
//# sourceMappingURL=index.js.map