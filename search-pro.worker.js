import { entries, fromEntries } from "@vuepress/helper/client";
import { loadIndex } from "slimsearch";
import { getResults } from "../client/worker/result.js";
import { getSuggestions } from "../client/worker/suggestion.js";
const searchIndex = fromEntries(entries(JSON.parse("{\"/\":{\"documentCount\":302,\"nextId\":302,\"documentIds\":{\"0\":\"1\",\"1\":\"1#_1-判断代码执行的线程\",\"2\":\"1#_2-使用-view-post\",\"3\":\"1#_3-使用-activity-runonuithread\",\"4\":\"1#_4-使用-handler-post\",\"5\":\"1#_5-使用-eventbus\",\"6\":\"1#_6-传递数据\",\"7\":\"2\",\"8\":\"2#准备工作\",\"9\":\"2#安装-git\",\"10\":\"2#安装-node-js\",\"11\":\"2#windows\",\"12\":\"2#mac-linux\",\"13\":\"2#markdown\",\"14\":\"2#hexo\",\"15\":\"2#vuepress\",\"16\":\"3\",\"17\":\"3#_1-编码介绍\",\"18\":\"3#_2-十六进制编码\",\"19\":\"3#_2-1-概念\",\"20\":\"3#_2-2-换算\",\"21\":\"3#_2-3-代码实现\",\"22\":\"3#_3-base64-编码\",\"23\":\"3#_3-1-概念\",\"24\":\"3#_3-2-换算\",\"25\":\"3#_3-3-代码实现\",\"26\":\"3#_4-总结\",\"27\":\"3@0\",\"28\":\"4\",\"29\":\"4#_1-相关概念\",\"30\":\"4#_1-1-密钥\",\"31\":\"4#_1-2-加密模式\",\"32\":\"4#_1-2-1-电子密码本模式\",\"33\":\"4#_1-2-2-加密块链模式\",\"34\":\"4#_1-2-3-加密反馈模式\",\"35\":\"4#_1-2-4-输出反馈模式\",\"36\":\"4#_1-3-填充模式\",\"37\":\"4#_2-代码实现\",\"38\":\"4#_2-1-des\",\"39\":\"4#_2-2-3des\",\"40\":\"4#_2-3-aes\",\"41\":\"4#_2-4-rsa\",\"42\":\"4@0\",\"43\":\"5\",\"44\":\"5#add\",\"45\":\"5#apply\",\"46\":\"5#branch\",\"47\":\"5#checkout\",\"48\":\"5#cherry-pick\",\"49\":\"5#clone\",\"50\":\"5#commit\",\"51\":\"5#config\",\"52\":\"5#fetch\",\"53\":\"5#format-patch\",\"54\":\"5#init\",\"55\":\"5#log\",\"56\":\"5#merge\",\"57\":\"5#pull\",\"58\":\"5#push\",\"59\":\"5#rebase\",\"60\":\"5#remote\",\"61\":\"5#reset\",\"62\":\"5#revert\",\"63\":\"5#rm\",\"64\":\"5#stash\",\"65\":\"5#status\",\"66\":\"5#switch\",\"67\":\"5#tag\",\"68\":\"5@0\",\"69\":\"6\",\"70\":\"6#_1-相关代码\",\"71\":\"6#_2-用途\",\"72\":\"6#_2-1-计算字符串\",\"73\":\"6#_2-2-计算文件\",\"74\":\"6#_3-总结\",\"75\":\"6@0\",\"76\":\"7\",\"77\":\"7#_1-创建工程\",\"78\":\"7#_2-连接手机\",\"79\":\"7#_3-打开开发者模式\",\"80\":\"7#_4-使用模拟器\",\"81\":\"7#_5-运行工程\",\"82\":\"7@0\",\"83\":\"8\",\"84\":\"8#_1-添加评论\",\"85\":\"8#_1-1-使用-valines\",\"86\":\"8#_1-2-使用-gitalk\",\"87\":\"8#_2-添加bgm\",\"88\":\"8#_3-添加点击效果\",\"89\":\"8#_3-1-点击弹出爱心\",\"90\":\"8#_3-2-点击弹出文字\",\"91\":\"8#_3-3-点击烟花\",\"92\":\"8#_4-添加字数统计和阅读时长\",\"93\":\"8#_5-添加百度统计\",\"94\":\"8#_6-添加雪花效果\",\"95\":\"8#_7-添加背景动态线条\",\"96\":\"8#_8-添加网站运行时间\",\"97\":\"8#_9-添加背景动态彩带\",\"98\":\"8#_10-添加rss订阅\",\"99\":\"9\",\"100\":\"9#_1-准备工作\",\"101\":\"9#_1-1-创建仓库\",\"102\":\"9#_2-hexo-常用命令\",\"103\":\"9#_2-1-创建目录\",\"104\":\"9#_2-2-启动服务\",\"105\":\"9#_2-3-部署博客\",\"106\":\"9#_3-初始化博客\",\"107\":\"9#_4-个性化配置\",\"108\":\"9#_4-1-修改站点-logo-和-标题\",\"109\":\"9#_4-2-修改主页标题\",\"110\":\"9#_4-3-修改用户logo\",\"111\":\"9#_4-4-修改作者信息\",\"112\":\"9#_4-5-配置菜单\",\"113\":\"9#_4-6-配置导航栏\",\"114\":\"9#_4-7-使用-icon\",\"115\":\"9#_4-8-配置部署\",\"116\":\"10\",\"117\":\"10#_1-下载androidstudio\",\"118\":\"10#_2-安装androidstudio\",\"119\":\"10#_3-配置androidstudio\",\"120\":\"10@0\",\"121\":\"11\",\"122\":\"11#环境准备\",\"123\":\"11#真机\",\"124\":\"11#引导模式\",\"125\":\"11#制作启动盘\",\"126\":\"11#虚拟机\",\"127\":\"11#安装系统\",\"128\":\"11#硬盘分区\",\"129\":\"11#分区建议\",\"130\":\"11#bios-mbr\",\"131\":\"11#uefi-gpt\",\"132\":\"11#格式化分区\",\"133\":\"11#挂载分区\",\"134\":\"11#修改安装源\",\"135\":\"11#安装系统文件\",\"136\":\"11#配置系统\",\"137\":\"11#设置时区\",\"138\":\"11#添加用户\",\"139\":\"11#本地化\",\"140\":\"12\",\"141\":\"12#_1-下载jdk\",\"142\":\"12#_2-安装jdk\",\"143\":\"12#_3-配置环境变量\",\"144\":\"12#jdk-11\",\"145\":\"13\",\"146\":\"13#示例\",\"147\":\"13#标题\",\"148\":\"13#文本\",\"149\":\"13#列表\",\"150\":\"13#引用\",\"151\":\"13#代码块\",\"152\":\"13#链接\",\"153\":\"13#图像\",\"154\":\"13#注脚\",\"155\":\"13#上标下标\",\"156\":\"13#表格\",\"157\":\"13#分割线\",\"158\":\"13#数学公式\",\"159\":\"13#警告\",\"160\":\"13#提示\",\"161\":\"13#标签\",\"162\":\"13#自定义对齐\",\"163\":\"13#思维导图\",\"164\":\"13#流程图\",\"165\":\"13@0\",\"166\":\"14\",\"167\":\"14#安装-gnome-显示管理\",\"168\":\"14#添加-archlinuxcn-源\",\"169\":\"14#浏览器\",\"170\":\"14#中文字体\",\"171\":\"14#gnome-美化\",\"172\":\"14#终端美化-zsh\",\"173\":\"14#设置中心\",\"174\":\"14#网络\",\"175\":\"14#文件管理\",\"176\":\"14#中文与输入法\",\"177\":\"14#其他常用软件\",\"178\":\"15\",\"179\":\"15#_1-类的uml表示\",\"180\":\"15#_2-类的关系\",\"181\":\"15#_2-1-泛化\",\"182\":\"15#_2-1-1-继承\",\"183\":\"15#_2-1-2-实现\",\"184\":\"15#_2-2-依赖\",\"185\":\"15#_2-3-关联\",\"186\":\"15#_2-3-1-单向关联\",\"187\":\"15#_2-3-2-双向关联\",\"188\":\"15#_2-3-3-自关联\",\"189\":\"15#_2-3-4-聚合\",\"190\":\"15#_2-3-5-组合\",\"191\":\"15#_3-plantuml排版\",\"192\":\"15#_3-1-default\",\"193\":\"15#_3-2-up\",\"194\":\"15#_3-3-down\",\"195\":\"15#_3-4-left\",\"196\":\"15#_3-5-right\",\"197\":\"15#_4-总结\",\"198\":\"15@0\",\"199\":\"16\",\"200\":\"16#_1-apksigner\",\"201\":\"16#_1-1-签名\",\"202\":\"16#_1-2-校验\",\"203\":\"16#_2-jarsigner\",\"204\":\"16#_2-1-签名\",\"205\":\"16#_2-2-校验\",\"206\":\"16#_3-zipalign\",\"207\":\"17\",\"208\":\"17#_1-新建工程目录\",\"209\":\"17#_2-新建主module目录\",\"210\":\"17#_3-添加启动activity\",\"211\":\"17#_4-新建库module目录\",\"212\":\"17#_5-结束语\",\"213\":\"17@0\",\"214\":\"18\",\"215\":\"18#_1-安装-graphviz\",\"216\":\"18#_2-安装sublime-text\",\"217\":\"18#_3-安装plantuml\",\"218\":\"18#_4-配置快捷键\",\"219\":\"18#_5-添加依赖jar\",\"220\":\"18#_6-设置语法高亮\",\"221\":\"18#_7-验证\",\"222\":\"18@0\",\"223\":\"19\",\"224\":\"19#用户与组\",\"225\":\"19#编辑器\",\"226\":\"19#挂载硬盘\",\"227\":\"19#设置快捷方式\",\"228\":\"19#git\",\"229\":\"19#安装\",\"230\":\"19#配置\",\"231\":\"19#gpg\",\"232\":\"19#配置-1\",\"233\":\"19#python\",\"234\":\"19#virtual-env\",\"235\":\"19#get-pip\",\"236\":\"19@0\",\"237\":\"20\",\"238\":\"21\",\"239\":\"21#什么是封装\",\"240\":\"21#实现封装\",\"241\":\"21#封装的好处\",\"242\":\"21#设计策略\",\"243\":\"21#虚函数\",\"244\":\"21#纯虚函数\",\"245\":\"22\",\"246\":\"23\",\"247\":\"23#一元运算符重载\",\"248\":\"23#二元运算符重载\",\"249\":\"23#输入-输出运算符重载\",\"250\":\"24\",\"251\":\"24#定义结构\",\"252\":\"24#定义操作\",\"253\":\"24#构造空二叉树\",\"254\":\"24#创建二叉树\",\"255\":\"24#递归先序遍历\",\"256\":\"24#递归中序遍历\",\"257\":\"24#递归后序遍历\",\"258\":\"24#非递归先序遍历\",\"259\":\"24#非递归中序遍历\",\"260\":\"24#非递归后序遍历\",\"261\":\"24#层次遍历\",\"262\":\"24#访问结点\",\"263\":\"24@0\",\"264\":\"25\",\"265\":\"25#定义结构\",\"266\":\"25#定义操作\",\"267\":\"25#创建头结点\",\"268\":\"25#插入结点\",\"269\":\"25#删除结点\",\"270\":\"25#销毁链表\",\"271\":\"25@0\",\"272\":\"26\",\"273\":\"26#定义结构\",\"274\":\"26#定义操作\",\"275\":\"26#创建顺序表\",\"276\":\"26#初始化顺序表\",\"277\":\"26#插入元素\",\"278\":\"26#删除元素\",\"279\":\"26#销毁顺序表\",\"280\":\"26@0\",\"281\":\"27\",\"282\":\"27#定义结构\",\"283\":\"27#定义操作\",\"284\":\"27#创建队列\",\"285\":\"27#判断队列是否为空\",\"286\":\"27#访问队首元素\",\"287\":\"27#出队\",\"288\":\"27#入队\",\"289\":\"27@0\",\"290\":\"28\",\"291\":\"28#定义结构\",\"292\":\"28#定义操作\",\"293\":\"28#初始化栈\",\"294\":\"28#判断栈是否为空\",\"295\":\"28#访问栈顶元素\",\"296\":\"28#出栈\",\"297\":\"28#入栈\",\"298\":\"28@0\",\"299\":\"29\",\"300\":\"30\",\"301\":\"31\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[4,65],\"1\":[6,127],\"2\":[6,55],\"3\":[6,39],\"4\":[6,61],\"5\":[4,92],\"6\":[3,87],\"7\":[3,27],\"8\":[2,32],\"9\":[3,8],\"10\":[5,21],\"11\":[1,29],\"12\":[3,46],\"13\":[1,27],\"14\":[1,28],\"15\":[1,15],\"16\":[11,58],\"17\":[4,101],\"18\":[4],\"19\":[3,116],\"20\":[3,40],\"21\":[4,131],\"22\":[4,49],\"23\":[3,135],\"24\":[3,102],\"25\":[4,217],\"26\":[3,31],\"27\":[null,null,4],\"28\":[11,78],\"29\":[4],\"30\":[3,61],\"31\":[4,40],\"32\":[5,49],\"33\":[6,57],\"34\":[5,40],\"35\":[5,51],\"36\":[4,49],\"37\":[4,108],\"38\":[3,101],\"39\":[4,109],\"40\":[3,89],\"41\":[3,137],\"42\":[null,null,5],\"43\":[4,4],\"44\":[1,143],\"45\":[1,180],\"46\":[1,139],\"47\":[1,136],\"48\":[3,99],\"49\":[1,163],\"50\":[1,190],\"51\":[1,165],\"52\":[1,182],\"53\":[3,175],\"54\":[1,110],\"55\":[1,74],\"56\":[1,149],\"57\":[1,218],\"58\":[1,157],\"59\":[1,198],\"60\":[1,100],\"61\":[1,77],\"62\":[1,90],\"63\":[1,69],\"64\":[1,116],\"65\":[1,84],\"66\":[1,97],\"67\":[1,142],\"68\":[null,null,1],\"69\":[11,81],\"70\":[4,83],\"71\":[3],\"72\":[4,59],\"73\":[4,102],\"74\":[3,30],\"75\":[null,null,4],\"76\":[5],\"77\":[4,157],\"78\":[4,85],\"79\":[5,91],\"80\":[4],\"81\":[4,48],\"82\":[null,null,1],\"83\":[6,59],\"84\":[4,18],\"85\":[4,119],\"86\":[4,117],\"87\":[4,151],\"88\":[5],\"89\":[5,154],\"90\":[5,125],\"91\":[4,207],\"92\":[7,98],\"93\":[5,123],\"94\":[5,292],\"95\":[6,55],\"96\":[6,106],\"97\":[6,48],\"98\":[5,103],\"99\":[6,77],\"100\":[4,65],\"101\":[4,48],\"102\":[4],\"103\":[4,22],\"104\":[4,32],\"105\":[4,27],\"106\":[4,138],\"107\":[4,12],\"108\":[7,28],\"109\":[5,37],\"110\":[5,33],\"111\":[5,47],\"112\":[4,151],\"113\":[5,93],\"114\":[4,18],\"115\":[4,59],\"116\":[2,67],\"117\":[4,14],\"118\":[4,4],\"119\":[4,98],\"120\":[null,null,1],\"121\":[4,14],\"122\":[2],\"123\":[1],\"124\":[2,53],\"125\":[2,85],\"126\":[1,96],\"127\":[2,65],\"128\":[1,158],\"129\":[2],\"130\":[3,22],\"131\":[3,56],\"132\":[2,27],\"133\":[2,35],\"134\":[3,74],\"135\":[2,37],\"136\":[2,87],\"137\":[2,35],\"138\":[2,64],\"139\":[1,76],\"140\":[5],\"141\":[4,7],\"142\":[4,36],\"143\":[4,61],\"144\":[3,43],\"145\":[4],\"146\":[1],\"147\":[1],\"148\":[1],\"149\":[1],\"150\":[1],\"151\":[2],\"152\":[1],\"153\":[1],\"154\":[1],\"155\":[2],\"156\":[1],\"157\":[1],\"158\":[1],\"159\":[1],\"160\":[1],\"161\":[1],\"162\":[2],\"163\":[2],\"164\":[1,9],\"165\":[null,null,1],\"166\":[7,63],\"167\":[5,67],\"168\":[4,64],\"169\":[1,12],\"170\":[1,30],\"171\":[3,81],\"172\":[4,95],\"173\":[2,32],\"174\":[1,38],\"175\":[2,6],\"176\":[3,83],\"177\":[2,23],\"178\":[4,16],\"179\":[6,51],\"180\":[5,21],\"181\":[3,33],\"182\":[3,28],\"183\":[3,28],\"184\":[3,46],\"185\":[3,14],\"186\":[4,35],\"187\":[4,31],\"188\":[4,20],\"189\":[3,72],\"190\":[3,62],\"191\":[4,48],\"192\":[3,26],\"193\":[3,23],\"194\":[3,23],\"195\":[3,23],\"196\":[3,23],\"197\":[3,28],\"198\":[null,null,3],\"199\":[3],\"200\":[3,44],\"201\":[3,85],\"202\":[3,55],\"203\":[3,11],\"204\":[3,69],\"205\":[3,48],\"206\":[3,50],\"207\":[5],\"208\":[5,54],\"209\":[6,98],\"210\":[5,104],\"211\":[6,66],\"212\":[3,39],\"213\":[null,null,1],\"214\":[4],\"215\":[4,45],\"216\":[5,32],\"217\":[4,32],\"218\":[4,35],\"219\":[5,41],\"220\":[5,15],\"221\":[3,49],\"222\":[null,null,3],\"223\":[4,10],\"224\":[3,32],\"225\":[1,7],\"226\":[2,13],\"227\":[2,13],\"228\":[1],\"229\":[1,5],\"230\":[1,14],\"231\":[1],\"232\":[1,73],\"233\":[1,20],\"234\":[3,16],\"235\":[3,20],\"236\":[null,null,1],\"237\":[9,351],\"238\":[9],\"239\":[3,25],\"240\":[2,59],\"241\":[3,159],\"242\":[2,223],\"243\":[2,98],\"244\":[2,154],\"245\":[7,193],\"246\":[9,159],\"247\":[3,95],\"248\":[3,95],\"249\":[5,43],\"250\":[6,69],\"251\":[2,30],\"252\":[2],\"253\":[3,30],\"254\":[2,56],\"255\":[3,36],\"256\":[3,36],\"257\":[3,74],\"258\":[4,78],\"259\":[4,84],\"260\":[4,185],\"261\":[2,85],\"262\":[2,168],\"263\":[null,null,1],\"264\":[6,87],\"265\":[2,55],\"266\":[2],\"267\":[3,44],\"268\":[2,97],\"269\":[2,85],\"270\":[2,100],\"271\":[null,null,1],\"272\":[7,117],\"273\":[2,84],\"274\":[2],\"275\":[3,44],\"276\":[3,62],\"277\":[2,111],\"278\":[2,88],\"279\":[3,109],\"280\":[null,null,2],\"281\":[6,101],\"282\":[2,49],\"283\":[2],\"284\":[2,31],\"285\":[4,34],\"286\":[3,41],\"287\":[1,61],\"288\":[1,101],\"289\":[null,null,1],\"290\":[6,110],\"291\":[2,64],\"292\":[2],\"293\":[2,53],\"294\":[4,22],\"295\":[3,52],\"296\":[1,52],\"297\":[1,111],\"298\":[null,null,1],\"299\":[0,4],\"300\":[1],\"301\":[3]},\"averageFieldLength\":[3.206501078048581,74.15554856656829,0.37939318255781934],\"storedFields\":{\"0\":{\"h\":\"Android 线程间通信\",\"t\":[\"Android 系统中，应用在运行时是一个独立的进程，但是每个进程中可以包含多个线程提高运行效率。在多线程开发中，有一个很重要的原则：不能在子线程中更新 UI 。\",\"Only the original thread that created a view hierarchy can touch its views.\",\"为解决这个问题，目前有多重方案实现子线程和主线程（UI 线程）之间的通信。\"]},\"1\":{\"h\":\"1. 判断代码执行的线程\",\"t\":[\"在一些简单代码逻辑中，也许能够很清晰的辨别出运行在子线程或主线程中。通常在复杂的类关系依赖、函数嵌套调用中，可能需要花费很大精力去阅读代码之后去判断。不过，巧法子也是有的，一行代码解决。\",\"Log.d(\\\"TAG\\\",\\\"test\\\");\",\"日志内容中，2368-2393 表示是在子线程中输出日志。\",\"11-16 01:08:31.584 2368-2393/com.flueky.demo D/TAG: test\",\"其中 2368 表示 PID 指进程id， 2393 表示 TID 指线程id 。如果 TID 也是 2368 ，则表示日志输出在主线程中。\",\"可能也有人听过 UID ,应用第一次安装在设备上时，系统会分配一个序号给应用，作为其唯一标识。UID 在覆盖安装时不会变化，卸载安装时系统会重新分配一个。\",\"下面是在代码中获取三个 id 的方式。\",\"// 获取 tid Process.myTid() // 获取 pid Process.myPid() // 获取 uid Process.myUid()\",\"遇到需要在子线程中更新 UI 操作时，可以通过下面的这些方式解决。\"]},\"2\":{\"h\":\"2. 使用 View.post\",\"t\":[\"子线程代码运行在 Activity 或 Fragment 中，能获取到任意 view 的引用时，可以使用此方式将需要实现的代码放在主线程中运行。\",\"// post 方法在子线程中调用 textView.post(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"3\":{\"h\":\"3. 使用 Activity.runOnUiThread\",\"t\":[\"如果能够直接获取到 Activity 实例，使用 runOnUiThread 方法。\",\"// runOnUiThread 方法在子线程中调用 activity.runOnUiThread(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"4\":{\"h\":\"4. 使用 Handler.post\",\"t\":[\"使用 Handler 比较讲究，因为需要考虑到 Handler 实例初始化的位置。\",\"// post 方法在子线程中调用 handler.post(new Runnable() { @Override public void run() { // handler 在主线程中初始化时，此处代码在主线程中执行 // handler 在子线程中初始化事，此处代码在子线程中执行 } });\",\"以上说法其实不够严谨，存在下面的情况，初始化 handler 实例时传入 Looper.getMainLooper() ，则 handler.post 也在主线程中执行。\",\"// 下面的代码在子线程中执行 Looper.prepare(); handler = new Handler(Looper.getMainLooper()); Looper.loop();\"]},\"5\":{\"h\":\"5. 使用 EventBus\",\"t\":[\"EventBus 出自 greenrobot ,通过订阅的方式，告知函数运行在哪个线程中。为使订阅函数在主线程中执行，使用注解 MAIN 或 MAIN_ORDERED 。\",\"/** * eventbus 简单示例 */ public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } /** * 订阅函数， * ThreadMode.MAIN 表示在主线程中运行，可能会阻塞子线程。 * ThreadMode.MAIN_ORDERED 表示在主线程中运行，不会阻塞子线程。 */ @Subscribe(threadMode = ThreadMode.MAIN) public void onMessageEvent(Object event) { if(event instanceof Runnable) ((Runnable)event).run(); } @Override protected void onStart() { super.onStart(); // 注册 eventbus 监听 EventBus.getDefault().register(this); } @Override protected void onStop() { super.onStop(); // 注销 eventbus 监听 EventBus.getDefault().unregister(this); } } // 在子线程中发送消息 EventBus.getDefault().post(new Runnable() { @Override public void run() { // 此处代码会在 UI 线程执行 } });\"]},\"6\":{\"h\":\"6. 传递数据\",\"t\":[\"前面四种方式演示了如何在子线程中做更新 UI 操作。 AsyncTask 也具备相同用法，但是有点牵强，因为只有 execute 方法在主线程中执行，onPostExecute 才会在主线程中调用。由于 onPostExecute 可以接收到子线程传递的任意类型的对象数据，所以 AsyncTask 可以作为线程间的数据交互的载体。对此 Handler 和 EventBus 表示不服。\",\"EventBus 如之前所示，可以将 Runnable 对象换成任意实例。\",\"Handler 也可以通过 sendMessage 方法发送 Message 对象。其中 Message.obj 用作传递对象数据的载体。\",\"建议使用 Message.obtain() 方法复用 Message 实例。\",\"顺便提下，BroadcastReceiver 也可以作为此类用途，只不过没有 EventBus 和 Handler 方便。\"]},\"7\":{\"h\":\"搭建个人知识库\",\"t\":[\"个人知识库，可以是一个只包含静态页面的网站。作为新手，不需要买域名以及服务器。GitHub Pages 就够用了。\"]},\"8\":{\"h\":\"准备工作\",\"t\":[\"基于 GitHub Pages 搭建知识库网站，需要基于一些主流的平台与框架编译，用 Markdown 编写文件内容。因此需要做如下准备。\",\"安装 git\",\"安装 nodejs\",\"熟练编写 md 文件\"]},\"9\":{\"h\":\"安装 git\",\"t\":[\"https://git-scm.com/\"]},\"10\":{\"h\":\"安装 Node.js\",\"t\":[\"Node.js 版本较多，遇到兼容性要求时，对不同版本管理不太友好。建议使用 NVM 。\"]},\"11\":{\"h\":\"Windows\",\"t\":[\"GitHub 地址\",\"下载 最新版本， 直接解压安装即可。\",\"查询 最新版本 Node.js\",\"nvm install 20.18.0 # 当前最新版本 nvm list # 查看已安装版本 nvm use 20.18.0 # 选择需要的版本\"]},\"12\":{\"h\":\"Mac/Linux\",\"t\":[\"GitHub 地址\",\"安装命令如下：\",\"# 使用 curl curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash # 使用 wget wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash nvm ls-remote # 查看最新版本号，建议选择 LTS nvm install 20.18.0 # 当前最新版本 nvm list # 查看已安装版本 nvm use 20.18.0 # 选择需要的版本\"]},\"13\":{\"h\":\"Markdown\",\"t\":[\"Markdown 语法，支持快速排版内容。入门较简单，参考文档。除了基本的 Markdown 语法，还支持 Vuepress 支持的高级功能。如：数学公式，图表以及脑图。\"]},\"14\":{\"h\":\"Hexo\",\"t\":[\"Hexo 是快速简洁且高效的博客框架。需要搭配合适 主题 使用。\",\"推荐主题 hexo-theme-butterfly 。\",\"也可参照之前写的文档 。\"]},\"15\":{\"h\":\"Vuepress\",\"t\":[\"Vuepress 是 Vue 驱动的静态网站生成器。\",\"推荐主题 Vuepress Theme Hope 。\"]},\"16\":{\"h\":\"编码、摘要和加密（一）—— 字节编码\",\"t\":[\"之所以取这个题目，是因为在面试的过程中，许多求职者对问题“请列举常用的加密算法”给出了比较普遍的回答：“用过 MD5 和 Base64 ”，更有甚者说，“ Base64 是对称加密， MD5 是非对称加密”。\",\"那么，通过接下来的三篇文章科普下，在编程过程中常见的三个术语：字节编码 、信息摘要、 数据加密。\"]},\"17\":{\"h\":\"1. 编码介绍\",\"t\":[\"在计算机领域，数据存储单位叫字节——byte，最小的存储单元的容量是1位-1bit。一个bit有两个状态 0 和 1。1byte = 8bit。通常，一个英文字母占1字节，汉字采用GBK编码时，占用2字节。UTF-8是可变长度编码，一般用 0-4 字节表示。\",\"以上介绍，仅局限于计算机可以显示在屏幕上的字符。但是 1byte 通常可表示 256 个不同的数据。二进制表示：00000000-11111111，即 2^8 。根据 ASCII 中显示，可见字符不足 100 个。若想完整的显示 1byte 表示的全部内容，需要对其进行编码。通常使用16进制的方式，0x00-0xFF。0x31 表示字符 '1' ，0x01 表示字母 1，0x41 表示 'A' ,0x61 表示 'a' 。不再一一列举，有兴趣的小伙伴可以查阅 ASCII 码表。\"]},\"18\":{\"h\":\"2. 十六进制编码\"},\"19\":{\"h\":\"2.1 概念\",\"t\":[\"16进制编码，是基于2进制转换的过程。下表列举些常见的数值编码及其意义。\",\"十进制\",\"2进制\",\"16进制\",\"意义\",\"0\",\"00000000\",\"0x00\",\"null\",\"1\",\"00000001\",\"0x01\",\"1\",\"49\",\"00110001\",\"0x31\",\"'1'\",\"65\",\"01000001\",\"0x41\",\"'A'\",\"97\",\"01100001\",\"0x61\",\"'a'\",\"此处，需要引入一个概念——基数。2 进制基数：0、1。10进制基数：0-9。16进制基数0-9，A-F。通过观察表示一串内容的基数，可以快速判断它使用的编码方式哦！\",\"下表表示16进制基数与10进制、2进制的关系。均用 1byte 表示。\",\"16进制\",\"10进制\",\"2进制\",\"0x00\",\"0\",\"00000000\",\"0x01\",\"1\",\"00000001\",\"0x02\",\"2\",\"00000010\",\"0x03\",\"3\",\"00000011\",\"0x04\",\"4\",\"00000100\",\"0x05\",\"5\",\"00000101\",\"0x06\",\"6\",\"00000110\",\"0x07\",\"7\",\"00000111\",\"0x08\",\"8\",\"00001000\",\"0x09\",\"9\",\"00001001\",\"0x0A\",\"10\",\"00001010\",\"0x0B\",\"11\",\"00001011\",\"0x0C\",\"12\",\"00001100\",\"0x0D\",\"13\",\"00001101\",\"0x0E\",\"14\",\"00001110\",\"0x0F\",\"15\",\"00001111\",\"不难发现，16进制用 4bit 表示一个基数（16 = 2^4）。\"]},\"20\":{\"h\":\"2.2 换算\",\"t\":[\"将数字 100 转成 16进制表示：\",\"计算方式比较简单，对 100 用 16 进行取整取余。发现 100 = 6 * 16 + 4。即，100 = 0x64。再转成2进制，分别对 6 和 4 转成 4bit 0和1 表示。0110 0100。\",\"所以 100 = 0x64 = 01100100\"]},\"21\":{\"h\":\"2.3 代码实现\",\"t\":[\"根据上一节的换算规则：\",\"将字节数组转16进制字符串，需要对每个字节进行独立运算。分别取高四位和第四位，然后转成两个10进制数作为基数索引，最后组合成16进制表示。\",\"将16进制字符串转成字节数组，需要每两个16进制基数一组。分别找出其表示的10进制数，然后做高四位和第四位相加。\",\"/** * 16 进制基数 */ static char[] hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}; /** * 编码：字节数组转 16 进制字符串 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer hexSrtBuff = new StringBuffer(); for (byte b : data) { int height = b >> 4 & 0x0f; // 取高四位 int low = b & 0x0f;// 取低四位 hexSrtBuff.append(hex[height]); hexSrtBuff.append(hex[low]); } return hexSrtBuff.toString(); } /** * 解码：16 进制字符串转字节数组 * * @param hexStr * @return */ public static final byte[] decode(String hexStr) { if (hexStr == null) return null; if (hexStr.length() % 2 != 0) { // 不合法的十六进制字符串参数 throw new IllegalArgumentException(\\\"The hex string was illegal\\\"); } byte[] data = new byte[hexStr.length() / 2]; for (int i = 0; i < hexStr.length(); i += 2) { char h = hexStr.charAt(i); char l = hexStr.charAt(i + 1); int height = (h >= hex[10] && h <= hex[15]) ? (h - hex[10] + 10) : (h - hex[0]); int low = (l >= hex[10] && l <= hex[15]) ? (l - hex[10] + 10) : (l - hex[0]); data[i / 2] = (byte) ((height << 4) + (low & 0x0f)); } return data; }\"]},\"22\":{\"h\":\"3. Base64 编码\",\"t\":[\"上一节介绍了16进制的编码规则和代码实现。不难发现，做一次16进制编码时候，所需的存储空间翻一倍。这虽然方便计算机显示，可以用于网络通信，但耗费的存储空间和传输效率都将减半。因此，base64编码诞生。（楼主瞎编，base64编码是否因此诞生，没做考究）。\"]},\"23\":{\"h\":\"3.1 概念\",\"t\":[\"base64 一共有 64 个基数。每个基数占 6bit（64 = 2^6）。\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"索引\",\"基数\",\"0\",\"A\",\"16\",\"Q\",\"32\",\"g\",\"48\",\"w\",\"1\",\"B\",\"17\",\"R\",\"33\",\"h\",\"49\",\"x\",\"2\",\"C\",\"18\",\"S\",\"34\",\"i\",\"50\",\"y\",\"3\",\"D\",\"19\",\"T\",\"35\",\"j\",\"51\",\"z\",\"4\",\"E\",\"20\",\"U\",\"36\",\"k\",\"52\",\"0\",\"5\",\"F\",\"21\",\"V\",\"37\",\"l\",\"53\",\"1\",\"6\",\"G\",\"22\",\"W\",\"38\",\"m\",\"54\",\"2\",\"7\",\"H\",\"23\",\"X\",\"39\",\"n\",\"55\",\"3\",\"8\",\"I\",\"24\",\"Y\",\"40\",\"o\",\"56\",\"4\",\"9\",\"J\",\"25\",\"Z\",\"41\",\"p\",\"57\",\"5\",\"10\",\"K\",\"26\",\"a\",\"42\",\"q\",\"58\",\"6\",\"11\",\"L\",\"27\",\"b\",\"43\",\"r\",\"59\",\"7\",\"12\",\"M\",\"28\",\"c\",\"44\",\"s\",\"60\",\"8\",\"13\",\"N\",\"29\",\"d\",\"45\",\"t\",\"61\",\"9\",\"14\",\"O\",\"30\",\"e\",\"46\",\"u\",\"62\",\"+\",\"15\",\"P\",\"31\",\"f\",\"47\",\"v\",\"63\",\"/\"]},\"24\":{\"h\":\"3.2 换算\",\"t\":[\"根据上表的索引关系，试换算几个案例。\",\"字符 1\",\"10进制表示 49 。 16进制表示 0x31。 2进制表示 00110001。\",\"一共8位 ，不能被6位整除，因此不足位补 0。 补充后12位 001100 010000。 对应 base64 索引 12 16。 base64 MQ==\",\"对补位的00，需要用 = 标记。\",\"字符串 1A\",\"10进制表示 49 65。 16进制表示 0x31 0x41。 2进制表示 00110001 01000001。\",\"一共16位，不能被6位整除，因此不足位补 0。 补充后18位 001100 010100 000100。 对应 base64 索引 12 20 4。 base64 MUE=\",\"字符串 1Aa\",\"10进制表示 49 65 97。 16进制表示 0x31 0x41 0x61。 2进制表示 00110001 01000001 01100001。\",\"一共24位，可以被6位整除，因此不需补位。 划分后24位 001100 010100 000101 100001。 对应 base64 索引 12 20 5 33。 base64 MUFh\",\"根据上面的换算得出，base64 编码后的字符串长度一定是4的整数倍。也许1 2 字节的数据使用 base64 编码后并不能体现出它的优势。但是对100字节的数据编码：\",\"16进制编码\",\"编码后长度：100 * 2 = 200。\",\"base64 编码\",\"编码后长度 ⌈100 / 3⌉ * 4 = 34 *4 = 136。\"]},\"25\":{\"h\":\"3.3 代码实现\",\"t\":[\"考虑到补位场景，因此实现较为复杂。可供编程语言入门时，练手使用。\",\"/** * base 64 基数：26个大写字母、26个小写字母、10个阿拉伯数字、'+、'/' */ static char[] base64 = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' , '+', '/' }; /** * 编码：字节数组转 base64 * <p> * 字符 '1' 二进制：00110001 转base64后 001100 010000 补充 两个等号 * * @param data * @return */ public static final String encode(byte[] data) { if (data == null) return null; StringBuffer base64StrBuff = new StringBuffer(); int leftBit = 0; //保存剩余字节 int index = 0; int num; for (index = 0; index < data.length; index++) { switch (index % 3) { case 0: num = data[index] >> 2 & 0x3f; // 取前六位 leftBit = data[index] & 0x03; // 保留后两位 base64StrBuff.append(base64[num]); break; case 1: num = (leftBit << 4 & 0x30) + (data[index] >> 4 & 0x0f); // 取前4位 与之前的后两位相加 leftBit = data[index] & 0x0f; // 保留后四位 base64StrBuff.append(base64[num]); break; case 2: num = (leftBit << 2 & 0x3c) + (data[index] >> 6 & 0x03); // 取前两位 与之前的后四位相加 leftBit = data[index] & 0x3f;// 保留后六位 base64StrBuff.append(base64[num]); base64StrBuff.append(base64[leftBit]); leftBit = 0; break; } } /** * 对剩余位做补位处理，并用等号标记 */ switch (index % 3) { case 0: break; case 1: base64StrBuff.append(base64[leftBit << 4 & 0x30]); base64StrBuff.append('='); base64StrBuff.append('='); break; case 2: base64StrBuff.append(base64[leftBit << 2 & 0x3c]); base64StrBuff.append('='); break; } return base64StrBuff.toString(); } /** * 解码： base64 转字节数组 * * @param base64Str * @return */ public static final byte[] decode(String base64Str) { if (base64Str == null) return null; if (base64Str.length() % 4 != 0) throw new IllegalArgumentException(\\\"thr base64 string was illegal\\\"); // 检查末尾等号的个数， int equalSignCount = 0; for (int i = base64Str.length() - 1; i > 0; i--) { if (base64Str.charAt(i) != '=') { break; } equalSignCount++; } // 转成字节数组的长度 int bytesLen = base64Str.length() / 4 * 3 - equalSignCount; byte[] data = new byte[bytesLen]; int index = 0; for (int i = 0; i < base64Str.length(); i += 4) { // 四个字节一组处理，转成三个字节 int one = getCharIndex(base64Str.charAt(i)); int two = getCharIndex(base64Str.charAt(i + 1)); int three = getCharIndex(base64Str.charAt(i + 2)); int four = getCharIndex(base64Str.charAt(i + 3)); if (one < 0) break; int first = one << 2 & 0xfc; if (two < 0) break; first += (two >> 4 & 0x03); data[index++] = (byte) first; if (three < 0) break; int second = (two << 4 & 0xf0); second += (three >> 2 & 0x0f); data[index++] = (byte) second; if (four < 0) break; int third = (three << 6 & 0xc0); third += four; data[index++] = (byte) third; } return data; } /** * 寻找字符在字符串中的索引 * * @param c * @return */ private static int getCharIndex(char c) { if (c >= 'A' && c <= 'Z') return c - 'A'; else if (c >= 'a' && c <= 'z') return c - 'a' + 26; else if (c >= '0' && c <= '9') return c - '0' + 52; else if (c == '+') return 62; else if (c == '/') return 63; else return -1; }\"]},\"26\":{\"h\":\"4. 总结\",\"t\":[\"虽然 16 进制和 Base64 编码是可逆的，具备对应的解码操作，但他们却不是加密算法。加密算法一般需要使用密钥，只有正确的密钥，才能解密出正确的明文。\"]},\"27\":{\"c\":[\"16进制\",\"base64\"]},\"28\":{\"h\":\"编码、摘要和加密（三）—— 数据加密\",\"t\":[\"关于加密，此处没有更加通俗易懂的解释。与同是对于字节类型数据处理的编码和摘要对比：\",\"编码是可逆的，任何人只要知道编码规则，就能够进行解码。\",\"摘要是不可逆的，即使知道只要算法的实现原理，也很难还原出原数据。\",\"加密是可逆的，但只知道加密算法并不能解密，还需要知道加密密钥。\",\"接下来，将针对几个常见的加密算法：DES、3DES、AES、RSA 的 Java 实现及其相关进行介绍，由于之前实现过 DES 和 AES 算法，因此具体算法说明，后续有空会写到。\"]},\"29\":{\"h\":\"1. 相关概念\"},\"30\":{\"h\":\"1.1 密钥\",\"t\":[\"在代码实现的过程中，密钥即是 key 。使用对称加密算法时，加密和解密是同一个密钥。使用非对称加密算法时，加密和解密密钥不相同，区分为公钥（public key）和私钥（private key）。\",\"见过把 base64 当做对称加密， md5 当做非对称加密，因此下面划重点：\",\"判别加密算法最直接的方式，是否需要密钥。\",\"对称加密和非对称加密区别在于，加解密是否是同一个key。\",\"对称加密算法效率优于非对称加密算法，建议用对称加密算法加密长数据，非对称加密算法加密端数据。\"]},\"31\":{\"h\":\"1.2 加密模式\",\"t\":[\"加密模式主要体现在对称加密算法中。之前提到过，对称加密算法效率优，适合加密长数据。实际加密过程中，是将长数据划分成固定长度的若干块短数据进行加密操作。为防止暴力破解得出明文，因此衍生了四种加密模式。\"]},\"32\":{\"h\":\"1.2.1 电子密码本模式\",\"t\":[\"英译 Electronic Code Book ，简称 ECB 模式，最简单的加密模式。\",\"将长数据分割成固定长度的若干块。\",\"分别对每块数据用同一个密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"上述步骤存在一个严重的问题，如果有重复的明文块，那么加密出来的密文也重复。\"]},\"33\":{\"h\":\"1.2.2 加密块链模式\",\"t\":[\"英译 Cipher Block Chaining ，简称 CBC,基于 ECB 模式的改进版。 此处引入一个概念：初始化向量 Initialization Vector 简称 IV 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块的密文与后一块明文进行异或，再用密钥进行加密。\",\"将每块加密出来的密文合并拼接成最终的完整密文。\",\"第一块明文没有密文与其异或，因此需要 IV 对其异或再用密钥加密。\"]},\"34\":{\"h\":\"1.2.3 加密反馈模式\",\"t\":[\"英译 Cipher Feedback Mode ，简称 CFB 。\",\"将长数据分割成固定长度的若干块。\",\"将前一块密文使用密钥进行加密，再与后一块明文进行异或。\",\"将每块异或后的密文合并拼接成最终的完整密文。\",\"第一块明文需要与用密钥加密后的 IV 进行异或。\"]},\"35\":{\"h\":\"1.2.4 输出反馈模式\",\"t\":[\"英译 Output Feedback Mode , 简称 OFB ，与 CFB 模式有些细小的区别。\",\"将长数据分割成固定长度的若干块。\",\"将前一块中间密文使用密钥进行加密得中间密文。中间密文与明文进行异或得密文。\",\"将每个中间密文与明文块异或后的密文进行合并拼接成最终的完整密文。\",\"第一块明文需要的中间密文是用密钥加密后的 IV 。\",\"CFB 与 OFB 的区别在于中间密文和密文块的用法 。\",\"CFB 使用前一块的密文进行加密。\",\"OFB 使用前一块的中间密文进行加密。\"]},\"36\":{\"h\":\"1.3 填充模式\",\"t\":[\"分块加密的过程中，遇到不够整分的块。如，将 16 字节作为一个明文块。当加密 17 字节时，不够分成两块。此时需要对第二块明文进行填充。填充后的两个明文块各 16 字节共 32 字节后再进行加密操作。\",\"后 15 字节的填充内容，需要取决于具体的填充模式。见后续 Java 代码实现中介绍。\"]},\"37\":{\"h\":\"2. 代码实现\",\"t\":[\"Java 对加密部分做了比较完整的封装—— Cipher 类。\",\"以下列举几个主要方法：\",\"getInstance 获取 Cipher 对象，主要接收转换类型参数对象。转换类型参数分为 算法 和 算法/模式/填充 。\",\"init 初始化加密参数。包括指定加解密模式、密钥和初始化向量-IV。\",\"doFinal 结束加密和解密操作，有多个重载方法，主要接收需要加密或解密的数据。\",\"关于填充，之前简要介绍过。在 Java 代码中常见的填充模式是 PKCS5Padding 。还有一种模式 NoPadding 由于对明文长度有要求，不建议使用。其他填充模式未深入了解，暂不误导。\",\"PKCS5Padding 指，需要填充多少字节，就填充多少个字节的数字。如 DES 算法要求每个明文块 8 字节，那么，加密 1 字节数据，需要填充 7 个字节，此时填充 7 个 7 。加密 7 字节数据，需要填充 1 个 1 。加密 8 字节数据时，为方便校验解密后的明文正确性，需要扩展成 16 字节数据，此时第二个明文块填充 8 个 8 。\"]},\"38\":{\"h\":\"2.1 DES\",\"t\":[\"DES 全称 Data Encryption Standard ，数据加密标准算法。固定密钥 8 字节，64 位。每个明文块长度 8 字节。\",\"getInstance 接收参数：DES/ECB/PKCS5Padding ，其中 ECB 表示加密模式，可以用上述的其他三个模式替换以及更多 JDK 支持的模式。PKCS5Padding 表示一种填充模式。\",\"在使用 CBC 、 CFB 、 OFB 时，需要在 init 方法中指定 IV 。\",\"private static final String KEY_ALGORITHM = \\\"DES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 加密模式 cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); // 解密模式 cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"39\":{\"h\":\"2.2 3DES\",\"t\":[\"3DES 即使用 3 次 DES 算法。由于每个 DES 算法处理需要 8 字节密钥，因此 3DES 算法需要 24 字节密钥。\",\"需要注意，3DES 算法名称使用 DESede 或 TripleDES。e 表示做 DES 加密操作，d 表示做 DES 解密操作。前者表示用 DES 连续做加密 、解密、加密操作，后者表示连续做三次加密操作。每次使用的密钥，分别是 24 字节密钥中不同的三段（前、中、后各8字节）。\",\"若使用 DESede 算法时 24 字节密钥中的前两段一样，该算法等同于 DES 算法使用第三段的 8 字节密钥。\",\"填充相关同 DES 算法一样。\",\"private static final String KEY_ALGORITHM = \\\"DESede\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"DESede/CBC/PKCS5Padding\\\"; // 初始化向量 private static final String IV = \\\"12345678\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM),new IvParameterSpec(IV.getBytes())); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\"]},\"40\":{\"h\":\"2.3 AES\",\"t\":[\"AES 全称 Advanced Encryption Standard ，高级加密标准算法，用于替代 DES 。\",\"DES 只支持 8 字节密钥，AES 可以支持 16 字节、24 字节和 32 字节密钥。明文块长度也可以划分成 16 字节 、24 字节和 32 字节进行填充。\",\" private static final String KEY_ALGORITHM = \\\"AES\\\"; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"AES/ECB/PKCS5Padding\\\"; public static final byte[] encrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data, byte[] key) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, KEY_ALGORITHM)); return cipher.doFinal(data); } catch (Exception e) { e.printStackTrace(); } return null; }\",\"以上三种对称加密算法的 Java 代码实现基本一致。\"]},\"41\":{\"h\":\"2.4 RSA\",\"t\":[\"RSA是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的非对称加密算法，因此使用他们 3 人姓氏首字母命名。\",\"示例代码中的公钥和私钥是随机生成的密钥对，密钥对模长建议是 1024 或 2048，对应密文长度是 128 字节和 256 字节。模长可以大于 2048 ， 越长越难破解，但是效率越低。 实际应用中，建议将密钥对模长设置为 2048 并以文件的形式存储在终端。\",\"private static PrivateKey privateKey; private static PublicKey publicKey; private static final String DEFAULT_CIPHER_ALGORITHM = \\\"RSA\\\"; static { KeyPairGenerator keyGener = null; try { keyGener = KeyPairGenerator.getInstance(DEFAULT_CIPHER_ALGORITHM); keyGener.initialize(1024); KeyPair keyPair = keyGener.generateKeyPair(); privateKey = keyPair.getPrivate(); publicKey = keyPair.getPublic(); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } } public static final byte[] encrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.ENCRYPT_MODE, publicKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; } public static final byte[] decrypt(byte[] data) { try { Cipher cipher = Cipher.getInstance(DEFAULT_CIPHER_ALGORITHM); cipher.init(Cipher.DECRYPT_MODE, privateKey); return cipher.doFinal(data); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (NoSuchPaddingException e) { e.printStackTrace(); } catch (InvalidKeyException e) { e.printStackTrace(); } catch (BadPaddingException e) { e.printStackTrace(); } catch (IllegalBlockSizeException e) { e.printStackTrace(); } return null; }\"]},\"42\":{\"c\":[\"aes\",\"des\",\"3des\",\"rsa\"]},\"43\":{\"h\":\"Git 命令解释\",\"t\":[\"记录 Git 常用命令\"]},\"44\":{\"h\":\"add\",\"t\":[\"git add -h\",\"usage: git add [<options>] [--] <pathspec>... -n, --dry-run dry run -v, --verbose be verbose -i, --interactive interactive picking -p, --patch select hunks interactively -e, --edit edit current diff and apply -f, --force allow adding otherwise ignored files -u, --update update tracked files --renormalize renormalize EOL of tracked files (implies -u) -N, --intent-to-add record only the fact that the path will be added later -A, --all add changes from all tracked and untracked files --ignore-removal ignore paths removed in the working tree (same as --no-all) --refresh don't add, only refresh the index --ignore-errors just skip files which cannot be added because of errors --ignore-missing check if - even missing - files are ignored in dry run --sparse allow updating entries outside of the sparse-checkout cone --chmod (+|-)x override the executable bit of the listed files --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"add 将工作区的更改保存到暂存区，准备提交。\",\"git add . # 添加当前目录下的全部文件 git add 'file path' # 添加指定文件，可用相对路径。 git add -f 'file paht' # 强制添加指定文件，即使在 .gitignore 中\"]},\"45\":{\"h\":\"apply\",\"t\":[\"git apply -h\",\"usage: git apply [<options>] [<patch>...] --exclude <path> don't apply changes matching the given path --include <path> apply changes matching the given path -p <num> remove <num> leading slashes from traditional diff paths --no-add ignore additions made by the patch --stat instead of applying the patch, output diffstat for the input --numstat show number of added and deleted lines in decimal notation --summary instead of applying the patch, output a summary for the input --check instead of applying the patch, see if the patch is applicable --index make sure the patch is applicable to the current index -N, --intent-to-add mark new files with `git add --intent-to-add` --cached apply a patch without touching the working tree --unsafe-paths accept a patch that touches outside the working area --apply also apply the patch (use with --stat/--summary/--check) -3, --3way attempt three-way merge, fall back on normal patch if that fails --build-fake-ancestor <file> build a temporary index based on embedded index information -z paths are separated with NUL character -C <n> ensure at least <n> lines of context match --whitespace <action> detect new or modified lines that have whitespace errors --ignore-space-change ignore changes in whitespace when finding context --ignore-whitespace ignore changes in whitespace when finding context -R, --reverse apply the patch in reverse --unidiff-zero don't expect at least one line of context --reject leave the rejected hunks in corresponding *.rej files --allow-overlap allow overlapping hunks -v, --verbose be more verbose -q, --quiet be more quiet --inaccurate-eof tolerate incorrectly detected missing new-line at the end of file --recount do not trust the line counts in the hunk headers --directory <root> prepend <root> to all filenames --allow-empty don't return error for empty patches\"]},\"46\":{\"h\":\"branch\",\"t\":[\"git branch -h\",\"usage: git branch [<options>] [-r | -a] [--merged] [--no-merged] or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>] or: git branch [<options>] [-l] [<pattern>...] or: git branch [<options>] [-r] (-d | -D) <branch-name>... or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch> or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch> or: git branch [<options>] [-r | -a] [--points-at] or: git branch [<options>] [-r | -a] [--format] Generic options -v, --verbose show hash and subject, give twice for upstream branch -q, --quiet suppress informational messages -t, --track[=(direct|inherit)] set branch tracking configuration -u, --set-upstream-to <upstream> change the upstream info --unset-upstream unset the upstream info --color[=<when>] use colored output -r, --remotes act on remote-tracking branches --contains <commit> print only branches that contain the commit --no-contains <commit> print only branches that don't contain the commit --abbrev[=<n>] use <n> digits to display object names Specific git-branch actions: -a, --all list both remote-tracking and local branches -d, --delete delete fully merged branch -D delete branch (even if not merged) -m, --move move/rename a branch and its reflog -M move/rename a branch, even if target exists -c, --copy copy a branch and its reflog -C copy a branch, even if target exists -l, --list list branch names --show-current show current branch name --create-reflog create the branch's reflog --edit-description edit the description for the branch -f, --force force creation, move/rename, deletion --merged <commit> print only branches that are merged --no-merged <commit> print only branches that are not merged --column[=<style>] list branches in columns --sort <key> field name to sort on --points-at <object> print only branches of the object -i, --ignore-case sorting and filtering are case insensitive --recurse-submodules recurse through submodules --format <format> format to use for the output\",\"git branch -M dev-branch git branch -D dev-branch\"]},\"47\":{\"h\":\"checkout\",\"t\":[\"git checkout -h\",\"usage: git checkout [<options>] <branch> or: git checkout [<options>] [<branch>] -- <file>... -b <branch> create and checkout a new branch -B <branch> create/reset and checkout a branch -l create reflog for new branch --guess second guess 'git checkout <no-such-branch>' (default) --overlay use overlay mode (default) -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref -2, --ours checkout our version for unmerged files -3, --theirs checkout their version for unmerged files -p, --patch select hunks interactively --ignore-skip-worktree-bits do not limit pathspecs to sparse entries only --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"git checkout -b dev-branch git checkout tags/v2.0.0-rc.52 -b v2.0.0-rc.52\"]},\"48\":{\"h\":\"cherry-pick\",\"t\":[\"git cherry-pick -h\",\"usage: git cherry-pick [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff] [-S[<keyid>]] <commit>... or: git cherry-pick (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit -x append commit name --ff allow fast-forward --allow-empty preserve initially empty commits --allow-empty-message allow commits with empty messages --keep-redundant-commits keep redundant, empty commits\"]},\"49\":{\"h\":\"clone\",\"t\":[\"git clone -h\",\"usage: git clone [<options>] [--] <repo> [<dir>] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --reject-shallow don't clone shallow repository -n, --no-checkout don't create a checkout --bare create a bare repository --mirror create a mirror repository (implies bare) -l, --local to clone from a local repository --no-hardlinks don't use local hardlinks, always copy -s, --shared setup as shared repository --recurse-submodules[=<pathspec>] initialize submodules in the clone --recursive[=<pathspec>] alias of --recurse-submodules -j, --jobs <n> number of submodules cloned in parallel --template <template-directory> directory from which templates will be used --reference <repo> reference repository --reference-if-able <repo> reference repository --dissociate use --reference only while cloning -o, --origin <name> use <name> instead of 'origin' to track upstream -b, --branch <branch> checkout <branch> instead of the remote's HEAD -u, --upload-pack <path> path to git-upload-pack on the remote --depth <depth> create a shallow clone of that depth --shallow-since <time> create a shallow clone since a specific time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --single-branch clone only one branch, HEAD or --branch --no-tags don't clone any tags, and make later fetches not to follow them --shallow-submodules any cloned submodules will be shallow --separate-git-dir <gitdir> separate git dir from working tree -c, --config <key=value> set config inside the new repository --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --filter <args> object filtering --also-filter-submodules apply partial clone filters to submodules --remote-submodules any cloned submodules will use their remote-tracking branch --sparse initialize sparse-checkout file to include only files at root --bundle-uri <uri> a URI for downloading bundles before fetching from origin remote\"]},\"50\":{\"h\":\"commit\",\"t\":[\"git commit -h\",\"usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend] [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)] [-F <file> | -m <msg>] [--reset-author] [--allow-empty] [--allow-empty-message] [--no-verify] [-e] [--author=<author>] [--date=<date>] [--cleanup=<mode>] [--[no-]status] [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]] [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]] [--] [<pathspec>...] -q, --quiet suppress summary after successful commit -v, --verbose show diff in commit message template Commit message options -F, --file <file> read message from file --author <author> override author for commit --date <date> override date for commit -m, --message <message> commit message -c, --reedit-message <commit> reuse and edit message from specified commit -C, --reuse-message <commit> reuse message from specified commit --fixup [(amend|reword):]commit use autosquash formatted message to fixup or amend/reword specified commit --squash <commit> use autosquash formatted message to squash specified commit --reset-author the commit is authored by me now (used with -C/-c/--amend) --trailer <trailer> add custom trailer(s) -s, --signoff add a Signed-off-by trailer -t, --template <file> use specified template file -e, --edit force edit of commit --cleanup <mode> how to strip spaces and #comments from message --status include status in commit message template -S, --gpg-sign[=<key-id>] GPG sign commit Commit contents options -a, --all commit all changed files -i, --include add specified files to index for commit --interactive interactively add files -p, --patch interactively add changes -o, --only commit only specified files -n, --no-verify bypass pre-commit and commit-msg hooks --dry-run show what would be committed --short show status concisely --branch show branch information --ahead-behind compute full ahead/behind values --porcelain machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL --amend amend previous commit --no-post-rewrite bypass post-rewrite hook -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"commit 将暂存区内容，提交到本地仓库中，并生成一个提交记录。\",\"git commit -m 'commit message' # 提交代码到本地仓库 git commit --amend # 向上一次提交记录中追加改动。可同时修改 commit message。 git commit -S -m 'commit message' # 使用 GPG 签名 git commit -a -m 'commit message' # 合并 执行 git add . 和 git commit -m\"]},\"51\":{\"h\":\"config\",\"t\":[\"git config -h\",\"usage: git config [<options>] Config file location --global use global config file --system use system config file --local use repository config file --worktree use per-worktree config file -f, --file <file> use given config file --blob <blob-id> read config from given blob object Action --get get value: name [value-pattern] --get-all get all values: key [value-pattern] --get-regexp get values for regexp: name-regex [value-pattern] --get-urlmatch get value specific for the URL: section[.var] URL --replace-all replace all matching variables: name value [value-pattern] --add add a new variable: name value --unset remove a variable: name [value-pattern] --unset-all remove all matches: name [value-pattern] --rename-section rename section: old-name new-name --remove-section remove a section: name -l, --list list all --fixed-value use string equality when comparing values to 'value-pattern' -e, --edit open an editor --get-color find the color configured: slot [default] --get-colorbool find the color setting: slot [stdout-is-tty] Type -t, --type <type> value is given this type --bool value is \\\"true\\\" or \\\"false\\\" --int value is decimal number --bool-or-int value is --bool or --int --bool-or-str value is --bool or string --path value is a path (file or directory name) --expiry-date value is an expiry date Other -z, --null terminate values with NUL byte --name-only show variable names only --includes respect include directives on lookup --show-origin show origin of config (file, standard input, blob, command line) --show-scope show scope of config (worktree, local, global, system, command) --default <value> with --get, use default value when missing entry\",\"配置 git 工作环境。分系统，用户，仓库三个级别的配置。\",\"下面给出三个配置文件的位置。\",\"system: 存储在 /etc/gitconfig.\",\"global: 存储在 ~/.gitconfig.\",\"local: 存储在 <repo>/.git/config.\",\"git config --global user.name \\\"user name\\\" git config --global user.email \\\"example@example.com\\\" git config --global autocrlf=input # 配置 crlf 到 lf 的转换，windows 建议设置 true。\"]},\"52\":{\"h\":\"fetch\",\"t\":[\"git fetch -h\",\"usage: git fetch [<options>] [<repository> [<refspec>...]] or: git fetch [<options>] <group> or: git fetch --multiple [<options>] [(<repository> | <group>)...] or: git fetch --all [<options>] -v, --verbose be more verbose -q, --quiet be more quiet --all fetch from all remotes --set-upstream set upstream for git pull/fetch -a, --append append to .git/FETCH_HEAD instead of overwriting --atomic use atomic transaction to update references --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local reference -m, --multiple fetch from multiple remotes -t, --tags fetch all tags and associated objects -n do not fetch all tags (--no-tags) -j, --jobs <n> number of submodules fetched in parallel --prefetch modify the refspec to place all refs within refs/prefetch/ -p, --prune prune remote-tracking branches no longer on remote -P, --prune-tags prune local tags no longer on remote and clobber changed tags --recurse-submodules[=<on-demand>] control recursive fetching of submodules --dry-run dry run --write-fetch-head write fetched references to the FETCH_HEAD file -k, --keep keep downloaded pack -u, --update-head-ok allow updating of HEAD ref --progress force progress reporting --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --refetch re-fetch without negotiating common commits --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --negotiate-only do not fetch a packfile; instead, print ancestors of negotiation tips --filter <args> object filtering --auto-maintenance run 'maintenance --auto' after fetching --auto-gc run 'maintenance --auto' after fetching --show-forced-updates check for forced-updates on all updated branches --write-commit-graph write the commit-graph after fetching --stdin accept refspecs from stdin\"]},\"53\":{\"h\":\"format-patch\",\"t\":[\"git format-patch -h\",\"usage: git format-patch [<options>] [<since> | <revision-range>] -n, --numbered use [PATCH n/m] even with a single patch -N, --no-numbered use [PATCH] even with multiple patches -s, --signoff add a Signed-off-by trailer --stdout print patches to standard out --cover-letter generate a cover letter --numbered-files use simple number sequence for output file names --suffix <sfx> use <sfx> instead of '.patch' --start-number <n> start numbering patches at <n> instead of 1 -v, --reroll-count <reroll-count> mark the series as Nth re-roll --filename-max-length <n> max length of output filename --rfc use [RFC PATCH] instead of [PATCH] --cover-from-description <cover-from-description-mode> generate parts of a cover letter based on a branch's description --subject-prefix <prefix> use [<prefix>] instead of [PATCH] -o, --output-directory <dir> store resulting files in <dir> -k, --keep-subject don't strip/add [PATCH] --no-binary don't output binary diffs --zero-commit output all-zero hash in From header --ignore-if-in-upstream don't include a patch matching a commit upstream -p, --no-stat show patch format instead of default (patch + stat) Messaging --add-header <header> add email header --to <email> add To: header --cc <email> add Cc: header --from[=<ident>] set From address to <ident> (or committer ident if absent) --in-reply-to <message-id> make first mail a reply to <message-id> --attach[=<boundary>] attach the patch --inline[=<boundary>] inline the patch --thread[=<style>] enable message threading, styles: shallow, deep --signature <signature> add a signature --base <base-commit> add prerequisite tree info to the patch series --signature-file <file> add a signature from a file -q, --quiet don't print the patch filenames --progress show progress while generating patches --interdiff <rev> show changes against <rev> in cover letter or single patch --range-diff <refspec> show changes against <refspec> in cover letter or single patch --creation-factor <n> percentage by which creation is weighted --force-in-body-from show in-body From: even if identical to the e-mail header\"]},\"54\":{\"h\":\"init\",\"t\":[\"git init -h\",\"usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--separate-git-dir <git-dir>] [--object-format=<format>] [-b <branch-name> | --initial-branch=<branch-name>] [--shared[=<permissions>]] [<directory>] --template <template-directory> directory from which templates will be used --bare create a bare repository --shared[=<permissions>] specify that the git repository is to be shared amongst several users -q, --quiet be quiet --separate-git-dir <gitdir> separate git dir from working tree -b, --initial-branch <name> override the name of the initial branch --object-format <hash> specify the hash algorithm to use\",\"创建一个空的 git 仓库。\",\"git init test # 创建目录为 test 的仓库 git init -b main test # 创建默认分支 main 的仓库\",\"创建裸仓库\",\"默认创建的仓库都带工作区。裸仓库主要用在远程服务仓库，如 github，gitee， 用于开发者提交自己的代码。\",\"下面是在 linux 环境创建并使用裸仓库的实例。 用户名 flueky.zuo\",\"git init --base test # 在用户目录下创建 test 裸仓库 # 以下命令在 git 工作区仓库执行。 git remote add local flueky.zuo@localhost:test git push local main # 提交代码到 local 仓库。\"]},\"55\":{\"h\":\"log\",\"t\":[\"查看提交记录。\",\"git log # 默认按照标准格式，由近到远输出提交记录 git log --oneline # 简化输出，只显示提交 id 和信息。 git log --author 'flueky.zuo' # 查看指定提交者的信息，通常记录在 user.name 和 user.email 中。 git log --since/--after '2024-10-01' # 显示指定时间之后的提交。 git log --until/--before '2024-10-02' # 显示指定时间之前的提交。 git log --grep 'message' # 查看包含指定信息的提交。 git log --graph # 显示包含图形的提交记录 git log -p # 补丁的形式，显示每个提交的差异。可结合 -- filepath 使用。 git log --stat # 显示每次修改提交的文件统计信息。 git log -num # 显示最近 num 次的提交。\"]},\"56\":{\"h\":\"merge\",\"t\":[\"git merge -h\",\"usage: git merge [<options>] [<commit>...] or: git merge --abort or: git merge --continue -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --summary (synonym to --stat) --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) -e, --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward (default) --ff-only abort if fast-forward is not possible --rerere-autoupdate update the index with reused conflict resolution if possible --verify-signatures verify that the named commit has a valid GPG signature -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -m, --message <message> merge commit message (for a non-fast-forward merge) -F, --file <path> read message from file --into-name <name> use <name> instead of the real target -v, --verbose be more verbose -q, --quiet be more quiet --abort abort the current in-progress merge --quit --abort but leave index and working tree alone --continue continue the current in-progress merge --allow-unrelated-histories allow merging unrelated histories --progress force progress reporting -S, --gpg-sign[=<key-id>] GPG sign commit --autostash automatically stash/stash pop before and after --overwrite-ignore update ignored files (default) --signoff add a Signed-off-by trailer --no-verify bypass pre-merge-commit and commit-msg hooks\"]},\"57\":{\"h\":\"pull\",\"t\":[\"git pull -h\",\"usage: git pull [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --recurse-submodules[=<on-demand>] control for recursive fetching of submodules Options related to merging -r, --rebase[=(false|true|merges|interactive)] incorporate changes by rebasing rather than merging -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --signoff[=...] add a Signed-off-by trailer --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward --ff-only abort if fast-forward is not possible --verify control use of pre-merge-commit and commit-msg hooks --verify-signatures verify that the named commit has a valid GPG signature --autostash automatically stash/stash pop before and after -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --allow-unrelated-histories allow merging unrelated histories Options related to fetching --all fetch from all remotes -a, --append append to .git/FETCH_HEAD instead of overwriting --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local branch -t, --tags fetch all tags and associated objects -p, --prune prune remote-tracking branches no longer on remote -j, --jobs[=<n>] number of submodules pulled in parallel --dry-run dry run -k, --keep keep downloaded pack --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --show-forced-updates check for forced-updates on all updated branches --set-upstream set upstream for git pull/fetch\"]},\"58\":{\"h\":\"push\",\"t\":[\"git push -h\",\"usage: git push [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --repo <repository> repository --all push all refs --mirror mirror all refs -d, --delete delete refs --tags push tags (can't be used with --all or --mirror) -n, --dry-run dry run --porcelain machine-readable output -f, --force force updates --force-with-lease[=<refname>:<expect>] require old value of ref to be at this value --force-if-includes require remote updates to be integrated locally --recurse-submodules (check|on-demand|no) control recursive pushing of submodules --thin use thin pack --receive-pack <receive-pack> receive pack program --exec <receive-pack> receive pack program -u, --set-upstream set upstream for git pull/status --progress force progress reporting --prune prune locally removed refs --no-verify bypass pre-push hook --follow-tags push missing but relevant tags --signed[=(yes|no|if-asked)] GPG sign the push --atomic request atomic transaction on remote side -o, --push-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only\",\"push 命令将本地仓库的改动推送到远程仓库。如 Github, Gitee, Gitlab 。\",\"git push origin main # 推送 main 分支到 origin 仓库 git push -d origin main # 删除 origin 仓库的 main 分支，(其中默认分支和受保护的分支不能被删除) git push origin 'tag name' # 推送单个标签 git push origin --tags # 推送全部标签到 origin 仓库 git push origin :refs/tags/'tag name' # 删除 origin 仓库的标签，需要先执行 git tag -d 'tag name'\"]},\"59\":{\"h\":\"rebase\",\"t\":[\"git rebase -h\",\"usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase> | --keep-base] [<upstream> [<branch>]] or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>] or: git rebase --continue | --abort | --skip | --edit-todo --onto <revision> rebase onto given branch instead of upstream --keep-base use the merge-base of upstream and branch as the current base --no-verify allow pre-rebase hook to run -q, --quiet be quiet. implies --no-stat -v, --verbose display a diffstat of what changed upstream -n, --no-stat do not show diffstat of what changed upstream --signoff add a Signed-off-by trailer to each commit --committer-date-is-author-date make committer date match author date --reset-author-date ignore author date and use current date -C <n> passed to 'git apply' --ignore-whitespace ignore changes in whitespace --whitespace <action> passed to 'git apply' -f, --force-rebase cherry-pick all commits, even if unchanged --no-ff cherry-pick all commits, even if unchanged --continue continue --skip skip current patch and continue --abort abort and check out the original branch --quit abort but keep HEAD where it is --edit-todo edit the todo list during an interactive rebase --show-current-patch show the patch file being applied or merged --apply use apply strategies to rebase -m, --merge use merging strategies to rebase -i, --interactive let the user edit the list of commits to rebase --rerere-autoupdate update the index with reused conflict resolution if possible --empty <{drop,keep,ask}> how to handle commits that become empty --autosquash move commits that begin with squash!/fixup! under -i --update-refs update branches that point to commits that are being rebased -S, --gpg-sign[=<key-id>] GPG-sign commits --autostash automatically stash/stash pop before and after -x, --exec <exec> add exec lines after each commit of the editable list -r, --rebase-merges[=<mode>] try to rebase merges instead of skipping them --fork-point use 'merge-base --fork-point' to refine upstream -s, --strategy <strategy> use the given merge strategy -X, --strategy-option <option> pass the argument through to the merge strategy --root rebase all reachable commits up to the root(s) --reschedule-failed-exec automatically re-schedule any `exec` that fails --reapply-cherry-picks apply all changes, even those already present upstream\"]},\"60\":{\"h\":\"remote\",\"t\":[\"git remote -h\",\"usage: git remote [-v | --verbose] or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url> or: git remote rename <old> <new> or: git remote remove <name> or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>) or: git remote [-v | --verbose] show [-n] <name> or: git remote prune [-n | --dry-run] <name> or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...] or: git remote set-branches [--add] <name> <branch>... or: git remote get-url [--push] [--all] <name> or: git remote set-url [--push] <name> <newurl> [<oldurl>] or: git remote set-url --add <name> <newurl> or: git remote set-url --delete <name> <url> -v, --verbose be verbose; must be placed before a subcommand\",\"本地仓库关联到远程仓库的信息，使用 remote 管理。配置信息保存在 .git/config。 常用命令如下：\",\"git remote -v # 检查 remote 信息 # 添加 GitHub 地址， 使用 git push github main 推送 git remote add github git@github.com:flueky/docs.git # 重命名 github 到 origin，后续使用 origin 推送代码 git remote rename github origin # 删除这个分支 git remote remove github\"]},\"61\":{\"h\":\"reset\",\"t\":[\"git reset -h\",\"usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>] or: git reset [-q] [<tree-ish>] [--] <pathspec>... or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [<tree-ish>] or: git reset --patch [<tree-ish>] [--] [<pathspec>...] -q, --quiet be quiet, only report errors --no-refresh skip refreshing the index after reset --mixed reset HEAD and index --soft reset only HEAD --hard reset HEAD, index and working tree --merge reset HEAD, index and working tree --keep reset HEAD but keep local changes --recurse-submodules[=<reset>] control recursive updating of submodules -p, --patch select hunks interactively -N, --intent-to-add record only the fact that removed paths will be added later --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"62\":{\"h\":\"revert\",\"t\":[\"git revert -h\",\"usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>... or: git revert (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --reference use the 'reference' format to refer to commits\"]},\"63\":{\"h\":\"rm\",\"t\":[\"git rm -h\",\"usage: git rm [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch] [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...] -n, --dry-run dry run -q, --quiet do not list removed files --cached only remove from the index -f, --force override the up-to-date check -r allow recursive removal --ignore-unmatch exit with a zero status even if nothing matched --sparse allow updating entries outside of the sparse-checkout cone --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"64\":{\"h\":\"stash\",\"t\":[\"git stash -h\",\"usage: git stash list [<log-options>] or: git stash show [-u | --include-untracked | --only-untracked] [<diff-options>] [<stash>] or: git stash drop [-q | --quiet] [<stash>] or: git stash pop [--index] [-q | --quiet] [<stash>] or: git stash apply [--index] [-q | --quiet] [<stash>] or: git stash branch <branchname> [<stash>] or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [(-m | --message) <message>] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...]] or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [<message>] or: git stash clear or: git stash create [<message>] or: git stash store [(-m | --message) <message>] [-q | --quiet] <commit>\",\"stash 命令将未提交的更改保存到 临时堆栈，（暂时保存在本地仓库中，可撤回）。以便能够切换分支或执行其他操作，但不丢失未提交的工作。\",\"未提交的更改包括：工作区的更改，和暂存区的更改。\",\"git stash list # 查看全部暂存的记录 git stash pop # 取出最近暂存的修改记录 git stash drop # 丢弃最近暂存的修改记录\",\"提示\",\"执行 git stash pop 后，如遇到和工作区的改动存在冲突，则会保留栈顶的记录。待解决冲突后，需要执行 git stash drop。\"]},\"65\":{\"h\":\"status\",\"t\":[\"git status -h\",\"usage: git status [<options>] [--] [<pathspec>...] -v, --verbose be verbose -s, --short show status concisely -b, --branch show branch information --show-stash show stash information --ahead-behind compute full ahead/behind values --porcelain[=<version>] machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --ignored[=<mode>] show ignored files, optional modes: traditional, matching, no. (Default: traditional) --ignore-submodules[=<when>] ignore changes to submodules, optional when: all, dirty, untracked. (Default: all) --column[=<style>] list untracked files in columns --no-renames do not detect renames -M, --find-renames[=<n>] detect renames, optionally set similarity index\"]},\"66\":{\"h\":\"switch\",\"t\":[\"git switch -h\",\"usage: git switch [<options>] [<branch>] -c, --create <branch> create and switch to a new branch -C, --force-create <branch> create/reset and switch to a branch --guess second guess 'git switch <no-such-branch>' --discard-changes throw away local modifications -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref\"]},\"67\":{\"h\":\"tag\",\"t\":[\"git tag -h\",\"usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] [-e] <tagname> [<commit> | <object>] or: git tag -d <tagname>... or: git tag [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>] [--points-at <object>] [--column[=<options>] | --no-column] [--create-reflog] [--sort=<key>] [--format=<format>] [--merged <commit>] [--no-merged <commit>] [<pattern>...] or: git tag -v [--format=<format>] <tagname>... -l, --list list tag names -n[<n>] print <n> lines of each tag message -d, --delete delete tags -v, --verify verify tags Tag creation options -a, --annotate annotated tag, needs a message -m, --message <message> tag message -F, --file <file> read message from file -e, --edit force edit of tag message -s, --sign annotated and GPG-signed tag --cleanup <mode> how to strip spaces and #comments from message -u, --local-user <key-id> use another key to sign the tag -f, --force replace the tag if exists --create-reflog create a reflog Tag listing options --column[=<style>] show tag list in columns --contains <commit> print only tags that contain the commit --no-contains <commit> print only tags that don't contain the commit --merged <commit> print only tags that are merged --no-merged <commit> print only tags that are not merged --sort <key> field name to sort on --points-at <object> print only tags of the object --format <format> format to use for the output --color[=<when>] respect format colors -i, --ignore-case sorting and filtering are case insensitive\",\"tag 命令对提交记录添加标签标识。 如每次发行版本之后，对最新的提交记录打上标签。\",\"git tag -a 'tag name' -m 'tag message' # 对最新的提交添加 tag name, 并记为 tag message git tag 'tag name' 'commit id' # 对指定的提交记录添加 tag name，而后需要动态输入 tag message git tag -l # 列出全部 tag name git tag -n # 列出全部 tag name 和 tag message git tag -d 'tag name' # 删除指定的 tag\"]},\"68\":{\"c\":[\"Git\"]},\"69\":{\"h\":\"编码、摘要和加密（二）—— 信息摘要\",\"t\":[\"信息摘要，英译 Message Digest 。看见首字母这么大的 M 、D有没有立即联想到 MD5 算法。其实 MD5算法只是目前比较流行的信息摘要算法，在它之前，还出现过 MD2MD4,以及目前仍然在用的安全散列算法（Secure Hash Algorithm） SHA1 和 SHA256都属于信息摘要算法的一种。\",\"国家密码管理局于2010年12月也发布了一种信息摘要算法 SM3 。\",\"由于对信息摘要算法研究并不透彻，因此这篇文章将重点讲 jdk 支持的三个常见摘要算法的使用：MD5、SHA1、SHA256。\"]},\"70\":{\"h\":\"1. 相关代码\",\"t\":[\"Java 对信息摘要算法做了比较完整的封装——MessageDigest。该类是抽象类，针对具体信息摘要算法的实现使用了代理模式。主要提供了三个方法及其重载方法。\",\"/** * 获取摘要算法对象。 * 通过指定参数 algorithm 是 MD5 SHA1 SHA256 ,获取具体的实例。 */ static MessageDigest getInstance /** * 接收参与摘要计算的字节数据，可多次执行。一般用于文件的的摘要计算。 * 也可以一次将文件的全部字节读取至内存，使用 digest 方法一次计算。 */ void update /** * 具有两种使用场景。 * 1. 在 update 方法接收全部的字节数据之后，使用此方法生成摘要数据。 * 2. 直接使用此方法接收较短的字节数据，生成摘要数据。 */ byte[] digest\"]},\"71\":{\"h\":\"2. 用途\"},\"72\":{\"h\":\"2.1 计算字符串\",\"t\":[\"用于校验报文数据在网络传输的过程中是否被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算字符串md5 * * @param data * @return */ public static final String md5(String data) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); byte[] digest = messageDigest.digest(data.getBytes()); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } return null; }\"]},\"73\":{\"h\":\"2.2 计算文件\",\"t\":[\"通过网络下载一些文件的时候，通常通过计算下载下来文件的 MD5 和 SHA1 判断下载下来的文件是否在传输过程中被篡改过。\",\"以 MD5 算法为例：\",\"/** * 计算文件md5 * * @param data * @return */ public static final String fileMd5(String path) { try { MessageDigest messageDigest = MessageDigest.getInstance(\\\"MD5\\\"); File file = new File(path); if (!file.exists()) throw new IllegalArgumentException(\\\"The file path is illegal\\\"); InputStream inputStream = new FileInputStream(file); byte[] buff = new byte[1024]; int len; while ((len = inputStream.read(buff)) > 0) { messageDigest.update(buff, 0, len); } byte[] digest = messageDigest.digest(); return HexUtil.encode(digest); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } return null; }\",\"如需计算 SHA1 和 SHA256 ，只需将 getInstance 的参数值改成 SHA-1 和 SHA-256。\"]},\"74\":{\"h\":\"3. 总结\",\"t\":[\"千万不要认为 MD5 是加密算法。信息摘要算法，是一种单向散列算法，是一种不可逆的算法，即，可以根据一个字符串计算出 MD5，却不能根据 MD5 还原出生成它的字符串。\"]},\"75\":{\"c\":[\"md5\",\"sha1\",\"sha256\"]},\"76\":{\"h\":\"第一个Android工程——HelloWord\"},\"77\":{\"h\":\"1 创建工程\",\"t\":[\"打开AndroidStudio程序，首页如下图：\",\"创建新的 AndroidStudio 工程。\",\"打开已有的 AndroidStudio 工程。\",\"从版本控制器导出工程。\",\"分析或调试 APK。\",\"从 Gradle/Eclipse 工程导入。\",\"导入 Android 代码示例。\",\"选择创建新的工程：\",\"支持创建手机、平板、穿戴设备、电视等多个平台的工程。入门阶段选择第一个就好。 任意选一个Activity模板，例如：BasicActivity。\",\"输入项目名称，包名，保存的位置以及兼容的最低系统版本，图中是 API 15，Android 4.0.3 版本。支持 Java 和 Kotlin 两种编程语言。\",\"完成之后，会下载部分依赖的组件，如图：\",\"最后，进入工程页面，图中正在下载 gradle 4.10.1 版本。\",\"如果在下载 gradle 的时候遇到等了很久却下载失败的情况。\",\"可以复制下载的地址，使用浏览器或迅雷等工具下载。下载成功之后，将 zip 文件复制到到相同版本名称的目录下，请忽略随机串。\",\"图中是正确配置的结果，需要手动 解压 zip 文件，并删除 part 文件，最后新建一个 ok 文件，保证 lck 文件 和 ok 文件都是 0 KB。\",\"重启 AndroidStudio ,会自动跳过 gradle 下载。除非修该改 gradle-wrapper.properties 中的 gradle 版本。\",\"初次编译时，需要等待一段时间下载工程依赖的第三方库，编译成功之后，注意图中标记处的前后对比。\"]},\"78\":{\"h\":\"2 连接手机\",\"t\":[\"如果，你是一只计算机小白，那么这个地方可能让你头大，笔者曾经也是这么过来的。强烈推荐在电脑上安装豌豆荚,其他类手机助手软件也可以。助手软件会帮助你安装好手机驱动，提示你打开开发者模式。\",\"如果，你是计算机高手，那么可以自行安装手机驱动程序，使电脑能够访问手机数据存储。其次，自行百度具体品牌手机，打开开发者模式的方式。\",\"至于，使用 Mac 和 Linux 的小伙伴们大可放心。因为 Android 和 Mac 都使用 Linux 内核，因此 Android 设备和 Mac/Linux 系统可以很方便的进行连接，不需要单独安装驱动。但是，打开开发者选项和USB调试的方式，同上。\"]},\"79\":{\"h\":\"3 打开开发者模式\",\"t\":[\"通用步骤：设置 -> 关于手机 -> 系统信息 中反复点击版本号直至提示开发者模式已经开始。回到设置页面，可以找到开发者选项菜单。进入开发者选项配置页面，打开USB调试。\",\"重新插拔手机，弹出窗口，提示需要授权电脑进行调试手机。\",\"如果是自己的电脑，建议勾选底部的一律允许使用这台计算机进行调试。\",\"oppo 手机比较恶心，每隔一段时间，会自动终止 adb 服务，并关闭 USB 调试。需要重新打开。当遇见 OV 系列的手机，出现连不上手机的情况或者联上手机但无法进行调试的情况，请检查开发者选项和USB调试开关。\",\"小米手机打开开发者模式的方式有些特殊，等有机会使用小米手机再举例。\"]},\"80\":{\"h\":\"4 使用模拟器\"},\"81\":{\"h\":\"5 运行工程\",\"t\":[\"点击 app 右边的三角形，运行程序。在弹出的框中选择真机或模拟器。\",\"Demo 成功运行起来之后的样子，如下图。\",\"创建好 Demo 工程，并正确编译运行之后，若想对 AndroidStudio 工程的各个目录和文件有更深刻的认识，请阅读从零构建Android工程\"]},\"82\":{\"c\":[\"AndroidStudio\"]},\"83\":{\"h\":\"Hexo 建站手札——进阶\",\"t\":[\"基础篇 讲到了如何使用 Hexo 建站。包括基本命令使用及获取到源码之后的一些简单工程配置。\",\"下面将介绍，如何给博客添加 评论、背景音乐、点击特效、字数统计等功能。\",\"文章内容多数内容皆来自于TRHX 的文章Hexo 博客主题个性化。\",\"友情提示，本文篇幅太长，建议结合目录选择性的浏览。\"]},\"84\":{\"h\":\"1. 添加评论\",\"t\":[\"material-x 主题已经集成了四个评论系统。暂时只介绍用过的两个。\"]},\"85\":{\"h\":\"1.1 使用 valineS\",\"t\":[\"首先需要在 leancloud 上注册应用。在控制台中，点开注册的应用查看 AppID 和 AppKey。\",\"在主题配置文件中\",\"#valine配置 valine: enable: true # 如果你想用Valine评论系统，请设置enable为true volantis: true # 是否启用volantis版本（禁止匿名，增加若干贴吧、QQ表情） # 还需要在根目录配置文件中添加下面这三行内容 # leancloud: # app_id: 你的appId # app_key: 你的appKey guest_info: nick,mail,link #valine comment header info placeholder: 快来评论吧~ # valine comment input placeholder(like: Please leave your footprints ) avatar: mp # gravatar style https://valine.js.org/avatar pageSize: 10 # comment list page size verify: true # valine verify code (true/false) notify: true # valine mail notify (true/false) lang: zh-cn highlight: true\",\"在博客配置文件中\",\"leancloud: app_id: 你的appId app_key: 你的appKey\",\"配置完成后，在文章底部出现评论界面。\",\"评论效果支持 Markdown 语法。\",\"评论内容可以在 leancloud 控制台中管理。\"]},\"86\":{\"h\":\"1.2 使用 gitalk\",\"t\":[\"首先需要在 GitHub 中创建一个授权应用。此应用在访客评论时使用 GitHub 账户登录，进行授权。\",\"创建授权应用地址：https://github.com/settings/applications/new，亦可以在 GitHub 中通过 Settings -> Developer settings -> OAuth Apps ->New Auth App 访问 。\",\"需要填写四条信息，以我的应用为例：\",\"应用名称，授权时告知用户是哪个应用使用 GitHub 账户。\",\"应用主页，使用博客站点主页 ，也可以换别的。\",\"应用描述。\",\"授权通过后的跳转页面。\",\"授权页面如图：\",\"在应用中查看 Client ID 和 Client Secret 。\",\"最后在博客配置文件中\",\"gitalk: clientID: 你的clientID clientSecret: 你的clientSecret repo: 你的repo名 owner: 你的GitHub名 admin: [] 至少填写你的GitHub名\",\"由于，gitalk 的评论方式是通过对 repo 提 issues 的方式。因此上面的 repo 即是查看 issues 的仓库地址。\",\"评论界面如下：\",\"在 issues 管理，通过最近更新的排序方式，查看最新的评论。\",\"可以直接在 issues 中直接回复。这样的好处是，只要查看 issues 就可以知道有新的评论，便于实时互动。GitHub还会通过发送邮件的方式告知有新的 issues。\"]},\"87\":{\"h\":\"2. 添加BGM\",\"t\":[\"在主题的配置文件中:\",\"############################### 默认值 ############################### # 音乐控件的默认配置，如果sidebar或者page里没有提供，就取这里的参数 music: enable: true # 是否启用 color: '#1BCDFC' # 主题色 mode: circulation # random （随机） single （单曲） circulation （列表循环） order （列表） server: netease # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） type: playlist # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 2615636388 # 歌曲/专辑/歌单 ID volume: 0.7 # 音量, 0~1 autoplay: false # 自动播放 # sidebar 配置 sidebar: - widget: music icon: fas fa-compact-disc title: \\\"最近在听\\\" more: icon: far fa-heart url: https://music.163.com/#/user/home?id=63035382 rel: external nofollow noopener noreferrer target: _blank server: netease # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） type: playlist # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 2615636388 # 歌曲/专辑/歌单 ID\",\"还要在 layout 中配置是否显示在侧边栏。\",\"layout: # 文章列表（主页、自定义的列表）布局 posts: # 列表类页面的侧边栏,显示 music 部件 sidebar: [author, list, grid, music, category, tagcloud] # 文章页面布局 article: # 文章页面的侧边栏，不显示 music 部件 sidebar: [author, toc, grid, category, tagcloud, list, related_posts] # 其他的页面布局暂时等于文章列表\",\"在文章 md 文件中：\",\"# page中配置，用于文章标题 --- music: enable: true # true（文章内和文章列表都显示） internal（只在文章内显示） server: netease # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） type: song # song （单曲） album （专辑） playlist （歌单） search （搜索） id: 558369602 # 歌曲/专辑/歌单 ID ---\"]},\"88\":{\"h\":\"3. 添加点击效果\"},\"89\":{\"h\":\"3.1 点击弹出爱心\",\"t\":[\"在主题文件夹，source/js 目录下，新建 love.js 。复制下面代码：\",\"!function(e,t,a){function n(){c(\\\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\\\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\\\"left:\\\"+d[e].x+\\\"px;top:\\\"+d[e].y+\\\"px;opacity:\\\"+d[e].alpha+\\\";transform:scale(\\\"+d[e].scale+\\\",\\\"+d[e].scale+\\\") rotate(45deg);background:\\\"+d[e].color+\\\";z-index:99999\\\");requestAnimationFrame(r)}function o(){var t=\\\"function\\\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\\\"div\\\");a.className=\\\"heart\\\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\\\"style\\\");a.type=\\\"text/css\\\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\\\"head\\\")[0].appendChild(a)}function s(){return\\\"rgb(\\\"+~~(255*Math.random())+\\\",\\\"+~~(255*Math.random())+\\\",\\\"+~~(255*Math.random())+\\\")\\\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\",\"在主题目录，layout 文件夹中，layout.ejs 文件末尾添加：\",\"<!-- 页面点击小红心 --> <script type=\\\"text/javascript\\\" src=\\\"/js/love.js\\\"></script>\",\"效果如图（盗图）：\"]},\"90\":{\"h\":\"3.2 点击弹出文字\",\"t\":[\"在主题文件夹，source/js 目录下，新建 click_show_text.js 。复制下面代码：\",\"var a_idx = 0; jQuery(document).ready(function($) { $(\\\"body\\\").click(function(e) { var a = new Array (\\\"富强\\\", \\\"民主\\\", \\\"文明\\\", \\\"和谐\\\", \\\"自由\\\", \\\"平等\\\", \\\"公正\\\", \\\"法治\\\", \\\"爱国\\\", \\\"敬业\\\", \\\"诚信\\\", \\\"友善\\\"); var $i = $(\\\"<span/>\\\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ \\\"z-index\\\": 5, \\\"top\\\": y - 20, \\\"left\\\": x, \\\"position\\\": \\\"absolute\\\", \\\"font-weight\\\": \\\"bold\\\", \\\"color\\\": \\\"#FF0000\\\" }); $(\\\"body\\\").append($i); $i.animate({ \\\"top\\\": y - 180, \\\"opacity\\\": 0 }, 3000, function() { $i.remove(); }); }); setTimeout('delay()', 2000); }); function delay() { $(\\\".buryit\\\").removeAttr(\\\"onclick\\\"); }\",\"在主题目录，layout 文件夹中，layout.ejs 文件末尾添加：\",\"<!--单击显示文字--> <script type=\\\"text/javascript\\\" src=\\\"/js/click_show_text.js\\\"></script>\",\"核心价值观类文字可以自己替换，效果如图（盗图）：\"]},\"91\":{\"h\":\"3.3 点击烟花\",\"t\":[\"在主题文件夹，source/js 目录下，新建 fireworks.js 。复制下面代码：\",\"\\\"use strict\\\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\\\"#F00\\\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\\\"easeOutExpo\\\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\\\"linear\\\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\\\"easeOutExpo\\\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\\\".fireworks\\\");if(canvasEl){var ctx=canvasEl.getContext(\\\"2d\\\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\\\"mousedown\\\",colors=[\\\"#FF1461\\\",\\\"#18FF92\\\",\\\"#5A87FF\\\",\\\"#FBF38C\\\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\\\"px\\\",canvasEl.style.height=window.innerHeight+\\\"px\\\",canvasEl.getContext(\\\"2d\\\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\\\"sidebar\\\"!==e.target.id&&\\\"toggle-sidebar\\\"!==e.target.id&&\\\"A\\\"!==e.target.nodeName&&\\\"IMG\\\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\\\"resize\\\",setCanvasSize,!1)}\\\"use strict\\\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\\\"#F00\\\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\\\"easeOutExpo\\\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\\\"linear\\\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\\\"easeOutExpo\\\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\\\".fireworks\\\");if(canvasEl){var ctx=canvasEl.getContext(\\\"2d\\\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\\\"mousedown\\\",colors=[\\\"#FF1461\\\",\\\"#18FF92\\\",\\\"#5A87FF\\\",\\\"#FBF38C\\\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\\\"px\\\",canvasEl.style.height=window.innerHeight+\\\"px\\\",canvasEl.getContext(\\\"2d\\\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\\\"sidebar\\\"!==e.target.id&&\\\"toggle-sidebar\\\"!==e.target.id&&\\\"A\\\"!==e.target.nodeName&&\\\"IMG\\\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\\\"resize\\\",setCanvasSize,!1)};\",\"在主题目录，layout 文件夹中，layout.ejs 文件末尾添加：\",\" <!-- 单击烟花爆炸效果 --> <canvas class=\\\"fireworks\\\" style=\\\"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;\\\" ></canvas> <script type=\\\"text/javascript\\\" src=\\\"//cdn.bootcss.com/animejs/2.2.0/anime.min.js\\\"></script> <script type=\\\"text/javascript\\\" src=\\\"/js/fireworks.js\\\"></script>\",\"效果如图（盗图）\",\"以上配置 ，修改过后及时生效，不需要重启服务。\"]},\"92\":{\"h\":\"4. 添加字数统计和阅读时长\",\"t\":[\"需要安装依赖，在博客根目录下：\",\" npm i --save hexo-wordcount\",\"在主题文件夹，layout/_partial/post 目录下，新建 word.ejs 。复制下面代码：\",\"<div> <span class=\\\"post-time\\\"> <span class=\\\"post-meta-item-icon\\\"> <i class=\\\"fa fa-keyboard-o\\\"></i> <span class=\\\"post-meta-item-text\\\"> 字数统计: </span> <span class=\\\"post-count\\\"><%= wordcount(post.content) %>字</span> </span> </span> <span class=\\\"post-time\\\"> &nbsp; | &nbsp; <span class=\\\"post-meta-item-icon\\\"> <i class=\\\"fa fa-hourglass-half\\\"></i> <span class=\\\"post-meta-item-text\\\"> 阅读时长: </span> <span class=\\\"post-count\\\"><%= min2read(post.content) %>分</span> </span> </span> </div>\",\"在主题文件夹下，layout/_partial 目录下修改 meta.ejs 文件。\",\"<!-- 注意此 div --> <div class='new-meta-box'> <% (topMetas).forEach(function(meta){ %> <% if(meta != 'title'){ %> <%- partial('../_meta/' + meta, {post: post, isPostList: isPostList}) %> <% } %> <% }) %> <!-- 此为添加内容 --> <%if(theme.word_count){%> <%- partial('post/word') %> <%}%> <!-- 以上是添加内容 --> </div>\",\"最后在主题配置文件的末尾，添加\",\"# 显示字数统计 word_count: true\",\"效果如图\"]},\"93\":{\"h\":\"5. 添加百度统计\",\"t\":[\"百度统计是百度推出的一款免费的专业网站流量分析工具，能够告诉用户访客是如何找到并浏览用户的网站，在网站上做了些什么。\",\"访问百度统计首页，注册账户，新增网站，输入你站点的域名。\",\"创建网站成功后，需要将需要将统计代码放在页面中，详见获取代码页面。由于 material-x 已经集成了此代码 ，见主题文件夹，layout/_partial 目录下， head.ejs 文件。\",\"<% if (config.baidu_analytics_key) { %> <!-- ba --> <script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\\\"script\\\"); hm.src = \\\"https://hm.baidu.com/hm.js?<%= config.baidu_analytics_key %>\\\"; var s = document.getElementsByTagName(\\\"script\\\")[0]; s.parentNode.insertBefore(hm, s); })(); </script> <% } %>\",\"所以 ,只需要在博客配置目录下，\",\"baidu_analytics_key: # 你的百度统计key\",\"key在获取代码的位置，见图：\",\"配置完成后，可执行代码安装检查判断是否集成成功。\"]},\"94\":{\"h\":\"6. 添加雪花效果\",\"t\":[\"雪花效果有两种，见下面盗图 ：\",\"样式一\",\"样式二\",\"在主题文件夹 下，source/js 目录下新建 snow.js 复制下面代码。\",\"样式一\",\"/*样式一*/ (function($){ $.fn.snow = function(options){ var $flake = $('<div id=\\\"snowbox\\\" />').css({'position': 'absolute','z-index':'9999', 'top': '-50px'}).html('&#10052;'), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = { minSize : 10, maxSize : 20, newOn : 1000, flakeColor : \\\"#AFDAEF\\\" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */ }, options = $.extend({}, defaults, options); var interval= setInterval( function(){ var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake.clone().appendTo('body').css({ left: startPositionLeft, opacity: startOpacity, 'font-size': sizeFlake, color: options.flakeColor }).animate({ top: endPositionTop, left: endPositionLeft, opacity: 0.2 },durationFall,'linear',function(){ $(this).remove() }); }, options.newOn); }; })(jQuery); $(function(){ $.fn.snow({ minSize: 5, /* 定义雪花最小尺寸 */ maxSize: 50,/* 定义雪花最大尺寸 */ newOn: 300 /* 定义密集程度，数字越小越密集 */ }); });\",\"样式二\",\"/*样式二*/ /* 控制下雪 */ function snowFall(snow) { /* 可配置属性 */ snow = snow || {}; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */ } /* 兼容写法 */ requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) { setTimeout(callback, 1000 / 60); }; cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame; /* 开始下雪 */ snowFall.prototype.start = function(){ /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this) } /* 创建画布 */ function snowCanvas() { /* 添加Dom结点 */ var snowcanvas = document.createElement(\\\"canvas\\\"); snowcanvas.id = \\\"snowfall\\\"; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute(\\\"style\\\", \\\"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\\\"); document.getElementsByTagName(\\\"body\\\")[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext(\\\"2d\\\"); /* 窗口大小改变的处理 */ window.onresize = function() { snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ } } /* 雪运动对象 */ function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) { this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0 /* 步数 */ } flakeMove.prototype.update = function() { var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY <= this.speed) { this.velY = this.speed } this.velX += Math.cos(this.step += .05) * this.stepSize; this.y += this.velY; this.x += this.velX; /* 飞出边界的处理 */ if (this.x >= canvas.width || this.x <= 0 || this.y >= canvas.height || this.y <= 0) { this.reset(canvas.width, canvas.height) } }; /* 飞出边界-放置最顶端继续坠落 */ flakeMove.prototype.reset = function(width, height) { this.x = Math.floor(Math.random() * width); this.y = 0; this.size = Math.random() * this.maxSize + 2; this.speed = Math.random() * 1 + this.fallSpeed; this.velY = this.speed; this.velX = 0; }; // 渲染雪花-随机形状（此处可修改雪花颜色！！！） flakeMove.prototype.render = function(ctx) { var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, \\\"rgba(255, 255, 255, 0.9)\\\"); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, \\\"rgba(255, 255, 255, 0.5)\\\"); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, \\\"rgba(255, 255, 255, 0)\\\"); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore(); }; /* 创建雪花-定义形状 */ function createFlakes() { var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i < maxFlake; i++) { flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) } } /* 画雪 */ function drawSnow() { var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e < maxFlake; e++) { flakes[e].update(); flakes[e].render(ctx); } /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() { drawSnow.apply(that); }); } /* 调用及控制方法 */ var snow = new snowFall({maxFlake:60}); snow.start();\",\"在主题文件夹，layout 目录中，layout.ejs 文件末尾添加：\",\"<!-- 雪花特效 --> <script type=\\\"text/javascript\\\" src=\\\"\\\\js\\\\snow.js\\\"></script>\"]},\"95\":{\"h\":\"7. 添加背景动态线条\",\"t\":[\"在主题文件夹，layout 目录中，layout.ejs 文件末尾添加：\",\"<!--动态线条背景，线条颜色 220,220,220 可以换成喜欢的--> <script type=\\\"text/javascript\\\" color=\\\"92,210,245\\\" opacity='0.7' zIndex=\\\"-2\\\" count=\\\"200\\\" src=\\\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\\\"></script>\"]},\"96\":{\"h\":\"8. 添加网站运行时间\",\"t\":[\"在主题文件夹下，layout/_partial 目录下修改 footer.ejs 文件中，添加 下面代码：\",\"显示部分放在合适的位置。\",\"脚本部分放在文件底部。\",\"<!-- 显示部分 --> <span id=\\\"timeDate\\\">载入天数...</span><span id=\\\"times\\\">载入时分秒...</span> <!-- 脚本部分 --> <script> var now = new Date(); function createtime() { var grt= new Date(\\\"11/03/2019 14:42:00\\\");//在此处修改你的建站时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = \\\"0\\\" + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \\\"0\\\" + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \\\"0\\\" + snum;} document.getElementById(\\\"timeDate\\\").innerHTML = \\\"本站已安全运行 \\\"+dnum+\\\" 天 \\\"; document.getElementById(\\\"times\\\").innerHTML = hnum + \\\" 小时 \\\" + mnum + \\\" 分 \\\" + snum + \\\" 秒\\\"; } setInterval(\\\"createtime()\\\",250); </script>\",\"效果如图：\"]},\"97\":{\"h\":\"9. 添加背景动态彩带\",\"t\":[\"在主题文件夹，layout 目录中，layout.ejs 文件末尾添加：\",\"<!-- 样式一（鼠标点击更换样式） --> <script src=\\\"https://g.joyinshare.com/hc/ribbon.min.js\\\" type=\\\"text/javascript\\\"></script> <!-- 样式二（飘动的彩带） --> <script src=\\\"https://g.joyinshare.com/hc/piao.js\\\" type=\\\"text/javascript\\\"></script>\"]},\"98\":{\"h\":\"10. 添加RSS订阅\",\"t\":[\"RSS订阅是站点用来和其他站点之间共享内容的一种简易方式，即Really Simple Syndication（简易信息聚合），如果不会使用，可以参见：百度百科 。\",\"需要安装依赖\",\"npm install hexo-generator-feed\",\"在博客配置文件中，添加下面配置。\",\"# Extensions ## Plugins: http://hexo.io/plugins/ #RSS订阅 plugin: - hexo-generator-feed #Feed Atom feed: type: atom path: atom.xml limit: 20\",\"在主题配置目录中，使用 atom.xml 。个人偏好放置后面。\",\"# 社交信息 social: - icon: fas fa-envelope url: mailto:me@xaoxuu.com - icon: fab fa-github url: https://github.com/flueky - icon: fas fa-headphones-alt url: https://music.163.com/#/user/home?id=12143853 - icon: fas fa-rss url: atom.xml\",\"源码地址\"]},\"99\":{\"h\":\"Hexo 建站手札——基础\",\"t\":[\"2016 年 2 月，写了工作中第一篇博客。至今快 4 年时间，写了几十篇文章，也使用过几个平台。\",\"CSDN 一直在用，上面有着几乎全部的文章。传送门\",\"掘金 这两年掘金顺势崛起，也在上面同步过数篇博客。传送门\",\"直到接触到 jekyll 、 Hexo 这样的博客生成工具。前者使用一年，没多研究其扩展功能。本文将介绍使用 Hexo 建站的步骤。\",\"本文适用于初学者，如果您已具备 Hexo 建站技能，需要丰富下网页的功能，请参阅进阶篇。\"]},\"100\":{\"h\":\"1. 准备工作\",\"t\":[\"万事开头难，建站也是需要做一些准备的。\",\"搭建 Hexo 环境。\",\"熟悉用 MarkDown 写作。\",\"代码托管平台。\",\"使用 Hexo 建站，建议参照官方文档。\",\"如果您还在使用 html 排版的方式，只能说 out 了。使用 md 写作，快速排版，实时对比。\",\"将文章存放在 GitHub 或 GitLab 等这样的开源平台，或者购买域名服务器。\",\"建议前期使用开源平台，因为免费，入门简单。甚至不需要编码基础。\"]},\"101\":{\"h\":\"1.1 创建仓库\",\"t\":[\"注册 GitHub 。假如用户名是 flueky ,那么你的 GitHub 主页地址是 https://github.com/flueky。\",\"创建仓库，必须名字是 flueky.github.io ,其中 flueky 替换成你自己的 GitHub 账户名字。即，创建完后，仓库地址是 https://github.com/flueky/flueky.github.io。\",\"将此仓库作为博客主页后 ，可以直接使用域名 https://flueky.github.io/ 访问 。\",\"主题来自于 xaoxuu 的 matrial x 。\"]},\"102\":{\"h\":\"2. Hexo 常用命令\"},\"103\":{\"h\":\"2.1 创建目录\",\"t\":[\"# 创建 blog 目录 hexo init blog\",\"下面的命令，如无特殊说明，都是在 blog 目录下执行。\"]},\"104\":{\"h\":\"2.2 启动服务\",\"t\":[\"# 默认启动参数，访问地址：http://127.0.0.1:4000 hexo server # 使用指定端口，用在端口冲突的情况下 访问地址：http://127.0.0.1:4001 hexo server -p 4001 # 带草稿箱文件启动 hexo server --draft\"]},\"105\":{\"h\":\"2.3 部署博客\",\"t\":[\"# 在配置好站点后，将博客文件推送至站点 hexo deploy # 清楚生成文件 hexo clean # 通常使用下面的方式合用两条命令 hexo clean && hexo deploy\"]},\"106\":{\"h\":\"3. 初始化博客\",\"t\":[\"正确搭建好 Hexo 环境后，可以使用 init 命令完成博客目录创建。\",\"init 命令完成后，启动服务见到下面的页面表示成功。\",\"文件列表如下，未列出的皆为命令生成的文件，无须添加到版本控制工具中。\",\"# 博客文件 ├── _config.yml # 博客配置文件，可修改大多数配置，需要重启服务。 ├── package.json # 程序配置文件。无须修改。 ├── scaffolds # 模板目录，使用 hexo new 命令新建博客文件时使用。 ├── source # 博客资源文件，存放博客文本和图片。 │ └── _drafts # drafts (草稿箱目录)，使用 hexo publish 命令移动到 _posts 目录。 │ └── _posts # post 目录，部署时直接部署此目录的博客文本。 └── themes # 所有主题都存放在此目录下。 └── landscape #主题\",\"使用主题 material-x。\",\"# 在 blog 目录中执行，获取主题源码 git clone https://github.com/xaoxuu/hexo-theme-material-x themes/material-x # 安装相关依赖包 npm i -S hexo-generator-search hexo-generator-json-content hexo-renderer-less\",\"或者直接使用 xaoxuu 或 flueky 整理好的 demo 。\",\"# 获取 xaoxuu 源码 git clone https://github.com/xaoxuu/blog-example blog # 获取 flueky 源码，可以使用其它版本，具体见说明 git clone --branch v0.0.2 https://github.com/flueky/hexo-blog.git # 在 blog 目录中执行，安装 hexo 有关文件后方可使用 hexo 命令 npm install\",\"在博客配置文件 _config.yml 中切换主题。\",\"# theme: landscape # 注释旧主题 theme: material-x\",\"再次启动服务见到下面的页面表示成功。\"]},\"107\":{\"h\":\"4. 个性化配置\",\"t\":[\"以下配置 ，均是基于 material-x 主题。\"]},\"108\":{\"h\":\"4.1 修改站点 logo 和 标题\",\"t\":[\"修改前：\",\"修改博客配置文件 _config.yml。\",\"# Site # 站点名称 title: Flukey 小站 # 站点图标 favicon: pic/user_icon.png\",\"修改后：\"]},\"109\":{\"h\":\"4.2 修改主页标题\",\"t\":[\"修改前：\",\"修改主题配置文件 _config.yml。\",\"# page的封面 cover: title: FLUEKY # 不设置 ，默认显示站点的标题。 # logo: assets/logo.png # logo和title只显示一个，若同时设置，则只显示logo\"]},\"110\":{\"h\":\"4.3 修改用户LOGO\",\"t\":[\"修改前：\",\"修改主题配置文件 _config.yml。\",\"# 侧边栏小部件配置 sidebar: - widget: author avatar: pic/user_icon.png # 此处替换 logo social: true\"]},\"111\":{\"h\":\"4.4 修改作者信息\",\"t\":[\"# Site # 作者名称 author: Flueky # 作者图标，使用相对路径时，需要关注文章实际生成的目录。 # 此路径在文章中使用，但是pic文件夹在source目录下 # 如果更改了 permalink ，下面的路径需要做修改。 avatar: /assets/image/img/user_icon.png\"]},\"112\":{\"h\":\"4.5 配置菜单\",\"t\":[\"菜单指主页标题，搜索框下四个模块。\",\"# page的封面 cover: # 主页封面菜单 features: - name: 博文 icon: fas fa-rss url: / - name: 项目 icon: fas fa-code-branch url: projects/ - name: 友链 icon: fas fa-link url: friends/ rel: nofollow - name: 关于 icon: fas fa-info-circle url: about/ rel: nofollow\",\"按照上面的配置修改后，请在 source 目录下做如下操作。\",\"建立 projects 文件夹，创建 index.md 文件。内容：\",\"--- title: 项目 ---\",\"建立 friends 文件夹，创建 index.md 文件。内容：\",\"--- layout: links title: 我的朋友们 sidebar: [] links: - group: 欢迎各行各业的朋友 icon: fas fa-handshake items: - name: '<i class=\\\"fas fa-comment fa-fw\\\" aria-hidden=\\\"true\\\"></i> 赶快留言吧' avatar: https://cdn.jsdelivr.net/gh/xaoxuu/assets@18.12.27/avatar/avatar.png url: '#comments' backgroundColor: '#869989' textColor: '#FFFD' tags: - 1~4个标签 - 两个最佳 --- <br> 各位大佬想交换友链的话可以在下方留言，必须要有名称、头像链接、和至少一个标签哦～ > 名称： Flueky Tech-site 头像： https://flueky.github.io/pic/img/user_icon.gif 网址： https://flueky.github.io 标签： Android\",\"建立 about 文件夹，创建 index.md 文件。内容：\",\"--- title: 公开的秘密 ---\"]},\"113\":{\"h\":\"4.6 配置导航栏\",\"t\":[\"material-x 导航栏默认不可见，电脑端需要上滑页面至主页图片消失时显示 。手机端点击右上角图标显示。此处只 列出 电脑端的配置 。\",\"# 桌面端导航栏菜单 menu_desktop: - name: 示例 icon: fas fa-grin url: / - name: 分类 icon: fas fa-folder-open url: categories/ rel: nofollow - name: 标签 icon: fas fa-hashtag url: tags/ rel: nofollow - name: 归档 icon: fas fa-archive url: archives/ rel: nofollow\",\"按照上面的配置修改后，请在 source 目录下做如下操作。\",\"建立 categories 文件夹，创建 index.md 文件。内容：\",\"--- layout: category index: true title: 所有分类 ---\",\"建立 tags 文件夹，并创建 index.md 文件。内容：\",\"--- layout: tag index: true title: 所有标签 ---\",\"建立 archives 文件夹。无须创建 index.md 文件， hexo 已经处理 。\"]},\"114\":{\"h\":\"4.7 使用 icon\",\"t\":[\"material-x 支持使用 fontawesome 的 icon 。\",\"icon: fas fa-grin # 图片名是 grin\"]},\"115\":{\"h\":\"4.8 配置部署\",\"t\":[\"修改博客配置文件 _config.yml。\",\"deploy: # 配置部署到 GitHub 上的示例。 type: git repo: https://github.com/flueky/flueky.github.io.git branch: master\",\"之后使用 deploy 命令部署到指定的仓库地址上 ，就可以使用 https://flueky.github.io访问。可能需要等待几分钟。\",\"截止到这里，已经可以尽情的写文章了。文章中以 GitHub 为例，所有用户名 flueky 需要换成自己的。\",\"源码地址\"]},\"116\":{\"h\":\"安装AndroidStudio\",\"t\":[\"公司准备招聘一批具备 Java 基础的实习生学习 Android 开发。因此，后续会出一系列的 Android 开发入门、基础、高级教程。那么，从第零步，搭建开发环境开始。由于 Android 是基于 Java 平台开发的，因此还需要安装 Java 环境。\",\"网上有很多搭建 Android 开发环境的教程，主要是基于 Eclipse 和 AndroidStudio 。其中，在下载 SDK 模块时，讲到需要设置代理。个人认为该方式可有可无，目前已经可以在大陆下载全部 SDK 代码，和访问 Android 官网。\"]},\"117\":{\"h\":\"1 下载AndroidStudio\",\"t\":[\"AndroidStudio 3.3下载\",\"android-studio-2024.2.1.10-windows\",\"android-studio-2024.2.1.10-mac\",\"android-studio-2024.2.1.10-mac_arm\",\"android-studio-2024.2.1.10-linux\"]},\"118\":{\"h\":\"2 安装AndroidStudio\",\"t\":[\"安装步骤如下：\"]},\"119\":{\"h\":\"3 配置AndroidStudio\",\"t\":[\"第一次启动AndroidStudio，会弹出配置提示。如果电脑中已经安装过AS，可以使用上一个AS的配置，在这里，展示如何第一次配置AS。步骤如下：\",\"建议采用自定义配置模式。\",\"为不增加配置后的下载时间，此处暂不下载安卓模拟器和硬件加速插件。指定的sdk路径即之前下载的SDK Tools 解压后的路径。\",\"下图显示需要下载的组件大小，点击finish后，开始下载模式。\",\"如果安装jdk11之后，无法正确打开AndroidStudio。请检查是否配置jre目录。其他版本 jdk 不存在这个问题。如果是下载的 zip 包，建议将 studio.exe 添加到桌面快捷方式，而不是 studio64.exe\",\"创建第一个Android工程，请跳转。\"]},\"120\":{\"c\":[\"AndroidStudio\"]},\"121\":{\"h\":\"Arch 安装教程\",\"t\":[\"Arch 安装教程，支持UEFI和BIOS两种方式。官方教程地址。\"]},\"122\":{\"h\":\"环境准备\"},\"123\":{\"h\":\"真机\"},\"124\":{\"h\":\"引导模式\",\"t\":[\"在真机上装 Arch ，尤其是准备装双系统，建议了解下自己主板兼容的引导模式。开机时 按下 F2 键，进入主板系统界面。\",\"如图示的主板信息，支持 Legacy （传统模式，记BIOS）和 UEFI 模式。不同的模式，在后续分区操作、安装引导程序时略有区别。如需安装双系统，建议使用 UEFI 模式。\"]},\"125\":{\"h\":\"制作启动盘\",\"t\":[\"Arch 系统镜像比较小，约 700MB 。官方下载地址，通常比较慢，建议使用国内镜像下载地址：清华镜像，中科大镜像。\",\"使用 UtraIso 工具将下载下来的 ios 文件写入 U 盘中。具体破解方式和制作启动盘的方式百度有很多。\",\"最后在开机时，按住 F12 出现如下页面，选择从 U 盘启动。\",\"不同主板之间略有差异，F2 和 F12 支持多数主板，如无效，则需要确认好主板厂商，了解到具体的设置方式。\",\"安装过程中，需要一根网线直连路由器，比在安装过程中使用拨号连接和 wifi 连接方便。\"]},\"126\":{\"h\":\"虚拟机\",\"t\":[\"推荐使用 VirtualBox 虚拟机，下载地址。\",\"新建虚拟电脑。\",\"设置系统类型。\",\"设置内存大小，根据实际内存大小分配。最少1G，建议2G。如果内存够大，请任性些。1GB=1024MB。\",\"创建虚拟硬盘。\",\"选择虚拟硬盘文件类型。\",\"设置使用动态分配的方式。即，设置虚拟硬盘100G，最后根据实际的系统占用空间，占用物理硬盘空间。\",\"确认虚拟硬盘文件位置和大小后，创建虚拟电脑。再次打开设置。\",\"设置系统启动顺序。硬盘第一，光驱第二。 设置是否启用 EFI 。同主板的 BIOS 和 UEFI 区别。\",\"如果主机是多核多线程 CPU ，可以适当添加 CPU 数量。\",\"设置显存大小，建议模式。\",\"对虚拟光驱，添加下载下来的安装镜像文件。\",\"网络模式中，选择 NAT 模式。这样，虚拟电脑可以使用真机网络。\",\"配置完成后，启动虚拟电脑。\"]},\"127\":{\"h\":\"安装系统\",\"t\":[\"为方便截图，后续操作都在虚拟机中执行。\",\"启动后，可以见到下面两图中的一个。第一个是 BIOS 模式启动，第二个是 UEFI 模式启动。\",\"启动后，在图示状态下，判断联网情况。真机安装模式下，需要将网线连接路由器，虚拟机安装模式下，需要使用 NAT 联网方式（见虚拟机的配置）。\",\"ping www.baidu.com # 若 ping 测试发现联网失败，启用 dhcp 服务 systemctl enable dhcpcd # 启用 systemctl start dhcpcd # 启动\"]},\"128\":{\"h\":\"硬盘分区\",\"t\":[\"真机安装时，硬盘通常已有分区。如无重要数据，可以直接格式化全盘。如，保留硬盘中数据，或安装双系统，请确保至少有一个空的磁盘分区。\",\"Linux 中磁盘概念与 Windows 不一样。第一块硬盘记 sda ，多块硬盘依次记 sda sdb sdc ... 。第一块硬盘的第一个分区记 sda1 ，多个分区依次记 sda1 sda2 sda3 ...。\",\"虚拟机安装时，之前创建的是一块空硬盘，因此还需要设置分区表。如果在真机上安装时，允许全盘格式化硬盘，也可以重新设置分区表。\",\"分区表有两种，MBR 和 GPT 。对应不同的主板模式。建议 BIOS + MBR ，UEFI + GPT 。换种组合，可能导致，无法正确进入系统，尤其是双系统安装的场景。\",\"# 以下是修改硬盘分区时涉及到的命令，不一定需要全部执行。 fdisk -l # 查看硬盘及分区情况 parted /dev/sda # 修改硬盘分区表，只有新硬盘需执行 mktable # 设置分区表 gpt # GPT 分区表 msdos # MBR 分区表 quit # 退出 parted cfdisk /dev/sda # 对硬盘进行分区。可以只操作硬盘中的一个分区。\",\"cfdisk 命令弹出可交互式命令终端。真机安装时，希望只在其中一个硬盘分区中安装 Arch ，直接通过方向键选中待安装的分区，如，sda4 ，选择 Delete 删除分区信息。 New 新建分区，输入待分区大小。选择 Type 设置分区类型，主要有三个 ：EFI System，Linux swap Linux filesystem 。选择 Write 写入分区信息。选择 Quit ，退出分区程序。分区示例，如下。\"]},\"129\":{\"h\":\"分区建议\"},\"130\":{\"h\":\"BIOS+MBR\",\"t\":[\"交换空间，4G。挂载点，（可选）。\",\"根分区，40G，挂载点 / 。\",\"用户分区，剩余可用空间，挂载点 /home （可选）。\"]},\"131\":{\"h\":\"UEFI+GPT\",\"t\":[\"EFI 系统分区，300M，挂载点 /boot/efi。\",\"交换空间，4G。挂载点，（可选）。\",\"根分区，40G，挂载点 / 。\",\"用户分区，剩余可用空间，挂载点 /home （可选）。\",\"真机安装时，如果内存够大，如8G，则无须使用交换空间。\",\"用户分区非必须。若重装系统时，根分区需要格式化，用户分区则不需要。相当于 windows下 C 盘和 D 盘的区别。\"]},\"132\":{\"h\":\"格式化分区\",\"t\":[\"mkfs.ext4 /dev/sda3 # 格式化根分区，Linux filesystem类型 mkfs.ext4 /dev/sda4 # 格式化用户分区 mkfs.vfat /dev/sda1 # 格式化EFI系统分区，EFI System类型 mkswap /dev/sda2 # 格式化交换空间，Linux swap 类型\"]},\"133\":{\"h\":\"挂载分区\",\"t\":[\"mount /dev/sda3 /mnt # 挂载根分区到 /mnt 目录 mkdir home # 建立用户分区目录 mount /dev/sda4 /mnt/home # 挂载用户分区到 /mnt/home 目录 mkdir /mnt/boot mkdir /mnt/boot/efi # 建议efi分区目录 mount /dev/sda1 /mnt/boot/efi # 挂载 EFI系统分区到 /mnt/boot/efi swapon /dev/sda2 # 挂载交换空间\",\"以上命令根据实际分区情况执行。\"]},\"134\":{\"h\":\"修改安装源\",\"t\":[\"安装过程，需要下载大量的系统文件，配置国内的安装源，有利于加快安装速度。\",\"vim /etc/pacman.d/mirrorlist # 编辑安装源清单文件 # 以下是对 vim 的一些操作方式 /China # 搜索 China 字符串 回车 # 执行搜索 n # 搜索下一个 2dd # 看Server，找到 ustc 的地址，剪切两行 gg # 回到第一行 p # 移动光标到适当位置，粘贴 esc # 退出编辑状态 !wq # 保存并退出 vim # 正确修改安装源之后，更新源 pacman -Syy\"]},\"135\":{\"h\":\"安装系统文件\",\"t\":[\"# 下载 arch 基础组件和 linux 内核，后面过程，全部回车 pacstrap -i /mnt base linux\",\"# 生成 fstab 文件，用于启动时挂载硬盘 genfstab -U /mnt >> /mnt/etc/fstab cat /mnt/etc/fstab # 查看刚刚生成的文件\"]},\"136\":{\"h\":\"配置系统\",\"t\":[\"arch-chroot /mnt # 进入安装的系统 passwd root # 设置 root 账户密码 pacman -S dhcpcd # 下载 dhcp 服务 systemctl enable dhcpcd # 启用 dhcp 服务 systemctl start dhcpcd # 启动 dhcp 服务\",\"pacamn -S grub # 安装 grub 引导程序 pacman -S efibootmgr # 安装 efi 启动程序，可选 # 双系统需要安装读 ntfs 分区和检测windows系统程序 pacman -S os-prober ntfs-3g # 安装 BIOS+MBR 的引导程序 grub-install --target=i386-pc /dev/sda # 安装 UEFI+GPT 的引导程序 grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Arch # 生成引导文件 grub-mkconfig -o /boot/grub/grub.cfg\",\"exit # 退出系统 reboot # 重启虚拟机或电脑\",\"重新启动后，输入密码如图示：\"]},\"137\":{\"h\":\"设置时区\",\"t\":[\"# 设置时区 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # 设置在线同步时间 timedatectl set-ntp true # 查看时间信息 UTC，格林威治时间，CST 北京时间。差8个时区 tiemdatectl status\"]},\"138\":{\"h\":\"添加用户\",\"t\":[\"useradd -m -G wheel -s /bin/bash zkf #用户名，做开发 首字母 passwd zkf # 设置 zkf 用户密码 ，需要输入两次 # 提权操作，默认的 zkf 账户，无法获取 root 权限 pacman -S vi sudo # 安装必备程序 visudo # 编辑提权文件 # 同 vim 的操作，删除 %wheel ALL=(ALL) ALL 或其下面一行之前的井号。下面使用 sudo 命令不需要密码 /wheel :wq\"]},\"139\":{\"h\":\"本地化\",\"t\":[\"pacman -S vim # 安装 vim，之前可以用 vim 是安装包附带的，新系统需要重新安装 vim /etc/locale.gen # 修改本地化配置文件 # 打开 en_US.UTF-8 ,zh_CN.UTF-8前的井号 locale-gen # 生成配置\",\"至此，Arch 系统即安装配置完成。后续还会有图形化系统安装和桌面美化。\",\"下次开机时，即可登录刚创建的 zkf 账户。或者输入 exit 退出 root ，直接登录 zkf 也可以。\",\"最后两个命令\",\"poweroff # 关机 restart # 重启\"]},\"140\":{\"h\":\"安装Java环境-Windows\"},\"141\":{\"h\":\"1 下载jdk\",\"t\":[\"jdk 8 下载链接\",\"jdk 10 下载链接\"]},\"142\":{\"h\":\"2 安装jdk\",\"t\":[\"双击下载下来的exe文件执行安装。安装过程截图如下：\",\"安装后，使用快捷键 win+R 输入cmd 运行终端程序，在终端中 输入 java -version 校验安装结果。\",\"如图所示，安装成功。\"]},\"143\":{\"h\":\"3 配置环境变量\",\"t\":[\"打开系统属性\",\"点击高级系统设置\",\"点击环境变量\",\"在系统变量中新建变量\",\"新建JAVA_HOME变量，变量值是jdk安装目录。\",\"在系统变量中选择Path变量\",\"编辑Path变量，在变量值的末尾添加下面的内容。\",\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_181\\\\bin;C:\\\\Program Files\\\\Java\\\\jdk1.8.0_181\\\\jre\\\\bin\",\"或者使用\",\"%JAVA_HOME%\\\\bin;%JAVA_HOME%\\\\jre\\\\bin\",\"保存退出后，再在终端中依次输入 javac、javah校验环境变量是否修改成功。\"]},\"144\":{\"h\":\"jdk 11\",\"t\":[\"jdk 11 默认没有 jre 目录，需要手动生成。在 jdk 目录下执行下面的命令。\",\"bin\\\\jlink.exe --module-path jmods --add-modules java.desktop --output jre\",\"jdk 8 之后，不再支持 javah 命令生成头文件，使用 javac -h 替换。\"]},\"145\":{\"h\":\"Vuepress Markdown 语法\"},\"146\":{\"h\":\"示例\"},\"147\":{\"h\":\"标题\"},\"148\":{\"h\":\"文本\"},\"149\":{\"h\":\"列表\"},\"150\":{\"h\":\"引用\"},\"151\":{\"h\":\"代码块\"},\"152\":{\"h\":\"链接\"},\"153\":{\"h\":\"图像\"},\"154\":{\"h\":\"注脚\"},\"155\":{\"h\":\"上标下标\"},\"156\":{\"h\":\"表格\"},\"157\":{\"h\":\"分割线\"},\"158\":{\"h\":\"数学公式\"},\"159\":{\"h\":\"警告\"},\"160\":{\"h\":\"提示\"},\"161\":{\"h\":\"标签\"},\"162\":{\"h\":\"自定义对齐\"},\"163\":{\"h\":\"思维导图\"},\"164\":{\"h\":\"流程图\",\"t\":[\"注脚解释1。 ↩︎\",\"注脚解释2。 ↩︎\"]},\"165\":{\"c\":[\"Markdown\"]},\"166\":{\"h\":\"Arch 定制化安装与美化\",\"t\":[\"Arch 最大的魅力在于，他的高度可定制化安装。网上有提供好的资源，只需往系统中集成即可。但是有很多教程在图形化界面安装方面比较千篇一律。不论组件是否需要，全部安装。最终导致系统体积较大。\",\"此篇教程的目的在于，最少化安装组件。装出最轻的系统。在前一篇教程的基础上，开始吧。\",\"启动系统，登录个人账户（非root账户）。\"]},\"167\":{\"h\":\"安装 gnome 显示管理\",\"t\":[\"有打包好的 gnome 组件，安装包较多。此处不用，首先只安装两个模块。gdm 和 terminal 终端。要求先进入图形化界面\",\"sudo pacman -S tilix # 安装图形化终端,不使用 gnome-terminal， sudo pacman -S gdm # 安装显示管理组件 sudo systemctl enable gdm # 启用显示管理 sudo systemctl start gdm # 启动显示管理\",\"使用 gnome on xorg 登录。\",\"没有多余的程序。查看磁盘空间，系统盘仅用 4G ，比一个安卓系统都小。\",\"下面将一步一步完善此系统。\"]},\"168\":{\"h\":\"添加 archlinuxcn 源\",\"t\":[\"此类源可以方便的安装一些国内应用，比如网易云音乐。\",\"sudo vim /etc/pacman.conf # 打开 multilib 前的注释 [multilib] Include = /etc/pacman.d/mirrorlist # 添加 archlinuxcn [archlinuxcn] SigLevel = Optional TrustAll # 此行没有时，需要安装 keyring Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch # 更新源 sudo pacman -Syy sudo pacman -S archlinuxcn-keyring # 安装密钥对\",\"最后两个表示新添加的源。\"]},\"169\":{\"h\":\"浏览器\",\"t\":[\"sudo pacman -S firefox # 火狐浏览器 sudo pacman -S google-chrome # 谷歌浏览器\"]},\"170\":{\"h\":\"中文字体\",\"t\":[\"使用浏览器打开百度首页，惊奇的发现显示不了汉字。莫慌。\",\"# 安装文泉艺字体 sudo pacman -S wqy-zenhei\",\"其他字体见Arch Wiki。\"]},\"171\":{\"h\":\"gnome 美化\",\"t\":[\"火狐浏览器打开 gnome 扩展，安装浏览器插件。\",\"# 安装美化工具与扩展 sudo pacman -S gnome-shell-extensions sudo pacman -S chrome-gnome-shell sudo pacman -S gnome-tweaks\",\"此时 tewak 自带很多扩展组件可以使用。\",\"# 安装 AUR ，解决部分 pacman 安装不了的库 sudo pacman -S yay yaourt # 安装 vimix 主题 # 选中 4 ，vimix-gtk-themes # 选中 6 ，vimix-icon-themes sudo yay vimix\",\"注销后，重新登录。tweaks 配置如下：\",\"在窗口标题栏（Window Titlebars）打开最大化和最小化按钮。\",\"通过浏览器安装 Dock 工具。在 Tweaks 中，配置 Dock 。\",\"通过以上配置，桌面效果也算不丑了。只是缺一张好看的壁纸。\"]},\"172\":{\"h\":\"终端美化 zsh\",\"t\":[\"使用 Oh My ZSH。\",\"由于国内网络的通病，官方教程的下载方式，提示 403 错误。需要手动下载安装脚本。\",\"打开其github地址：https://github.com/ohmyzsh/ohmyzsh\",\"找到 install.sh 脚本位置：tools/install.sh\",\"复制其文件内容。\",\"vim oh-my-zsh.sh # 粘贴刚刚复制的内容，保存并退出。 sudo chmod +x oh-my-zsh.sh # 给脚本添加可执行权限 sudo pacman -S zsh # 安装 zsh # 执行主题下载脚本，需要 git 支持。之前安装 AUR 时已经同步下载。 sh oh-my-zsh.sh vim .zshrc # 编辑配置文件 i # 进入编辑模式 # 修改 ZSH_THEME=\\\"ys\\\" :wq # 保存并退出 source .zshrc # 使修改生效\",\"如上，美化操作已完成。\"]},\"173\":{\"h\":\"设置中心\",\"t\":[\"切换不了壁纸。因为还缺少控制中心程序。\",\"sudo pacman -S gnome-control-center\",\"此时可以自在的切换壁纸了。\",\"但是在网络标签中还无法查看网络连接情况。\"]},\"174\":{\"h\":\"网络\",\"t\":[\"# 安装网络管理，并启动服务，之后在设置中可以查看 sudo pacman -S networkmanager sudo systemctl enable NetworkManager sudo systemctl start NetworkManager # 无线网驱动，通常有两种方式安装 sudo pacman -S linux-firmware # 通用 linux 驱动 # 如果是博通网卡 sudo pacman -S broadcom-wl\"]},\"175\":{\"h\":\"文件管理\",\"t\":[\"sudo pacman -S nautilus\"]},\"176\":{\"h\":\"中文与输入法\",\"t\":[\"sudo pacman -S fcitx-im # 安装输入法框架 sudo pacman -S fcitx-configtool # 安装配置模块 sudo pacman -S fcitx-googlepinyin # 安装 google 输入法 vim ~/.xprofile # 添加输入法配置，之前使用 gome on xorg 登录才会有效 export XIM=fcitx export XIM_PROGRAM=fcitx export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx sudo vim /etc/locale.conf # 添加中文支持，然后注销或重启生效 LANG=en_US.UTF-8 LANG=zh_CN.UTF-8\",\"至此，图形化界面和 gnome 美化部分已经完成。附上本机电脑的美化效果。后续操作还是建议多找找资料。\"]},\"177\":{\"h\":\"其他常用软件\",\"t\":[\"sudo pacman -S electronic-wechat # 微信 sudo pacman -S linuxqq # qq sudo pacman -S netease-cloud-music # 网易云音乐 sudo pacman -S gwenview # 看图工具 yay wps-office # wps office\"]},\"178\":{\"h\":\"使用PlantUML绘制类图\",\"t\":[\"本文基于sublime的PlantUML插件绘制类图。如需了解插件安装，请点击Sublime安装PlantUML插件\"]},\"179\":{\"h\":\"1 类的UML表示\",\"t\":[\"使用UML表示一个类，主要由三部分组成。类名、属性、方法。其中属性和方法的访问修饰符用 - 、# 、+ 表示 private、protected、public。\",\"如图所示，表示A类有一个private属性，protected 构造函数和public方法。\",\"@startuml class A{ - String field + A() # void method() } note right: 这是测试类 A @enduml\"]},\"180\":{\"h\":\"2 类的关系\",\"t\":[\"在面向对象语言中，类的关系有很多种，可以概括为三类：泛化、依赖、关联。\"]},\"181\":{\"h\":\"2.1 泛化\",\"t\":[\"泛化指父类跟子类的关系,表示is-a的关系。如父类是抽象类或普通类，则这种关系叫继承。如，父类是接口，则这种关系叫实现。UML中，继承和实现由不同的标记表示。\"]},\"182\":{\"h\":\"2.1.1 继承\",\"t\":[\"PlantUML用 --|> 表示继承关系。实线和三角形的抽象表示，指向谁，即继承谁。\",\"@startuml class A abstract B ' A 继承 B A --|> B @enduml\"]},\"183\":{\"h\":\"2.1.2 实现\",\"t\":[\"PlantUML用 ..|> 表示实现关系。虚和三角形的抽象表示，指向谁，即实现谁。\",\"@startuml class A interface C ' A 实现 C A ..|> C @enduml\"]},\"184\":{\"h\":\"2.2 依赖\",\"t\":[\"类之间，最弱的关联方式。常用于在A类的方法中使用B类的对象作为参数、局部变量或者对B类静态方法的调用。\",\"PlantUML用 ..> 表示依赖关系。虚线和箭头的抽象表示，指向谁，即依赖谁。\",\"@startuml class A class B ' A 依赖 B A ..> B @enduml\"]},\"185\":{\"h\":\"2.3 关联\",\"t\":[\"关联关系，即对象之间的引用关系。常使用类的属性表达。\"]},\"186\":{\"h\":\"2.3.1 单向关联\",\"t\":[\"B类作为A类的属性，表示A类与B类有关联。 PlantUML用 --> 表示单向关联。实线线和箭头的抽象表示，指向谁，即关联谁。\",\"@startuml class A{ - B b } class B ' A 关联 B A --> B @enduml\"]},\"187\":{\"h\":\"2.3.2 双向关联\",\"t\":[\"B类作为A类的属性同时，A类也是B类的属性，表示双向关联。 PlantUML用 -- 表示双向关联。或者用<-->。\",\"@startuml class A{ - B b } class B{ - A a } ' A 关联 B A -- B @enduml\"]},\"188\":{\"h\":\"2.3.3 自关联\",\"t\":[\"A类关联A类自身。常见于单例模式。\",\"@startuml class A{ - A a } ' A 关联 A A --> A @enduml\"]},\"189\":{\"h\":\"2.3.4 聚合\",\"t\":[\"在关联关系的基础上，延伸出聚合关系，强的关联关系，表示has-a关系。整体与部分的关系，部分不依赖于整体，可独立存在。常用于成员变量。\",\"如；汽车和轮胎的关系，轮胎可作为独立的商品出售。\",\"PlantUML用 o-- 表示聚合关系。实线和空心菱形的抽象表示，指向谁，表示谁是整体。\",\"@startuml class Car{ - List<Wheel> wheels } class Wheel ' Car 关联 Wheel Car \\\"1\\\" o-- \\\"4\\\" Wheel @enduml\",\"图中数字1和4也表示一对多关联。N对N同理。\"]},\"190\":{\"h\":\"2.3.5 组合\",\"t\":[\"在关联关系的基础上，延伸出另外一种关联关系，组合关系，表示contains-a关系。整体与部分的关系，部分依赖于整体，不可独立存在。常用于成员变量。\",\"如：身体和动作的关系。\",\"PlantUML用 *-- 表示聚合关系。实线和实心菱形的抽象表示，指向谁，表示谁是整体。\",\"@startuml class Body{ - List<Action> actions } class Action ' Body 关联 Action Body \\\"1\\\" *-- \\\"N\\\" Action @enduml\"]},\"191\":{\"h\":\"3 PlantUML排版\",\"t\":[\"相比较其他的UML软件或插件。PlantUML的优势在于，存储的是文本文件，可以方便的进行团队协作以及高度可定制化的依赖关系。但是，最大的缺点在于，排版是通过插件自动生成的，排版效果不尽人意。因此，PlantUML提供四个关键字 updownleftright。指定类与类之间的相对关系。\"]},\"192\":{\"h\":\"3.1 default\",\"t\":[\"@startuml class A1 class B1 A1 --> B1 class A2 class B2 A2 <-- B2 @enduml\",\"箭头向左时，被指向对象在上； 箭头向右时，被指向对象在下。\"]},\"193\":{\"h\":\"3.2 up\",\"t\":[\"@startuml class A1 class B1 A1 -up-> B1 class A2 class B2 A2 <-up- B2 @enduml\",\"使用up时，被指向对象在上。\"]},\"194\":{\"h\":\"3.3 down\",\"t\":[\"@startuml class A1 class B1 A1 -down-> B1 class A2 class B2 A2 <-down- B2 @enduml\",\"使用down时，被指向对象在下。\"]},\"195\":{\"h\":\"3.4 left\",\"t\":[\"@startuml class A1 class B1 A1 -left-> B1 class A2 class B2 A2 <-left- B2 @enduml\",\"使用left时，被指向对象在左。\"]},\"196\":{\"h\":\"3.5 right\",\"t\":[\"@startuml class A1 class B1 A1 -right-> B1 class A2 class B2 A2 <-right- B2 @enduml\",\"使用right时，被指向对象在右。\"]},\"197\":{\"h\":\"4 总结\",\"t\":[\"画类图，只是PlantUML的功能之一，还可以使用它画用例图、顺序图、活动图。更多用法，请关注后续博客或访问官网。\"]},\"198\":{\"c\":[\"UML\",\"PlantUML\"]},\"199\":{\"h\":\"签名apk文件\"},\"200\":{\"h\":\"1. apksigner\",\"t\":[\"google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。\",\"V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk 在解压之后二次打包压缩后可以安装。\",\"V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk 在解压之后二次打包压缩后无法安装。\",\"因此，在签名时，只能选择 V1 或 V1+V2,不能只选择 V2 。\"]},\"201\":{\"h\":\"1.1. 签名\",\"t\":[\"使用命令 apksigner sign 对 apk 文件进行签名。\",\"常用参数有：\",\"--in 指定待签名 apk 文件的路径。--out 指定签名后的 apk 文件路径。可以同 --in 一样，可以不用。\",\"可以在全部命令的最后指定待签名的 apk 路径。--in --out 即都指向该路径。\",\"--v1-signing-enabled 使用 true false 指定是否使用 v1 规则签名。--v2-signing-enabled 使用 true false 指定是否使用 v2 规则签名。\",\"--debuggable-apk-permitted 使用 true false 指定是否允许对测试 apk 文件进行签名，默认是允许。但是官方不建议使用生产签名文件对测试 apk 文件进行签名。\",\"--ks 指定 keystore 的路径。--ks-pass 指定 keystore 的密码。如： pass:password。 password 是签名文件密码。--ks-key-alias 指定使用的签名文件别名，通常一个签名文件可以包含多个别名。签名文件中只包含一个别名时，可以不使用。--key-pass 指定别名 key 的密码。如： pass:password。 password 是签名文件密码。\",\"以上是使用 keystore 对 apk 签名。apksigner 还支持更多种方式，如：私钥文件、JCA Providers 对 apk 签名。\",\"apksigner sign --ks debug.keystore\"]},\"202\":{\"h\":\"1.2. 校验\",\"t\":[\"使用 apksigner verify 校验已签名的 apk 文件。包括查看签名方式和使用的证书信息。\",\"常用参数有：\",\"-v 显示签名详情，是否使用 v1 、v2 签名。\",\"--in 指定待校验的 apk 文件路径。当 apk 路径放在命令末尾时，此参数可以省略。\",\"--print-certs 显示 apk 文件中包含的签名文件证书信息。\",\"# 示例 1 apksigner verify --in app-release.apk -v -print-certs # 示例 2 apksigner verify -v -print-certs app-release.apk\"]},\"203\":{\"h\":\"2. jarsigner\",\"t\":[\"是 jdk 提供的对 jar 文件的签名工具。\"]},\"204\":{\"h\":\"2.1. 签名\",\"t\":[\"使用命令 jarsigner [options] jar-file alias 对 apk 文件 签名 。其中 jar-file 对应 apk 文件路径，alias 对应 签名文件中的别名。 options 常用参数如下：\",\"-keystore 指定使用的签名文件的路径。\",\"-storepass 指定使用签名文件的密码。\",\"-keypass 指定使用 alias 对应的密码。可以不使用，执行时手动输入。\",\"-signedjar 指定签名后的 apk 的路径。\",\"-verbose 输出详细的签名过程日志。\",\"由于没有指定被签名 apk 文件的路径和使用的签名文件别名的参数，因此需要将这两个参数放在命令的最后。\",\"# 示例，如需添加 -verbose，请放在test.apk之前 jarsigner -keystore keystore -storepass password -signedjar signed.apk test.apk keyalias.\"]},\"205\":{\"h\":\"2.2. 校验\",\"t\":[\"使用命令 jarsigner -verify [options] jar-file [alias...]\",\"-verbose 输出详细的签名信息。-certs 输出每个文件使用的签名证书。\",\"# 示例 jarsigner -verify -verbose -certs signed.apk\",\"用上述命令只能检查 apk 中每个文件的签名情况，并不能获知使用的签名文件具体信息。建议使用 apksigner 命令或 keytool 命令。\",\"keytool -printcert -jarfile test.apk\"]},\"206\":{\"h\":\"3. zipalign\",\"t\":[\"是 zip 压缩包的一个对齐工具。对齐之后可以减少 app 运行时的内存消耗。\",\"# 对齐 apk 文件，并输出信息 zipalign -v 4 in.apk out.apk # 检查 apk 文件的对齐信息 zipalign -c -v 4 out.apk\",\"由于 zipalign 命令是对 apk 文件进行修改，因此不适用于使用 V2 签名机制签名过的 apk 文件。因此建议先对齐，再签名。\"]},\"207\":{\"h\":\"从零构建Android工程\"},\"208\":{\"h\":\"1 新建工程目录\",\"t\":[\"新建文件夹Demo，用AndroidStudio打开。\",\"新建build.gradle文件，添加如下内容：\",\"buildscript { repositories{ jcenter() google() } dependencies{ // 目前最新build插件版本 3.2.1 classpath 'com.android.tools.build:gradle:3.2.1' } }\",\"构建工程后如图：\",\"自动生成的gradle文件夹及使用的gradle不建议修改。如想调降gradle版本，建议降低build插件版本。\"]},\"209\":{\"h\":\"2 新建主module目录\",\"t\":[\"新建settings.gradle文件和app文件夹，并在settings.gradle文件中添加include ':app',再次构建工程，app文件夹图标改变。\",\"构建前： 构建后：\",\"在app目录下新建build.gradle文件，并添加如下内容：\",\"apply plugin: 'com.android.application' android{ compileSdkVersion 28 //目前最新sdk 28 }\",\"在app目录下新建 src、src/main文件夹,并在main文件夹中新建AndroidManifest.xml文件，添加如下内容：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <manifest package=\\\"com.flueky.demo\\\"> </manifest>\",\"最后在工程build.gradle文件添加:\",\"buildscript { repositories{ jcenter() google() } dependencies{ classpath 'com.android.tools.build:gradle:3.2.1' } } // 以下是添加部分，定义全部工程的资源库 allprojects{ repositories{ jcenter() google() } }\",\"出现图中标志时，表示项目已经构建完成。添加默认启动Activity即可去掉 号。\"]},\"210\":{\"h\":\"3 添加启动Activity\",\"t\":[\"在app/src/main目录下分别新建java和res文件夹。\",\"在java目录下创建包名：com.flueky.demo，并创建MainActivity类。\",\"在res目录加创建layout文件夹，并创建activity_main.xml布局。\",\"在AndroidManifest.xml文件注册MainActivity。\",\"给MainActivity添加启动intent。\",\"最终目录结构如图：\",\"MainActivity内容：\",\"package com.flueky.demo; import android.app.Activity; import android.os.Bundle; public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } }\",\"activity_main.xml内容：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <LinearLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\" android:layout_width=\\\"match_parent\\\" android:layout_height=\\\"match_parent\\\"> <TextView android:layout_width=\\\"match_parent\\\" android:layout_height=\\\"wrap_content\\\" android:text=\\\"Hello World\\\" /> </LinearLayout>\",\"AndroidManifest.xml内容：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <manifest xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\" package=\\\"com.flueky.demo\\\"> <application> <activity android:name=\\\".MainActivity\\\"> <intent-filter> <action android:name=\\\"android.intent.action.MAIN\\\" /> <category android:name=\\\"android.intent.category.LAUNCHER\\\" /> </intent-filter> </activity> </application> </manifest>\",\"运行结果如图：\"]},\"211\":{\"h\":\"4 新建库module目录\",\"t\":[\"新建library文件夹，并在settings.gradle文件中添加include ':library'，构建后如下，注意library文件夹的标志。\",\"同主module一样，创建AndroidManifest.xml文件和build.gradle文件。\",\"编辑AndroidManifest.xml文件：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <manifest package=\\\"com.flueky.library\\\"> </manifest>\",\"编辑build.gradle文件：\",\"apply plugin: 'com.android.library' android { compileSdkVersion 28 }\",\"在主module文件中，添加下面的代码进行关联。\",\"implementation project(':library') \"]},\"212\":{\"h\":\"5 结束语\",\"t\":[\"AndroidStudio自带的创建项目功能，做的很好。能够帮助初学者最快速度的创建Android工程，编写此篇博客的目的在于，能够帮助初学者们更好的了解Android项目工程结构。最后，将此篇博客献给测试小伙伴们。你们距离程序猿，只差面向对象编程了。\"]},\"213\":{\"c\":[\"AndroidStudio\"]},\"214\":{\"h\":\"Sublime安装PlantUML插件\"},\"215\":{\"h\":\"1 安装 graphviz\",\"t\":[\"Graphviz的是AT&T Labs Research开发的图形绘制工具,他可以很方便的用来绘制结构化的图形网络,支持多种格式输出,生成图片的质量和速度都不错。（摘自百度百科）\",\"Mac 安装 graphviz只需一条命令。\",\"brew install graphviz \"]},\"216\":{\"h\":\"2 安装Sublime Text\",\"t\":[\"笔者使用的文本编辑工具比较多。VScode、Atom、Sublime、UltraEdit。其实都没有掌握太高深的用法，只觉得哪个好用就用哪个。\",\"下载地址见官网。\"]},\"217\":{\"h\":\"3 安装PlantUml\",\"t\":[\"这其实是一个支持安装Sublime的插件,支持VScode等其他文本编辑工具。\",\"打开Package Control，输入install\",\"选中Install Package后，在新页面输入plantuml。\",\"点击PlantUMLDiagrams进行安装。\"]},\"218\":{\"h\":\"4 配置快捷键\",\"t\":[\"安装后，配置好快捷键，按照图中步骤，配置默认快捷键。\",\"粘贴以下内容，将可以使用command+m快捷键显示UML图片。\",\"[ {\\\"keys\\\": [\\\"super+m\\\"], \\\"command\\\": \\\"display_diagrams\\\"} ] \"]},\"219\":{\"h\":\"5 添加依赖jar\",\"t\":[\"切记，最后一步，需要指定plantuml.jar，不然将生成不了最终的UML效果图片。\",\"并提示:\",\"plantuml.jar下载地址。\",\"将下载下来的jar文件复制到**Application Support/Sublime Text 3/Packages/PlantUmlDiagrams/diagram/**目录下\"]},\"220\":{\"h\":\"6 设置语法高亮\",\"t\":[\"在页面右下角，选择需要高亮的语法，推荐PlantUmlDiagrams->Diagram。\"]},\"221\":{\"h\":\"7 验证\",\"t\":[\"@startuml class A note right: 这是测试类 A @enduml\",\"复制上面的内容，command+m生成下面的图片。\",\"*注：针对中文乱码的情况，可以添加utf-8编码支持。\",\"修改标记的文件最后一行\\\"charset\\\": null 为 \\\"charset\\\": \\\"UTF-8\\\"。\"]},\"222\":{\"c\":[\"Sublime\",\"PlantUML\"]},\"223\":{\"h\":\"Ubuntu 开箱配置\",\"t\":[\"记录 Ubuntu 从零到一的开箱配置。\"]},\"224\":{\"h\":\"用户与组\",\"t\":[\"sudo useradd -m -s /bin/bash zkf # 新增用户 zkf sudo usermod -a -G sudo zkf # 将 zkf 添加到 sudo 组 # 上述两行命令可以合并成一行 sudo useradd -m -G wheel -s /bin/bash zkf sudo passwd zkf # 设置/修改 zkf 密码\"]},\"225\":{\"h\":\"编辑器\",\"t\":[\"sudo update-alternatives --config editor\"]},\"226\":{\"h\":\"挂载硬盘\",\"t\":[\"sudo mount /dev/sda1 /media/data # 将 sda1 分区挂载到 /media/data\"]},\"227\":{\"h\":\"设置快捷方式\",\"t\":[\"ln -sf /media/data ~/workspace # 对 /media/data 设置链接\"]},\"228\":{\"h\":\"Git\"},\"229\":{\"h\":\"安装\",\"t\":[\"sudo apt install git\"]},\"230\":{\"h\":\"配置\",\"t\":[\"git config --global user.name \\\"your name\\\" git config --global user.email \\\"your email\\\" git config --global core.autocrlf input\"]},\"231\":{\"h\":\"GPG\"},\"232\":{\"h\":\"配置\",\"t\":[\"gpg --full-gen-key # 选择 rsa，4096，失效日期，姓名和邮箱地址（注意和 git config 设置的一致） gpg --list-secret-keys --keyid-format LONG \\\"your email\\\" # 列出 Key 信息。 # sec rsa4096/F212D2CFEBF50880 2024-04-20 [SC] 中，是 F212D2CFEBF50880 key id gpg --armor --export F212D2CFEBF50880 # 导出公钥，配置到 gitlab GPG Keys 页面。 git config --global user.signingkey F212D2CFEBF50880 # 告诉 git，使用此密钥签名 git config --global commit.gpgsign true # 设置默认使用 GPG key 签名\"]},\"233\":{\"h\":\"Python\",\"t\":[\"sudo apt install python3 # 安装 python\",\"python 通过 pip 管理安装包的依赖关系。安装 pip 有两种方式。\"]},\"234\":{\"h\":\"virtual env\",\"t\":[\"sudo apt install python3-venv # 安装 virtual env python3 -m venv \\\"virtual env name\\\" # 创建虚拟环境\"]},\"235\":{\"h\":\"get-pip\",\"t\":[\"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python3 get-pip.py # 安装 pip rm -rf get-pip.py\"]},\"236\":{\"c\":[\"Others\"]},\"237\":{\"h\":\"C++面向对象（一）——类与对象\",\"t\":[\"关键字class开头，后跟类的名称。类的主体被包在花括号中。类定义后必须跟着一个分号或列表。\",\"class Line{ private: double length; public: void setLength(double len); double getLength(); };\",\"声明类的对象，就像声明基本类型的变量一样。注意区分普通变量和引用变量的区别。\",\"Line line1 ;//声明普通变量 Line* line2 = new Line;//声明指针变量 delete line2;\",\"普通变量的内存占用由编译器去管理 。指针变量的内存占用由开发人员手动管理\",\"普通变量和指针变量访问数据成员的方式不一样，都只能访问公共成员变量和函数——用public 声明。\",\"Line line1 ; Line* line2 = new Line; line1.setLength(10.0); line2->setLength(11.1); cout<<\\\"line1 \\\"<<line1.getLength()<<endl; cout<<\\\"line2 \\\"<<line2->getLength()<<endl; delete line2;\",\"普通变量的公共成员用运算符（.）访问。指针变量的公共成员用运算符（->）访问。\",\"类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。类成员函数是类的一个成员，它可以操作类的任意对象，可以访问对象中的所有成员。\",\"成员函数可以定义在类定义内部，或者单独使用范围解析运算符（::）来定义。在类定义中定义的成员函数把函数声明为内联的，即便没有使用 inline 标识符。\",\"class Line{ private: double length; public: void setLength(double len); double getLength(); void print(){//定义在类内部，也就是内联函数 cout<<\\\"line's length is \\\"<<length<<endl; cout<<\\\"called by print\\\"<<endl; } }; /** *类的外部使用范围解析运算符 :: 定义该函数 */ void Line::setLength(double len){ length = len; } double Line::getLength(){ return length; }\",\"内联函数从源代码层看，有函数的结构，而在编译后，却不具备函数的性质。内联函数不是在调用时发生控制转移，而是在编译时将函数体嵌入在每一个调用处。编译时，类似宏替换，使用函数体替换调用处的函数名。一般在代码中用inline修饰，但是能否形成内联函数，需要看编译器对该函数定义的具体处理。\",\"//用关键字inline定义内联函数 inline void printLine(Line line){ cout<<\\\"line's length is \\\"<<line.getLength()<<endl; cout<<\\\"called by printLine\\\"<<endl; }\",\"构造函数是一种特殊的成员函数，会在每次创建类的新对象时执行。析构函数函数则在每次删除所创建的对象时执行。\",\"特征\",\"构造函数\",\"析构函数\",\"名称\",\"类名\",\"~类名\",\"返回类型\",\"无\",\"无\",\"参数\",\"可以有参数\",\"不可以有参数\",\"用途\",\"为某些成员变量设置初始值\",\"在跳出程序前释放资源\",\"其他\",\"能够重载\",\"不能够重载\",\"关于函数重载将在后后续博文中介绍\",\"class Line{ private: double length; public: void setLength(double len); double getLength(); void print(){ cout<<\\\"line's length is \\\"<<length<<endl; cout<<\\\"called by print\\\"<<endl; } Line();//没有参数的构造函数 Line(double len);//带有参数的构造函数 ~Line();//析构函数 }; Line::Line(){ length=0; cout<<\\\"object is created \\\"<<length<<endl; } Line::Line(double len){ length = len; cout<<\\\"object is created \\\"<<length<<endl; } Line::~Line(){ cout<<\\\"object is deleted\\\"<<endl; } int main(int argc, char *argv[]) { Line line1(12) ;//调用有参数的构造函数 Line* line2 = new Line;//调用无参数的构造函数 line1.setLength(10.0); line2->setLength(11.1); cout<<\\\"line1 \\\"<<line1.getLength()<<endl; cout<<\\\"line2 \\\"<<line2->getLength()<<endl; delete line2;//调用析构函数。程序结束时编译器自动释放line1 的资源，再次调用析构函数一次 }\",\"运行结果\",\"object is created 12 object is created 0 line1 10 line2 11.1 object is deleted object is deleted \",\"分析运行结果得知，定义两个变量，构造函数和析构函数各调用两次。其中，指针变量需要手动delete才能调用析构函数。有兴趣的可以自行验证。\",\"一种特殊的构造函数，它在创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象。 拷贝构造函数通常用于：\",\"通过使用另一个同类型的对象来初始化新创建的对象。\",\"复制对象，把它作为参数传递给函数。\",\"复制对象，并从函数返回这个对象\",\"如果在类中没有定义拷贝构造函数，编译器会自行定义一个。**如果类带有指针变量，并有动态内存分配，则它必须有一个拷贝构造函数。**定义拷贝构造函数，参照如下形式：\",\"classname (const classname &obj) { // 构造函数的主体 }\",\"给Line类添加上拷贝构造函数\",\"class Line{ private: double length; public: void setLength(double len); double getLength(); void print(){ cout<<\\\"line's length is \\\"<<length<<endl; cout<<\\\"called by print\\\"<<endl; } Line();//没有参数的构造函数 Line(double len);//带有参数的构造函数 ~Line();//析构函数 Line(const Line &obj);//拷贝构造函数 }; Line::Line(const Line &obj){ cout<<\\\"copy Line\\\"<<endl; length = obj.length; } int main(int argc, char *argv[]) { Line line1(12) ;//调用有参数的构造函数 Line* line2 = new Line;//调用无参数的构造函数 line1.setLength(10.0); line2->setLength(11.1); printLine(line1); cout<<\\\"line1 \\\"<<line1.getLength()<<endl; cout<<\\\"line2 \\\"<<line2->getLength()<<endl; delete line2;//调用析构函数。程序结束时编译器自动释放line1 的资源，再次调用析构函数一次 }\",\"object is created 12 object is created 0 copy Line line's length is 10 called by printLine object is deleted line1 10 line2 11.1 object is deleted object is deleted \",\"眼尖的伙伴也许发现了这里调用了三次析构函数。分析第三行到第6行的输出，调用函数printLine首先会调用拷贝构造函数给形参复初始化，再执行printLine的函数体，最后释放形参暂用的资源。\",\"友元可以是一个函数，该函数被称为友元函数。友元也可以是一个类，该类被成为友元类。在这种情况下，整个类及其所有成员都是友元。\",\"友元函数是定义在类的外部却可以访问类的内部成员（private 和protected）。友元函数的原型在类的内部定义，但是不是类的成员函数。通常用关键字 friend 修饰声明的函数为一个类的友元。\",\"class Line{ private: double length; public: void setLength(double len); double getLength(); void print(){ cout<<\\\"line's length is \\\"<<length<<endl; cout<<\\\"called by print\\\"<<endl; } Line();//没有参数的构造函数 Line(double len);//带有参数的构造函数 ~Line();//析构函数 Line(const Line &obj);//拷贝构造函数 friend void print(Line line);//定义为line类的友元函数 }; inline void printLine(Line line){ cout<<\\\"line's length is \\\"<<line.getLength()<<endl; cout<<\\\"called by printLine\\\"<<endl; } //printf不是任何类的成员函数，因此不需要修饰符:: void printf(Line line){ //友元函数可以直接访问该类的任何成员 cout<<\\\"line's length is \\\"<<line.length<<endl; cout<<\\\"called by printLine\\\"<<endl; }\",\"对比友元函数、内联函数、成员函数的定义。成员函数和友元函数可以访问类的内部成员。但是友元函数必须基于类的对象访问类的内部成员。友元函数和内联函数不需要范围解析运算符，因为他们不属于类的成员函数。\",\"每一个对象都能通过 this 指针来访问自己的地址。this 指针是所有成员函数的隐含参数。因此，在成员函数内部，它可以用来指向调用对象。\",\"友元函数没有 this 指针，因为友元不是类的成员。只有成员函数才有 this 指针。\",\"Line Line::changeLine(double length){ this->length = length;//第一个length是类的成员变量，第二个length是形参 cout<<\\\"line's length is \\\"<<this->length<<endl; cout<<\\\"called by changeLine\\\"<<endl; return *this;//返回自己的地址 } int main(int argc, char *argv[]) { Line line1(12) ;//调用有参数的构造函数 Line* line2 = new Line;//调用无参数的构造函数 line1.setLength(10.0); line2->setLength(11.1); printLine(line1); cout<<\\\"line1 \\\"<<line1.getLength()<<endl; cout<<\\\"line2 \\\"<<line2->getLength()<<endl; Line line3 = line2->changeLine(23); cout<<\\\"line3 \\\"<<line3.getLength()<<endl; delete line2;//调用析构函数。程序结束时编译器自动释放line1,line3的资源，再次调用析构函数两次 }\",\"object is created 12 object is created 0 copy Line line's length is 10 called by printLine object is deleted line1 10 line2 11.1 line's length is 23 called by changeLine copy Line line3 23 object is deleted object is deleted object is deleted \",\"分析第9~13行的输出，return *this;会再次生成一个line对象。因此后续会依次释放line1、line2、line3 的资源。\",\"在类的定义中，用static 关键字把类的成员定义为静态的。无论创建多少个对象，静态成员都只有一个副本。访问静态成员的方式：classname :: staticmember。静态成员可以是成员变量也可以是成员函数。\",\"//完整版Line类 #include <iostream> using namespace std; class Line{ private: double length; static int objcount;//声明静态成员变量 public: void setLength(double len); double getLength(); void print(){ cout<<\\\"line's length is \\\"<<length<<endl; cout<<\\\"called by print\\\"<<endl; } Line();//没有参数的构造函数 Line(double len);//带有参数的构造函数 ~Line();//析构函数 Line(const Line &obj);//拷贝构造函数 friend void print(Line line);//定义为line类的友元函数 Line changeLine(double length); static int getCount(); }; int Line::objcount = 0;//定义并初始化静态成员变量 Line::Line(){ length=0; cout<<\\\"object is created \\\"<<length<<endl; objcount++; cout<<objcount<<\\\" objects left\\\"<<endl; } Line::Line(double len){ length = len; cout<<\\\"object is created \\\"<<length<<endl; objcount++; cout<<objcount<<\\\" objects left\\\"<<endl; } Line::~Line(){ cout<<\\\"object is deleted\\\"<<endl; objcount--; cout<<objcount<<\\\" objects left\\\"<<endl; } int Line::getCount(){ return objcount; } Line::Line(const Line &obj){ cout<<\\\"copy Line\\\"<<endl; length = obj.length; objcount++; cout<<objcount<<\\\" objects left\\\"<<endl; } void Line::setLength(double len){ length = len; } double Line::getLength(){ return length; } inline void printLine(Line line){ cout<<\\\"line's length is \\\"<<line.getLength()<<endl; cout<<\\\"called by printLine\\\"<<endl; } //printf不是任何类的成员函数，因此不需要修饰符:: void print(Line line){ //友元函数可以直接访问该类的任何成员 cout<<\\\"line's length is \\\"<<line.length<<endl; cout<<\\\"called by printLine\\\"<<endl; } Line Line::changeLine(double length){ this->length = length; cout<<\\\"line's length is \\\"<<this->length<<endl; cout<<\\\"called by changeLine\\\"<<endl; return *this; } int main(int argc, char *argv[]) { Line line1(12) ;//调用有参数的构造函数 Line* line2 = new Line;//调用无参数的构造函数 line1.setLength(10.0); line2->setLength(11.1); printLine(line1); cout<<\\\"line1 \\\"<<line1.getLength()<<endl; cout<<\\\"line2 \\\"<<line2->getLength()<<endl; Line line3 = line2->changeLine(23); cout<<\\\"line3 \\\"<<line3.getLength()<<endl; cout<<\\\"obj count is \\\"<<Line::getCount()<<endl; delete line2;//调用析构函数。程序结束时编译器自动释放line1 的资源，再次调用析构函数一次 }\",\"object is created 12 1 objects left object is created 0 2 objects left copy Line 3 objects left line's length is 10 called by printLine object is deleted 2 objects left line1 10 line2 11.1 line's length is 23 called by changeLine copy Line 3 objects left line3 23 obj count is 3 object is deleted 2 objects left object is deleted 1 objects left object is deleted 0 objects left \",\"最后，自行分析程序运行结果。\"]},\"238\":{\"h\":\"C++面向对象（三）——封装和多态\"},\"239\":{\"h\":\"什么是封装\",\"t\":[\"封装(encapsulation)又叫隐藏实现(Hiding the implementation)。就是只公开代码单元的对外接口，而隐藏其具体实现。\"]},\"240\":{\"h\":\"实现封装\",\"t\":[\"在程序设计里，封装往往是通过访问控制实现的。C++，Java，Objective-C中都有 Public, Protected, Private 等访问控制符。通过用Public将信息暴露，Private，Protected将信息隐藏，来实现封装。\",\"一个优秀的OOP程序员会尽量不对外公开代码，即最喜欢用Private关键字。因为在OOP中，对代码访问控制得越严格，日后你对代码修改的自由就越大。\"]},\"241\":{\"h\":\"封装的好处\",\"t\":[\"封装使得对代码的修改更加安全和容易。将代码分成了一个个相对独立的单元。\",\"封装使整个软件开发复杂度大大降低。\",\"封装还避免了命名冲突的问题。\",\"#include <iostream> #include <ctime> using namespace std; //定义动物类 class Animal{ protected: string species;//物种 public: string getSpecies(); }; string Animal::getSpecies(){ return species; } //哺乳动物继承动物类 class BreastfeedAnimal:public Animal{ private: time_t birthday;//生日 protected: string type; public: BreastfeedAnimal(string spec); ~BreastfeedAnimal(); int getAge(); }; BreastfeedAnimal::BreastfeedAnimal(string spec){ species = spec; birthday = time(0);//生成构造函数时，生成出生日期 } BreastfeedAnimal::~BreastfeedAnimal(){ } int BreastfeedAnimal::getAge(){ return time(0)-birthday; } //定义陆生生物 class LandAnimal{ }; //定义羊，继承自哺乳动物和陆生生物 class Sheep :public BreastfeedAnimal,public LandAnimal{ public: Sheep(); ~Sheep(); }; //如果父类显示定义构造方法，子类构造方法必须调用父类构造方法 Sheep::Sheep():BreastfeedAnimal(\\\"sheep\\\"){ } Sheep::~Sheep(){ } int main(int argc, char *argv[]) { // Animal* sheep = new BreastfeedAnimal(\\\"sheep\\\"); Sheep* sheep = new Sheep(); cout<<\\\"the animal's species is \\\"<<sheep->getSpecies()<<endl; //生成一个耗时操作，阻塞程序运行 int i=999999999; while(i-->0); cout<<\\\"the animal's age is \\\"<<sheep->getAge()<<endl; }\",\"定义哺乳动物类BreastfeedAnimal,它有物种名称和出生日期两个属性。由于这两个属性在生成对象之后是不可以改变的，所以需要用private隐藏起来。与此同时，获取该对象的年龄，只需要用当前时间减去生成这个对象的时间。换句话来说，获取对象的年龄也只是个只读权限，同时也是不可修改的。这就是封装的简单用途。\"]},\"242\":{\"h\":\"设计策略\",\"t\":[\"通常情况下，我们都会设置类成员状态为私有（private），除非我们真的需要将其暴露，这样才能保证良好的封装性。\",\"这通常应用于数据成员，但它同样适用于所有成员，包括虚函数。\",\"#include <iostream> #include <ctime> using namespace std; //定义动物类 class Animal{ protected: string species;//物种 public: string getSpecies(); }; string Animal::getSpecies(){ cout<<\\\"animal species\\\"<<endl; return species; } //哺乳动物继承动物类 class BreastfeedAnimal:public Animal{ private: time_t birthday;//生日 protected: string type; public: BreastfeedAnimal(string spec); ~BreastfeedAnimal(); int getAge(); }; BreastfeedAnimal::BreastfeedAnimal(string spec){ species = spec; birthday = time(0);//生成构造函数时，生成出生日期 } BreastfeedAnimal::~BreastfeedAnimal(){ } int BreastfeedAnimal::getAge(){ return time(0)-birthday; } //定义陆生生物 class LandAnimal{ }; //定义羊，继承自哺乳动物和陆生生物 class Sheep :public BreastfeedAnimal,public LandAnimal{ public: Sheep(); ~Sheep(); string getSpecies(); }; //如果父类显示定义构造方法，子类构造方法必须调用父类构造方法 Sheep::Sheep():BreastfeedAnimal(\\\"sheep\\\"){ } Sheep::~Sheep(){ } string Sheep::getSpecies(){ cout<<\\\"sheep species\\\"<<endl; return species; } //定义牛 class Ox:public BreastfeedAnimal,public LandAnimal{ public: Ox(); ~Ox(); string getSpecies(); }; Ox::Ox():BreastfeedAnimal(\\\"ox\\\"){ } Ox::~Ox(){ } string Ox::getSpecies(){ cout<<\\\"ox species\\\"<<endl; return species; } int main(int argc, char *argv[]) { Animal sheep; Animal ox; sheep.getSpecies(); ox.getSpecies(); }\",\"运行结果\",\"animal species animal species \",\"并没有达到期望中预想的值。有人说将sheep 和ox强制类型转换（以下简称：强转）成Sheep 和Ox 对象，事实上编译器会报错。怎样做，编译器才能够正确强转？而怎样做，才能正确调用sheep和ox的getSpecies()函数？\",\"修改main函数\",\"int main(int argc, char *argv[]) { Animal* sheep = new Sheep(); Animal ox; sheep->getSpecies(); ox.getSpecies(); // ((Ox)ox).getSpecies();//这种强转会报错 ((Sheep *)sheep)->getSpecies();//强转通过 delete sheep; // delete ((Sheep *)sheep) }\",\"Animal 构造函数 Sheep 构造函数 Animal 构造函数 animal species animal species sheep species Animal 析构函数 Animal 析构函数 \",\"程序中分别用两种方式声明sheep和ox对象。分析前三行，sheep是Sheep类的对象，因此会先调用基类（Animal类）的构造函数，再调用Sheep类的构造函数。ox是Animal类的对象，所以只调用Animal类的构造函数。分析第六行，正确强转之后就会调用Sheep类的getSpecies()函数。分析最后两行，ox是编译器释放资源时调用的，此处只调用Animal的析构函数。sheep 是delete之后，调用析构函数。预期情况是先调用Sheep类的析构函数再调用Animal类的析构函数。然而，此处sheep 是Animal类的实例，所以只调用Animal类的析构函数。修改main函数如下，自行分析输出。\",\"int main(int argc, char *argv[]) { Sheep* sheep = new Sheep(); Ox ox; sheep->getSpecies(); ox.getSpecies(); delete sheep; }\",\"Animal 构造函数 Sheep 构造函数 Animal 构造函数 Ox 构造函数 sheep species ox species Sheep 析构函数 Animal 析构函数 Ox 析构函数 Animal 析构函数 \",\"再回到上一个问题：而怎样做，才能正确调用sheep和ox的getSpecies()函数？这里引入两个概念：静态多态和虚函数\",\"静态多态或静态链接是指函数调用在程序执行前就准备好了。有时候这也被称为早绑定，因为 getSpecies()函数在程序编译期间就已经设置好了。出问题的原因是被设置为基类的版本。\"]},\"243\":{\"h\":\"虚函数\",\"t\":[\"虚函数是在基类中使用关键字 virtual 声明的函数。在派生类中重新定义基类中定义的虚函数时，会告诉编译器不要静态链接到该函数。\",\"我们想要的是在程序中任意点可以根据所调用的对象类型来选择调用的函数，这种操作被称为动态链接或后期绑定。\",\"//定义动物类 class Animal{ protected: string species;//物种 public: Animal(); ~Animal(); virtual string getSpecies();//定义为虚函数 }; int main(int argc, char *argv[]) { Animal* sheep = new Sheep(); Animal ox; sheep->getSpecies(); ox.getSpecies(); delete sheep; }\",\"Animal 构造函数 Sheep 构造函数 Animal 构造函数 sheep species animal species Animal 析构函数 Animal 析构函数 \",\"分析输出，sheep已经正确调用了Sheep类中的 getSpecies()，而ox仍然调用Animal中的 getSpecies()函数。之前已经提到，ox是Animal的对象，自然只能调用Animal的函数。\"]},\"244\":{\"h\":\"纯虚函数\",\"t\":[\"纯虚函数是一种特殊的虚函数，在许多情况下，在基类中不能对虚函数给出有意义的实现，而把它声明为纯虚函数，它的实现留给该基类的派生类去做。这就是纯虚函数的作用。\",\"纯虚函数可以让类先具有一个操作名称，而没有操作内容，让派生类在继承时再去具体地给出定义。凡是含有纯虚函数的类叫做抽象类。这种类不能声明对象，只是作为基类为派生类服务。除非在派生类中完全实现基类中所有的的纯虚函数，否则，派生类也变成了抽象类，不能实例化对象。\",\"一般而言纯虚函数的函数体是缺省的，但是也可以给出纯虚函数的函数体（此时纯虚函数变为虚函数），这一点经常被人们忽视，调用纯虚函数的方法为baseclass::virtual function。\",\"//定义动物类 class Animal{ protected: string species;//物种 public: Animal(); ~Animal(); virtual string getSpecies() = 0;//纯虚函数 };\",\"= 0告诉编译器，函数没有主体，所以getSpecies()就是纯虚函数，Animal类因此也成为了抽象类。学过Java的也许会联想到抽象类和接口中才有的抽象函数。\",\"设计抽象类的目的，是为了给其他类提供一个可以继承的适当的基类。抽象类不能被用于实例化对象，它只能作为接口使用。如果试图实例化一个抽象类的对象，会导致编译错误。\",\"因此，如果一个抽象类的子类需要被实例化，则必须实现每个虚函数，这也意味着 C++ 支持使用抽象类声明接口。如果没有在派生类中重载纯虚函数，就尝试实例化该类的对象，会导致编译错误。\",\"子类没有实现抽象父类中的函数，则子类也是抽象类，该子类不能实例化对象。可用于实例化对象的类被称为具体类。\"]},\"245\":{\"h\":\"C++面向对象（二）——继承\",\"t\":[\"面向对象程序设计的三大特征：继承、封装、多态。\",\"继承是指根据一个类，定义一个新的类。创建一个类时，您不需要重新编写新的数据成员和成员函数，只需指定新建的类继承了一个已有的类的成员即可。这使得创建和维护一个应用程序变得更容易。这样做，也达到了重用代码功能和提高执行时间的效果。已有的类叫基类（父类），新建的类称为派生类（子类）。\",\"//定义动物类 class Animal{ protected: string species;//物种 public: string getSpecies(); }; string Animal::getSpecies(){ return species; } //哺乳动物继承动物类 class BreastfeedAnimal:public Animal{ protected: string type; public: BreastfeedAnimal(string spec); ~BreastfeedAnimal(); }; BreastfeedAnimal::BreastfeedAnimal(string spec){ species = spec; } BreastfeedAnimal::~BreastfeedAnimal(){ }\",\"分析代码，定义一个子类的格式class 派生类名:访问修饰符 基类名。\",\"访问修饰符：private、protected、public。\",\"派生类可以访问基类中所有的非私有成员（public和protected）。因此基类成员如果不想被派生类的成员函数访问，则应在基类中声明为 private。\",\"一个派生类继承了所有的基类（非私有）方法，但下列情况除外：\",\"基类的构造函数、析构函数和拷贝构造函数。\",\"基类的重载运算符。\",\"基类的友元函数。\",\"当一个类派生自基类，该基类可以被继承为 public、protected 或 private 几种类型。我们几乎不使用 protected 或 private 继承，通常使用 public 继承。当使用不同类型的继承时，遵循以下几个规则：\",\"公有继承（public）：当一个类派生自公有基类时，基类的公有成员也是派生类的公有成员，基类的保护成员也是派生类的保护成员，基类的私有成员不能直接被派生类访问，但是可以通过调用基类的公有和保护成员来访问。\",\"保护继承（protected）： 当一个类派生自保护基类时，基类的公有和保护成员将成为派生类的保护成员。\",\"私有继承（private）：当一个类生自私有基类时，基类的公有和保护成员将成为派生类的私有成员。\",\"多继承是指一个类继承多个基类的情况。\",\"//哺乳动物继承动物类 class BreastfeedAnimal:public Animal{ protected: string type; public: BreastfeedAnimal(string spec); ~BreastfeedAnimal(); }; BreastfeedAnimal::BreastfeedAnimal(string spec){ species = spec; } BreastfeedAnimal::~BreastfeedAnimal(){ } //定义陆生生物 class LandAnimal{ }; //定义羊，继承自哺乳动物和陆生生物 class Sheep :public BreastfeedAnimal,public LandAnimal{ public: Sheep(); ~Sheep(); }; //如果父类显示定义构造方法，子类构造方法必须调用父类构造方法 Sheep::Sheep():BreastfeedAnimal(\\\"sheep\\\"){ } Sheep::~Sheep(){ }\",\"如果没有显式的构造函数，编译器会给一个默认的构造函数，并且该默认的构造函数仅仅在没有显式地声明构造函数情况下创建。\",\"如果子类没有定义构造方法，则调用父类的无参数的构造方法。\",\"如果子类定义了构造方法，不论是无参数还是带参数，在创建子类的对象的时候,首先执行父类无参数的构造方法，然后执行自己的构造方法。\",\"在创建子类对象时候，如果子类的构造函数没有显示调用父类的构造函数，则会调用父类的默认无参构造函数。\",\"在创建子类对象时候，如果子类的构造函数没有显示调用父类的构造函数且父类自己提供了无参构造函数，则会调用父类自己的无参构造函数。\",\"在创建子类对象时候，如果子类的构造函数没有显示调用父类的构造函数且父类只定义了自己的有参构造函数，则会出错（如果父类只有有参数的构造方法，则子类必须显示调用此带参构造方法）。\",\"如果子类调用父类带参数的构造方法，需要用初始化父类成员对象的方式。\"]},\"246\":{\"h\":\"C++高级编程（一）——运算符重载\",\"t\":[\"C++ 允许在同一作用域中的某个函数和运算符指定多个定义，分别称为函数重载和运算符重载。\",\"重载声明是指一个与之前已经在该作用域内声明过的函数或方法具有相同名称的声明，但是它们的参数列表和定义（实现）不相同。\",\"当您调用一个重载函数或重载运算符时，编译器通过把您所使用的参数类型与定义中的参数类型进行比较，决定选用最合适的定义。选择最合适的重载函数或重载运算符的过程，称为重载决策。\",\"同众多面向对象编程语言一样，C++也支持函数重载。\",\"函数重载是指：定义函数时，函数名相同，形参个数和类型不同。返回类型可以不同，函数实现可以不同。\",\"#include <iostream> using namespace std; void print(int a,int b){ cout<<a<<\\\" \\\"<<b<<endl; } void print(int a,char b,float c){ cout<<a<<\\\" \\\"<<b<<\\\" \\\"<<c<<endl; } int main(int argc, char *argv[]) { print(1, 2); print(1, 'z', 1.2); }\",\"上述代码中，两个print函数就是重载的函数。注意，形参个数和类型相同返回类型不同的不算函数重载，而是会报错。\",\"准确说，运算符重载是C++的特性。我承认C# 也支持运算符重载，只是个人觉得他更像C++和Java混合的产物，因此它支持运算符重载也就不足为奇了。\",\"C++中的绝大多数运算符都可以被重载。重载的运算符是带有特殊名称的函数，函数名是由关键字operator和其后要重载的运算符符号构成的。与其他函数一样，重载运算符有一个返回类型和一个参数列表。\",\"可重载运算符和不可重载运算符如图：\"]},\"247\":{\"h\":\"一元运算符重载\",\"t\":[\"一元运算符，指对一个操作数进行操作。\",\"C++中，一元运算符有：-，~，!，++，--。\",\"#include <iostream> using namespace std; class Point{ private: int x; int y; public: Point(int x,int y); void print(); Point operator-();//重载运算符- Point operator~();//重载运算符~ Point operator!();//重载运算符！ Point& operator++();//重载运算符++前缀 Point operator++(int);//重载运算符++后缀 Point& operator--();//重载运算符--前缀 Point operator--(int);//重载运算符--后缀 }; Point::Point(int x,int y){ this->x = x; this->y = y; } void Point::print(){ cout<<this<<\\\"--->\\\"<<x<<\\\" \\\"<<y<<endl; } Point Point::operator-(){ x = -x; y = -y; return Point(x,y); } Point Point::operator~(){ x = -x; return Point(x,y); } Point Point::operator!(){ y = -y; return Point(x,y); } Point& Point::operator++(){ //用两种方式取到Point的成员，不是有病，是想指明this指针的用法。 (*this).x++; (this->y)++; return (*this); } Point Point::operator++(int){ Point temp = *(this); ++*(this); return temp; } Point& Point::operator--(){ (*this).x--; (this->y)--; return (*this); } Point Point::operator--(int){ Point temp = *(this); --*(this); return temp; } int main(int argc, char *argv[]) { Point p1(1,2); p1.print(); -p1; p1.print(); ~p1; p1.print(); !p1; p1.print(); Point p2 = p1++; p1.print(); p2.print(); }\",\"0x7fff553819f8--->1 2 0x7fff553819f8--->-1 -2 0x7fff553819f8--->1 -2 0x7fff553819f8--->1 2 0x7fff553819f8--->2 3 0x7fff553819d8--->1 2 \",\"分析输出，对p1做-、~、！、++、--运算，正确输出。注意++、-- 前缀和后缀的区别\"]},\"248\":{\"h\":\"二元运算符重载\",\"t\":[\"二元运算符，指对两个操作数进行操作。\",\"#include <iostream> using namespace std; class Point{ private: int x; int y; public: Point(); Point(int x,int y); void print(); Point operator-();//重载运算符- Point operator~();//重载运算符~ Point operator!();//重载运算符！ Point& operator++();//重载运算符++前缀 Point operator++(int);//重载运算符++后缀 Point& operator--();//重载运算符--前缀 Point operator--(int);//重载运算符--后缀 Point operator+(const Point &p);//重载运算符+,-、*、/ 同理 Point& operator+=(const Point &p);//重载运算符+=,-=、*=、/=、%=、<<=、>>=同理 Point operator<<(const int i);//重载运算符<<，>>同理 bool operator>(const Point &p);//重载运算符>，<、>=、<=、==、!=同理。注意&&、||、&、|、的不同处理逻辑 }; Point::Point(){ this->x = 0; this->y = 0; } Point::Point(int x,int y){ this->x = x; this->y = y; } void Point::print(){ cout<<this<<\\\"--->\\\"<<x<<\\\" \\\"<<y<<endl; } Point Point::operator-(){ x = -x; y = -y; return Point(x,y); } Point Point::operator~(){ x = -x; return Point(x,y); } Point Point::operator!(){ y = -y; return Point(x,y); } Point& Point::operator++(){ //用两种方式取到Point的成员，不是有病，是想指明this指针的用法。 (*this).x++; (this->y)++; return (*this); } Point Point::operator++(int){ Point temp = *(this); ++*(this); return temp; } Point& Point::operator--(){ (*this).x--; (this->y)--; return (*this); } Point Point::operator--(int){ Point temp = *(this); --*(this); return temp; } Point Point::operator+(const Point &p){ Point point; point.x = (*this).x+p.x; point.y = (*this).y+p.y; return point; } Point& Point::operator+=(const Point &p){ this->x+=p.x; this->y+=p.y; return (*this); } Point Point::operator<<(const int i){ Point point; point.x = this->x<<i; point.y = this->y<<i; return point; } bool Point::operator>(const Point &p){ return (this->x+this->y)>(p.x+p.y); } int main(int argc, char *argv[]) { Point p1(1,2); p1.print(); -p1; p1.print(); ~p1; p1.print(); !p1; p1.print(); Point p2 = p1++; p1.print(); p2.print(); Point p3 = p2+p1; p1.print(); p2.print(); p3.print(); p3+=p2; p3.print(); Point p4 =p2<<2; p4.print(); }\",\"注意，+=和+ 运算符的区别\"]},\"249\":{\"h\":\"输入/输出运算符重载\",\"t\":[\"#include <iostream> using namespace std; class Point{ private: int x; int y; public: Point(); Point(int x,int y); void print(); friend ostream& operator<<(ostream& outstream,const Point&); friend istream& operator>>(istream& instream,const Point&); }; Point::Point(){ this->x = 0; this->y = 0; } Point::Point(int x,int y){ this->x = x; this->y = y; } void Point::print(){ cout<<this<<\\\"--->\\\"<<x<<\\\" \\\"<<y<<endl; } ostream& operator<<(ostream& outstream,const Point& p){ outstream<<\\\"--->\\\"<<p.x<<\\\" \\\"<<p.y<<endl; return outstream; } istream& operator>>(istream& instream,const Point& p){ instream>>p.x>>p.y; return instream; }\"]},\"250\":{\"h\":\"数据结构（五）——二叉树\",\"t\":[\"之前四篇博客分别介绍了线性结构中的顺序表、链表、栈、队列。从难度来讲，顺序表到链表是递增的。从实现来讲，栈和队列基于顺序表和链表（之前栈采用了顺序表的存储结构，队列采用了链表的存储结构）。此次介绍的二叉树虽是非线性结构的树形结构分支，但在其各个结点遍历的实现上，使用到了栈和队列的特性。\",\"二叉树是一种特殊的线性结构，每个结点最多只有两个分支，称左孩子结点和右孩子结点。更多关于二叉树的特性，自行查阅资料。接下来只详细的介绍创建二叉树以及二叉树的遍历。\"]},\"251\":{\"h\":\"定义结构\",\"t\":[\"typedef char TreeType; typedef struct BitNode { TreeType key; struct BitNode *left; struct BitNode *right; } BitTree;\",\"二叉树的结构和双向链表的结构一致，只是双向链表的两个指针构成线性结构，二叉树的两个指针构成非线性结构。\"]},\"252\":{\"h\":\"定义操作\"},\"253\":{\"h\":\"构造空二叉树\",\"t\":[\"/** * 构造空二叉树 */ void initBitTree(BitTree& root) { root.left = NULL; root.right = NULL; }\",\"将根结点的左右两个指针置空。\"]},\"254\":{\"h\":\"创建二叉树\",\"t\":[\"/** * 创建二叉树(按照前序遍历方式构建二叉树) */ void createBitTree(BitTree** parent) { char key = getchar(); getchar(); if (key == '#') { //输入#表示该节点是叶子节点 *parent = NULL; return; } else { *parent = (BitTree*) malloc(sizeof(BitTree)); if (*parent == NULL) exit(9); (*parent)->key = key; createBitTree(&((*parent)->left)); createBitTree(&((*parent)->right)); } }\",\"先序遍历的方式构建二叉树，输入#号表示当前结点的左孩子结点或右孩子结点为空。\"]},\"255\":{\"h\":\"递归先序遍历\",\"t\":[\"/** * 递归先序遍历 */ void preOrderTraverse(BitTree* parent) { if (parent != NULL) { visit(*parent); preOrderTraverse(parent->left);//遍历左子树 preOrderTraverse(parent->right);//遍历右子树 } }\",\"先访问根结点，再依次递归访问左子树和右子树\"]},\"256\":{\"h\":\"递归中序遍历\",\"t\":[\"/** * 递归中序遍历 */ void inOrderTraverse(BitTree* parent) { if (parent != NULL) { inOrderTraverse(parent->left);//遍历左子树 visit(*parent); inOrderTraverse(parent->right);//遍历右子树 } }\",\"先递归遍历左子树，再访问根节点，最后递归访问右子树。\"]},\"257\":{\"h\":\"递归后序遍历\",\"t\":[\"/** * 递归后序遍历 */ void postOrderTraverse(BitTree* parent) { if (parent != NULL) { postOrderTraverse(parent->left);//遍历左子树 postOrderTraverse(parent->right);//遍历右子树 visit(*parent); } }\",\"先依次递归访问左子树和右子树，最后访问根结点。\",\"*三序遍历的递归方式简单的介绍到这里，三序遍历的非递归方式一个比一个难，这是本人自行思考写出的算法，若说阅读了参考资料那也是很久之前的事情。因此觉得，这三段代码还是很有阅读价值。\"]},\"258\":{\"h\":\"非递归先序遍历\",\"t\":[\"/** * 非递归先序遍历 */ void preOrderTraverseNormal(BitTree* parent) { Stack stack; if (initStack(stack) == 0) return; if (parent == NULL) return; push(stack, *parent); BitTree topNode; while (pop(stack, topNode)) { //取栈顶元素，访问并出栈 visit (node); //访问栈顶元素 if (topNode.right != NULL) { //存在右结点，则先将右结点入栈。因为左结点先遍历 push(stack, *(topNode.right)); } if (topNode.left != NULL) { //存在左结点，左结点入栈 push(stack, *(topNode.left)); } } }\",\"非递归遍历的重点是手动构造递归栈。首先将根结点入栈，然后在while循环中，先将栈顶结点出栈，并依次将该结点的右孩子结点和左孩子结点入栈（如果存在），知道栈为空pop函数返回0 结束循环。\"]},\"259\":{\"h\":\"非递归中序遍历\",\"t\":[\"/** * 非递归中序遍历 */ void inOrderTraverseNormal(BitTree* parent) { Stack stack; if (initStack(stack) == 0) return; if (parent == NULL) return; push(stack, *parent); BitTree topNode; while (top(stack, topNode)) { //取栈顶结点 /** * 首先，一直遍历到最左边的结点 */ while (topNode.left != NULL) { //左孩子结点不为空，入栈 push(stack, *(topNode.left));//左孩子结点入栈 topNode = *(topNode.left);//看下一个左孩子结点 } /** * 其次，判断其是否存在右孩子结点。 * 不存在右孩子结点，直接将该结点出栈 */ int flag = 1; while (flag && topNode.right == NULL) { pop(stack, topNode);//出栈 visit(topNode); flag = top(stack, topNode);//取栈顶结点，继续判断 } /** * 存在右孩子结点，当前结点出栈，并将右孩子结点入栈 */ if (pop(stack, topNode)) { visit(topNode); push(stack, *(topNode.right)); } } }\",\"先将根结点入栈，然后根据根结点一直寻找到该左子树的最左边结点，访问该结点。如果该结点不存在右子树，直接将该结点出栈，并一直出栈到栈顶的结点存在右子树。此时将栈顶结点出栈，并将该结点的右孩子结点入栈，并寻找到该结点右子树的最左边结点。\"]},\"260\":{\"h\":\"非递归后序遍历\",\"t\":[\"/** * 非递归后序遍历 */ void postOrderTraverseNormal(BitTree* parent) { /** * 声明两个栈，遍历树的管理栈和备用栈 * 备用栈的作用：部分结点存在两次访问的，备用栈是记录第一次访问，然后入栈。 * 也可以在结点中添加一个标签记录访问次数，备用栈的设计是为了避免修改结点 */ Stack stack, backup; if (initStack(stack) == 0) return; if (initStack(backup) == 0) return; if (parent == NULL) return; push(stack, *parent); BitTree topNode; //记录当前栈顶结点 BitTree backupNode; //记录备用栈的栈顶结点 BitTree lastNode; //上次访问的结点 while (top(stack, topNode)) { //取栈顶结点 int flag = top(backup, backupNode); //备用栈的栈顶元素,返回0表示备用栈为空。 if (flag == 0 || compareTreeNode(topNode, backupNode) == 0) { //该结点是第一次访问 if (topNode.left != NULL && compareTreeNode(*(topNode.left), lastNode) == 0) { //左孩子结点不为空，且上次访问的不是左孩子结点 push(stack, *(topNode.left)); //左孩子结点入栈 continue; } push(backup, topNode); if (topNode.right != NULL && compareTreeNode(*(topNode.right), lastNode) == 0) { //右孩子结点不为空，且上次访问的不是右孩子结点 push(stack, *(topNode.right)); //右孩子结点入栈 continue; } } else { //该节结点是第二次访问，直接出栈 pop(backup, backupNode); //备用栈栈顶元素出栈 pop(stack, topNode); //当前栈栈顶元素出栈 visit(topNode); //访问刚出栈的结点 lastNode = topNode; //记录刚刚访问的结点 } } }\",\"考虑到后续遍历的特殊性质，根结点会在左孩子结点和右孩子结点出栈时访问两次。多数资料上的实现方式都是通过在每个结点中添加一个标志记录根节点的访问次数。为了维护之前定义好的结构体的完整性。用一个备用栈，完美的解决问题。\",\"取递归栈中的栈顶元素和备用栈中的栈顶元素（如果存在）对比，如果相同，就是第二次遍历到该结点。分别将递归栈和备用栈中的栈顶元素出栈，访问并记录当前出栈的结点。如果不相同，就是第一次访问该结点，此时需要考虑当前递归栈中栈顶结点是否存在左子树或右子树以及上次出栈的结点是否是该结点的左孩子结点或右孩子结点。 当该结点不存在左子树或上次出栈的结点是该结点的左孩子结点，则标记当前递归栈中的栈顶结点已经访问过一次，将该结点添加到备用栈中。\",\"说了这么多，有点绕。经过长时间的思考以及两次优化之后的成果。越是难懂的算法不一定就是最高级的算法，此处 ，不对我的代码做任何评价。\"]},\"261\":{\"h\":\"层次遍历\",\"t\":[\"/** * 层次遍历 */ void levelOrderTraverse(BitTree* parent) { Queue queue = createQueue();//创建队列 enterQueue(queue, *parent);//根结点入队 BitTree node; while (exitQueue(queue, node)) {//队列中结点出队，队列为空，返回0，while循环结束 visit(child);//访问队列中第一个结点 if (node.left != 0)//判断是否存在左孩子结点，将左孩子结点入队 enterQueue(queue, *node.left); if (node.right != 0)//判断是否存在右孩子结点，将右孩子结点入队 enterQueue(queue, *node.right); } }\",\"看完前面三个非递归的遍历算法，也许都晕了。层次遍历，没有递归或非递归而言，自顶向下、从左到右访问二叉树中所有的结点。先访问的结点子树上的全部结点一定比后访问结点子树上的全部结点先访问，所以层次遍历用到了队的特性。\"]},\"262\":{\"h\":\"访问结点\",\"t\":[\"/** * 访问 */ void visit(BitTree node) { printf(\\\"%c\\\", node.key); }\",\"这只是模拟访问结点的操作，可根据需要自定定义该函数的功能。\",\"上述代码中用到的栈和队列中的函数，都是复用了之前博客中介绍的栈和队列的操作函数。只是修改下每个元素的结点类型。\",\"#ifndef STACK_H_ #define STACK_H_ #include \\\"tree.h\\\" #define LIST_INIT_SIZE 10 #define LISTINCREMENT 2 typedef BitTree StackType; //栈中每个元素的结点类型是二叉树 typedef struct stackNode { StackType *elem; //存储空间基地址 int length; //当前长度 int listsize; //当前分配的存储容量（以sizeof(ElemType)为单位） }Stack; …… #ifndef QUEUE_H_ #define QUEUE_H_ #include \\\"tree.h\\\" typedef BitTree QueueType;//队列中每个元素的结点类型是二叉树 struct LinkQueue { QueueType key; struct LinkQueue *next; }; typedef struct queueNode { struct LinkQueue *head; //队列的头指针 struct LinkQueue *end; //队列的尾指针 } Queue; ……\",\"最后，附上头文件的定义，部分方法未实现。\",\"/* * tree.h * * Created on: 2016年9月25日 * Author: flueky */ #include \\\"stack.h\\\" #include \\\"queue.h\\\" #ifndef TREE_H_ #define TREE_H_ typedef char TreeType; typedef struct BitNode { TreeType key; struct BitNode *left; struct BitNode *right; } BitTree; /** * 构造空二叉树 */ void initBitTree(BitTree&); /** * 销毁二叉树 */ void destoryBitTree(BitTree&); /** * 创建二叉树 */ void createBitTree(BitTree**); /** * 将二叉树清为空树 */ void clearBitTree(BitTree&); /** * 递归先序遍历 */ void preOrderTraverse(BitTree*); /** * 非递归先序遍历 */ void preOrderTraverseNormal(BitTree*); /** * 递归中序遍历 */ void inOrderTraverse(BitTree*); /** * 非递归中序遍历 */ void inOrderTraverseNormal(BitTree*); /** * 递归后序遍历 */ void postOrderTraverse(BitTree*); /** * 非递归后序遍历 */ void postOrderTraverseNormal(BitTree*); /** * 层次遍历 */ void levelOrderTraverse(BitTree*); /** * 比较两个结点，相同返回1，不同返回0 */ int compareTreeNode(BitTree, BitTree); /** * 访问 */ void visit(BitTree); #endif /* TREE_H_ */\"]},\"263\":{\"c\":[\"二叉树\"]},\"264\":{\"h\":\"数据结构（二）——链表\",\"t\":[\"相对于顺序表而言，“勤拿少取”这是对链表最形象的描述。意指，它需要一个结点，就在内存中分配一块内存单元。比顺序表不足的是，链表的每个结点中，需要一个存储单元保存指向下一个结点的地址。\",\"链表的访问需要从第一个结点（或称头结点）开始寻找，（顺序表可以根据下标直接访问）。链表的插入和删除只需对指定位置的结点操作即可。\",\"常见的链表，根据指向下个链表的指针可分为单向链表，双向链表。根据第一个结点是否存储元素可分为带头结点的链表和不带头结点的链表。再根据末尾结点next指针的指向可分为循环链表和非循环链表。\",\"*下面程序以单向带头结点的非循环链表为例。\"]},\"265\":{\"h\":\"定义结构\",\"t\":[\"typedef int LinkType; //存储单元类型 typedef struct linkNode { LinkType key; //结点的key值 struct linkNode *next; //指向下一个结点 } LNode, *LinkList;//LNode 是普通类型，LinkList是指针类型\",\"定义LinkType类型，使该链表结构适合更多数据类型。每个链表的结点，包含一个值域key和一个指针域next。这里声明两种类型LNode和LinkList。以下两行代码是等价的。\",\"LNode* node = (LNode*)malloc(sizeof(LNode)); LinkList node = (LinkList)malloc(sizeof(LNode));\"]},\"266\":{\"h\":\"定义操作\"},\"267\":{\"h\":\"创建头结点\",\"t\":[\"/** * 创建头结点 */ LinkList createHead_link() { LinkList head = (LinkList) malloc(sizeof(LNode)); head->next = NULL; return head; }\",\"这里是动态分配一个内存单元存储头结点，也可以参照顺序表中，使用LNode head，由系统分配内存。\"]},\"268\":{\"h\":\"插入结点\",\"t\":[\"/** * 头插法 */ void insertFirst_link(LinkList head, LinkType val) { LinkList node = (LinkList) malloc(sizeof(LNode)); node->key = val; node->next = head->next; head->next = node; }\",\"在带头结点的链表中，头插法表示每次将结点插入到头结点的后面。在不带头结点的链表中，将待插入的结点放在链表中第一个结点的前面，代替之成为第一个结点。\",\"/** * 尾插法 */ void insertLast_link(LinkList head, LinkType val) { LinkList temp = head; while (temp->next != NULL) //找到末尾结点 temp = temp->next; LinkList node = (LinkList) malloc(sizeof(LNode)); node->key = val; temp->next = node; node->next = NULL; }\",\"对于尾插法而言，不区分带头结点和不带头结点的链表。只将待插入的结点插到链表的最后一个位置。因此需要先循环到链表的末尾。\",\"/** * 指定位置插入，position表示插入后的位置，0表示头结点后的第一个结点 */ void insert_link(LinkList head, int position, LinkType val) { if (position < 0) //-1 从末尾添加，采用尾插法 insertLast_link(head, val); else if (position == 0) //从第一个结点插入，采用头插法 insertFirst_link(head, val); else { // LinkList temp = head->next; while (temp != NULL && --position > 0) { //找到合适的位置结点 temp = temp->next; } LinkList node = (LinkList) malloc(sizeof(LNode)); node->key = val; node->next = temp->next; temp->next = node; } }\",\"先根据下标找到待插入的位置，然后插入结点。对比顺序表，先移动指定位置的后续结点，再插入新的结点。\"]},\"269\":{\"h\":\"删除结点\",\"t\":[\"/** * 删除节点（指定位置）,下标从0开始 */ void removeNode_link(LinkList head, int index, LinkType &key) { if (index < 0) { printf(\\\"指定下标值不正确\\\\n\\\"); return; } LinkList node = head; int i = 0; while (!node->next || i < index) { //寻找指定下标的节点，结束循环时，i==index node = node->next; i++; } if (i == index) { //找到指定节点 LinkList temp = node->next; //temp 是要被删除的节点 node->next = temp->next; temp->next = NULL; key = temp->key; free(temp); } else { //没找到 printf(\\\"没找到指定下标的值\\\"); } }\",\"下标从0开始，表示头结点后的第一个结点。先找到待删除的结点，取出key值，再删除该结点。\",\"/** * 删除节点（指定节点） */ void removeNode_link(LinkList head, LinkType val) { LinkList node = head; while (!node->next) { if (node->next->key == val) break; node = node->next; } if (node->next != NULL) { //找到要删除的节点 LinkList temp = node->next; //temp 是要被删除的节点 node->next = temp->next; temp->next = NULL; free(temp); } else { printf(\\\"没找到要删除的节点\\\\n\\\"); } }\",\"首先根据val值，找到待删除的结点，最后删除之。\"]},\"270\":{\"h\":\"销毁链表\",\"t\":[\"/** * 销毁链表 */ void destory_link(LinkList head) { while (head->next != NULL) { LinkList node = head->next; head->next = node->next; free(node); } }\",\"释放掉除头结点之外的所有结点占用的内存。\",\"最后附上，头文件的定义\",\"/* * linklist.h * 顺序表的链式存储结构 * Created on: 2016年8月30日 * Author: flueky */ #ifndef LINKLIST_H_ #define LINKLIST_H_ typedef int LinkType; //存储单元类型 typedef struct linkNode { LinkType key; //节点的key值 struct linkNode *next; //指向下一个节点 } LNode, *LinkList;//LNode 是普通类型，LinkList是指针类型 /** * 创建头结点 */ LinkList createHead_link(); /** * 头插法 */ void insertFirst_link(LinkList, LinkType); /** * 尾插法 */ void insertLast_link(LinkList, LinkType); /** * 在指定位置插入 */ void insert_link(LinkList,int, LinkType); /** * 删除节点（指定位置） */ void removeNode_link(LinkList,int,LinkType&); /** * 删除节点（指定节点） */ void removeNode_link(LinkList,LinkType); /** * 销毁链表 */ void destory_link(LinkList); #endif /* LINKLIST_H_ */\"]},\"271\":{\"c\":[\"链表\"]},\"272\":{\"h\":\"数据结构（一）——顺序表\",\"t\":[\"数据结构是相互之间存在一种或多种特定关系的数据元素的集合。根据数据元素之间关系的不同特性，通常有如下4类基本结构:\",\"集合：结构中的数据元素之间除了“同属于一个集合”的关系外，别无其他的关系。如：广义表。\",\"线性结构：结构中的数据元素之间存在一个对一个的关系。如：链表。\",\"树形结构：结构中的数据元素之间存在一个对多个的关系。如：二叉树。\",\"图（网）状结构：结构中的数据元素之间存在多个对多个的关系。如：图。\",\"在线性结构中，根据存储方式分为顺序表、链表，根据对表的操作限制，分为栈和队列。\",\"顺序表的特征是，在内存中占用连续的存储单元，可以简单的理解为顺序表就是数组。只是根据需要，在实际应用中动态分配顺序表占用的内存单元。而数组是在编译的时候，预分配了指定大小的内存单元，因此如下代码段会在编译的时候报错。\",\"int len = 10; char arr[len];\",\"但是顺序表又会有数据全部的特点：可以根据下标直接访问、不方便插入和删除元素（因为需要移动后续的元素）。\"]},\"273\":{\"h\":\"定义结构\",\"t\":[\"typedef int SeqType; //存储单元类型 typedef struct{ SeqType *elem; //存储空间基地址 int length; //当前长度 int listsize; //当前分配的存储容量（以sizeof(ElemType)为单位） } SqList;\",\"结构体内，有三个元素：存储空间基地址，类似于数组首地址；当前长度，记录顺序表中有效存储单元个数；当前分配的存储容量，顺序表中，最多容纳的存储单元个数。当顺序表中所有存储单元已经被使用，在下次插入元素之前，需要新增存储单元。这点是数组所不具有的特性。\",\"*注：定义一个存储单元类型SeqType是为了使顺序表适和更多数据类型，使用的时候修改SeqType类型即可。\"]},\"274\":{\"h\":\"定义操作\"},\"275\":{\"h\":\"创建顺序表\",\"t\":[\"/** * 创建顺序表 */ SqList createList_sq() { //SqList list; //return list; SqList* list = (SqList*)malloc(sizeof(SqList)); return *list; }\",\"这里提供两种创建顺序表的代码，一种是由系统分配list占用的内存，一种是自己动态分配的内存，需要在程序运行之前手动释放占用的内存空间。\"]},\"276\":{\"h\":\"初始化顺序表\",\"t\":[\"/** * 初始化顺序表 * 返回1 表示初始化成功 * 返回0 表示初始化失败 */ int initList_sq(SqList &L) { //只有在C++中才会有引用的存在 L.elem = (SeqType *) malloc(sizeof(SeqType) * LIST_INIT_SIZE); if (!L.elem) return 0; //内存分配失败，存储空间不够 L.length = 0; //表示顺序表为空 L.listsize = LIST_INIT_SIZE; //表示顺序表里，最大存储单元个数 return 1; }\",\"分配顺序表的存储单元，初始化顺序表属性的值。\"]},\"277\":{\"h\":\"插入元素\",\"t\":[\"/** * 插入顺序表 * 下标是负数就插入到结尾 */ int insertList_sq(SqList &L, int index, SeqType val) { if (index > L.length) { //存储的下表超出顺序表实际的长度 printf(\\\"插入的下标超出顺序表的实际长度\\\"); return 0; } if (index < 0) //下标是负数，插入到结尾 index = L.length; if (L.length == L.listsize) { //顺序表的存储单元已经存满 printf(\\\"顺序表的存储单元已满，继续分配新的存储单元。\\\"); SeqType* newBase = (SeqType*) realloc(L.elem, (L.listsize + LISTINCREMENT) * sizeof(SeqType)); //继续分配存储单元 if (!newBase) { printf(\\\"分配内存单元失败\\\"); return 0; } L.elem = newBase; L.listsize += LISTINCREMENT; } //寻找合适的插入位置，index后面的元素向后移动 for (int i = L.length; i > index; i--) { L.elem[i] = L.elem[i - 1]; //向后移动 } L.elem[index] = val; //插入元素 L.length++; return 1; }\",\"将元素插入到指定的位置。插入之前，需要先判断顺序表中是否已经存满，再根据需要新增存储单元，最后插入元素。\",\"/** * 插入顺序表（结尾的位置） * 与上面的函数是重名函数，这叫函数重载，在C++里面支持 */ int insertList_sq(SqList &L, SeqType val) { return insertList_sq(L, L.length, val); }\",\"*引用和重载，是C++中才支持，因此需要在cpp文件中编译。\"]},\"278\":{\"h\":\"删除元素\",\"t\":[\"/** * 删除指定的元素 * 返回0 找不到指定的元素，删除失败。 * 返回1 找到待删除的元素，删除成功。 */ int removeList_sq(SqList &L, SeqType val) { int index = -1; //记录匹配到的下标 for (int i = 0; i < L.length; i++) { if (L.elem[i] == val) { //找到匹配的val，结束循环 index = i; break; } } if (index < 0) return 0; for (; index < L.length - 1; index++) { L.elem[index] = L.elem[index + 1]; } L.length--; return 1; }\",\"删除指定元素，需要先找到下标。依次移动下标后面的结点，修改length值。\",\"/** * 根据下标删除是指定的结点，并返回元素的值 * 返回0 下标超出顺序表长度，删除失败。 * 返回1 下标正确，删除元素，并且将已删除元素值转给elem */ int removeList_sq(SqList &L, int index, SeqType &elem) { if (index >= L.length) //下标超出顺序表的长度 return 0; index = index < 0 ? L.length : index; //下标负数表示删除最后一个节点 elem = L.elem[index]; for (int i = index; i < L.length - 1; i++) { L.elem[i] = L.elem[i + 1]; } L.length--; return 1; }\",\"先取到指定下标的元素，赋值给elem，然后依次移动下标后面的结点。最后修改length值。\"]},\"279\":{\"h\":\"销毁顺序表\",\"t\":[\"/** * 销毁顺序表 */ void destoryList_sq(SqList &L) { free(L.elem); //释放存储空间 L.length = 0; L.listsize = 0; // free(&L); }\",\"重点释放顺序表的存储单元。如果顺序表自身的内存也是动态分配的，需要手动释放。\",\"最后附上，头文件的定义。\",\"/* * sqlist.h * * 线性表的顺序存储 * Created on: 2016年8月30日 * Author: flueky */ #ifndef SQLIST_H_ #define SQLIST_H_ #define LIST_INIT_SIZE 50 #define LISTINCREMENT 10 typedef int SeqType; //存储单元类型 typedef struct{ SeqType *elem; //存储空间基地址 int length; //当前长度 int listsize; //当前分配的存储容量（以sizeof(ElemType)为单位） } SqList; /** * 创建顺序表 */ SqList createList_sq(); /** * 初始化顺序表 */ int initList_sq(SqList &); /** * 插入顺序表 */ int insertList_sq(SqList &,int index,SeqType); /** * 插入顺序表（结尾的位置） */ int insertList_sq(SqList &,SeqType); /** * 在顺序表中移除指定位置元素，下标从0开始 */ int removeList_sq(SqList &,int,SeqType &); /** * 在顺序表中删除指定元素 */ int removeList_sq(SqList &,SeqType); /** * 销毁顺序表 */ void destoryList_sq(SqList &); #endif /* SQLIST_H_ */\"]},\"280\":{\"c\":[\"顺序表\"]},\"281\":{\"h\":\"数据结构（四）——队列\",\"t\":[\"在栈中提到，队列是操作受限制的特殊的线性表。 在队列的一端只能插入元素，这一端叫做队尾。 在队列的另一端只能删除元素，这一端叫做队首。\",\"同样举个栗子。 在食堂排队打饭，跑的快的同学排在队列的前面，最先打到饭菜。后续到的同学只能依次排列在队尾。买到饭菜的同学离开队列叫做出队，进入队列等候叫做入队。食堂阿姨给队列中第一个同学打饭叫做访问队首元素。\",\"总结：队列有先进先出的特性，FIFO（First In First Out）。每次只能在线性表的两端操作元素。\",\"考虑到每次出队和入队都要移动队首和队尾指针。若采用顺序存储，将会有可能造成顺序表前段部分存储单元的浪费。虽说可以采用循环队列的方式复用存储单元，若遇到队列满的情况，将队列扩容比较麻烦。因此建议用链表的方式实现队列。\"]},\"282\":{\"h\":\"定义结构\",\"t\":[\"typedef int QueueType; struct LinkQueue{ QueueType key; struct LinkQueue *next; }; typedef struct queueNode{ struct LinkQueue *head;//队列的头指针 struct LinkQueue *end;//队列的尾指针 }Queue;\",\"这里定义了连个结构体，链表和队列。队列中只保存两个指针——队首、队尾。后面的入队、出队的操作，只需要操作这两个指针就好。\"]},\"283\":{\"h\":\"定义操作\"},\"284\":{\"h\":\"创建队列\",\"t\":[\"/** * 创建队列 */ Queue createQueue() { Queue queue; queue.head = 0; queue.end = 0; return queue; }\",\"采用静态方式分配队列存储单元。初始化队首和队尾指针。\"]},\"285\":{\"h\":\"判断队列是否为空\",\"t\":[\"/** * 判断队列是否是空 */ int isEmpty(Queue queue) { if (queue.head == 0) return 0; else return 1; }\",\"队首指针指向空结点，表示队列为空。\"]},\"286\":{\"h\":\"访问队首元素\",\"t\":[\"/** * 获取队列第一个元素 */ int getFirst(Queue queue, QueueType& elem) { if (queue.head == 0) return 0; elem = queue.head->key; return 1; }\",\"队首指针可作为链表的头结点。通过头结点访问链表的第一个结点。\"]},\"287\":{\"h\":\"出队\",\"t\":[\"/** * 退出队列 */ int exitQueue(Queue& queue, QueueType& val) { if (isEmpty(queue) == 0) //空队列 return 0; struct LinkQueue* node = queue.head; queue.head = node->next; node->next = 0; val = node->key; free(node); if (queue.head == 0) queue.end = 0; return 1; }\",\"通过队首指针，删除队列第一个结点。如果删除后队列为空，将队尾指针置空，否则队尾指针仍然指向最后一个元素。队列为空，删除失败，返回0 。删除成功返回1。\"]},\"288\":{\"h\":\"入队\",\"t\":[\"/** * 进入队列 */ int enterQueue(Queue& queue, QueueType key) { struct LinkQueue* node = (struct LinkQueue*) malloc( sizeof(struct LinkQueue)); if (node == NULL) return 0; node->key = key; node->next = 0; if (queue.end == 0) { queue.end = node; } else {//修改队尾指针 queue.end->next = node; queue.end = node; } if (queue.head == 0) { queue.head = node; } return 1; }\",\"队列为空时，队首和队尾指针指向同一个结点就好。队列不为空时，修改队尾指针指向新插入的结点。入队成功返回1，入队失败返回0。\",\"最后附上头文件的定义\",\"/* * queue.h * * Created on: 2016年9月30日 * Author: flueky */ #ifndef QUEUE_H_ #define QUEUE_H_ typedef int QueueType; struct LinkQueue { QueueType key; struct LinkQueue *next; }; typedef struct queueNode { struct LinkQueue *head; //队列的头指针 struct LinkQueue *end; //队列的尾指针 } Queue; /** * 创建队列 */ Queue createQueue(); /** * 判断队列是否是空 */ int isEmpty(Queue); /** * 获取队列第一个元素 */ int getFirst(Queue, QueueType&); /** * 进入队列 */ int enterQueue(Queue&, QueueType); /** * 退出队列 */ int exitQueue(Queue&, QueueType&); /** * 清空队列 */ void clearQueue(Queue); #endif /* QUEUE_H_ */\"]},\"289\":{\"c\":[\"队列\"]},\"290\":{\"h\":\"数据结构（三）——栈\",\"t\":[\"在线性表中，根据存储结构可分为：顺序表 和 链表。顺序表和链表可以访问任意位置结点，在任意位置插入和删除结点。倘若对上述操作加以限制，如：\",\"在线性表的一端插入、删除、访问结点。\",\"在线性表的一端插入结点、另一端删除、访问结点。\",\"*注：对线性表操作的限制有很多，上述只介绍两种主流的限制，在数据结构中叫做栈和队列。\",\"栈的概念比较抽象，举个栗子（对，就是板栗的栗子）。\",\"一群人依次走进一个死胡同，宽度只够通行一个人。如果他们要出来，只能依次退出来。最后进去的人最先出来，在外面的人也只看的见最后进去的人是谁。这里，进去一个人叫做插入结点，出来一个人叫做删除结点。看的见最后进去的人，叫访问结点。\",\"总结：栈有先进后出的特性，简称FILO（First in Last Out）。只能在线性表的一端插入和删除结点。\",\"栈是操作受限制的线性表，根据不同的存储结构可分成顺序栈和链式栈。 在顺序栈中，可以将顺序表的有效长度作为栈顶指针，在顺序表的末尾删除和插入节点。 在链式栈中，可以将链表的头结点作为栈顶指针，入栈采用头插法。\"]},\"291\":{\"h\":\"定义结构\",\"t\":[\"#define LIST_INIT_SIZE 10 #define LISTINCREMENT 2 typedef int StackType; //存储单元类型 typedef struct stackNode { StackType *elem; //存储空间基地址 int length; //当前长度 int listsize; //当前分配的存储容量（以sizeof(ElemType)为单位） }Stack;\",\"这里定义的实际上是顺序表的结构，所以实现的也就是顺序栈。只是操作方法比顺序表的操作少很多。\"]},\"292\":{\"h\":\"定义操作\"},\"293\":{\"h\":\"初始化栈\",\"t\":[\"int initStack(Stack& stack) { stack.elem = (StackType *) malloc(sizeof(StackType) * LIST_INIT_SIZE); if (!stack.elem) return 0; //内存分配失败，存储空间不够 stack.length = 0; stack.listsize = LIST_INIT_SIZE; return 1; }\",\"给栈的基地址分配一段连续的存储单元，并标记栈的长度为0。初始化成功返回1，初始化失败返回0。\"]},\"294\":{\"h\":\"判断栈是否为空\",\"t\":[\"int isEmptyStack(Stack stack) { return stack.length; }\",\"栈为空，返回0，不为空返回非0。\"]},\"295\":{\"h\":\"访问栈顶元素\",\"t\":[\"int top(Stack stack, StackType& elem) { if (stack.length == 0) return 0; elem = stack.elem[stack.length - 1]; return 1; }\",\"取出栈顶元素，传值给形参elem，但不删除栈顶元素。由于采用的是引用的方式，因此形参值的改变可以传给实参。如果栈为空，返回0，栈非空，返回1。\"]},\"296\":{\"h\":\"出栈\",\"t\":[\"int pop(Stack& stack, StackType& elem) { if (stack.length > 0) { elem = stack.elem[--stack.length]; return 1; } return 0; }\",\"取出并删除栈顶元素，传值给形参elem。由于采用的是引用的方式，因此形参值的改变可以传给实参。如果栈为空，返回0，栈非空，返回1。\"]},\"297\":{\"h\":\"入栈\",\"t\":[\"int push(Stack& stack, StackType data) { if (stack.length == stack.listsize) { //顺序表的存储单元已经存满 printf(\\\"顺序表的存储单元已满，继续分配新的存储单元。\\\"); StackType* newBase = (StackType*) realloc(stack.elem, (stack.listsize + LISTINCREMENT) * sizeof(StackType)); //继续分配存储单元 if (!newBase) { printf(\\\"分配内存单元失败\\\"); return 0; } stack.elem = newBase; stack.listsize += LISTINCREMENT; } stack.elem[stack.length] = data; stack.length++; return 1; }\",\"在栈顶插入元素。若，当前栈已满，继续分配内存单元再插入。返回1表示入栈成功，返回0表示入栈失败。\",\"最后附上头文件的定义\",\"/* * stack.h * * Created on: 2016年9月26日 * Author: flueky */ #ifndef STACK_H_ #define STACK_H_ #define LIST_INIT_SIZE 10 #define LISTINCREMENT 2 typedef int StackType; //存储单元类型 typedef struct stackNode { StackType *elem; //存储空间基地址 int length; //当前长度 int listsize; //当前分配的存储容量（以sizeof(ElemType)为单位） }Stack; int initStack(Stack&); int isEmptyStack(Stack); int top(Stack,StackType&); int push(Stack&,StackType); int pop(Stack&,StackType&); #endif /* STACK_H_ */\"]},\"298\":{\"c\":[\"栈\"]},\"299\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"300\":{\"h\":\"C\"},\"301\":{\"h\":\"Data Structure\"}},\"dirtCount\":0,\"index\":[[\"宽度\",{\"1\":{\"290\":1}}],[\"死胡同\",{\"1\":{\"290\":1}}],[\"走进\",{\"1\":{\"290\":1}}],[\"板栗\",{\"1\":{\"290\":1}}],[\"倘若\",{\"1\":{\"290\":1}}],[\"麻烦\",{\"1\":{\"281\":1}}],[\"扩容\",{\"1\":{\"281\":1}}],[\"扩展\",{\"1\":{\"37\":1,\"99\":1,\"171\":3}}],[\"满\",{\"1\":{\"281\":1,\"297\":1}}],[\"浪费\",{\"1\":{\"281\":1}}],[\"造成\",{\"1\":{\"281\":1}}],[\"离开\",{\"1\":{\"281\":1}}],[\"饭菜\",{\"1\":{\"281\":2}}],[\"跑的快\",{\"1\":{\"281\":1}}],[\"食堂\",{\"1\":{\"281\":2}}],[\"栗子\",{\"1\":{\"281\":1,\"290\":2}}],[\"举个\",{\"1\":{\"281\":1,\"290\":1}}],[\"举例\",{\"1\":{\"79\":1}}],[\"移除\",{\"1\":{\"279\":1}}],[\"移动\",{\"1\":{\"106\":1,\"134\":1,\"268\":1,\"272\":1,\"277\":2,\"278\":2,\"281\":1}}],[\"赋值\",{\"1\":{\"278\":1}}],[\"匹配\",{\"1\":{\"278\":2}}],[\"超出\",{\"1\":{\"277\":2,\"278\":2}}],[\"负数\",{\"1\":{\"277\":2,\"278\":1}}],[\"理解\",{\"1\":{\"272\":1}}],[\"限制\",{\"1\":{\"272\":1,\"290\":3}}],[\"状\",{\"1\":{\"272\":1}}],[\"状态\",{\"1\":{\"17\":1,\"127\":1,\"134\":1,\"242\":1}}],[\"广义\",{\"1\":{\"272\":1}}],[\"外面\",{\"1\":{\"290\":1}}],[\"外\",{\"1\":{\"272\":1}}],[\"外部\",{\"1\":{\"237\":2}}],[\"集合\",{\"1\":{\"272\":3}}],[\"集成\",{\"1\":{\"84\":1,\"93\":2,\"166\":1}}],[\"掉\",{\"1\":{\"270\":1}}],[\"域\",{\"1\":{\"265\":1}}],[\"域名\",{\"1\":{\"7\":1,\"93\":1,\"100\":1,\"101\":1}}],[\"少\",{\"1\":{\"264\":1,\"291\":1}}],[\"拿\",{\"1\":{\"264\":1}}],[\"勤\",{\"1\":{\"264\":1}}],[\"销毁\",{\"0\":{\"270\":1,\"279\":1},\"1\":{\"262\":1,\"270\":2,\"279\":2}}],[\"尾\",{\"1\":{\"262\":1,\"268\":3,\"270\":1,\"282\":2,\"287\":1,\"288\":1}}],[\"…\",{\"1\":{\"262\":4}}],[\"晕\",{\"1\":{\"261\":1}}],[\"队首\",{\"1\":{\"281\":2,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":1}}],[\"队尾\",{\"1\":{\"281\":3,\"284\":1,\"287\":1,\"288\":3}}],[\"队\",{\"1\":{\"261\":2,\"282\":3,\"285\":1,\"287\":1,\"288\":1}}],[\"队列\",{\"0\":{\"281\":1,\"284\":1,\"285\":1},\"1\":{\"250\":4,\"261\":3,\"262\":5,\"272\":1,\"281\":12,\"282\":4,\"284\":2,\"285\":1,\"286\":1,\"287\":3,\"288\":10,\"290\":1},\"2\":{\"289\":1}}],[\"评价\",{\"1\":{\"260\":1}}],[\"评论\",{\"0\":{\"84\":1},\"1\":{\"83\":1,\"84\":1,\"85\":5,\"86\":5}}],[\"经过\",{\"1\":{\"260\":1}}],[\"经常\",{\"1\":{\"244\":1}}],[\"绕\",{\"1\":{\"260\":1}}],[\"备用\",{\"1\":{\"260\":12}}],[\"入队\",{\"0\":{\"288\":1},\"1\":{\"261\":3,\"281\":2,\"282\":1,\"288\":2}}],[\"入栈\",{\"0\":{\"297\":1},\"1\":{\"258\":4,\"259\":5,\"260\":3,\"290\":1,\"297\":2}}],[\"入门\",{\"1\":{\"13\":1,\"25\":1,\"77\":1,\"100\":1,\"116\":1}}],[\"元素\",{\"0\":{\"277\":1,\"278\":1,\"286\":1,\"295\":1},\"1\":{\"258\":2,\"260\":6,\"262\":3,\"264\":1,\"272\":8,\"273\":2,\"277\":4,\"278\":8,\"279\":2,\"281\":4,\"286\":1,\"287\":1,\"288\":1,\"295\":2,\"296\":1,\"297\":1}}],[\"顶\",{\"1\":{\"258\":1,\"259\":3,\"260\":4}}],[\"顶端\",{\"1\":{\"94\":1}}],[\"价值\",{\"1\":{\"257\":1}}],[\"价值观\",{\"1\":{\"90\":1}}],[\"思考\",{\"1\":{\"257\":1,\"260\":1}}],[\"思维\",{\"0\":{\"163\":1}}],[\"树上\",{\"1\":{\"261\":2}}],[\"树\",{\"1\":{\"255\":4,\"256\":4,\"257\":4,\"259\":4,\"260\":4}}],[\"树形\",{\"1\":{\"250\":1,\"272\":1}}],[\"递归\",{\"0\":{\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1},\"1\":{\"255\":2,\"256\":3,\"257\":4,\"258\":3,\"259\":1,\"260\":5,\"261\":3,\"262\":6}}],[\"递增\",{\"1\":{\"250\":1}}],[\"叶子\",{\"1\":{\"254\":1}}],[\"节点\",{\"1\":{\"254\":2,\"256\":1,\"260\":1,\"269\":9,\"270\":5,\"278\":1,\"290\":1}}],[\"置空\",{\"1\":{\"253\":1,\"287\":1}}],[\"孩子\",{\"1\":{\"250\":2,\"254\":2,\"258\":2,\"259\":8,\"260\":11,\"261\":4}}],[\"称\",{\"1\":{\"250\":1,\"264\":1}}],[\"称为\",{\"1\":{\"237\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":2}}],[\"遍历\",{\"0\":{\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"261\":1},\"1\":{\"250\":2,\"254\":2,\"255\":3,\"256\":4,\"257\":5,\"258\":3,\"259\":2,\"260\":4,\"261\":4,\"262\":7}}],[\"虽说\",{\"1\":{\"281\":1}}],[\"虽是\",{\"1\":{\"250\":1}}],[\"虽然\",{\"1\":{\"22\":1,\"26\":1}}],[\"栈非空\",{\"1\":{\"295\":1,\"296\":1}}],[\"栈中栈\",{\"1\":{\"260\":1}}],[\"栈中\",{\"1\":{\"260\":5,\"262\":1,\"290\":2}}],[\"栈栈\",{\"1\":{\"260\":2}}],[\"栈是\",{\"1\":{\"260\":1,\"290\":1}}],[\"栈为\",{\"1\":{\"258\":1,\"260\":1,\"294\":1,\"295\":1,\"296\":1}}],[\"栈\",{\"0\":{\"290\":1,\"293\":1,\"294\":1},\"1\":{\"250\":4,\"258\":1,\"259\":1,\"260\":10,\"262\":2,\"272\":1,\"281\":1,\"290\":5,\"291\":1,\"293\":2,\"297\":1},\"2\":{\"298\":1}}],[\"栈顶\",{\"0\":{\"295\":1},\"1\":{\"64\":1,\"258\":2,\"259\":1,\"260\":7,\"290\":2,\"295\":2,\"296\":1,\"297\":1}}],[\"五\",{\"0\":{\"250\":1}}],[\"符号\",{\"1\":{\"246\":1}}],[\"绝大多数\",{\"1\":{\"246\":1}}],[\"产物\",{\"1\":{\"246\":1}}],[\"混合\",{\"1\":{\"246\":1}}],[\"承认\",{\"1\":{\"246\":1}}],[\"准确\",{\"1\":{\"246\":1}}],[\"准备\",{\"0\":{\"8\":1,\"100\":1,\"122\":1},\"1\":{\"8\":1,\"44\":1,\"100\":1,\"116\":1,\"124\":1,\"242\":1}}],[\"众多\",{\"1\":{\"246\":1}}],[\"决策\",{\"1\":{\"246\":1}}],[\"决定\",{\"1\":{\"246\":1}}],[\"某个\",{\"1\":{\"246\":1}}],[\"某些\",{\"1\":{\"237\":1}}],[\"遵循\",{\"1\":{\"245\":1}}],[\"派生\",{\"1\":{\"245\":3}}],[\"派生类\",{\"1\":{\"243\":1,\"244\":6,\"245\":10}}],[\"析\",{\"1\":{\"245\":1}}],[\"析构\",{\"1\":{\"237\":16,\"242\":11,\"243\":2}}],[\"应\",{\"1\":{\"245\":1}}],[\"应用程序\",{\"1\":{\"245\":1}}],[\"应用\",{\"1\":{\"0\":1,\"1\":2,\"41\":1,\"85\":2,\"86\":9,\"168\":1,\"242\":1,\"272\":1}}],[\"父\",{\"1\":{\"245\":1}}],[\"父类\",{\"1\":{\"181\":1,\"241\":2,\"242\":2,\"244\":1,\"245\":14}}],[\"维护\",{\"1\":{\"245\":1,\"260\":1}}],[\"维斯特\",{\"1\":{\"41\":1}}],[\"尝试\",{\"1\":{\"244\":1}}],[\"意指\",{\"1\":{\"264\":1}}],[\"意味着\",{\"1\":{\"244\":1}}],[\"意义\",{\"1\":{\"19\":2,\"244\":1}}],[\"学过\",{\"1\":{\"244\":1}}],[\"学习\",{\"1\":{\"116\":1}}],[\"忽视\",{\"1\":{\"244\":1}}],[\"忽略\",{\"1\":{\"77\":1}}],[\"否则\",{\"1\":{\"244\":1,\"287\":1}}],[\"种类\",{\"1\":{\"244\":1}}],[\"含有\",{\"1\":{\"244\":1}}],[\"凡是\",{\"1\":{\"244\":1}}],[\"留给\",{\"1\":{\"244\":1}}],[\"留言\",{\"1\":{\"112\":2}}],[\"纯虚\",{\"0\":{\"244\":1},\"1\":{\"244\":13}}],[\"期间\",{\"1\":{\"242\":1}}],[\"期望\",{\"1\":{\"242\":1}}],[\"绑定\",{\"1\":{\"242\":1,\"243\":1}}],[\"早\",{\"1\":{\"242\":1}}],[\"然而\",{\"1\":{\"242\":1}}],[\"然后\",{\"1\":{\"21\":2,\"176\":1,\"245\":1,\"258\":1,\"259\":1,\"260\":1,\"268\":1,\"278\":1}}],[\"预\",{\"1\":{\"272\":1}}],[\"预期\",{\"1\":{\"242\":1}}],[\"预想\",{\"1\":{\"242\":1}}],[\"？\",{\"1\":{\"242\":3}}],[\"怎样\",{\"1\":{\"242\":3}}],[\"报错\",{\"1\":{\"242\":2,\"246\":1,\"272\":1}}],[\"报文\",{\"1\":{\"72\":1}}],[\"值域\",{\"1\":{\"265\":1}}],[\"值\",{\"1\":{\"242\":1,\"265\":1,\"269\":3,\"270\":1,\"276\":1,\"278\":4}}],[\"达到\",{\"1\":{\"242\":1,\"245\":1}}],[\"牛\",{\"1\":{\"242\":1}}],[\"性\",{\"1\":{\"242\":1}}],[\"性质\",{\"1\":{\"237\":1,\"260\":1}}],[\"良好\",{\"1\":{\"242\":1}}],[\"私有\",{\"1\":{\"242\":1,\"245\":5}}],[\"私钥\",{\"1\":{\"30\":1,\"41\":1,\"201\":1}}],[\"策略\",{\"0\":{\"242\":1}}],[\"耗时\",{\"1\":{\"241\":1}}],[\"耗费\",{\"1\":{\"22\":1}}],[\"羊\",{\"1\":{\"241\":1,\"242\":1,\"245\":1}}],[\"陆生\",{\"1\":{\"241\":2,\"242\":2,\"245\":2}}],[\"哺乳动物\",{\"1\":{\"241\":3,\"242\":2,\"245\":3}}],[\"物种\",{\"1\":{\"241\":2,\"242\":1,\"243\":1,\"244\":1,\"245\":1}}],[\"物理\",{\"1\":{\"126\":1}}],[\"避免\",{\"1\":{\"241\":1,\"260\":1}}],[\"容纳\",{\"1\":{\"273\":1}}],[\"容易\",{\"1\":{\"241\":1,\"245\":1}}],[\"容量\",{\"1\":{\"17\":1}}],[\"尽量\",{\"1\":{\"240\":1}}],[\"尽情\",{\"1\":{\"115\":1}}],[\"暴露\",{\"1\":{\"240\":1,\"242\":1}}],[\"暴力破解\",{\"1\":{\"31\":1}}],[\"往往\",{\"1\":{\"240\":1}}],[\"隐藏\",{\"1\":{\"239\":2,\"240\":1,\"241\":1}}],[\"隐含\",{\"1\":{\"237\":1}}],[\"又会有\",{\"1\":{\"272\":1}}],[\"又\",{\"1\":{\"239\":1}}],[\"副本\",{\"1\":{\"237\":1}}],[\"行\",{\"1\":{\"237\":2,\"242\":1}}],[\"伙伴\",{\"1\":{\"237\":1}}],[\"眼尖\",{\"1\":{\"237\":1}}],[\"另一端\",{\"1\":{\"281\":1,\"290\":1}}],[\"另\",{\"1\":{\"237\":1}}],[\"另外\",{\"1\":{\"190\":1}}],[\"拷贝\",{\"1\":{\"237\":9,\"245\":1}}],[\"释放\",{\"1\":{\"237\":7,\"242\":1,\"270\":1,\"275\":1,\"279\":3}}],[\"返回\",{\"1\":{\"237\":3,\"246\":3,\"258\":1,\"260\":1,\"261\":1,\"262\":2,\"276\":2,\"278\":5,\"287\":2,\"288\":2,\"293\":2,\"294\":2,\"295\":2,\"296\":2,\"297\":2}}],[\"宏\",{\"1\":{\"237\":1}}],[\"嵌入\",{\"1\":{\"237\":1}}],[\"嵌套\",{\"1\":{\"1\":1}}],[\"层次\",{\"0\":{\"261\":1},\"1\":{\"261\":3,\"262\":1}}],[\"层\",{\"1\":{\"237\":1}}],[\"来讲\",{\"1\":{\"250\":2}}],[\"来说\",{\"1\":{\"241\":1}}],[\"来\",{\"1\":{\"237\":4,\"240\":1,\"243\":1,\"245\":1,\"290\":1}}],[\"来自\",{\"1\":{\"83\":1,\"101\":1}}],[\"范围\",{\"1\":{\"237\":3}}],[\"那\",{\"1\":{\"257\":1}}],[\"那些\",{\"1\":{\"237\":1}}],[\"那么\",{\"1\":{\"16\":1,\"32\":1,\"37\":1,\"78\":2,\"101\":1,\"116\":1}}],[\"像\",{\"1\":{\"237\":2,\"246\":1}}],[\"声明\",{\"1\":{\"237\":8,\"242\":1,\"243\":1,\"244\":3,\"245\":2,\"246\":3,\"260\":1,\"265\":1}}],[\"括号\",{\"1\":{\"237\":1}}],[\"花\",{\"1\":{\"237\":1}}],[\"花费\",{\"1\":{\"1\":1}}],[\"邮箱地址\",{\"1\":{\"232\":1}}],[\"邮件\",{\"1\":{\"86\":1}}],[\"姓名\",{\"1\":{\"232\":1}}],[\"姓氏\",{\"1\":{\"41\":1}}],[\"日\",{\"1\":{\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"日后\",{\"1\":{\"240\":1}}],[\"日期\",{\"1\":{\"232\":1}}],[\"日志\",{\"1\":{\"1\":3,\"204\":1}}],[\"失效\",{\"1\":{\"232\":1}}],[\"失败\",{\"1\":{\"77\":1,\"127\":1,\"276\":2,\"277\":1,\"278\":2,\"287\":1,\"288\":1,\"293\":2,\"297\":2}}],[\"乱码\",{\"1\":{\"221\":1}}],[\"验证\",{\"0\":{\"221\":1},\"1\":{\"237\":1}}],[\"切记\",{\"1\":{\"219\":1}}],[\"切换\",{\"1\":{\"64\":1,\"106\":1,\"173\":2}}],[\"觉得\",{\"1\":{\"216\":1,\"246\":1,\"257\":1}}],[\"太\",{\"1\":{\"216\":1}}],[\"太长\",{\"1\":{\"83\":1}}],[\"掌握\",{\"1\":{\"216\":1}}],[\"摘自\",{\"1\":{\"215\":1}}],[\"摘要\",{\"0\":{\"16\":1,\"28\":1,\"69\":2},\"1\":{\"16\":1,\"28\":2,\"69\":6,\"70\":7,\"74\":1}}],[\"质量\",{\"1\":{\"215\":1}}],[\"猿\",{\"1\":{\"212\":1}}],[\"距离\",{\"1\":{\"212\":1}}],[\"献给\",{\"1\":{\"212\":1}}],[\"降低\",{\"1\":{\"208\":1}}],[\"减去\",{\"1\":{\"241\":1}}],[\"减少\",{\"1\":{\"206\":1}}],[\"减半\",{\"1\":{\"22\":1}}],[\"获知\",{\"1\":{\"205\":1}}],[\"获取\",{\"1\":{\"1\":4,\"2\":1,\"3\":1,\"37\":1,\"70\":2,\"83\":1,\"93\":2,\"106\":3,\"138\":1,\"241\":2,\"286\":1,\"288\":1}}],[\"省略\",{\"1\":{\"202\":1}}],[\"详细\",{\"1\":{\"204\":1,\"205\":1,\"250\":1}}],[\"详情\",{\"1\":{\"202\":1}}],[\"详见\",{\"1\":{\"93\":1}}],[\"证书\",{\"1\":{\"202\":2,\"205\":1}}],[\"别无其他\",{\"1\":{\"272\":1}}],[\"别名\",{\"1\":{\"201\":4,\"204\":2}}],[\"别的\",{\"1\":{\"86\":1}}],[\"压缩包\",{\"1\":{\"206\":1}}],[\"压缩\",{\"1\":{\"200\":2}}],[\"活动\",{\"1\":{\"197\":1}}],[\"例图\",{\"1\":{\"197\":1}}],[\"例如\",{\"1\":{\"77\":1}}],[\"左边\",{\"1\":{\"259\":3}}],[\"左子\",{\"1\":{\"255\":2,\"256\":2,\"257\":2,\"259\":1,\"260\":2}}],[\"左\",{\"1\":{\"195\":1,\"250\":1,\"254\":1,\"258\":4,\"259\":3,\"260\":6,\"261\":2}}],[\"左时\",{\"1\":{\"192\":1}}],[\"左右两个\",{\"1\":{\"253\":1}}],[\"左右\",{\"1\":{\"94\":1}}],[\"协作\",{\"1\":{\"191\":1}}],[\"团队\",{\"1\":{\"191\":1}}],[\"动物类\",{\"1\":{\"241\":2,\"242\":2,\"243\":1,\"244\":1,\"245\":3}}],[\"动作\",{\"1\":{\"190\":1}}],[\"动态内存\",{\"1\":{\"237\":1}}],[\"动态分配\",{\"1\":{\"126\":1,\"267\":1,\"272\":1,\"275\":1,\"279\":1}}],[\"动态\",{\"0\":{\"95\":1,\"97\":1},\"1\":{\"67\":1,\"95\":1,\"243\":1}}],[\"身体\",{\"1\":{\"190\":1}}],[\"菱形\",{\"1\":{\"189\":1,\"190\":1}}],[\"商品\",{\"1\":{\"189\":1}}],[\"轮胎\",{\"1\":{\"189\":2}}],[\"汽车\",{\"1\":{\"189\":1}}],[\"；\",{\"1\":{\"189\":1,\"192\":1,\"273\":2}}],[\"延伸\",{\"1\":{\"189\":1,\"190\":1}}],[\"箭头\",{\"1\":{\"184\":1,\"186\":1,\"192\":2}}],[\"局部变量\",{\"1\":{\"184\":1}}],[\"局限于\",{\"1\":{\"17\":1}}],[\"虚线\",{\"1\":{\"184\":1}}],[\"虚\",{\"0\":{\"243\":1},\"1\":{\"183\":1,\"242\":2,\"243\":3,\"244\":4}}],[\"虚拟环境\",{\"1\":{\"234\":1}}],[\"虚拟光驱\",{\"1\":{\"126\":1}}],[\"虚拟\",{\"1\":{\"126\":8}}],[\"虚拟机\",{\"0\":{\"126\":1},\"1\":{\"126\":1,\"127\":3,\"128\":1,\"136\":1}}],[\"谁\",{\"1\":{\"182\":2,\"183\":2,\"184\":2,\"186\":2,\"189\":2,\"190\":2,\"290\":1}}],[\"抽象\",{\"1\":{\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"189\":1,\"190\":1,\"244\":2,\"290\":1}}],[\"抽象类\",{\"1\":{\"70\":1,\"181\":1,\"244\":10}}],[\"继承\",{\"0\":{\"182\":1,\"245\":1},\"1\":{\"181\":2,\"182\":3,\"241\":2,\"242\":2,\"244\":2,\"245\":16}}],[\"继续\",{\"1\":{\"94\":1,\"259\":1,\"277\":2,\"297\":3}}],[\"普通\",{\"1\":{\"181\":1,\"237\":5,\"265\":1,\"270\":1}}],[\"普遍\",{\"1\":{\"16\":1}}],[\"跟着\",{\"1\":{\"237\":1}}],[\"跟\",{\"1\":{\"181\":1,\"237\":1}}],[\"泛化\",{\"0\":{\"181\":1},\"1\":{\"180\":1,\"181\":1}}],[\"概括\",{\"1\":{\"180\":1}}],[\"概念\",{\"0\":{\"19\":1,\"23\":1,\"29\":1},\"1\":{\"19\":1,\"33\":1,\"128\":1,\"242\":1,\"290\":1}}],[\"语言\",{\"1\":{\"180\":1,\"246\":1}}],[\"语法\",{\"0\":{\"145\":1,\"220\":1},\"1\":{\"13\":2,\"85\":1,\"220\":1}}],[\"面向对象编程\",{\"1\":{\"212\":1,\"246\":1}}],[\"面向对象\",{\"0\":{\"237\":1,\"238\":1,\"245\":1},\"1\":{\"180\":1,\"245\":1}}],[\"面试\",{\"1\":{\"16\":1}}],[\"构成\",{\"1\":{\"246\":1,\"251\":2}}],[\"构\",{\"1\":{\"245\":1}}],[\"构造\",{\"0\":{\"253\":1},\"1\":{\"253\":1,\"258\":1,\"262\":1}}],[\"构造方法\",{\"1\":{\"241\":3,\"242\":3,\"245\":11}}],[\"构造函数\",{\"1\":{\"179\":1,\"237\":30,\"241\":1,\"242\":11,\"243\":3,\"245\":16}}],[\"构建\",{\"0\":{\"207\":1},\"1\":{\"81\":1,\"208\":1,\"209\":4,\"211\":1,\"254\":2}}],[\"绘制\",{\"0\":{\"178\":1},\"1\":{\"178\":1,\"215\":2}}],[\"微信\",{\"1\":{\"177\":1}}],[\"资料\",{\"1\":{\"176\":1,\"250\":1,\"260\":1}}],[\"资源库\",{\"1\":{\"209\":1}}],[\"资源\",{\"1\":{\"106\":1,\"166\":1,\"237\":7,\"242\":1}}],[\"附上\",{\"1\":{\"176\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"附带\",{\"1\":{\"139\":1}}],[\"错误\",{\"1\":{\"172\":1,\"244\":2}}],[\"壁纸\",{\"1\":{\"171\":1,\"173\":2}}],[\"缺省\",{\"1\":{\"244\":1}}],[\"缺点\",{\"1\":{\"191\":1}}],[\"缺少\",{\"1\":{\"173\":1}}],[\"缺\",{\"1\":{\"171\":1}}],[\"丑\",{\"1\":{\"171\":1}}],[\"算\",{\"1\":{\"171\":1}}],[\"算法\",{\"1\":{\"28\":3,\"37\":3,\"38\":1,\"39\":8,\"40\":1,\"69\":8,\"70\":3,\"72\":1,\"73\":1,\"74\":3,\"257\":1,\"260\":2,\"261\":1}}],[\"惊奇\",{\"1\":{\"170\":1}}],[\"谷歌\",{\"1\":{\"169\":1}}],[\"火狐\",{\"1\":{\"169\":1,\"171\":1}}],[\"体内\",{\"1\":{\"273\":1}}],[\"体是\",{\"1\":{\"244\":1}}],[\"体\",{\"1\":{\"237\":3,\"244\":1,\"260\":1,\"282\":1}}],[\"体积\",{\"1\":{\"166\":1}}],[\"体现\",{\"1\":{\"24\":1,\"31\":1}}],[\"千篇一律\",{\"1\":{\"166\":1}}],[\"千万\",{\"1\":{\"74\":1}}],[\"他\",{\"1\":{\"166\":1,\"215\":1,\"246\":1}}],[\"他们\",{\"1\":{\"26\":1,\"41\":1,\"237\":1,\"290\":1}}],[\"魅力\",{\"1\":{\"166\":1}}],[\"化\",{\"0\":{\"166\":1},\"1\":{\"166\":2,\"191\":1,\"244\":7}}],[\"定制\",{\"0\":{\"166\":1},\"1\":{\"166\":1,\"191\":1}}],[\"定义\",{\"0\":{\"251\":1,\"252\":1,\"265\":1,\"266\":1,\"273\":1,\"274\":1,\"282\":1,\"283\":1,\"291\":1,\"292\":1},\"1\":{\"94\":5,\"209\":1,\"237\":25,\"241\":5,\"242\":5,\"243\":4,\"244\":2,\"245\":9,\"246\":5,\"260\":1,\"262\":2,\"265\":1,\"270\":1,\"273\":1,\"279\":1,\"282\":1,\"288\":1,\"291\":1,\"297\":1}}],[\"︎\",{\"1\":{\"164\":2}}],[\"↩\",{\"1\":{\"164\":2}}],[\"警告\",{\"0\":{\"159\":1}}],[\"变得\",{\"1\":{\"245\":1}}],[\"变为\",{\"1\":{\"244\":1}}],[\"变成\",{\"1\":{\"244\":1}}],[\"变量值\",{\"1\":{\"143\":2}}],[\"变量\",{\"1\":{\"143\":6,\"189\":1,\"190\":1,\"237\":21}}],[\"变化\",{\"1\":{\"1\":1}}],[\"双向\",{\"0\":{\"187\":1},\"1\":{\"187\":2,\"251\":2,\"264\":1}}],[\"双击\",{\"1\":{\"142\":1}}],[\"双系统\",{\"1\":{\"124\":2,\"128\":2,\"136\":1}}],[\"刚出\",{\"1\":{\"260\":1}}],[\"刚\",{\"1\":{\"139\":1}}],[\"刚刚\",{\"1\":{\"135\":1,\"172\":1,\"260\":1}}],[\"美化\",{\"0\":{\"166\":1,\"171\":1,\"172\":1},\"1\":{\"139\":1,\"171\":1,\"172\":1,\"176\":2}}],[\"井\",{\"1\":{\"138\":1,\"139\":1}}],[\"必备\",{\"1\":{\"138\":1}}],[\"必须\",{\"1\":{\"101\":1,\"112\":1,\"131\":1,\"237\":3,\"241\":1,\"242\":1,\"244\":1,\"245\":2}}],[\"权限\",{\"1\":{\"138\":1,\"172\":1,\"241\":1}}],[\"差\",{\"1\":{\"137\":1}}],[\"差异\",{\"1\":{\"55\":1,\"125\":1}}],[\"北京\",{\"1\":{\"137\":1}}],[\"格林威治\",{\"1\":{\"137\":1}}],[\"格式化\",{\"0\":{\"132\":1},\"1\":{\"128\":2,\"131\":1,\"132\":4}}],[\"格式\",{\"1\":{\"55\":1,\"215\":1,\"245\":1}}],[\"检测\",{\"1\":{\"136\":1}}],[\"检查\",{\"1\":{\"25\":1,\"60\":1,\"79\":1,\"93\":1,\"119\":1,\"205\":1,\"206\":1}}],[\"读\",{\"1\":{\"136\":1}}],[\"读取\",{\"1\":{\"70\":1}}],[\"粘贴\",{\"1\":{\"134\":1,\"172\":1,\"218\":1}}],[\"光标\",{\"1\":{\"134\":1}}],[\"光驱\",{\"1\":{\"126\":1}}],[\"剪切\",{\"1\":{\"134\":1}}],[\"看下\",{\"1\":{\"259\":1}}],[\"看图\",{\"1\":{\"177\":1}}],[\"看\",{\"1\":{\"134\":1,\"237\":2,\"261\":1,\"290\":2}}],[\"看见\",{\"1\":{\"69\":1}}],[\"源代码\",{\"1\":{\"237\":1}}],[\"源\",{\"0\":{\"134\":1,\"168\":1},\"1\":{\"134\":4,\"168\":3}}],[\"源码\",{\"1\":{\"83\":1,\"98\":1,\"106\":3,\"115\":1}}],[\"非线性\",{\"1\":{\"250\":1,\"251\":1}}],[\"非\",{\"0\":{\"258\":1,\"259\":1,\"260\":1},\"1\":{\"131\":1,\"166\":1,\"245\":2,\"257\":1,\"258\":2,\"259\":1,\"260\":1,\"261\":1,\"262\":3,\"264\":2,\"294\":1}}],[\"非对称\",{\"1\":{\"16\":1,\"30\":5,\"41\":1}}],[\"挂载\",{\"0\":{\"133\":1,\"226\":1},\"1\":{\"130\":3,\"131\":4,\"133\":4,\"135\":1,\"226\":1}}],[\"希望\",{\"1\":{\"128\":1}}],[\"退出\",{\"1\":{\"128\":2,\"134\":2,\"136\":1,\"139\":1,\"143\":1,\"172\":2,\"287\":1,\"288\":1,\"290\":1}}],[\"涉及\",{\"1\":{\"128\":1}}],[\"依次\",{\"1\":{\"128\":2,\"143\":1,\"237\":1,\"255\":1,\"257\":1,\"258\":1,\"278\":2,\"281\":1,\"290\":2}}],[\"依赖于\",{\"1\":{\"189\":1,\"190\":1}}],[\"依赖\",{\"0\":{\"184\":1,\"219\":1},\"1\":{\"1\":1,\"77\":2,\"92\":1,\"98\":1,\"106\":1,\"180\":1,\"184\":3,\"191\":1,\"233\":1}}],[\"磁盘空间\",{\"1\":{\"167\":1}}],[\"磁盘\",{\"1\":{\"128\":1}}],[\"磁盘分区\",{\"1\":{\"128\":1}}],[\"确保\",{\"1\":{\"128\":1}}],[\"确认\",{\"1\":{\"125\":1,\"126\":1}}],[\"测试\",{\"1\":{\"127\":1,\"179\":1,\"201\":2,\"212\":1,\"221\":1}}],[\"截图\",{\"1\":{\"127\":1,\"142\":1}}],[\"截止\",{\"1\":{\"115\":1}}],[\"显式\",{\"1\":{\"245\":2}}],[\"显存\",{\"1\":{\"126\":1}}],[\"显示\",{\"0\":{\"167\":1},\"1\":{\"17\":3,\"22\":1,\"55\":7,\"87\":5,\"90\":1,\"92\":1,\"96\":2,\"109\":3,\"113\":2,\"119\":1,\"167\":3,\"170\":1,\"202\":2,\"218\":1,\"241\":1,\"242\":1,\"245\":5}}],[\"核\",{\"1\":{\"126\":1}}],[\"核心\",{\"1\":{\"90\":1}}],[\"硬盘分区\",{\"0\":{\"128\":1},\"1\":{\"128\":3}}],[\"硬盘空间\",{\"1\":{\"126\":1}}],[\"硬盘\",{\"0\":{\"226\":1},\"1\":{\"126\":5,\"128\":11,\"135\":1}}],[\"硬件加速\",{\"1\":{\"119\":1}}],[\"够\",{\"1\":{\"126\":1,\"131\":1}}],[\"够用\",{\"1\":{\"7\":1}}],[\"拨号\",{\"1\":{\"125\":1}}],[\"比后\",{\"1\":{\"261\":1}}],[\"比如\",{\"1\":{\"168\":1}}],[\"比\",{\"1\":{\"125\":1,\"167\":1,\"257\":1,\"264\":1,\"291\":1}}],[\"比较慢\",{\"1\":{\"125\":1}}],[\"比较简单\",{\"1\":{\"20\":1}}],[\"比较\",{\"1\":{\"4\":1,\"16\":1,\"37\":1,\"69\":1,\"70\":1,\"79\":1,\"125\":1,\"166\":1,\"191\":1,\"216\":1,\"246\":1,\"262\":1,\"281\":1,\"290\":1}}],[\"路由器\",{\"1\":{\"125\":1,\"127\":1}}],[\"路径\",{\"1\":{\"111\":2,\"119\":2,\"201\":5,\"202\":2,\"204\":4}}],[\"厂商\",{\"1\":{\"125\":1}}],[\"盘\",{\"1\":{\"125\":1,\"131\":2}}],[\"盘中\",{\"1\":{\"125\":1}}],[\"国内\",{\"1\":{\"125\":1,\"134\":1,\"168\":1,\"172\":1}}],[\"国家\",{\"1\":{\"69\":1}}],[\"约\",{\"1\":{\"125\":1}}],[\"镜像文件\",{\"1\":{\"126\":1}}],[\"镜像\",{\"1\":{\"125\":4}}],[\"制作\",{\"0\":{\"125\":1},\"1\":{\"125\":1}}],[\"略有\",{\"1\":{\"124\":1,\"125\":1}}],[\"键\",{\"1\":{\"124\":1}}],[\"按钮\",{\"1\":{\"171\":1}}],[\"按住\",{\"1\":{\"125\":1}}],[\"按下\",{\"1\":{\"124\":1}}],[\"按照\",{\"1\":{\"55\":1,\"112\":1,\"113\":1,\"218\":1,\"254\":1}}],[\"尤其\",{\"1\":{\"124\":1,\"128\":1}}],[\"装出\",{\"1\":{\"166\":1}}],[\"装\",{\"1\":{\"124\":2}}],[\"机制\",{\"1\":{\"206\":1}}],[\"机上安装\",{\"1\":{\"128\":1}}],[\"机上\",{\"1\":{\"124\":1}}],[\"机会\",{\"1\":{\"79\":1}}],[\"真的\",{\"1\":{\"242\":1}}],[\"真\",{\"1\":{\"124\":1,\"128\":1}}],[\"真机\",{\"0\":{\"123\":1},\"1\":{\"81\":1,\"126\":1,\"127\":1,\"128\":2,\"131\":1}}],[\"而言\",{\"1\":{\"261\":1,\"264\":1,\"268\":1}}],[\"而是\",{\"1\":{\"237\":1,\"246\":1}}],[\"而\",{\"1\":{\"119\":1,\"237\":1,\"239\":1,\"242\":2,\"243\":1,\"244\":2,\"272\":1}}],[\"而后\",{\"1\":{\"67\":1}}],[\"插到\",{\"1\":{\"268\":1}}],[\"插法\",{\"1\":{\"268\":6,\"270\":2,\"290\":1}}],[\"插入\",{\"0\":{\"268\":1,\"277\":1},\"1\":{\"264\":1,\"268\":9,\"270\":1,\"272\":1,\"273\":1,\"277\":10,\"279\":2,\"281\":1,\"288\":1,\"290\":6,\"297\":2}}],[\"插件\",{\"0\":{\"214\":1},\"1\":{\"119\":1,\"171\":1,\"178\":3,\"191\":2,\"208\":2,\"217\":1}}],[\"插拔\",{\"1\":{\"79\":1}}],[\"展示\",{\"1\":{\"119\":1}}],[\"官网\",{\"1\":{\"116\":1,\"197\":1,\"216\":1}}],[\"官方\",{\"1\":{\"100\":1,\"121\":1,\"125\":1,\"172\":1,\"200\":1,\"201\":1}}],[\"教程\",{\"0\":{\"121\":1},\"1\":{\"116\":2,\"121\":2,\"166\":3,\"172\":1}}],[\"招聘\",{\"1\":{\"116\":1}}],[\"归档\",{\"1\":{\"113\":1}}],[\"桌面\",{\"1\":{\"113\":1,\"119\":1,\"139\":1,\"171\":1}}],[\"右子\",{\"1\":{\"255\":2,\"256\":2,\"257\":2,\"259\":3,\"260\":1}}],[\"右下角\",{\"1\":{\"220\":1}}],[\"右\",{\"1\":{\"196\":1,\"250\":1,\"258\":3,\"259\":5,\"260\":4,\"261\":2}}],[\"右时\",{\"1\":{\"192\":1}}],[\"右上角\",{\"1\":{\"113\":1}}],[\"右边\",{\"1\":{\"81\":1}}],[\"消耗\",{\"1\":{\"206\":1}}],[\"消失\",{\"1\":{\"113\":1}}],[\"消息\",{\"1\":{\"5\":1}}],[\"滑\",{\"1\":{\"113\":1}}],[\"秘密\",{\"1\":{\"112\":1}}],[\"～\",{\"1\":{\"112\":1}}],[\"要\",{\"1\":{\"112\":1,\"246\":1,\"269\":4,\"281\":1,\"290\":1}}],[\"要求\",{\"1\":{\"10\":1,\"37\":2,\"167\":1}}],[\"交换\",{\"1\":{\"112\":1,\"130\":1,\"131\":2,\"132\":1,\"133\":1}}],[\"交互式\",{\"1\":{\"128\":1}}],[\"交互\",{\"1\":{\"6\":1}}],[\"赶快\",{\"1\":{\"112\":1}}],[\"欢迎\",{\"1\":{\"112\":1}}],[\"朋友\",{\"1\":{\"112\":2}}],[\"项目\",{\"1\":{\"112\":2,\"209\":1,\"212\":2}}],[\"项目名称\",{\"1\":{\"77\":1}}],[\"博通\",{\"1\":{\"174\":1}}],[\"博文\",{\"1\":{\"112\":1,\"237\":1}}],[\"博客\",{\"0\":{\"105\":1,\"106\":1},\"1\":{\"14\":1,\"83\":2,\"85\":1,\"86\":2,\"92\":1,\"93\":1,\"98\":1,\"99\":3,\"101\":1,\"105\":1,\"106\":8,\"108\":1,\"115\":1,\"197\":1,\"212\":2,\"250\":1,\"262\":1}}],[\"作用域\",{\"1\":{\"246\":2}}],[\"作用\",{\"1\":{\"244\":1,\"260\":1}}],[\"作者\",{\"0\":{\"111\":1},\"1\":{\"111\":2}}],[\"作为\",{\"1\":{\"1\":1,\"6\":2,\"7\":1,\"21\":1,\"36\":1,\"101\":1,\"184\":1,\"186\":1,\"187\":1,\"189\":1,\"237\":1,\"244\":2,\"286\":1,\"290\":2}}],[\"封面\",{\"1\":{\"109\":1,\"112\":2}}],[\"封装\",{\"0\":{\"238\":1,\"239\":1,\"240\":1,\"241\":1},\"1\":{\"37\":1,\"70\":1,\"239\":1,\"240\":2,\"241\":4,\"242\":1,\"245\":1}}],[\"旧\",{\"1\":{\"106\":1}}],[\"└\",{\"1\":{\"106\":4}}],[\"│\",{\"1\":{\"106\":2}}],[\"─\",{\"1\":{\"106\":16}}],[\"├\",{\"1\":{\"106\":4}}],[\"草稿箱\",{\"1\":{\"104\":1,\"106\":1}}],[\"启动盘\",{\"0\":{\"125\":1},\"1\":{\"125\":1}}],[\"启动\",{\"0\":{\"104\":1,\"210\":1},\"1\":{\"104\":2,\"106\":2,\"119\":1,\"125\":1,\"126\":1,\"127\":5,\"135\":1,\"136\":2,\"166\":1,\"167\":1,\"174\":1,\"209\":1,\"210\":1}}],[\"启用\",{\"1\":{\"85\":1,\"87\":1,\"126\":1,\"127\":2,\"136\":1,\"167\":1}}],[\"无参\",{\"1\":{\"245\":3}}],[\"无论\",{\"1\":{\"237\":1}}],[\"无线网\",{\"1\":{\"174\":1}}],[\"无效\",{\"1\":{\"125\":1}}],[\"无须\",{\"1\":{\"106\":2,\"113\":1,\"131\":1}}],[\"无\",{\"1\":{\"103\":1,\"128\":1,\"237\":6,\"245\":3}}],[\"无法\",{\"1\":{\"79\":1,\"119\":1,\"128\":1,\"138\":1,\"173\":1,\"200\":1}}],[\"假如\",{\"1\":{\"101\":1}}],[\"甚至\",{\"1\":{\"100\":1}}],[\"购买\",{\"1\":{\"100\":1}}],[\"托管\",{\"1\":{\"100\":1}}],[\"熟悉\",{\"1\":{\"100\":1}}],[\"熟练\",{\"1\":{\"8\":1}}],[\"万事开头难\",{\"1\":{\"100\":1}}],[\"丰富\",{\"1\":{\"99\":1}}],[\"技能\",{\"1\":{\"99\":1}}],[\"您\",{\"1\":{\"99\":1,\"100\":1,\"245\":1,\"246\":2}}],[\"适当\",{\"1\":{\"126\":1,\"134\":1,\"244\":1}}],[\"适用\",{\"1\":{\"99\":1,\"242\":1}}],[\"适合\",{\"1\":{\"31\":1,\"265\":1}}],[\"崛起\",{\"1\":{\"99\":1}}],[\"顺序存储\",{\"1\":{\"279\":1,\"281\":1}}],[\"顺序\",{\"0\":{\"272\":1,\"275\":1,\"276\":1,\"279\":1},\"1\":{\"126\":1,\"197\":1,\"250\":4,\"264\":3,\"267\":1,\"268\":1,\"270\":1,\"272\":5,\"273\":4,\"275\":2,\"276\":5,\"277\":7,\"278\":2,\"279\":10,\"281\":1,\"290\":6,\"291\":3,\"297\":2},\"2\":{\"280\":1}}],[\"顺势\",{\"1\":{\"99\":1}}],[\"顺便\",{\"1\":{\"6\":1}}],[\"掘金\",{\"1\":{\"99\":2}}],[\"几种\",{\"1\":{\"245\":1}}],[\"几分钟\",{\"1\":{\"115\":1}}],[\"几乎\",{\"1\":{\"99\":1,\"245\":1}}],[\"几十篇\",{\"1\":{\"99\":1}}],[\"几个\",{\"1\":{\"24\":1,\"28\":1,\"37\":1,\"99\":1,\"245\":1}}],[\"社交\",{\"1\":{\"98\":1}}],[\"偏好\",{\"1\":{\"98\":1}}],[\"百科\",{\"1\":{\"98\":1,\"215\":1}}],[\"百度\",{\"0\":{\"93\":1},\"1\":{\"78\":1,\"93\":4,\"98\":1,\"125\":1,\"170\":1,\"215\":1}}],[\"聚合\",{\"0\":{\"189\":1},\"1\":{\"98\":1,\"189\":2,\"190\":1}}],[\"飘动\",{\"1\":{\"97\":1}}],[\"鼠标\",{\"1\":{\"97\":1}}],[\"彩带\",{\"0\":{\"97\":1},\"1\":{\"97\":1}}],[\"秒\",{\"1\":{\"96\":1}}],[\"天\",{\"1\":{\"96\":1}}],[\"天数\",{\"1\":{\"96\":1}}],[\"载入\",{\"1\":{\"96\":2}}],[\"载体\",{\"1\":{\"6\":2}}],[\"脚本\",{\"1\":{\"96\":2,\"172\":4}}],[\"喜欢\",{\"1\":{\"95\":1,\"240\":1}}],[\"线性表\",{\"1\":{\"279\":1,\"281\":2,\"290\":6}}],[\"线性\",{\"1\":{\"250\":2,\"251\":1,\"272\":2}}],[\"线\",{\"1\":{\"186\":1}}],[\"线条\",{\"0\":{\"95\":1},\"1\":{\"95\":2}}],[\"线程\",{\"0\":{\"0\":1,\"1\":1},\"1\":{\"0\":4,\"1\":4,\"2\":3,\"3\":2,\"4\":4,\"5\":5,\"6\":3}}],[\"背景\",{\"0\":{\"95\":1,\"97\":1},\"1\":{\"95\":1}}],[\"背景音乐\",{\"1\":{\"83\":1}}],[\"\\\\\",{\"1\":{\"94\":2,\"143\":12,\"144\":1,\"269\":2}}],[\"清为\",{\"1\":{\"262\":1}}],[\"清单\",{\"1\":{\"134\":1}}],[\"清华\",{\"1\":{\"125\":1}}],[\"清楚\",{\"1\":{\"105\":1}}],[\"清空\",{\"1\":{\"94\":1,\"288\":1}}],[\"清晰\",{\"1\":{\"1\":1}}],[\"渲染\",{\"1\":{\"94\":1}}],[\"边界\",{\"1\":{\"94\":2}}],[\"飞出\",{\"1\":{\"94\":2}}],[\"摆动\",{\"1\":{\"94\":1}}],[\"步\",{\"1\":{\"116\":1}}],[\"步数\",{\"1\":{\"94\":1}}],[\"步长\",{\"1\":{\"94\":1}}],[\"步骤\",{\"1\":{\"32\":1,\"79\":1,\"99\":1,\"118\":1,\"119\":1,\"218\":1}}],[\"坐标\",{\"1\":{\"94\":2}}],[\"雪\",{\"1\":{\"94\":1}}],[\"雪花\",{\"0\":{\"94\":1},\"1\":{\"94\":12}}],[\"画用\",{\"1\":{\"197\":1}}],[\"画类\",{\"1\":{\"197\":1}}],[\"画\",{\"1\":{\"94\":1}}],[\"画雪\",{\"1\":{\"94\":2}}],[\"画布\",{\"1\":{\"94\":2}}],[\"速度\",{\"1\":{\"94\":5,\"134\":1,\"212\":1,\"215\":1}}],[\"坠落\",{\"1\":{\"94\":4}}],[\"形象\",{\"1\":{\"264\":1}}],[\"形参值\",{\"1\":{\"295\":1,\"296\":1}}],[\"形参\",{\"1\":{\"237\":2,\"246\":2,\"295\":1,\"296\":1}}],[\"形\",{\"1\":{\"237\":1}}],[\"形成\",{\"1\":{\"237\":1}}],[\"形状\",{\"1\":{\"94\":6}}],[\"形式\",{\"1\":{\"41\":1,\"55\":1,\"237\":1}}],[\"属性\",{\"1\":{\"94\":1,\"143\":1,\"179\":3,\"185\":1,\"186\":1,\"187\":2,\"241\":2,\"276\":1}}],[\"属于\",{\"1\":{\"69\":1,\"237\":1,\"272\":1}}],[\"尺寸\",{\"1\":{\"94\":2}}],[\"白色\",{\"1\":{\"94\":2}}],[\"颜色代码\",{\"1\":{\"94\":1}}],[\"颜色\",{\"1\":{\"94\":4,\"95\":1}}],[\"样式\",{\"1\":{\"94\":6,\"97\":3}}],[\"样子\",{\"1\":{\"81\":1}}],[\"什么\",{\"0\":{\"239\":1},\"1\":{\"93\":1}}],[\"告诉\",{\"1\":{\"93\":1,\"232\":1,\"243\":1,\"244\":1}}],[\"告知\",{\"1\":{\"5\":1,\"86\":2}}],[\"流程图\",{\"0\":{\"164\":1}}],[\"流量\",{\"1\":{\"93\":1}}],[\"流行\",{\"1\":{\"69\":1}}],[\"专业\",{\"1\":{\"93\":1}}],[\"专辑\",{\"1\":{\"87\":6}}],[\"免费\",{\"1\":{\"93\":1,\"100\":1}}],[\"生物\",{\"1\":{\"241\":2,\"242\":2,\"245\":2}}],[\"生日\",{\"1\":{\"241\":1,\"242\":1}}],[\"生产\",{\"1\":{\"201\":1}}],[\"生效\",{\"1\":{\"91\":1,\"172\":1,\"176\":1}}],[\"生成\",{\"1\":{\"41\":1,\"50\":1,\"70\":2,\"74\":1,\"99\":1,\"105\":1,\"106\":1,\"111\":1,\"135\":2,\"136\":1,\"139\":1,\"144\":2,\"191\":1,\"208\":1,\"215\":1,\"219\":1,\"221\":1,\"237\":1,\"241\":5,\"242\":2}}],[\"生成器\",{\"1\":{\"15\":1}}],[\"爆炸\",{\"1\":{\"91\":1}}],[\"烟花\",{\"0\":{\"91\":1},\"1\":{\"91\":1}}],[\"诚信\",{\"1\":{\"90\":1}}],[\"敬业\",{\"1\":{\"90\":1}}],[\"爱国\",{\"1\":{\"90\":1}}],[\"爱心\",{\"0\":{\"89\":1}}],[\"法治\",{\"1\":{\"90\":1}}],[\"法子\",{\"1\":{\"1\":1}}],[\"公有\",{\"1\":{\"245\":7}}],[\"公共\",{\"1\":{\"237\":3}}],[\"公司\",{\"1\":{\"116\":1}}],[\"公开\",{\"1\":{\"112\":1,\"239\":1,\"240\":1}}],[\"公正\",{\"1\":{\"90\":1}}],[\"公钥\",{\"1\":{\"30\":1,\"41\":1,\"232\":1}}],[\"民主\",{\"1\":{\"90\":1}}],[\"富强\",{\"1\":{\"90\":1}}],[\"$\",{\"1\":{\"90\":10,\"94\":11,\"168\":1}}],[\"盗图\",{\"1\":{\"94\":1}}],[\"盗\",{\"1\":{\"89\":1,\"90\":1,\"91\":1}}],[\"红心\",{\"1\":{\"89\":1}}],[\"部署\",{\"0\":{\"105\":1,\"115\":1},\"1\":{\"106\":2,\"115\":2}}],[\"部件\",{\"1\":{\"87\":2,\"110\":1}}],[\"部分\",{\"1\":{\"37\":1,\"77\":1,\"96\":4,\"171\":1,\"176\":1,\"179\":1,\"189\":2,\"190\":2,\"209\":1,\"260\":1,\"262\":1,\"281\":1}}],[\"布局\",{\"1\":{\"87\":3,\"210\":1}}],[\"栏小\",{\"1\":{\"110\":1}}],[\"栏\",{\"0\":{\"113\":1},\"1\":{\"87\":3,\"113\":2}}],[\"侧边\",{\"1\":{\"87\":3,\"110\":1}}],[\"听\",{\"1\":{\"87\":1}}],[\"听过\",{\"1\":{\"1\":1}}],[\"音量\",{\"1\":{\"87\":1}}],[\"音乐\",{\"1\":{\"87\":7,\"168\":1,\"177\":1}}],[\"歌曲\",{\"1\":{\"87\":3}}],[\"歌单\",{\"1\":{\"87\":6}}],[\"搜索\",{\"1\":{\"87\":3,\"112\":1,\"134\":3}}],[\"狗\",{\"1\":{\"87\":3}}],[\"酷\",{\"1\":{\"87\":3}}],[\"虾米\",{\"1\":{\"87\":3}}],[\"云\",{\"1\":{\"87\":3,\"168\":1,\"177\":1}}],[\"循环\",{\"1\":{\"87\":1,\"258\":2,\"261\":1,\"264\":3,\"268\":1,\"269\":1,\"278\":1,\"281\":1}}],[\"色\",{\"1\":{\"87\":1}}],[\"里面\",{\"1\":{\"277\":1}}],[\"里\",{\"1\":{\"87\":1,\"240\":1}}],[\"控件\",{\"1\":{\"87\":1}}],[\"控制符\",{\"1\":{\"240\":1}}],[\"控制中心\",{\"1\":{\"173\":1}}],[\"控制\",{\"1\":{\"94\":2,\"237\":1}}],[\"控制台\",{\"1\":{\"85\":2}}],[\"控制器\",{\"1\":{\"77\":1}}],[\"互动\",{\"1\":{\"86\":1}}],[\"便于\",{\"1\":{\"86\":1}}],[\"排列\",{\"1\":{\"281\":1}}],[\"排在\",{\"1\":{\"281\":1}}],[\"排队\",{\"1\":{\"281\":1}}],[\"排序\",{\"1\":{\"86\":1}}],[\"排版\",{\"0\":{\"191\":1},\"1\":{\"13\":1,\"100\":2,\"191\":2}}],[\"名是\",{\"1\":{\"114\":1,\"246\":1}}],[\"名字\",{\"1\":{\"101\":2}}],[\"名\",{\"1\":{\"86\":3,\"237\":1,\"245\":2,\"246\":1}}],[\"名称\",{\"1\":{\"39\":1,\"77\":1,\"86\":1,\"108\":1,\"111\":1,\"112\":2,\"237\":2,\"241\":1,\"244\":1,\"246\":2}}],[\"跳出\",{\"1\":{\"237\":1}}],[\"跳转\",{\"1\":{\"86\":1,\"119\":1}}],[\"跳过\",{\"1\":{\"77\":1}}],[\"描述\",{\"1\":{\"86\":1,\"264\":1}}],[\"站点\",{\"0\":{\"108\":1},\"1\":{\"86\":1,\"93\":1,\"98\":2,\"105\":2,\"108\":2,\"109\":1}}],[\"我们\",{\"1\":{\"242\":2,\"243\":1,\"245\":1}}],[\"我\",{\"1\":{\"86\":1,\"112\":1,\"246\":1,\"260\":1}}],[\"填写\",{\"1\":{\"86\":2}}],[\"填充\",{\"0\":{\"36\":1},\"1\":{\"36\":4,\"37\":10,\"38\":1,\"39\":1,\"40\":1}}],[\"亦\",{\"1\":{\"86\":1}}],[\"登录\",{\"1\":{\"86\":1,\"139\":2,\"166\":1,\"167\":1,\"171\":1,\"176\":1}}],[\"账户\",{\"1\":{\"86\":2,\"93\":1,\"101\":1,\"136\":1,\"138\":1,\"139\":1,\"166\":1}}],[\"访客\",{\"1\":{\"86\":1,\"93\":1}}],[\"访问队\",{\"0\":{\"286\":1},\"1\":{\"281\":1}}],[\"访问控制\",{\"1\":{\"240\":2}}],[\"访问\",{\"0\":{\"262\":1,\"295\":1},\"1\":{\"78\":1,\"86\":1,\"93\":1,\"101\":1,\"104\":2,\"115\":1,\"116\":1,\"179\":1,\"197\":1,\"237\":12,\"240\":1,\"245\":6,\"255\":2,\"256\":2,\"257\":2,\"258\":2,\"259\":1,\"260\":12,\"261\":5,\"262\":3,\"264\":2,\"272\":1,\"286\":1,\"290\":4}}],[\"效果\",{\"0\":{\"88\":1,\"94\":1},\"1\":{\"85\":1,\"89\":1,\"90\":1,\"91\":2,\"92\":1,\"94\":1,\"96\":1,\"171\":1,\"176\":1,\"191\":1,\"219\":1,\"245\":1}}],[\"效率\",{\"1\":{\"0\":1,\"22\":1,\"30\":1,\"31\":1,\"41\":1}}],[\"界面\",{\"1\":{\"85\":1,\"86\":1,\"124\":1,\"166\":1,\"167\":1,\"176\":1}}],[\"吧\",{\"1\":{\"85\":1,\"112\":1,\"166\":1}}],[\"快捷键\",{\"0\":{\"218\":1},\"1\":{\"142\":1,\"218\":3}}],[\"快捷方式\",{\"0\":{\"227\":1},\"1\":{\"119\":1}}],[\"快\",{\"1\":{\"99\":1}}],[\"快来\",{\"1\":{\"85\":1}}],[\"快速\",{\"1\":{\"13\":1,\"14\":1,\"19\":1,\"100\":1}}],[\"根\",{\"1\":{\"130\":1,\"131\":2,\"132\":1,\"133\":1,\"253\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":2,\"260\":2,\"261\":1}}],[\"根目录\",{\"1\":{\"85\":1,\"92\":1}}],[\"根据\",{\"1\":{\"17\":1,\"21\":1,\"24\":2,\"74\":2,\"126\":2,\"133\":1,\"243\":1,\"245\":1,\"259\":1,\"262\":1,\"264\":4,\"268\":1,\"269\":1,\"272\":5,\"277\":1,\"278\":1,\"290\":2}}],[\"表里\",{\"1\":{\"276\":1}}],[\"表为\",{\"1\":{\"276\":1}}],[\"表适\",{\"1\":{\"273\":1}}],[\"表中\",{\"1\":{\"267\":1,\"273\":3,\"277\":1,\"279\":2}}],[\"表到\",{\"1\":{\"250\":1}}],[\"表达\",{\"1\":{\"185\":1}}],[\"表格\",{\"0\":{\"156\":1}}],[\"表\",{\"0\":{\"272\":1,\"275\":1,\"276\":1,\"279\":1},\"1\":{\"128\":1,\"250\":3,\"264\":3,\"268\":1,\"270\":1,\"272\":6,\"275\":2,\"276\":3,\"277\":6,\"278\":2,\"279\":8,\"281\":1,\"290\":4,\"291\":2,\"297\":2},\"2\":{\"280\":1}}],[\"表情\",{\"1\":{\"85\":1}}],[\"表示\",{\"0\":{\"179\":1},\"1\":{\"1\":4,\"5\":2,\"6\":1,\"17\":8,\"19\":4,\"20\":2,\"21\":2,\"24\":9,\"38\":2,\"39\":4,\"106\":2,\"168\":1,\"179\":3,\"181\":2,\"182\":2,\"183\":2,\"184\":2,\"186\":3,\"187\":2,\"189\":5,\"190\":4,\"209\":1,\"254\":2,\"260\":1,\"268\":3,\"269\":1,\"276\":4,\"278\":1,\"285\":1,\"297\":2}}],[\"贴吧\",{\"1\":{\"85\":1}}],[\"增加\",{\"1\":{\"85\":1,\"119\":1}}],[\"匿名\",{\"1\":{\"85\":1}}],[\"禁止\",{\"1\":{\"85\":1}}],[\"想要\",{\"1\":{\"243\":1}}],[\"想\",{\"1\":{\"85\":1,\"112\":1,\"247\":1,\"248\":1}}],[\"点子\",{\"1\":{\"261\":2}}],[\"点\",{\"1\":{\"130\":3,\"131\":4,\"243\":1}}],[\"点开\",{\"1\":{\"85\":1}}],[\"点击\",{\"0\":{\"88\":1,\"89\":1,\"90\":1,\"91\":1},\"1\":{\"79\":1,\"81\":1,\"83\":1,\"89\":1,\"97\":1,\"113\":1,\"119\":1,\"143\":2,\"178\":1,\"217\":1}}],[\"浏览\",{\"1\":{\"83\":1,\"93\":1}}],[\"浏览器\",{\"0\":{\"169\":1},\"1\":{\"77\":1,\"169\":2,\"170\":1,\"171\":3}}],[\"本人\",{\"1\":{\"257\":1}}],[\"本机\",{\"1\":{\"176\":1}}],[\"本站\",{\"1\":{\"96\":1}}],[\"本文\",{\"1\":{\"83\":1,\"99\":2,\"178\":1}}],[\"本地化\",{\"0\":{\"139\":1},\"1\":{\"139\":1}}],[\"本地\",{\"1\":{\"50\":2,\"58\":1,\"60\":1,\"64\":1}}],[\"友元类\",{\"1\":{\"237\":1}}],[\"友元\",{\"1\":{\"237\":17,\"245\":1}}],[\"友链\",{\"1\":{\"112\":2}}],[\"友善\",{\"1\":{\"90\":1}}],[\"友情\",{\"1\":{\"83\":1}}],[\"友好\",{\"1\":{\"10\":1}}],[\"皆\",{\"1\":{\"83\":1,\"106\":1}}],[\"特点\",{\"1\":{\"272\":1}}],[\"特定\",{\"1\":{\"272\":1}}],[\"特性\",{\"1\":{\"246\":1,\"250\":2,\"261\":1,\"272\":1,\"273\":1,\"281\":1,\"290\":1}}],[\"特征\",{\"1\":{\"237\":1,\"245\":1,\"272\":1}}],[\"特效\",{\"1\":{\"83\":1,\"94\":1}}],[\"特殊\",{\"1\":{\"79\":1,\"103\":1,\"237\":2,\"244\":1,\"246\":1,\"250\":1,\"260\":1,\"281\":1}}],[\"及时\",{\"1\":{\"91\":1}}],[\"及\",{\"1\":{\"83\":1,\"94\":1,\"128\":1,\"208\":1}}],[\"及其\",{\"1\":{\"19\":1,\"28\":1,\"70\":1,\"237\":1}}],[\"篇幅\",{\"1\":{\"83\":1}}],[\"篇\",{\"1\":{\"83\":1}}],[\"篇文章\",{\"1\":{\"69\":1}}],[\"建立\",{\"1\":{\"112\":3,\"113\":3,\"133\":1}}],[\"建站\",{\"0\":{\"83\":1,\"99\":1},\"1\":{\"83\":1,\"96\":1,\"99\":2,\"100\":2}}],[\"建议\",{\"0\":{\"129\":1},\"1\":{\"6\":1,\"10\":1,\"12\":1,\"30\":1,\"37\":1,\"41\":2,\"51\":1,\"79\":1,\"83\":1,\"100\":2,\"119\":2,\"124\":2,\"125\":1,\"126\":2,\"128\":1,\"133\":1,\"176\":1,\"201\":1,\"205\":1,\"206\":1,\"208\":2,\"281\":1}}],[\"零到\",{\"1\":{\"223\":1}}],[\"零\",{\"0\":{\"207\":1},\"1\":{\"81\":1}}],[\"认识\",{\"1\":{\"81\":1}}],[\"认为\",{\"1\":{\"74\":1,\"116\":1}}],[\"深刻\",{\"1\":{\"81\":1}}],[\"深入\",{\"1\":{\"37\":1}}],[\"起来\",{\"1\":{\"81\":1,\"241\":1}}],[\"框下\",{\"1\":{\"112\":1}}],[\"框中\",{\"1\":{\"81\":1}}],[\"框架\",{\"1\":{\"8\":1,\"14\":1,\"176\":1}}],[\"联网\",{\"1\":{\"127\":3}}],[\"联上\",{\"1\":{\"79\":1}}],[\"联想\",{\"1\":{\"69\":1,\"244\":1}}],[\"系列\",{\"1\":{\"79\":1}}],[\"系统盘\",{\"1\":{\"167\":1}}],[\"系统文件\",{\"0\":{\"135\":1},\"1\":{\"134\":1}}],[\"系统启动\",{\"1\":{\"126\":1}}],[\"系统\",{\"0\":{\"127\":1,\"136\":1},\"1\":{\"0\":1,\"1\":2,\"77\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1,\"124\":1,\"125\":1,\"126\":2,\"128\":1,\"131\":1,\"132\":1,\"133\":1,\"136\":3,\"139\":3,\"143\":4,\"166\":3,\"167\":2,\"267\":1,\"275\":1}}],[\"遇见\",{\"1\":{\"79\":1}}],[\"遇到\",{\"1\":{\"1\":1,\"10\":1,\"36\":1,\"64\":1,\"77\":1,\"281\":1}}],[\"终止\",{\"1\":{\"79\":1}}],[\"终端\",{\"0\":{\"172\":1},\"1\":{\"41\":1,\"128\":1,\"142\":2,\"143\":1,\"167\":2}}],[\"恶心\",{\"1\":{\"79\":1}}],[\"允许\",{\"1\":{\"79\":1,\"128\":1,\"201\":2,\"246\":1}}],[\"底部\",{\"1\":{\"79\":1,\"85\":1,\"96\":1}}],[\"勾选\",{\"1\":{\"79\":1}}],[\"授权\",{\"1\":{\"79\":1,\"86\":6}}],[\"窗口\",{\"1\":{\"79\":1,\"94\":1,\"171\":1}}],[\"弹出\",{\"0\":{\"89\":1,\"90\":1},\"1\":{\"79\":1,\"81\":1,\"128\":1}}],[\"菜单\",{\"0\":{\"112\":1},\"1\":{\"79\":1,\"112\":2,\"113\":1}}],[\"找\",{\"1\":{\"94\":1,\"176\":2,\"278\":1}}],[\"找到\",{\"1\":{\"79\":1,\"93\":1,\"134\":1,\"172\":1,\"268\":3,\"269\":7,\"278\":3}}],[\"找出\",{\"1\":{\"21\":1}}],[\"回车\",{\"1\":{\"134\":1,\"135\":1}}],[\"回复\",{\"1\":{\"86\":1}}],[\"回到\",{\"1\":{\"79\":1,\"134\":1,\"242\":1}}],[\"回答\",{\"1\":{\"16\":1}}],[\"开头\",{\"1\":{\"237\":1}}],[\"开箱\",{\"0\":{\"223\":1},\"1\":{\"223\":1}}],[\"开机\",{\"1\":{\"124\":1,\"125\":1,\"139\":1}}],[\"开源\",{\"1\":{\"100\":2}}],[\"开关\",{\"1\":{\"79\":1}}],[\"开始\",{\"1\":{\"79\":1,\"94\":1,\"116\":1,\"119\":1,\"166\":1,\"264\":1,\"269\":2,\"279\":1}}],[\"开发人员\",{\"1\":{\"237\":1}}],[\"开发者\",{\"0\":{\"79\":1},\"1\":{\"54\":1,\"78\":3,\"79\":5}}],[\"开发\",{\"1\":{\"0\":1,\"116\":5,\"138\":1,\"215\":1}}],[\"直连\",{\"1\":{\"125\":1}}],[\"直到\",{\"1\":{\"99\":1}}],[\"直至\",{\"1\":{\"79\":1}}],[\"直接\",{\"1\":{\"3\":1,\"11\":1,\"30\":1,\"70\":1,\"86\":2,\"101\":1,\"106\":2,\"128\":2,\"139\":1,\"237\":2,\"245\":1,\"259\":2,\"260\":1,\"264\":1,\"272\":1}}],[\"反复\",{\"1\":{\"79\":1}}],[\"反馈\",{\"0\":{\"34\":1,\"35\":1}}],[\"放置\",{\"1\":{\"94\":1,\"98\":1}}],[\"放心\",{\"1\":{\"78\":1}}],[\"放在\",{\"1\":{\"2\":1,\"93\":1,\"96\":2,\"202\":1,\"204\":2,\"268\":1}}],[\"们\",{\"1\":{\"78\":1,\"112\":1,\"212\":2}}],[\"品牌手机\",{\"1\":{\"78\":1}}],[\"帮助\",{\"1\":{\"78\":1,\"212\":2}}],[\"软件开发\",{\"1\":{\"241\":1}}],[\"软件\",{\"1\":{\"78\":2,\"191\":1}}],[\"助手\",{\"1\":{\"78\":2}}],[\"豌豆荚\",{\"1\":{\"78\":1}}],[\"强转\",{\"1\":{\"242\":3}}],[\"强\",{\"1\":{\"189\":1,\"242\":2}}],[\"强烈推荐\",{\"1\":{\"78\":1}}],[\"强制\",{\"1\":{\"44\":1,\"242\":1}}],[\"曾经\",{\"1\":{\"78\":1}}],[\"笔者\",{\"1\":{\"78\":1,\"216\":1}}],[\"头文件\",{\"1\":{\"144\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"头像\",{\"1\":{\"112\":2}}],[\"头\",{\"0\":{\"267\":1},\"1\":{\"78\":1,\"262\":1,\"264\":1,\"267\":2,\"268\":4,\"269\":1,\"270\":2,\"282\":1,\"286\":2,\"288\":1,\"290\":2}}],[\"让\",{\"1\":{\"78\":1,\"244\":2}}],[\"地\",{\"1\":{\"244\":1,\"245\":1}}],[\"地方\",{\"1\":{\"78\":1}}],[\"地址\",{\"1\":{\"11\":1,\"12\":1,\"60\":1,\"77\":1,\"86\":2,\"98\":1,\"101\":2,\"104\":2,\"115\":2,\"121\":1,\"125\":2,\"126\":1,\"134\":1,\"172\":1,\"216\":1,\"219\":1,\"237\":2,\"262\":1,\"264\":1,\"273\":3,\"279\":1,\"291\":1,\"293\":1,\"297\":1}}],[\"你们\",{\"1\":{\"212\":1}}],[\"你\",{\"1\":{\"78\":5,\"85\":5,\"86\":5,\"93\":2,\"96\":1,\"101\":2,\"240\":1}}],[\"连个\",{\"1\":{\"282\":1}}],[\"连不上\",{\"1\":{\"79\":1}}],[\"连接\",{\"0\":{\"78\":1},\"1\":{\"78\":1,\"125\":2,\"127\":1}}],[\"连续\",{\"1\":{\"39\":2,\"272\":1,\"293\":1}}],[\"处\",{\"1\":{\"77\":1,\"237\":2}}],[\"处理\",{\"1\":{\"25\":2,\"39\":1,\"94\":2,\"113\":1,\"237\":1,\"248\":1}}],[\"库\",{\"0\":{\"211\":1},\"1\":{\"77\":1,\"171\":1}}],[\"初始值\",{\"1\":{\"237\":1}}],[\"初始化\",{\"0\":{\"106\":1,\"276\":1,\"293\":1},\"1\":{\"4\":4,\"33\":1,\"37\":2,\"39\":1,\"237\":4,\"245\":1,\"276\":4,\"279\":1,\"284\":1,\"293\":2}}],[\"初学者\",{\"1\":{\"99\":1,\"212\":2}}],[\"初次\",{\"1\":{\"77\":1}}],[\"修饰\",{\"1\":{\"237\":2}}],[\"修饰符\",{\"1\":{\"179\":1,\"237\":2,\"245\":2}}],[\"修该\",{\"1\":{\"77\":1}}],[\"修改\",{\"0\":{\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"134\":1},\"1\":{\"50\":1,\"55\":1,\"64\":2,\"91\":1,\"92\":1,\"94\":1,\"96\":2,\"106\":2,\"108\":3,\"109\":2,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"115\":1,\"128\":2,\"134\":1,\"139\":1,\"143\":1,\"172\":2,\"206\":1,\"208\":1,\"221\":1,\"224\":1,\"240\":1,\"241\":2,\"242\":2,\"260\":1,\"262\":1,\"273\":1,\"278\":2,\"288\":2}}],[\"除头\",{\"1\":{\"270\":1}}],[\"除外\",{\"1\":{\"245\":1}}],[\"除非\",{\"1\":{\"77\":1,\"242\":1,\"244\":1}}],[\"除了\",{\"1\":{\"13\":1,\"272\":1}}],[\"自定\",{\"1\":{\"262\":1}}],[\"自定义\",{\"0\":{\"162\":1},\"1\":{\"87\":1,\"119\":1}}],[\"自顶向下\",{\"1\":{\"261\":1}}],[\"自私\",{\"1\":{\"245\":1}}],[\"自然\",{\"1\":{\"243\":1}}],[\"自身\",{\"1\":{\"188\":1,\"279\":1}}],[\"自\",{\"0\":{\"188\":1},\"1\":{\"241\":1,\"242\":1,\"245\":4}}],[\"自在\",{\"1\":{\"173\":1}}],[\"自带\",{\"1\":{\"171\":1,\"212\":1}}],[\"自由\",{\"1\":{\"90\":1,\"240\":1}}],[\"自行\",{\"1\":{\"78\":2,\"94\":1,\"237\":3,\"242\":1,\"250\":1,\"257\":1}}],[\"自动播放\",{\"1\":{\"87\":1}}],[\"自动\",{\"1\":{\"77\":1,\"79\":1,\"191\":1,\"208\":1,\"237\":4}}],[\"自己\",{\"1\":{\"54\":1,\"79\":1,\"90\":1,\"101\":1,\"115\":1,\"124\":1,\"237\":2,\"245\":4,\"275\":1}}],[\"手札\",{\"0\":{\"83\":1,\"99\":1}}],[\"手动\",{\"1\":{\"77\":1,\"144\":1,\"172\":1,\"204\":1,\"237\":2,\"258\":1,\"275\":1,\"279\":1}}],[\"手机\",{\"0\":{\"78\":1},\"1\":{\"77\":1,\"78\":4,\"79\":9,\"113\":1}}],[\"串\",{\"1\":{\"77\":1}}],[\"迅雷\",{\"1\":{\"77\":1}}],[\"久\",{\"1\":{\"77\":1,\"257\":1}}],[\"正在\",{\"1\":{\"77\":1}}],[\"正确性\",{\"1\":{\"37\":1}}],[\"正确\",{\"1\":{\"26\":2,\"77\":1,\"81\":1,\"106\":1,\"119\":1,\"128\":1,\"134\":1,\"242\":4,\"243\":1,\"247\":1,\"269\":1,\"278\":1}}],[\"组\",{\"0\":{\"224\":1},\"1\":{\"224\":1}}],[\"组成\",{\"1\":{\"179\":1}}],[\"组合\",{\"0\":{\"190\":1},\"1\":{\"128\":1,\"190\":1}}],[\"组合成\",{\"1\":{\"21\":1}}],[\"组件\",{\"1\":{\"77\":1,\"119\":1,\"135\":1,\"166\":2,\"167\":2,\"171\":1}}],[\"完\",{\"1\":{\"261\":1}}],[\"完美\",{\"1\":{\"260\":1}}],[\"完全\",{\"1\":{\"244\":1}}],[\"完善\",{\"1\":{\"167\":1}}],[\"完后\",{\"1\":{\"101\":1}}],[\"完成\",{\"1\":{\"77\":1,\"85\":1,\"93\":1,\"106\":2,\"126\":1,\"139\":1,\"172\":1,\"176\":1,\"209\":1}}],[\"完整性\",{\"1\":{\"260\":1}}],[\"完整版\",{\"1\":{\"237\":1}}],[\"完整\",{\"1\":{\"17\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"37\":1,\"70\":1}}],[\"兼容\",{\"1\":{\"77\":1,\"94\":1,\"124\":1}}],[\"兼容性\",{\"1\":{\"10\":1}}],[\"选用\",{\"1\":{\"246\":1}}],[\"选中\",{\"1\":{\"128\":1,\"171\":2,\"217\":1}}],[\"选项\",{\"1\":{\"78\":1,\"79\":3}}],[\"选\",{\"1\":{\"77\":1,\"130\":2,\"131\":2}}],[\"选择性\",{\"1\":{\"83\":1}}],[\"选择\",{\"1\":{\"11\":1,\"12\":2,\"77\":2,\"81\":1,\"125\":1,\"126\":2,\"128\":4,\"143\":1,\"200\":2,\"220\":1,\"232\":1,\"243\":1,\"246\":1}}],[\"好用\",{\"1\":{\"216\":1}}],[\"好看\",{\"1\":{\"171\":1}}],[\"好处\",{\"0\":{\"241\":1},\"1\":{\"86\":1}}],[\"好\",{\"1\":{\"77\":1,\"78\":1,\"81\":1,\"105\":1,\"106\":2,\"125\":1,\"166\":1,\"167\":1,\"212\":1,\"218\":1,\"242\":2,\"260\":1,\"282\":1,\"288\":1}}],[\"阶段\",{\"1\":{\"77\":1}}],[\"电脑\",{\"1\":{\"78\":2,\"79\":2,\"113\":2,\"119\":1,\"126\":4,\"136\":1,\"176\":1}}],[\"电视\",{\"1\":{\"77\":1}}],[\"电子\",{\"0\":{\"32\":1}}],[\"穿戴\",{\"1\":{\"77\":1}}],[\"平等\",{\"1\":{\"90\":1}}],[\"平板\",{\"1\":{\"77\":1}}],[\"平台\",{\"1\":{\"8\":1,\"77\":1,\"99\":1,\"100\":3,\"116\":1}}],[\"导图\",{\"0\":{\"163\":1}}],[\"导致系统\",{\"1\":{\"166\":1}}],[\"导致\",{\"1\":{\"128\":1,\"244\":2}}],[\"导航\",{\"0\":{\"113\":1},\"1\":{\"113\":2}}],[\"导入\",{\"1\":{\"77\":2}}],[\"导出\",{\"1\":{\"77\":1,\"232\":1}}],[\"调降\",{\"1\":{\"208\":1}}],[\"调试\",{\"1\":{\"77\":1,\"78\":1,\"79\":6}}],[\"调用函数\",{\"1\":{\"237\":1}}],[\"调用\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"6\":1,\"94\":1,\"184\":1,\"237\":24,\"241\":1,\"242\":13,\"243\":5,\"244\":1,\"245\":10,\"246\":1}}],[\"从左到右\",{\"1\":{\"261\":1}}],[\"从\",{\"0\":{\"207\":1},\"1\":{\"77\":2,\"81\":1,\"116\":1,\"125\":1,\"223\":1,\"237\":2,\"250\":2,\"264\":1,\"268\":2,\"269\":2,\"279\":1}}],[\"新创建\",{\"1\":{\"237\":2}}],[\"新页面\",{\"1\":{\"217\":1}}],[\"新增\",{\"1\":{\"93\":1,\"224\":1,\"273\":1,\"277\":1}}],[\"新建\",{\"0\":{\"208\":1,\"209\":1,\"211\":1},\"1\":{\"77\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"106\":1,\"126\":1,\"128\":1,\"143\":2,\"208\":2,\"209\":4,\"210\":1,\"211\":1,\"245\":2}}],[\"新\",{\"1\":{\"77\":2,\"86\":2,\"128\":1,\"139\":1,\"168\":1,\"237\":1,\"245\":2,\"268\":1,\"277\":1,\"288\":1,\"297\":1}}],[\"新手\",{\"1\":{\"7\":1}}],[\"首\",{\"0\":{\"286\":1},\"1\":{\"273\":1,\"281\":1,\"282\":1}}],[\"首先\",{\"1\":{\"85\":1,\"86\":1,\"167\":1,\"237\":1,\"245\":1,\"258\":1,\"259\":1,\"269\":1}}],[\"首页\",{\"1\":{\"77\":1,\"93\":1,\"170\":1}}],[\"首字母\",{\"1\":{\"41\":1,\"69\":1,\"138\":1}}],[\"打到\",{\"1\":{\"281\":1}}],[\"打饭\",{\"1\":{\"281\":2}}],[\"打包\",{\"1\":{\"167\":1,\"200\":2}}],[\"打开\",{\"0\":{\"79\":1},\"1\":{\"77\":2,\"78\":3,\"79\":3,\"119\":1,\"126\":1,\"139\":1,\"143\":1,\"168\":1,\"170\":1,\"171\":2,\"172\":1,\"208\":1,\"217\":1}}],[\"打上\",{\"1\":{\"67\":1}}],[\"工具\",{\"1\":{\"77\":1,\"93\":1,\"99\":1,\"106\":1,\"125\":1,\"171\":2,\"177\":1,\"200\":1,\"203\":1,\"206\":1,\"215\":1,\"216\":1,\"217\":1}}],[\"工程\",{\"0\":{\"76\":1,\"77\":1,\"81\":1,\"207\":1,\"208\":1},\"1\":{\"77\":8,\"81\":3,\"83\":1,\"119\":1,\"208\":1,\"209\":3,\"212\":2}}],[\"工作\",{\"0\":{\"8\":1,\"100\":1},\"1\":{\"44\":1,\"51\":1,\"54\":2,\"64\":3,\"99\":1}}],[\"篡改\",{\"1\":{\"72\":1,\"73\":1}}],[\"内联\",{\"1\":{\"237\":8}}],[\"内部\",{\"1\":{\"237\":8}}],[\"内\",{\"1\":{\"87\":2,\"246\":1}}],[\"内核\",{\"1\":{\"78\":1,\"135\":1}}],[\"内存空间\",{\"1\":{\"275\":1}}],[\"内存大小\",{\"1\":{\"126\":2}}],[\"内存\",{\"1\":{\"70\":1,\"126\":1,\"131\":1,\"206\":1,\"237\":2,\"264\":2,\"267\":1,\"270\":1,\"272\":3,\"275\":2,\"276\":1,\"279\":1,\"293\":1}}],[\"内容\",{\"1\":{\"1\":1,\"8\":1,\"13\":1,\"19\":1,\"36\":1,\"50\":1,\"83\":1,\"85\":2,\"92\":2,\"98\":1,\"112\":3,\"113\":2,\"143\":1,\"172\":2,\"208\":1,\"209\":2,\"210\":3,\"221\":1,\"244\":1}}],[\"至此\",{\"1\":{\"139\":1,\"176\":1}}],[\"至今\",{\"1\":{\"99\":1}}],[\"至少\",{\"1\":{\"86\":1,\"112\":1,\"128\":1}}],[\"至于\",{\"1\":{\"78\":1}}],[\"至\",{\"1\":{\"70\":1,\"105\":1,\"113\":1}}],[\"代替\",{\"1\":{\"268\":1}}],[\"代理\",{\"1\":{\"70\":1,\"116\":1}}],[\"代码段\",{\"1\":{\"272\":1}}],[\"代码运行\",{\"1\":{\"2\":1}}],[\"代码\",{\"0\":{\"21\":1,\"25\":1,\"37\":1,\"70\":1,\"151\":1},\"1\":{\"1\":4,\"2\":2,\"3\":1,\"4\":3,\"5\":1,\"22\":1,\"30\":1,\"36\":1,\"37\":1,\"40\":1,\"41\":1,\"50\":1,\"54\":2,\"60\":1,\"77\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":5,\"94\":1,\"96\":1,\"100\":1,\"116\":1,\"211\":1,\"237\":1,\"239\":1,\"240\":3,\"241\":2,\"245\":2,\"246\":1,\"257\":1,\"260\":1,\"262\":1,\"265\":1,\"275\":1}}],[\"代码执行\",{\"0\":{\"1\":1}}],[\"讲到\",{\"1\":{\"83\":1,\"116\":1}}],[\"讲\",{\"1\":{\"69\":1}}],[\"讲究\",{\"1\":{\"4\":1}}],[\"透彻\",{\"1\":{\"69\":1}}],[\"研究\",{\"1\":{\"69\":1,\"99\":1}}],[\"月\",{\"1\":{\"69\":1,\"99\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"于\",{\"1\":{\"69\":1,\"83\":1,\"99\":1,\"101\":1,\"184\":1,\"189\":1,\"190\":1,\"242\":2,\"264\":1,\"273\":1}}],[\"散列\",{\"1\":{\"69\":1,\"74\":1}}],[\"安卓\",{\"1\":{\"119\":1,\"167\":1}}],[\"安全\",{\"1\":{\"69\":1,\"96\":1,\"241\":1}}],[\"安装包\",{\"1\":{\"139\":1,\"167\":1,\"233\":1}}],[\"安装\",{\"0\":{\"9\":1,\"10\":1,\"116\":1,\"118\":1,\"121\":1,\"127\":1,\"134\":1,\"135\":1,\"140\":1,\"142\":1,\"166\":1,\"167\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"229\":1},\"1\":{\"1\":3,\"8\":2,\"11\":2,\"12\":2,\"78\":4,\"92\":1,\"93\":1,\"98\":1,\"106\":2,\"116\":1,\"118\":1,\"119\":2,\"121\":1,\"124\":2,\"125\":2,\"126\":1,\"127\":2,\"128\":7,\"131\":1,\"134\":5,\"136\":6,\"138\":1,\"139\":3,\"142\":5,\"143\":1,\"166\":4,\"167\":3,\"168\":3,\"170\":1,\"171\":6,\"172\":2,\"174\":2,\"176\":3,\"178\":2,\"200\":2,\"215\":1,\"217\":2,\"218\":1,\"233\":2,\"234\":1,\"235\":1}}],[\"仍然\",{\"1\":{\"69\":1,\"243\":1,\"287\":1}}],[\"立即\",{\"1\":{\"69\":1}}],[\"二叉树\",{\"0\":{\"250\":1,\"253\":1,\"254\":1},\"1\":{\"250\":5,\"251\":2,\"253\":1,\"254\":3,\"261\":1,\"262\":6,\"272\":1},\"2\":{\"263\":1}}],[\"二元\",{\"0\":{\"248\":1},\"1\":{\"248\":1}}],[\"二次\",{\"1\":{\"200\":2}}],[\"二\",{\"0\":{\"69\":1,\"245\":1,\"264\":1},\"1\":{\"94\":3,\"97\":1}}],[\"二进制\",{\"1\":{\"17\":1,\"25\":1}}],[\"列为\",{\"1\":{\"261\":1,\"285\":1,\"287\":2,\"288\":1}}],[\"列表\",{\"0\":{\"149\":1},\"1\":{\"87\":7,\"106\":1,\"237\":1,\"246\":2}}],[\"列出\",{\"1\":{\"67\":2,\"106\":1,\"113\":1,\"232\":1}}],[\"列举\",{\"1\":{\"16\":1,\"19\":1,\"37\":1}}],[\"输入法\",{\"0\":{\"176\":1},\"1\":{\"176\":3}}],[\"输入\",{\"0\":{\"249\":1},\"1\":{\"67\":1,\"77\":1,\"93\":1,\"128\":1,\"136\":1,\"138\":1,\"139\":1,\"142\":2,\"143\":1,\"204\":1,\"217\":2,\"254\":2}}],[\"输出\",{\"0\":{\"35\":1,\"249\":1},\"1\":{\"1\":2,\"55\":2,\"204\":1,\"205\":2,\"206\":1,\"215\":1,\"237\":2,\"242\":1,\"243\":1,\"247\":2}}],[\"记\",{\"1\":{\"124\":1,\"128\":4}}],[\"记为\",{\"1\":{\"67\":1}}],[\"记录\",{\"1\":{\"43\":1,\"50\":2,\"55\":4,\"64\":4,\"67\":3,\"223\":1,\"260\":7,\"273\":1,\"278\":1}}],[\"待\",{\"1\":{\"64\":1,\"128\":2,\"201\":2,\"202\":1,\"268\":3,\"269\":2,\"278\":1}}],[\"冲突\",{\"1\":{\"64\":2,\"104\":1,\"241\":1}}],[\"丢弃\",{\"1\":{\"64\":1}}],[\"丢失\",{\"1\":{\"64\":1}}],[\"堆栈\",{\"1\":{\"64\":1}}],[\"临时\",{\"1\":{\"64\":1}}],[\"先进后出\",{\"1\":{\"290\":1}}],[\"先进先出\",{\"1\":{\"281\":1}}],[\"先取\",{\"1\":{\"278\":1}}],[\"先序\",{\"0\":{\"255\":1,\"258\":1},\"1\":{\"254\":1,\"255\":1,\"258\":1,\"262\":2}}],[\"先\",{\"1\":{\"58\":1,\"167\":1,\"206\":1,\"242\":1,\"244\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":3,\"259\":1,\"261\":2,\"268\":3,\"269\":1,\"277\":1,\"278\":1}}],[\"单元\",{\"1\":{\"239\":1,\"241\":1,\"264\":1,\"267\":1,\"272\":2,\"277\":1,\"297\":2}}],[\"单例\",{\"1\":{\"188\":1}}],[\"单击\",{\"1\":{\"90\":1,\"91\":1}}],[\"单曲\",{\"1\":{\"87\":4}}],[\"单独\",{\"1\":{\"78\":1,\"237\":1}}],[\"单向\",{\"0\":{\"186\":1},\"1\":{\"74\":1,\"186\":1,\"264\":2}}],[\"单个\",{\"1\":{\"58\":1}}],[\"单位\",{\"1\":{\"17\":1,\"262\":1,\"273\":1,\"279\":1,\"291\":1,\"297\":1}}],[\"受限制\",{\"1\":{\"281\":1,\"290\":1}}],[\"受\",{\"1\":{\"58\":1}}],[\"删除\",{\"0\":{\"269\":1,\"278\":1},\"1\":{\"58\":3,\"60\":1,\"67\":1,\"77\":1,\"128\":1,\"138\":1,\"237\":1,\"264\":1,\"269\":10,\"270\":2,\"272\":1,\"278\":10,\"279\":1,\"281\":1,\"287\":4,\"290\":6,\"295\":1,\"296\":1}}],[\"推出\",{\"1\":{\"93\":1}}],[\"推送\",{\"1\":{\"58\":4,\"60\":2,\"105\":1}}],[\"推荐\",{\"1\":{\"14\":1,\"15\":1,\"126\":1,\"220\":1}}],[\"统计\",{\"0\":{\"93\":1},\"1\":{\"55\":1,\"93\":4}}],[\"结尾\",{\"1\":{\"277\":3,\"279\":1}}],[\"结\",{\"1\":{\"261\":2}}],[\"结构化\",{\"1\":{\"215\":1}}],[\"结构\",{\"0\":{\"251\":1,\"265\":1,\"273\":1,\"282\":1,\"291\":1},\"1\":{\"210\":1,\"212\":1,\"237\":1,\"250\":6,\"251\":4,\"260\":1,\"265\":1,\"270\":1,\"272\":9,\"273\":1,\"282\":1,\"290\":2,\"291\":1}}],[\"结点\",{\"0\":{\"262\":1,\"267\":1,\"268\":1,\"269\":1},\"1\":{\"94\":1,\"250\":4,\"253\":1,\"254\":3,\"255\":1,\"257\":1,\"258\":10,\"259\":24,\"260\":35,\"261\":10,\"262\":5,\"264\":11,\"265\":3,\"267\":2,\"268\":18,\"269\":5,\"270\":3,\"278\":3,\"285\":1,\"286\":3,\"287\":1,\"288\":2,\"290\":10}}],[\"结果\",{\"1\":{\"77\":1,\"142\":1,\"210\":1,\"237\":3,\"242\":1}}],[\"结合\",{\"1\":{\"55\":1,\"83\":1}}],[\"结束语\",{\"0\":{\"212\":1}}],[\"结束\",{\"1\":{\"37\":1,\"237\":4,\"258\":1,\"261\":1,\"269\":1,\"278\":1}}],[\"图像\",{\"0\":{\"153\":1}}],[\"图示\",{\"1\":{\"124\":1,\"127\":1,\"136\":1}}],[\"图标\",{\"1\":{\"108\":1,\"111\":1,\"113\":1,\"209\":1}}],[\"图片\",{\"1\":{\"106\":1,\"113\":1,\"114\":1,\"215\":1,\"218\":1,\"219\":1,\"221\":1}}],[\"图中\",{\"1\":{\"77\":4,\"189\":1,\"209\":1,\"218\":1}}],[\"图\",{\"1\":{\"77\":1,\"81\":1,\"89\":1,\"90\":1,\"91\":1,\"197\":3,\"272\":2}}],[\"图形化\",{\"1\":{\"139\":1,\"166\":1,\"167\":2,\"176\":1}}],[\"图形\",{\"1\":{\"55\":1,\"215\":2}}],[\"图表\",{\"1\":{\"13\":1}}],[\"远\",{\"1\":{\"55\":1}}],[\"远程\",{\"1\":{\"54\":1,\"58\":1,\"60\":1}}],[\"服务\",{\"0\":{\"104\":1},\"1\":{\"54\":1,\"79\":1,\"91\":1,\"106\":3,\"127\":1,\"136\":3,\"174\":1,\"244\":1}}],[\"服务器\",{\"1\":{\"7\":1,\"100\":1}}],[\"带头\",{\"1\":{\"264\":3,\"268\":4}}],[\"带有\",{\"1\":{\"237\":5,\"246\":1}}],[\"带\",{\"1\":{\"54\":1,\"104\":1,\"245\":2}}],[\"裸\",{\"1\":{\"54\":4}}],[\"默认值\",{\"1\":{\"87\":1}}],[\"默认\",{\"1\":{\"54\":2,\"55\":1,\"58\":1,\"87\":1,\"94\":1,\"104\":1,\"109\":1,\"113\":1,\"138\":1,\"144\":1,\"201\":1,\"209\":1,\"218\":1,\"232\":1,\"245\":3}}],[\"目的\",{\"1\":{\"166\":1,\"212\":1,\"244\":1}}],[\"目录\",{\"0\":{\"103\":1,\"208\":1,\"209\":1,\"211\":1},\"1\":{\"54\":2,\"77\":1,\"81\":1,\"83\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":2,\"93\":2,\"94\":2,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"103\":2,\"106\":9,\"111\":2,\"112\":1,\"113\":1,\"119\":1,\"133\":4,\"143\":1,\"144\":2,\"209\":2,\"210\":4,\"219\":1}}],[\"目前\",{\"1\":{\"0\":1,\"69\":2,\"116\":1,\"208\":1,\"209\":1}}],[\"空时\",{\"1\":{\"288\":2}}],[\"空树\",{\"1\":{\"262\":1}}],[\"空心\",{\"1\":{\"189\":1}}],[\"空间\",{\"1\":{\"126\":1,\"130\":2,\"131\":3,\"132\":1,\"133\":1}}],[\"空\",{\"0\":{\"253\":1},\"1\":{\"54\":1,\"128\":2,\"253\":1,\"258\":1,\"259\":1,\"260\":3,\"261\":1,\"262\":1,\"276\":1,\"285\":3,\"287\":3,\"288\":1,\"294\":2,\"295\":1,\"296\":1}}],[\"创建对象\",{\"1\":{\"237\":1}}],[\"创建\",{\"0\":{\"77\":1,\"101\":1,\"103\":1,\"254\":1,\"267\":1,\"275\":1,\"284\":1},\"1\":{\"54\":7,\"77\":3,\"81\":1,\"86\":2,\"93\":1,\"94\":4,\"101\":2,\"103\":1,\"106\":1,\"112\":3,\"113\":3,\"119\":1,\"126\":2,\"128\":1,\"139\":1,\"210\":4,\"211\":1,\"212\":2,\"234\":1,\"237\":4,\"245\":7,\"250\":1,\"254\":1,\"261\":1,\"262\":1,\"267\":1,\"270\":1,\"275\":2,\"279\":1,\"284\":1,\"288\":1}}],[\"~\",{\"1\":{\"51\":1,\"85\":1,\"87\":1,\"89\":6,\"112\":1,\"176\":1,\"227\":1,\"237\":8,\"241\":4,\"242\":6,\"243\":1,\"244\":1,\"245\":6,\"247\":6,\"248\":4}}],[\"级别\",{\"1\":{\"51\":1}}],[\"环境变量\",{\"0\":{\"143\":1},\"1\":{\"143\":2}}],[\"环境\",{\"0\":{\"122\":1,\"140\":1},\"1\":{\"51\":1,\"54\":1,\"100\":1,\"106\":1,\"116\":3}}],[\"配置文件\",{\"1\":{\"51\":1,\"85\":3,\"86\":1,\"87\":1,\"92\":1,\"98\":1,\"106\":3,\"108\":1,\"109\":1,\"110\":1,\"115\":1,\"139\":1,\"172\":1}}],[\"配置\",{\"0\":{\"107\":1,\"112\":1,\"113\":1,\"115\":1,\"119\":1,\"136\":1,\"143\":1,\"218\":1,\"223\":1,\"230\":1,\"232\":1},\"1\":{\"51\":3,\"60\":1,\"77\":1,\"79\":1,\"83\":1,\"85\":2,\"87\":4,\"91\":1,\"93\":2,\"94\":1,\"98\":2,\"105\":1,\"106\":1,\"107\":1,\"110\":1,\"112\":1,\"113\":2,\"115\":1,\"119\":6,\"126\":1,\"127\":1,\"134\":1,\"139\":2,\"171\":3,\"176\":2,\"218\":2,\"223\":1,\"232\":1}}],[\"签名文件\",{\"1\":{\"201\":6,\"202\":1,\"204\":4,\"205\":1}}],[\"签名\",{\"0\":{\"199\":1,\"201\":1,\"204\":1},\"1\":{\"50\":1,\"200\":4,\"201\":10,\"202\":4,\"203\":1,\"204\":4,\"205\":3,\"206\":3,\"232\":2}}],[\"改变\",{\"1\":{\"94\":1,\"209\":1,\"241\":1,\"295\":1,\"296\":1}}],[\"改为\",{\"1\":{\"94\":2}}],[\"改\",{\"1\":{\"77\":1}}],[\"改成\",{\"1\":{\"73\":1}}],[\"改动\",{\"1\":{\"50\":1,\"58\":1,\"64\":1}}],[\"改进版\",{\"1\":{\"33\":1}}],[\"追加\",{\"1\":{\"50\":1}}],[\"向\",{\"1\":{\"192\":2,\"277\":2}}],[\"向上\",{\"1\":{\"50\":1}}],[\"向量\",{\"1\":{\"33\":1,\"37\":1,\"39\":1}}],[\"仓库\",{\"0\":{\"101\":1},\"1\":{\"50\":2,\"51\":1,\"54\":11,\"58\":6,\"60\":2,\"64\":1,\"86\":1,\"101\":3,\"115\":1}}],[\"`\",{\"1\":{\"45\":2,\"59\":2}}],[\"添加\",{\"0\":{\"84\":1,\"87\":1,\"88\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"138\":1,\"168\":1,\"210\":1,\"219\":1},\"1\":{\"44\":3,\"60\":1,\"67\":3,\"83\":1,\"85\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":3,\"94\":2,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"106\":1,\"119\":1,\"126\":2,\"143\":1,\"168\":2,\"172\":1,\"176\":2,\"204\":1,\"208\":1,\"209\":6,\"210\":1,\"211\":2,\"221\":1,\"224\":1,\"237\":1,\"260\":3,\"268\":1}}],[\"设计\",{\"0\":{\"242\":1},\"1\":{\"244\":1,\"260\":1}}],[\"设置\",{\"0\":{\"137\":1,\"173\":1,\"220\":1,\"227\":1},\"1\":{\"41\":1,\"51\":1,\"79\":2,\"85\":1,\"109\":2,\"116\":1,\"125\":1,\"126\":8,\"128\":4,\"136\":1,\"137\":2,\"138\":1,\"143\":1,\"174\":1,\"224\":1,\"227\":1,\"232\":2,\"237\":1,\"242\":3}}],[\"设备\",{\"1\":{\"1\":1,\"77\":1,\"78\":1}}],[\"越是\",{\"1\":{\"260\":1}}],[\"越\",{\"1\":{\"240\":2}}],[\"越小越\",{\"1\":{\"94\":1}}],[\"越低\",{\"1\":{\"41\":1}}],[\"越长越\",{\"1\":{\"41\":1}}],[\"破解\",{\"1\":{\"41\":1,\"125\":1}}],[\"大大降低\",{\"1\":{\"241\":1}}],[\"大量\",{\"1\":{\"134\":1}}],[\"大陆\",{\"1\":{\"116\":1}}],[\"大佬\",{\"1\":{\"112\":1}}],[\"大多数\",{\"1\":{\"106\":1}}],[\"大小\",{\"1\":{\"94\":1,\"119\":1,\"126\":2,\"128\":1,\"272\":1}}],[\"大\",{\"1\":{\"69\":1,\"78\":2,\"126\":1,\"131\":1,\"240\":1}}],[\"大于\",{\"1\":{\"41\":1}}],[\"大写字母\",{\"1\":{\"25\":1}}],[\"模拟\",{\"1\":{\"262\":1}}],[\"模拟器\",{\"0\":{\"80\":1},\"1\":{\"81\":1,\"119\":1}}],[\"模块\",{\"1\":{\"112\":1,\"116\":1,\"167\":1,\"176\":1}}],[\"模板\",{\"1\":{\"77\":1,\"106\":1}}],[\"模长\",{\"1\":{\"41\":3}}],[\"模式\",{\"0\":{\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"79\":1,\"124\":1},\"1\":{\"31\":2,\"32\":2,\"33\":1,\"35\":1,\"36\":1,\"37\":5,\"38\":6,\"70\":1,\"78\":2,\"79\":2,\"119\":2,\"124\":4,\"126\":3,\"127\":4,\"128\":1,\"172\":1,\"188\":1}}],[\"随机\",{\"1\":{\"41\":1,\"77\":1,\"87\":1,\"94\":1}}],[\"命名\",{\"1\":{\"41\":1,\"241\":1}}],[\"命令\",{\"0\":{\"43\":1},\"1\":{\"12\":1,\"54\":1,\"58\":1,\"64\":1,\"67\":1,\"83\":1,\"103\":1,\"105\":1,\"106\":6,\"115\":1,\"128\":3,\"133\":1,\"138\":1,\"139\":1,\"144\":2,\"201\":2,\"202\":1,\"204\":2,\"205\":4,\"206\":1,\"215\":1,\"224\":1}}],[\"人们\",{\"1\":{\"244\":1}}],[\"人\",{\"1\":{\"41\":1,\"290\":8}}],[\"德曼\",{\"1\":{\"41\":1}}],[\"伦纳德\",{\"1\":{\"41\":1}}],[\"尔\",{\"1\":{\"41\":1}}],[\"莫慌\",{\"1\":{\"170\":1}}],[\"莫\",{\"1\":{\"41\":1}}],[\"萨\",{\"1\":{\"41\":1}}],[\"迪\",{\"1\":{\"41\":1}}],[\"阿姨\",{\"1\":{\"281\":1}}],[\"阿\",{\"1\":{\"41\":2}}],[\"阿拉伯数字\",{\"1\":{\"25\":1}}],[\"李\",{\"1\":{\"41\":1}}],[\"·\",{\"1\":{\"41\":3}}],[\"罗纳德\",{\"1\":{\"41\":1}}],[\"由近\",{\"1\":{\"55\":1}}],[\"由\",{\"1\":{\"41\":1,\"179\":1,\"181\":1,\"237\":2,\"246\":1,\"267\":1,\"275\":1}}],[\"由于\",{\"1\":{\"6\":1,\"28\":1,\"37\":1,\"39\":1,\"69\":1,\"86\":1,\"93\":1,\"116\":1,\"172\":1,\"204\":1,\"206\":1,\"241\":1,\"295\":1,\"296\":1}}],[\"年龄\",{\"1\":{\"241\":2}}],[\"年\",{\"1\":{\"41\":1,\"69\":1,\"99\":2,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"替代\",{\"1\":{\"40\":1}}],[\"替换成\",{\"1\":{\"101\":1}}],[\"替换\",{\"1\":{\"38\":1,\"90\":1,\"110\":1,\"144\":1,\"237\":2}}],[\"该节\",{\"1\":{\"260\":1}}],[\"该类\",{\"1\":{\"70\":1,\"237\":3,\"244\":1}}],[\"该\",{\"1\":{\"39\":1,\"116\":1,\"201\":1,\"237\":3,\"241\":1,\"243\":1,\"244\":2,\"245\":2,\"246\":1,\"254\":1,\"258\":1,\"259\":7,\"260\":6,\"262\":1,\"269\":1}}],[\"次访问\",{\"1\":{\"260\":3}}],[\"次数\",{\"1\":{\"260\":2}}],[\"次\",{\"1\":{\"39\":1,\"55\":1}}],[\"全盘\",{\"1\":{\"128\":2}}],[\"全部\",{\"1\":{\"44\":1,\"58\":1,\"64\":1,\"67\":2,\"70\":2,\"99\":1,\"116\":1,\"128\":1,\"135\":1,\"166\":1,\"201\":1,\"209\":1,\"261\":2,\"272\":1}}],[\"全部内容\",{\"1\":{\"17\":1}}],[\"全称\",{\"1\":{\"38\":1,\"40\":1}}],[\"校验\",{\"0\":{\"202\":1,\"205\":1},\"1\":{\"37\":1,\"72\":1,\"142\":1,\"143\":1,\"200\":2,\"202\":2}}],[\"误导\",{\"1\":{\"37\":1}}],[\"暂用\",{\"1\":{\"237\":1}}],[\"暂存\",{\"1\":{\"64\":3}}],[\"暂存区\",{\"1\":{\"44\":1,\"50\":1,\"64\":1}}],[\"暂时\",{\"1\":{\"64\":1,\"84\":1,\"87\":1}}],[\"暂\",{\"1\":{\"37\":1,\"119\":1}}],[\"未\",{\"1\":{\"37\":1,\"64\":3,\"106\":1,\"262\":1}}],[\"包\",{\"1\":{\"106\":1,\"119\":1}}],[\"包名\",{\"1\":{\"77\":1,\"210\":1}}],[\"包括\",{\"1\":{\"37\":1,\"64\":1,\"83\":1,\"202\":1,\"242\":1}}],[\"包含\",{\"1\":{\"0\":1,\"7\":1,\"55\":2,\"201\":2,\"202\":1,\"265\":1}}],[\"共享\",{\"1\":{\"98\":1}}],[\"共\",{\"1\":{\"36\":1}}],[\"各位\",{\"1\":{\"112\":1}}],[\"各行各业\",{\"1\":{\"112\":1}}],[\"各个\",{\"1\":{\"81\":1,\"250\":1}}],[\"各\",{\"1\":{\"36\":1,\"39\":1,\"237\":1}}],[\"得知\",{\"1\":{\"237\":1}}],[\"得\",{\"1\":{\"35\":2,\"240\":1}}],[\"得出\",{\"1\":{\"24\":1,\"31\":1}}],[\"细小\",{\"1\":{\"35\":1}}],[\"异或\",{\"1\":{\"33\":3,\"34\":3,\"35\":2}}],[\"前段\",{\"1\":{\"281\":1}}],[\"前序\",{\"1\":{\"254\":1}}],[\"前缀\",{\"1\":{\"247\":3,\"248\":2}}],[\"前期\",{\"1\":{\"100\":1}}],[\"前后\",{\"1\":{\"77\":1}}],[\"前者\",{\"1\":{\"39\":1,\"99\":1}}],[\"前\",{\"1\":{\"33\":1,\"34\":1,\"35\":3,\"39\":2,\"108\":1,\"109\":1,\"110\":1,\"139\":1,\"166\":1,\"168\":1,\"209\":1,\"237\":1,\"242\":2}}],[\"前面\",{\"1\":{\"6\":1,\"261\":1,\"268\":1,\"281\":1}}],[\"链式\",{\"1\":{\"270\":1,\"290\":2}}],[\"链表\",{\"0\":{\"264\":1,\"270\":1},\"1\":{\"250\":4,\"251\":2,\"264\":13,\"265\":2,\"268\":6,\"270\":2,\"272\":2,\"281\":1,\"282\":1,\"286\":2,\"290\":3},\"2\":{\"271\":1}}],[\"链接\",{\"0\":{\"152\":1},\"1\":{\"112\":1,\"141\":2,\"227\":1,\"242\":1,\"243\":2}}],[\"链\",{\"0\":{\"33\":1}}],[\"块\",{\"0\":{\"33\":1,\"151\":1},\"1\":{\"32\":1,\"35\":2,\"36\":3,\"37\":2,\"38\":1,\"40\":1}}],[\"严格\",{\"1\":{\"240\":1}}],[\"严重\",{\"1\":{\"32\":1}}],[\"严谨\",{\"1\":{\"4\":1}}],[\"拼接\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"英译\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"69\":1}}],[\"英文字母\",{\"1\":{\"17\":1}}],[\"密集\",{\"1\":{\"94\":2}}],[\"密码\",{\"1\":{\"69\":1,\"136\":2,\"138\":2,\"201\":4,\"204\":2,\"224\":1}}],[\"密码本\",{\"0\":{\"32\":1}}],[\"密文\",{\"1\":{\"32\":3,\"33\":4,\"34\":3,\"35\":12,\"41\":1}}],[\"密钥\",{\"0\":{\"30\":1},\"1\":{\"26\":2,\"28\":1,\"30\":4,\"32\":1,\"33\":2,\"34\":2,\"35\":2,\"37\":1,\"38\":1,\"39\":6,\"40\":2,\"41\":3,\"168\":1,\"232\":1}}],[\"衍生\",{\"1\":{\"31\":1}}],[\"防止\",{\"1\":{\"31\":1}}],[\"短\",{\"1\":{\"31\":1,\"70\":1}}],[\"若要\",{\"1\":{\"94\":2}}],[\"若干\",{\"1\":{\"85\":1}}],[\"若干块\",{\"1\":{\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"若\",{\"1\":{\"39\":1,\"109\":1,\"127\":1,\"131\":1,\"257\":1,\"281\":2,\"297\":1}}],[\"若想\",{\"1\":{\"17\":1,\"81\":1}}],[\"固定\",{\"1\":{\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"38\":1}}],[\"成果\",{\"1\":{\"260\":1}}],[\"成为\",{\"1\":{\"237\":1,\"244\":1,\"245\":2,\"268\":1}}],[\"成员\",{\"1\":{\"189\":1,\"190\":1,\"237\":37,\"242\":3,\"245\":17,\"247\":1,\"248\":1}}],[\"成功\",{\"1\":{\"77\":2,\"81\":1,\"93\":2,\"106\":2,\"142\":1,\"143\":1,\"276\":1,\"278\":1,\"287\":1,\"288\":1,\"293\":1,\"297\":1}}],[\"成\",{\"1\":{\"31\":1,\"32\":2,\"33\":2,\"34\":2,\"35\":2,\"37\":1,\"40\":1,\"224\":1,\"242\":1}}],[\"端的\",{\"1\":{\"113\":1}}],[\"端口\",{\"1\":{\"104\":2}}],[\"端\",{\"1\":{\"30\":1,\"113\":3}}],[\"长时间\",{\"1\":{\"260\":1}}],[\"长\",{\"1\":{\"30\":1,\"31\":2}}],[\"长度\",{\"1\":{\"17\":1,\"24\":3,\"25\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"37\":1,\"38\":1,\"40\":1,\"41\":1,\"262\":1,\"273\":2,\"277\":2,\"278\":2,\"279\":1,\"290\":1,\"291\":1,\"293\":1,\"297\":1}}],[\"优化\",{\"1\":{\"260\":1}}],[\"优秀\",{\"1\":{\"240\":1}}],[\"优\",{\"1\":{\"31\":1}}],[\"优于\",{\"1\":{\"30\":1}}],[\"优势\",{\"1\":{\"24\":1,\"191\":1}}],[\"加以\",{\"1\":{\"290\":1}}],[\"加\",{\"1\":{\"210\":1}}],[\"加快\",{\"1\":{\"134\":1}}],[\"加解密\",{\"1\":{\"30\":1,\"37\":1}}],[\"加密算法\",{\"1\":{\"16\":1,\"26\":2,\"28\":2,\"30\":7,\"31\":2,\"40\":1,\"41\":1,\"74\":1}}],[\"加密\",{\"0\":{\"16\":1,\"28\":2,\"31\":1,\"33\":1,\"34\":1,\"69\":1},\"1\":{\"16\":3,\"28\":3,\"30\":8,\"31\":5,\"32\":4,\"33\":3,\"34\":2,\"35\":4,\"36\":3,\"37\":7,\"38\":3,\"39\":4,\"40\":1}}],[\"区\",{\"1\":{\"44\":1,\"54\":2,\"64\":2}}],[\"区别\",{\"1\":{\"30\":1,\"35\":2,\"124\":1,\"126\":1,\"131\":1,\"237\":1,\"247\":1,\"248\":1}}],[\"区分\",{\"1\":{\"30\":1,\"237\":1,\"268\":1}}],[\"判别\",{\"1\":{\"30\":1}}],[\"判断\",{\"0\":{\"1\":1,\"285\":1,\"294\":1},\"1\":{\"1\":1,\"19\":1,\"73\":1,\"93\":1,\"127\":1,\"259\":2,\"261\":2,\"277\":1,\"285\":1,\"288\":1}}],[\"划\",{\"1\":{\"30\":1}}],[\"划分\",{\"1\":{\"24\":1,\"31\":1,\"40\":1}}],[\"当该\",{\"1\":{\"260\":1}}],[\"当\",{\"1\":{\"36\":1,\"79\":1,\"202\":1,\"245\":5,\"246\":1,\"273\":1}}],[\"当做\",{\"1\":{\"30\":2}}],[\"当前目录\",{\"1\":{\"44\":1}}],[\"当前\",{\"1\":{\"11\":1,\"12\":1,\"241\":1,\"254\":1,\"259\":1,\"260\":5,\"262\":2,\"273\":4,\"279\":2,\"291\":2,\"297\":3}}],[\"把\",{\"1\":{\"30\":1,\"237\":4,\"244\":1,\"246\":1}}],[\"见到\",{\"1\":{\"106\":2,\"127\":1}}],[\"见图\",{\"1\":{\"93\":1}}],[\"见\",{\"1\":{\"30\":1,\"36\":1,\"93\":1,\"94\":1,\"106\":1,\"127\":1,\"170\":1,\"216\":1,\"290\":2}}],[\"具有\",{\"1\":{\"70\":1,\"244\":1,\"246\":1,\"273\":1}}],[\"具体\",{\"1\":{\"28\":1,\"36\":1,\"70\":2,\"78\":1,\"106\":1,\"125\":2,\"205\":1,\"237\":1,\"239\":1,\"244\":2}}],[\"具备\",{\"1\":{\"6\":1,\"26\":1,\"99\":1,\"116\":1,\"237\":1}}],[\"针对\",{\"1\":{\"28\":1,\"70\":1,\"221\":1}}],[\"难懂\",{\"1\":{\"260\":1}}],[\"难度\",{\"1\":{\"250\":1}}],[\"难\",{\"1\":{\"28\":1,\"41\":1,\"257\":1}}],[\"原因\",{\"1\":{\"242\":1}}],[\"原型\",{\"1\":{\"237\":2}}],[\"原理\",{\"1\":{\"28\":1}}],[\"原则\",{\"1\":{\"0\":1}}],[\"知道\",{\"1\":{\"28\":4,\"86\":1,\"258\":1}}],[\"知识库\",{\"0\":{\"7\":1},\"1\":{\"7\":1,\"8\":1}}],[\"任何\",{\"1\":{\"237\":4,\"260\":1}}],[\"任何人\",{\"1\":{\"28\":1}}],[\"任性\",{\"1\":{\"126\":1}}],[\"任意\",{\"1\":{\"2\":1,\"6\":2,\"77\":1,\"237\":1,\"243\":1,\"290\":2}}],[\"同学\",{\"1\":{\"281\":4}}],[\"同一\",{\"1\":{\"246\":1}}],[\"同一个\",{\"1\":{\"30\":2,\"32\":1,\"288\":1}}],[\"同样\",{\"1\":{\"242\":1,\"281\":1}}],[\"同主\",{\"1\":{\"211\":1}}],[\"同理\",{\"1\":{\"189\":1,\"248\":4}}],[\"同步\",{\"1\":{\"99\":1,\"137\":1,\"172\":1}}],[\"同上\",{\"1\":{\"78\":1}}],[\"同时\",{\"1\":{\"50\":1,\"109\":1,\"187\":1,\"241\":1}}],[\"同\",{\"1\":{\"28\":1,\"39\":1,\"126\":1,\"138\":1,\"201\":1,\"237\":2,\"246\":1,\"272\":1}}],[\"关键字\",{\"1\":{\"191\":1,\"237\":4,\"240\":1,\"243\":1,\"246\":1}}],[\"关机\",{\"1\":{\"139\":1}}],[\"关注\",{\"1\":{\"111\":1,\"197\":1}}],[\"关闭\",{\"1\":{\"79\":1}}],[\"关联\",{\"0\":{\"185\":1,\"186\":1,\"187\":1,\"188\":1},\"1\":{\"60\":1,\"180\":1,\"184\":1,\"185\":1,\"186\":4,\"187\":3,\"188\":2,\"189\":4,\"190\":3,\"211\":1}}],[\"关于\",{\"1\":{\"28\":1,\"37\":1,\"79\":1,\"112\":1,\"237\":1,\"250\":1}}],[\"关系\",{\"0\":{\"180\":1},\"1\":{\"1\":1,\"19\":1,\"24\":1,\"180\":1,\"181\":4,\"182\":1,\"183\":1,\"184\":1,\"185\":2,\"189\":7,\"190\":7,\"191\":2,\"233\":1,\"272\":7}}],[\"明文\",{\"1\":{\"26\":1,\"31\":1,\"32\":1,\"33\":2,\"34\":2,\"35\":3,\"36\":3,\"37\":4,\"38\":1,\"40\":1}}],[\"却\",{\"1\":{\"26\":1,\"74\":1,\"77\":1,\"237\":2}}],[\"总结\",{\"0\":{\"26\":1,\"74\":1,\"197\":1},\"1\":{\"281\":1,\"290\":1}}],[\"寻找\",{\"1\":{\"25\":1,\"259\":2,\"264\":1,\"269\":1,\"277\":1}}],[\"末尾\",{\"1\":{\"25\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"95\":1,\"97\":1,\"143\":1,\"202\":1,\"264\":1,\"268\":3,\"290\":1}}],[\"两端\",{\"1\":{\"281\":1}}],[\"两次\",{\"1\":{\"138\":1,\"237\":2,\"260\":3}}],[\"两行\",{\"1\":{\"134\":1,\"224\":1,\"242\":1,\"265\":1}}],[\"两图\",{\"1\":{\"127\":1}}],[\"两条\",{\"1\":{\"105\":1}}],[\"两年\",{\"1\":{\"99\":1}}],[\"两种\",{\"1\":{\"70\":1,\"77\":1,\"94\":1,\"121\":1,\"128\":1,\"174\":1,\"233\":1,\"242\":1,\"247\":1,\"248\":1,\"265\":1,\"275\":1,\"290\":1}}],[\"两段\",{\"1\":{\"39\":1}}],[\"两块\",{\"1\":{\"36\":1}}],[\"两位\",{\"1\":{\"25\":3}}],[\"两个\",{\"1\":{\"17\":1,\"21\":2,\"25\":1,\"36\":1,\"84\":1,\"112\":1,\"139\":1,\"167\":1,\"168\":1,\"204\":1,\"237\":1,\"241\":2,\"242\":1,\"246\":1,\"248\":1,\"250\":1,\"251\":2,\"260\":1,\"262\":1,\"282\":2}}],[\"保证\",{\"1\":{\"77\":1,\"242\":1}}],[\"保护\",{\"1\":{\"58\":1,\"245\":8}}],[\"保留\",{\"1\":{\"25\":3,\"64\":1,\"128\":1}}],[\"保存\",{\"1\":{\"25\":1,\"44\":1,\"60\":1,\"64\":2,\"77\":1,\"134\":1,\"143\":1,\"172\":2,\"264\":1,\"282\":1}}],[\"六位\",{\"1\":{\"25\":2}}],[\"剩余\",{\"1\":{\"25\":2,\"130\":1,\"131\":1}}],[\"号\",{\"1\":{\"25\":3,\"138\":1,\"139\":1,\"209\":1,\"254\":1}}],[\"等候\",{\"1\":{\"281\":1}}],[\"等价\",{\"1\":{\"265\":1}}],[\"等于\",{\"1\":{\"87\":1}}],[\"等待\",{\"1\":{\"77\":1,\"115\":1}}],[\"等同于\",{\"1\":{\"39\":1}}],[\"等\",{\"1\":{\"25\":3,\"77\":3,\"79\":1,\"83\":1,\"100\":1,\"217\":1,\"240\":1}}],[\"小站\",{\"1\":{\"108\":1}}],[\"小时\",{\"1\":{\"96\":1}}],[\"小\",{\"1\":{\"89\":1,\"125\":1,\"167\":1}}],[\"小米\",{\"1\":{\"79\":2}}],[\"小白\",{\"1\":{\"78\":1}}],[\"小写字母\",{\"1\":{\"25\":1}}],[\"小伙伴\",{\"1\":{\"17\":1,\"78\":1,\"212\":1}}],[\"练手\",{\"1\":{\"25\":1}}],[\"场景\",{\"1\":{\"25\":1,\"70\":1,\"128\":1}}],[\"⌉\",{\"1\":{\"24\":1}}],[\"⌈\",{\"1\":{\"24\":1}}],[\"并且\",{\"1\":{\"245\":1,\"278\":1}}],[\"并用\",{\"1\":{\"25\":1}}],[\"并\",{\"1\":{\"24\":1,\"28\":1,\"41\":1,\"50\":1,\"54\":1,\"67\":1,\"69\":1,\"77\":1,\"79\":1,\"81\":1,\"93\":1,\"113\":1,\"134\":1,\"172\":2,\"174\":1,\"205\":1,\"206\":1,\"209\":3,\"210\":2,\"211\":1,\"219\":1,\"237\":3,\"242\":1,\"258\":2,\"259\":4,\"260\":1,\"278\":1,\"293\":1,\"296\":1}}],[\"标的\",{\"1\":{\"269\":2,\"278\":1}}],[\"标值\",{\"1\":{\"269\":1}}],[\"标志\",{\"1\":{\"209\":1,\"211\":1,\"260\":1}}],[\"标题栏\",{\"1\":{\"171\":1}}],[\"标题\",{\"0\":{\"108\":1,\"109\":1,\"147\":1},\"1\":{\"87\":1,\"109\":1,\"112\":1}}],[\"标签\",{\"0\":{\"161\":1},\"1\":{\"58\":3,\"67\":2,\"112\":3,\"113\":2,\"173\":1,\"260\":1}}],[\"标准\",{\"1\":{\"38\":1,\"40\":1,\"55\":1}}],[\"标记\",{\"1\":{\"24\":1,\"25\":1,\"77\":1,\"181\":1,\"221\":1,\"260\":1,\"293\":1}}],[\"标识符\",{\"1\":{\"237\":1}}],[\"标识\",{\"1\":{\"1\":1,\"67\":1}}],[\"补丁\",{\"1\":{\"55\":1}}],[\"补位\",{\"1\":{\"24\":1,\"25\":2}}],[\"补充\",{\"1\":{\"24\":2,\"25\":1}}],[\"后队\",{\"1\":{\"287\":1}}],[\"后序\",{\"0\":{\"257\":1,\"260\":1},\"1\":{\"257\":1,\"260\":1,\"262\":2}}],[\"后缀\",{\"1\":{\"247\":3,\"248\":2}}],[\"后期\",{\"1\":{\"243\":1}}],[\"后方\",{\"1\":{\"106\":1}}],[\"后面\",{\"1\":{\"98\":1,\"135\":1,\"268\":1,\"277\":1,\"278\":2,\"282\":1}}],[\"后者\",{\"1\":{\"39\":1}}],[\"后续\",{\"1\":{\"28\":1,\"36\":1,\"60\":1,\"116\":1,\"124\":1,\"127\":1,\"139\":1,\"176\":1,\"197\":1,\"237\":2,\"260\":1,\"268\":1,\"272\":1,\"281\":1}}],[\"后\",{\"1\":{\"24\":7,\"25\":6,\"33\":1,\"34\":3,\"35\":2,\"36\":3,\"37\":1,\"39\":1,\"64\":2,\"85\":1,\"86\":1,\"93\":2,\"101\":1,\"105\":1,\"106\":2,\"108\":1,\"112\":1,\"113\":1,\"119\":3,\"126\":2,\"127\":2,\"136\":1,\"142\":1,\"143\":1,\"171\":1,\"200\":2,\"201\":1,\"204\":1,\"208\":1,\"209\":1,\"211\":1,\"217\":1,\"218\":1,\"237\":4,\"268\":2,\"269\":1,\"277\":2}}],[\"整个\",{\"1\":{\"237\":1,\"241\":1}}],[\"整体\",{\"1\":{\"189\":3,\"190\":3}}],[\"整理\",{\"1\":{\"106\":1}}],[\"整分\",{\"1\":{\"36\":1}}],[\"整数倍\",{\"1\":{\"24\":1}}],[\"整除\",{\"1\":{\"24\":3}}],[\"整取\",{\"1\":{\"20\":1}}],[\"被包\",{\"1\":{\"237\":1}}],[\"被\",{\"1\":{\"24\":3,\"58\":1,\"72\":1,\"73\":1,\"192\":2,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"204\":1,\"237\":2,\"242\":2,\"243\":1,\"244\":4,\"245\":3,\"246\":1,\"269\":2,\"273\":1}}],[\"案例\",{\"1\":{\"24\":1}}],[\"试图\",{\"1\":{\"244\":1}}],[\"试\",{\"1\":{\"24\":1}}],[\"ks\",{\"1\":{\"201\":4}}],[\"kugou\",{\"1\":{\"87\":3}}],[\"kb\",{\"1\":{\"77\":1}}],[\"kotlin\",{\"1\":{\"77\":1}}],[\"keep\",{\"1\":{\"48\":2,\"52\":2,\"53\":1,\"57\":2,\"59\":4,\"61\":3,\"64\":2}}],[\"keys\",{\"1\":{\"218\":1,\"232\":2}}],[\"keystore\",{\"1\":{\"201\":4,\"204\":3}}],[\"keytool\",{\"1\":{\"205\":2}}],[\"keyalias\",{\"1\":{\"204\":1}}],[\"keypass\",{\"1\":{\"204\":1}}],[\"keypair\",{\"1\":{\"41\":4}}],[\"keypairgenerator\",{\"1\":{\"41\":2}}],[\"keyring\",{\"1\":{\"168\":2}}],[\"keyboard\",{\"1\":{\"92\":1}}],[\"keyid\",{\"1\":{\"48\":1,\"50\":1,\"62\":1,\"232\":1}}],[\"keygener\",{\"1\":{\"41\":4}}],[\"key\",{\"1\":{\"30\":4,\"38\":7,\"39\":7,\"40\":7,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1,\"67\":5,\"85\":2,\"93\":5,\"201\":3,\"232\":4,\"251\":1,\"254\":4,\"262\":3,\"265\":3,\"268\":3,\"269\":5,\"270\":2,\"282\":1,\"286\":1,\"287\":1,\"288\":4}}],[\"k\",{\"1\":{\"23\":2,\"25\":2,\"52\":1,\"53\":1,\"57\":1,\"64\":2}}],[\"zshrc\",{\"1\":{\"172\":2}}],[\"zsh\",{\"0\":{\"172\":1},\"1\":{\"172\":7}}],[\"zenhei\",{\"1\":{\"170\":1}}],[\"zero\",{\"1\":{\"45\":1,\"53\":2,\"63\":1}}],[\"zkf\",{\"1\":{\"138\":4,\"139\":2,\"224\":7}}],[\"zoneinfo\",{\"1\":{\"137\":1}}],[\"zindex\",{\"1\":{\"95\":1}}],[\"zipalign\",{\"0\":{\"206\":1},\"1\":{\"206\":3}}],[\"zip\",{\"1\":{\"77\":2,\"119\":1,\"206\":1}}],[\"zh\",{\"1\":{\"85\":1,\"139\":1,\"176\":1}}],[\"zuo\",{\"1\":{\"54\":2,\"55\":1}}],[\"zdiff3\",{\"1\":{\"47\":1,\"66\":1}}],[\"z\",{\"1\":{\"23\":2,\"25\":4,\"45\":1,\"50\":1,\"51\":1,\"65\":1,\"89\":1,\"90\":1,\"91\":1,\"94\":2,\"246\":1}}],[\"jcenter\",{\"1\":{\"208\":1,\"209\":2}}],[\"jca\",{\"1\":{\"201\":1}}],[\"jarfile\",{\"1\":{\"205\":1}}],[\"jar\",{\"0\":{\"219\":1},\"1\":{\"203\":1,\"204\":2,\"205\":1,\"219\":3}}],[\"jarsigner\",{\"0\":{\"203\":1},\"1\":{\"204\":2,\"205\":2}}],[\"javah\",{\"1\":{\"143\":1,\"144\":1}}],[\"javac\",{\"1\":{\"143\":1,\"144\":1}}],[\"javascript\",{\"1\":{\"89\":1,\"90\":1,\"91\":2,\"94\":1,\"95\":1,\"97\":2}}],[\"java\",{\"0\":{\"140\":1},\"1\":{\"28\":1,\"36\":1,\"37\":2,\"40\":1,\"70\":1,\"77\":1,\"116\":3,\"142\":1,\"143\":5,\"144\":1,\"210\":2,\"240\":1,\"244\":1,\"246\":1}}],[\"jmods\",{\"1\":{\"144\":1}}],[\"jlink\",{\"1\":{\"144\":1}}],[\"jre\",{\"1\":{\"119\":1,\"143\":2,\"144\":2}}],[\"jekyll\",{\"1\":{\"99\":1}}],[\"joyinshare\",{\"1\":{\"97\":2}}],[\"jobs\",{\"1\":{\"49\":1,\"52\":1,\"57\":1}}],[\"jquery\",{\"1\":{\"90\":1,\"94\":1}}],[\"just\",{\"1\":{\"44\":1}}],[\"jdk1\",{\"1\":{\"143\":2}}],[\"jdk11\",{\"1\":{\"119\":1}}],[\"jdk\",{\"0\":{\"141\":1,\"142\":1,\"144\":1},\"1\":{\"38\":1,\"69\":1,\"119\":1,\"141\":2,\"143\":1,\"144\":3,\"203\":1}}],[\"j\",{\"1\":{\"23\":2,\"25\":2,\"49\":1,\"52\":1,\"57\":1}}],[\"jsdelivr\",{\"1\":{\"112\":1}}],[\"json\",{\"1\":{\"106\":2}}],[\"js\",{\"0\":{\"10\":1},\"1\":{\"10\":1,\"11\":1,\"85\":1,\"89\":4,\"90\":4,\"91\":5,\"93\":1,\"94\":4,\"95\":2,\"97\":2}}],[\"ys\",{\"1\":{\"172\":1}}],[\"yaourt\",{\"1\":{\"171\":1}}],[\"yay\",{\"1\":{\"171\":2,\"177\":1}}],[\"yml\",{\"1\":{\"106\":2,\"108\":1,\"109\":1,\"110\":1,\"115\":1}}],[\"your\",{\"1\":{\"85\":1,\"230\":2,\"232\":1}}],[\"yes\",{\"1\":{\"58\":1}}],[\"y\",{\"1\":{\"23\":2,\"25\":2,\"89\":3,\"90\":3,\"91\":16,\"94\":12,\"247\":15,\"248\":25,\"249\":9}}],[\"qt\",{\"1\":{\"176\":1}}],[\"queuenode\",{\"1\":{\"262\":1,\"282\":1,\"288\":1}}],[\"queuetype\",{\"1\":{\"262\":2,\"282\":2,\"286\":1,\"287\":1,\"288\":6}}],[\"queue\",{\"1\":{\"261\":6,\"262\":4,\"282\":1,\"284\":6,\"285\":3,\"286\":4,\"287\":7,\"288\":19}}],[\"queryselector\",{\"1\":{\"91\":2}}],[\"quit\",{\"1\":{\"48\":2,\"56\":1,\"59\":1,\"62\":2,\"128\":2}}],[\"quiet\",{\"1\":{\"45\":2,\"46\":1,\"47\":1,\"49\":2,\"50\":1,\"52\":2,\"53\":1,\"54\":3,\"56\":2,\"57\":2,\"58\":2,\"59\":2,\"61\":2,\"63\":2,\"64\":6,\"66\":1}}],[\"qq\",{\"1\":{\"85\":1,\"87\":3,\"177\":1}}],[\"q\",{\"1\":{\"23\":2,\"25\":2,\"45\":1,\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":2,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"61\":4,\"63\":1,\"64\":6,\"66\":1}}],[\"qo\",{\"1\":{\"12\":1}}],[\"考究\",{\"1\":{\"22\":1}}],[\"考虑\",{\"1\":{\"4\":1,\"25\":1,\"260\":2,\"281\":1}}],[\"没多\",{\"1\":{\"99\":1}}],[\"没\",{\"1\":{\"22\":1,\"269\":3}}],[\"没有\",{\"1\":{\"6\":1,\"28\":1,\"33\":1,\"87\":1,\"144\":1,\"167\":1,\"168\":1,\"204\":1,\"216\":1,\"237\":7,\"242\":1,\"244\":4,\"245\":6,\"261\":1}}],[\"瞎编\",{\"1\":{\"22\":1}}],[\"楼主\",{\"1\":{\"22\":1}}],[\"诞生\",{\"1\":{\"22\":2}}],[\"都\",{\"1\":{\"22\":1,\"54\":1,\"69\":1,\"77\":1,\"78\":1,\"87\":1,\"103\":1,\"106\":1,\"127\":1,\"167\":1,\"201\":1,\"215\":1,\"216\":1,\"237\":4,\"240\":1,\"242\":1,\"246\":1,\"260\":1,\"261\":1,\"262\":1,\"281\":1}}],[\"但\",{\"1\":{\"22\":1,\"26\":1,\"28\":1,\"64\":1,\"79\":1,\"242\":1,\"245\":1,\"250\":1,\"295\":1}}],[\"但是\",{\"1\":{\"0\":1,\"6\":1,\"17\":1,\"24\":1,\"41\":1,\"78\":1,\"111\":1,\"166\":1,\"173\":1,\"191\":1,\"201\":1,\"237\":3,\"244\":1,\"245\":1,\"246\":1,\"272\":1}}],[\"网\",{\"1\":{\"272\":1}}],[\"网卡\",{\"1\":{\"174\":1}}],[\"网线\",{\"1\":{\"125\":1,\"127\":1}}],[\"网上\",{\"1\":{\"116\":1,\"166\":1}}],[\"网址\",{\"1\":{\"112\":1}}],[\"网页\",{\"1\":{\"99\":1}}],[\"网易\",{\"1\":{\"87\":3,\"168\":1,\"177\":1}}],[\"网络管理\",{\"1\":{\"174\":1}}],[\"网络连接\",{\"1\":{\"173\":1}}],[\"网络\",{\"0\":{\"174\":1},\"1\":{\"72\":1,\"73\":1,\"126\":2,\"172\":1,\"173\":1,\"215\":1}}],[\"网络通信\",{\"1\":{\"22\":1}}],[\"网站\",{\"0\":{\"96\":1},\"1\":{\"7\":1,\"8\":1,\"15\":1,\"93\":5}}],[\"翻\",{\"1\":{\"22\":1}}],[\"需往\",{\"1\":{\"166\":1}}],[\"需补位\",{\"1\":{\"24\":1}}],[\"需\",{\"1\":{\"22\":1,\"73\":1,\"128\":1,\"215\":1,\"245\":1,\"264\":1}}],[\"需要\",{\"1\":{\"1\":2,\"2\":1,\"4\":1,\"7\":1,\"8\":2,\"11\":1,\"12\":1,\"14\":1,\"17\":1,\"19\":1,\"21\":2,\"24\":1,\"26\":1,\"28\":1,\"30\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":2,\"37\":5,\"38\":1,\"39\":3,\"58\":1,\"64\":1,\"67\":1,\"77\":2,\"78\":1,\"79\":2,\"85\":2,\"86\":2,\"91\":1,\"92\":1,\"93\":3,\"98\":1,\"99\":1,\"100\":2,\"106\":1,\"111\":2,\"113\":1,\"115\":2,\"116\":2,\"119\":1,\"125\":2,\"127\":2,\"128\":2,\"131\":2,\"134\":1,\"136\":1,\"138\":2,\"139\":1,\"144\":1,\"166\":1,\"168\":1,\"172\":2,\"204\":1,\"219\":1,\"220\":1,\"237\":5,\"241\":2,\"242\":1,\"244\":1,\"245\":2,\"260\":1,\"262\":1,\"264\":3,\"268\":1,\"272\":2,\"273\":1,\"275\":1,\"277\":3,\"278\":1,\"279\":1,\"282\":1}}],[\"?\",{\"1\":{\"21\":2,\"87\":1,\"89\":1,\"93\":1,\"98\":1,\"209\":2,\"210\":4,\"211\":2,\"278\":1}}],[\"<\",{\"1\":{\"21\":5,\"25\":24,\"44\":3,\"45\":12,\"46\":28,\"47\":12,\"48\":8,\"49\":22,\"50\":26,\"51\":6,\"52\":20,\"53\":32,\"54\":12,\"56\":12,\"57\":19,\"58\":9,\"59\":16,\"60\":24,\"61\":8,\"62\":8,\"63\":3,\"64\":15,\"65\":8,\"66\":8,\"67\":34,\"89\":5,\"90\":4,\"91\":11,\"92\":37,\"93\":6,\"94\":9,\"95\":3,\"96\":8,\"97\":6,\"112\":3,\"187\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"209\":3,\"210\":15,\"211\":3,\"237\":263,\"241\":14,\"242\":14,\"246\":21,\"247\":13,\"248\":29,\"249\":27,\"268\":1,\"269\":2,\"277\":1,\"278\":5}}],[\"合用\",{\"1\":{\"105\":1}}],[\"合并\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"50\":1,\"224\":1}}],[\"合法\",{\"1\":{\"21\":1}}],[\"合适\",{\"1\":{\"14\":1,\"96\":1,\"268\":1,\"277\":1}}],[\"!\",{\"1\":{\"21\":1,\"25\":2,\"59\":2,\"73\":1,\"89\":2,\"90\":1,\"91\":17,\"92\":4,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"97\":2,\"134\":1,\"247\":4,\"248\":4,\"255\":1,\"256\":1,\"257\":1,\"258\":2,\"259\":1,\"260\":2,\"261\":2,\"268\":2,\"269\":3,\"270\":1,\"276\":1,\"277\":1,\"293\":1,\"297\":1}}],[\"%\",{\"1\":{\"21\":1,\"25\":3,\"89\":3,\"90\":1,\"92\":20,\"93\":6,\"138\":1,\"143\":4,\"248\":1,\"262\":1}}],[\"&\",{\"1\":{\"21\":7,\"25\":21,\"89\":4,\"91\":16,\"92\":2,\"94\":1,\"105\":2,\"237\":6,\"247\":4,\"248\":15,\"249\":12,\"253\":1,\"254\":2,\"259\":2,\"260\":4,\"262\":3,\"268\":2,\"269\":1,\"270\":1,\"276\":1,\"277\":2,\"278\":3,\"279\":9,\"286\":1,\"287\":2,\"288\":5,\"293\":1,\"295\":1,\"296\":2,\"297\":6}}],[\">\",{\"1\":{\"21\":4,\"25\":15,\"44\":3,\"45\":12,\"46\":28,\"47\":12,\"48\":8,\"49\":22,\"50\":26,\"51\":6,\"52\":20,\"53\":32,\"54\":12,\"56\":12,\"57\":19,\"58\":9,\"59\":16,\"60\":24,\"61\":8,\"62\":8,\"63\":3,\"64\":15,\"65\":8,\"66\":8,\"67\":34,\"73\":1,\"79\":2,\"86\":3,\"89\":3,\"90\":4,\"91\":7,\"92\":37,\"93\":6,\"94\":6,\"95\":3,\"96\":8,\"97\":6,\"112\":4,\"135\":2,\"182\":2,\"183\":2,\"184\":2,\"186\":2,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"209\":3,\"210\":15,\"211\":3,\"220\":1,\"237\":18,\"241\":5,\"242\":5,\"243\":1,\"246\":1,\"247\":12,\"248\":23,\"249\":15,\"254\":3,\"255\":2,\"256\":2,\"257\":2,\"267\":1,\"268\":16,\"269\":16,\"270\":4,\"277\":2,\"278\":1,\"286\":1,\"287\":3,\"288\":3,\"296\":1}}],[\"]\",{\"1\":{\"21\":16,\"25\":20,\"38\":6,\"39\":6,\"40\":6,\"41\":4,\"44\":2,\"45\":2,\"46\":27,\"47\":5,\"48\":9,\"49\":5,\"50\":31,\"51\":10,\"52\":8,\"53\":13,\"54\":10,\"56\":4,\"57\":9,\"58\":5,\"59\":13,\"60\":17,\"61\":14,\"62\":8,\"63\":10,\"64\":37,\"65\":9,\"66\":4,\"67\":22,\"70\":1,\"72\":1,\"73\":3,\"86\":1,\"87\":2,\"89\":14,\"90\":1,\"91\":16,\"93\":2,\"94\":4,\"112\":1,\"168\":2,\"204\":1,\"205\":2,\"218\":2,\"232\":1,\"237\":4,\"241\":1,\"242\":3,\"243\":1,\"246\":1,\"247\":1,\"248\":1,\"272\":1,\"277\":3,\"278\":6,\"295\":1,\"296\":1,\"297\":1}}],[\"[\",{\"1\":{\"21\":16,\"25\":20,\"38\":6,\"39\":6,\"40\":6,\"41\":4,\"44\":2,\"45\":2,\"46\":27,\"47\":5,\"48\":9,\"49\":5,\"50\":31,\"51\":10,\"52\":8,\"53\":13,\"54\":10,\"56\":4,\"57\":9,\"58\":5,\"59\":13,\"60\":17,\"61\":14,\"62\":8,\"63\":10,\"64\":37,\"65\":9,\"66\":4,\"67\":22,\"70\":1,\"72\":1,\"73\":3,\"86\":1,\"87\":2,\"89\":14,\"90\":1,\"91\":16,\"93\":2,\"94\":4,\"112\":1,\"168\":2,\"204\":1,\"205\":2,\"218\":2,\"232\":1,\"237\":4,\"241\":1,\"242\":3,\"243\":1,\"246\":1,\"247\":1,\"248\":1,\"272\":1,\"277\":3,\"278\":6,\"295\":1,\"296\":1,\"297\":1}}],[\"相互之间\",{\"1\":{\"272\":1}}],[\"相对\",{\"1\":{\"191\":1,\"241\":1,\"264\":1}}],[\"相对路径\",{\"1\":{\"44\":1,\"111\":1}}],[\"相\",{\"1\":{\"191\":1}}],[\"相当于\",{\"1\":{\"131\":1}}],[\"相关\",{\"0\":{\"29\":1,\"70\":1},\"1\":{\"28\":1,\"39\":1,\"106\":1}}],[\"相加\",{\"1\":{\"21\":1,\"25\":2}}],[\"相同\",{\"1\":{\"6\":1,\"30\":1,\"77\":1,\"246\":4,\"260\":2,\"262\":1}}],[\"每隔\",{\"1\":{\"79\":1}}],[\"每次\",{\"1\":{\"39\":1,\"55\":1,\"67\":1,\"237\":2,\"268\":1,\"281\":2}}],[\"每块\",{\"1\":{\"32\":2,\"33\":1,\"34\":1}}],[\"每\",{\"1\":{\"21\":1,\"237\":2}}],[\"每个\",{\"1\":{\"0\":1,\"21\":1,\"23\":1,\"35\":1,\"37\":1,\"38\":1,\"39\":1,\"55\":1,\"200\":1,\"205\":2,\"244\":1,\"250\":1,\"260\":1,\"262\":3,\"264\":1,\"265\":1}}],[\"索引\",{\"1\":{\"21\":1,\"23\":4,\"24\":4,\"25\":1}}],[\"第六\",{\"1\":{\"242\":1}}],[\"第\",{\"1\":{\"237\":2}}],[\"第零\",{\"1\":{\"116\":1}}],[\"第三行\",{\"1\":{\"237\":1}}],[\"第三方\",{\"1\":{\"77\":1}}],[\"第三段\",{\"1\":{\"39\":1}}],[\"第二次\",{\"1\":{\"260\":2}}],[\"第二\",{\"1\":{\"126\":1}}],[\"第二个\",{\"1\":{\"37\":1,\"127\":1,\"237\":1}}],[\"第二块\",{\"1\":{\"36\":1}}],[\"第一行\",{\"1\":{\"134\":1}}],[\"第一\",{\"1\":{\"126\":1}}],[\"第一篇\",{\"1\":{\"99\":1}}],[\"第一个\",{\"0\":{\"76\":1},\"1\":{\"77\":1,\"119\":1,\"127\":1,\"128\":1,\"237\":1,\"261\":1,\"264\":2,\"268\":4,\"269\":1,\"281\":1,\"286\":2,\"287\":1,\"288\":1}}],[\"第一块\",{\"1\":{\"33\":1,\"34\":1,\"35\":1,\"128\":2}}],[\"第一次\",{\"1\":{\"1\":1,\"119\":2,\"260\":3}}],[\"第四位\",{\"1\":{\"21\":2}}],[\"四\",{\"0\":{\"281\":1}}],[\"四篇\",{\"1\":{\"250\":1}}],[\"四条\",{\"1\":{\"86\":1}}],[\"四个\",{\"1\":{\"25\":1,\"84\":1,\"112\":1,\"191\":1}}],[\"四位\",{\"1\":{\"21\":4,\"25\":2}}],[\"四种\",{\"1\":{\"6\":1,\"31\":1}}],[\"运动\",{\"1\":{\"94\":1}}],[\"运算符\",{\"0\":{\"246\":1,\"247\":1,\"248\":1,\"249\":1},\"1\":{\"237\":5,\"245\":1,\"246\":13,\"247\":9,\"248\":13}}],[\"运算\",{\"1\":{\"21\":1,\"247\":1}}],[\"运行\",{\"0\":{\"81\":1,\"96\":1},\"1\":{\"0\":2,\"1\":1,\"2\":1,\"5\":3,\"81\":3,\"96\":1,\"142\":1,\"206\":1,\"210\":1,\"237\":2,\"242\":1}}],[\"规则\",{\"1\":{\"21\":1,\"22\":1,\"28\":1,\"200\":3,\"201\":2,\"245\":1}}],[\"分号\",{\"1\":{\"237\":1}}],[\"分区表\",{\"1\":{\"128\":6}}],[\"分区\",{\"0\":{\"129\":1,\"132\":1,\"133\":1},\"1\":{\"124\":1,\"128\":14,\"130\":2,\"131\":6,\"132\":3,\"133\":6,\"136\":1,\"226\":1}}],[\"分类\",{\"1\":{\"113\":2}}],[\"分\",{\"1\":{\"92\":1,\"96\":1}}],[\"分析\",{\"1\":{\"77\":1,\"93\":1,\"237\":4,\"242\":4,\"243\":1,\"245\":1,\"247\":1}}],[\"分支\",{\"1\":{\"54\":1,\"58\":4,\"60\":1,\"64\":1,\"250\":2}}],[\"分系统\",{\"1\":{\"51\":1}}],[\"分为\",{\"1\":{\"37\":1,\"264\":3,\"272\":2,\"290\":1}}],[\"分成\",{\"1\":{\"36\":1,\"241\":1,\"290\":1}}],[\"分块\",{\"1\":{\"36\":1}}],[\"分割线\",{\"0\":{\"157\":1}}],[\"分割\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"分别\",{\"1\":{\"20\":1,\"21\":2,\"32\":1,\"39\":1,\"210\":1,\"242\":1,\"246\":1,\"250\":1,\"260\":1}}],[\"分配内存\",{\"1\":{\"267\":1,\"277\":1,\"297\":2}}],[\"分配\",{\"1\":{\"1\":1,\"126\":1,\"237\":1,\"262\":1,\"264\":1,\"272\":1,\"273\":2,\"275\":1,\"276\":2,\"277\":2,\"279\":1,\"284\":1,\"291\":1,\"293\":2,\"297\":3}}],[\"再次\",{\"1\":{\"106\":1,\"126\":1,\"209\":1,\"237\":5}}],[\"再用\",{\"1\":{\"33\":2}}],[\"再\",{\"1\":{\"20\":1,\"34\":1,\"36\":1,\"79\":1,\"143\":1,\"206\":1,\"237\":1,\"242\":3,\"244\":1,\"255\":1,\"256\":1,\"264\":1,\"268\":1,\"269\":1,\"277\":1,\"297\":1}}],[\"+\",{\"0\":{\"130\":1,\"131\":1},\"1\":{\"20\":1,\"21\":5,\"23\":1,\"25\":24,\"44\":1,\"53\":1,\"89\":21,\"90\":1,\"91\":16,\"92\":1,\"94\":16,\"96\":11,\"128\":2,\"136\":2,\"142\":1,\"172\":1,\"179\":2,\"200\":1,\"218\":2,\"221\":1,\"237\":6,\"247\":26,\"248\":36,\"269\":2,\"277\":4,\"278\":8,\"297\":4}}],[\"余弦\",{\"1\":{\"94\":1}}],[\"余\",{\"1\":{\"20\":1}}],[\"计算\",{\"0\":{\"72\":1,\"73\":1},\"1\":{\"20\":1,\"70\":3,\"72\":1,\"73\":3,\"74\":1}}],[\"计算机\",{\"1\":{\"17\":1,\"22\":1,\"78\":2,\"79\":1}}],[\"计算机领域\",{\"1\":{\"17\":1}}],[\"转给\",{\"1\":{\"278\":1}}],[\"转会\",{\"1\":{\"242\":1}}],[\"转移\",{\"1\":{\"237\":1}}],[\"转\",{\"1\":{\"21\":3,\"25\":3,\"242\":1}}],[\"转成\",{\"1\":{\"20\":3,\"21\":2,\"25\":2}}],[\"转换\",{\"1\":{\"19\":1,\"37\":2,\"51\":1}}],[\"换句话\",{\"1\":{\"241\":1}}],[\"换种\",{\"1\":{\"128\":1}}],[\"换\",{\"1\":{\"86\":1}}],[\"换算\",{\"0\":{\"20\":1,\"24\":1},\"1\":{\"21\":1,\"24\":2}}],[\"换成\",{\"1\":{\"6\":1,\"95\":1,\"115\":1}}],[\"发生\",{\"1\":{\"237\":1}}],[\"发布\",{\"1\":{\"69\":1}}],[\"发行\",{\"1\":{\"67\":1}}],[\"发现\",{\"1\":{\"19\":1,\"20\":1,\"22\":1,\"127\":1,\"170\":1,\"237\":1}}],[\"发送\",{\"1\":{\"5\":1,\"6\":1,\"86\":1}}],[\"700\",{\"1\":{\"125\":1}}],[\"7.\",{\"0\":{\"95\":1}}],[\"7\",{\"0\":{\"221\":1},\"1\":{\"19\":1,\"21\":1,\"23\":2,\"25\":1,\"37\":4}}],[\"59\",{\"1\":{\"23\":1}}],[\"58\",{\"1\":{\"23\":1}}],[\"57\",{\"1\":{\"23\":1}}],[\"56\",{\"1\":{\"23\":1}}],[\"558369602\",{\"1\":{\"87\":1}}],[\"55\",{\"1\":{\"23\":1}}],[\"54\",{\"1\":{\"23\":1}}],[\"53\",{\"1\":{\"23\":1}}],[\"52\",{\"1\":{\"23\":1,\"25\":1,\"47\":2}}],[\"51\",{\"1\":{\"23\":1}}],[\"5000\",{\"1\":{\"94\":1}}],[\"500\",{\"1\":{\"89\":1,\"91\":2,\"94\":2}}],[\"50\",{\"1\":{\"23\":1,\"89\":2,\"91\":2,\"94\":2,\"279\":1}}],[\"5\",{\"0\":{\"81\":1,\"212\":1,\"219\":1},\"1\":{\"19\":1,\"21\":1,\"23\":2,\"24\":1,\"25\":1,\"89\":4,\"90\":1,\"91\":2,\"94\":2}}],[\"5.\",{\"0\":{\"5\":1,\"93\":1}}],[\"均\",{\"1\":{\"19\":1,\"107\":1}}],[\"！\",{\"1\":{\"19\":1,\"94\":3,\"247\":2,\"248\":1}}],[\"哦\",{\"1\":{\"19\":1,\"112\":1}}],[\"它们\",{\"1\":{\"246\":1}}],[\"它\",{\"1\":{\"19\":1,\"24\":1,\"69\":1,\"74\":1,\"197\":1,\"237\":5,\"241\":1,\"242\":1,\"244\":3,\"246\":1,\"264\":1}}],[\"9.\",{\"0\":{\"97\":1}}],[\"92\",{\"1\":{\"95\":1}}],[\"9999\",{\"1\":{\"94\":1}}],[\"999999999\",{\"1\":{\"241\":1}}],[\"99999\",{\"1\":{\"89\":1}}],[\"9\",{\"1\":{\"19\":3,\"21\":1,\"23\":2,\"25\":2,\"237\":1,\"254\":1,\"262\":1,\"288\":1,\"297\":1}}],[\"97\",{\"1\":{\"19\":1,\"24\":1}}],[\"引导文件\",{\"1\":{\"136\":1}}],[\"引导\",{\"0\":{\"124\":1},\"1\":{\"124\":2,\"136\":3}}],[\"引入\",{\"1\":{\"19\":1,\"33\":1,\"242\":1}}],[\"引用\",{\"0\":{\"150\":1},\"1\":{\"2\":1,\"185\":1,\"237\":1,\"276\":1,\"277\":1,\"295\":1,\"296\":1}}],[\"63035382\",{\"1\":{\"87\":1}}],[\"63\",{\"1\":{\"23\":1,\"25\":1}}],[\"62\",{\"1\":{\"23\":1,\"25\":1}}],[\"61\",{\"1\":{\"23\":1}}],[\"600\",{\"1\":{\"91\":2}}],[\"60\",{\"1\":{\"23\":1,\"89\":1,\"94\":2,\"96\":12}}],[\"64\",{\"1\":{\"23\":2,\"25\":1,\"38\":1,\"136\":1}}],[\"6\",{\"0\":{\"220\":1},\"1\":{\"19\":1,\"20\":2,\"21\":1,\"23\":4,\"24\":3,\"25\":3,\"49\":1,\"52\":1,\"57\":1,\"58\":1,\"91\":2,\"171\":1,\"237\":1}}],[\"65\",{\"1\":{\"19\":1,\"24\":2}}],[\"6.\",{\"0\":{\"6\":1,\"94\":1}}],[\"十进制\",{\"1\":{\"19\":1}}],[\"十六进制\",{\"0\":{\"18\":1},\"1\":{\"21\":1}}],[\"些\",{\"1\":{\"19\":1,\"93\":1,\"126\":1}}],[\"码表\",{\"1\":{\"17\":1}}],[\"兴趣\",{\"1\":{\"17\":1,\"237\":1}}],[\"'\",{\"1\":{\"17\":6,\"19\":6,\"21\":32,\"25\":163,\"44\":5,\"45\":3,\"46\":2,\"47\":2,\"48\":1,\"49\":7,\"50\":6,\"51\":2,\"52\":4,\"53\":7,\"55\":8,\"58\":7,\"59\":6,\"62\":3,\"66\":2,\"67\":11,\"87\":2,\"89\":2,\"90\":2,\"92\":8,\"94\":22,\"95\":2,\"112\":8,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"208\":2,\"209\":6,\"211\":6,\"237\":17,\"241\":2,\"246\":2,\"254\":2}}],[\"x7fff553819d8\",{\"1\":{\"247\":1}}],[\"x7fff553819f8\",{\"1\":{\"247\":5}}],[\"xmodifiers\",{\"1\":{\"176\":1}}],[\"xmlns\",{\"1\":{\"210\":2}}],[\"xml\",{\"1\":{\"98\":3,\"209\":2,\"210\":6,\"211\":3}}],[\"xim\",{\"1\":{\"176\":2}}],[\"xiami\",{\"1\":{\"87\":3}}],[\"xprofile\",{\"1\":{\"176\":1}}],[\"xorg\",{\"1\":{\"167\":1,\"176\":1}}],[\"x86\",{\"1\":{\"136\":1}}],[\"xaoxuu\",{\"1\":{\"98\":1,\"101\":1,\"106\":4,\"112\":1}}],[\"xc0\",{\"1\":{\"25\":1}}],[\"xf0\",{\"1\":{\"25\":1}}],[\"xfc\",{\"1\":{\"25\":1}}],[\"xff\",{\"1\":{\"17\":1}}],[\"x3c\",{\"1\":{\"25\":2}}],[\"x30\",{\"1\":{\"25\":2}}],[\"x3f\",{\"1\":{\"25\":2}}],[\"x31\",{\"1\":{\"17\":1,\"19\":1,\"24\":3}}],[\"x\",{\"1\":{\"23\":2,\"25\":2,\"44\":1,\"48\":3,\"56\":1,\"57\":1,\"59\":2,\"62\":1,\"84\":1,\"89\":2,\"90\":2,\"91\":16,\"93\":1,\"94\":12,\"101\":1,\"106\":4,\"107\":1,\"113\":1,\"114\":1,\"172\":1,\"247\":15,\"248\":25,\"249\":9}}],[\"x64\",{\"1\":{\"20\":2}}],[\"x61\",{\"1\":{\"17\":1,\"19\":1,\"24\":1}}],[\"x41\",{\"1\":{\"17\":1,\"19\":1,\"24\":2}}],[\"x0f\",{\"1\":{\"19\":1,\"21\":3,\"25\":3}}],[\"x0e\",{\"1\":{\"19\":1}}],[\"x0d\",{\"1\":{\"19\":1}}],[\"x0c\",{\"1\":{\"19\":1}}],[\"x0b\",{\"1\":{\"19\":1}}],[\"x0a\",{\"1\":{\"19\":1}}],[\"x09\",{\"1\":{\"19\":1}}],[\"x08\",{\"1\":{\"19\":1}}],[\"x07\",{\"1\":{\"19\":1}}],[\"x06\",{\"1\":{\"19\":1}}],[\"x05\",{\"1\":{\"19\":1}}],[\"x04\",{\"1\":{\"19\":1}}],[\"x03\",{\"1\":{\"19\":1,\"25\":3}}],[\"x02\",{\"1\":{\"19\":1}}],[\"x01\",{\"1\":{\"17\":1,\"19\":2}}],[\"x00\",{\"1\":{\"17\":1,\"19\":2}}],[\"进去\",{\"1\":{\"290\":4}}],[\"进阶篇\",{\"1\":{\"99\":1}}],[\"进阶\",{\"0\":{\"83\":1}}],[\"进入\",{\"1\":{\"77\":1,\"79\":1,\"124\":1,\"128\":1,\"136\":1,\"167\":1,\"172\":1,\"281\":1,\"288\":2}}],[\"进制\",{\"1\":{\"17\":1,\"19\":14,\"20\":2,\"21\":9,\"22\":2,\"24\":10,\"26\":1,\"94\":1},\"2\":{\"27\":1}}],[\"进行\",{\"1\":{\"17\":1,\"20\":1,\"21\":1,\"28\":2,\"31\":1,\"32\":1,\"33\":2,\"34\":3,\"35\":5,\"36\":2,\"40\":1,\"78\":1,\"79\":3,\"86\":1,\"128\":1,\"191\":1,\"200\":2,\"201\":3,\"206\":1,\"211\":1,\"217\":1,\"246\":1,\"247\":1,\"248\":1}}],[\"进程\",{\"1\":{\"0\":2,\"1\":1}}],[\"^\",{\"1\":{\"17\":1,\"19\":1,\"23\":1}}],[\"即便\",{\"1\":{\"237\":1}}],[\"即使\",{\"1\":{\"28\":1,\"44\":1}}],[\"即\",{\"1\":{\"17\":1,\"20\":1,\"30\":1,\"39\":1,\"74\":1,\"86\":1,\"98\":1,\"101\":1,\"119\":1,\"126\":1,\"139\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"201\":1,\"240\":1}}],[\"即可\",{\"1\":{\"11\":1,\"139\":1,\"166\":1,\"209\":1,\"245\":1,\"264\":1,\"273\":1}}],[\"个性化\",{\"0\":{\"107\":1},\"1\":{\"83\":1}}],[\"个数\",{\"1\":{\"25\":1,\"246\":2,\"273\":2,\"276\":1}}],[\"个\",{\"1\":{\"17\":2,\"23\":1,\"25\":3,\"37\":5,\"112\":1,\"137\":1,\"237\":1,\"241\":1}}],[\"个人账户\",{\"1\":{\"166\":1}}],[\"个人\",{\"0\":{\"7\":1},\"1\":{\"7\":1,\"98\":1,\"116\":1,\"246\":1}}],[\"字体\",{\"1\":{\"170\":2}}],[\"字\",{\"1\":{\"92\":1}}],[\"字数统计\",{\"0\":{\"92\":1},\"1\":{\"83\":1,\"92\":2}}],[\"字母\",{\"1\":{\"17\":1}}],[\"字符串\",{\"0\":{\"72\":1},\"1\":{\"21\":5,\"24\":3,\"25\":1,\"72\":1,\"74\":2,\"134\":1}}],[\"字符\",{\"1\":{\"17\":3,\"24\":1,\"25\":2}}],[\"字节\",{\"0\":{\"16\":1},\"1\":{\"16\":1,\"17\":4,\"21\":5,\"24\":2,\"25\":6,\"28\":1,\"36\":5,\"37\":8,\"38\":2,\"39\":6,\"40\":7,\"41\":2,\"70\":4}}],[\"上次\",{\"1\":{\"260\":2}}],[\"上标\",{\"0\":{\"155\":1}}],[\"上述\",{\"1\":{\"32\":1,\"38\":1,\"205\":1,\"224\":1,\"246\":1,\"262\":1,\"290\":2}}],[\"上面\",{\"1\":{\"24\":1,\"86\":1,\"99\":2,\"112\":1,\"113\":1,\"221\":1,\"277\":1}}],[\"上表\",{\"1\":{\"24\":1}}],[\"上\",{\"1\":{\"17\":1,\"21\":1,\"22\":1,\"78\":1,\"85\":1,\"93\":1,\"113\":1,\"115\":2,\"119\":1,\"166\":1,\"189\":1,\"190\":1,\"193\":1,\"200\":1,\"237\":1,\"242\":1,\"250\":1,\"260\":4}}],[\"上时\",{\"1\":{\"1\":1}}],[\"屏幕\",{\"1\":{\"17\":1}}],[\"仅仅\",{\"1\":{\"245\":1}}],[\"仅用\",{\"1\":{\"167\":1}}],[\"仅\",{\"1\":{\"17\":1}}],[\"采用\",{\"1\":{\"17\":1,\"119\":1,\"250\":2,\"268\":2,\"281\":2,\"284\":1,\"290\":1,\"295\":1,\"296\":1}}],[\"汉字\",{\"1\":{\"17\":1,\"170\":1}}],[\"占用\",{\"1\":{\"17\":1,\"126\":2,\"237\":2,\"270\":1,\"272\":2,\"275\":2}}],[\"占\",{\"1\":{\"17\":1,\"23\":1}}],[\"869989\",{\"1\":{\"112\":1}}],[\"8.0\",{\"1\":{\"143\":2}}],[\"8.\",{\"0\":{\"96\":1}}],[\"800\",{\"1\":{\"91\":2}}],[\"80\",{\"1\":{\"91\":2}}],[\"8\",{\"1\":{\"17\":3,\"19\":1,\"21\":1,\"23\":2,\"24\":1,\"25\":1,\"37\":4,\"38\":2,\"39\":3,\"40\":1,\"131\":1,\"137\":1,\"139\":2,\"141\":1,\"144\":1,\"176\":2,\"209\":1,\"210\":2,\"211\":1,\"221\":2,\"270\":1,\"279\":1}}],[\"位补\",{\"1\":{\"24\":2}}],[\"位\",{\"1\":{\"17\":1,\"24\":9,\"25\":2,\"38\":1}}],[\"位置\",{\"1\":{\"4\":1,\"51\":1,\"77\":1,\"93\":1,\"96\":1,\"126\":1,\"134\":1,\"172\":1,\"264\":1,\"268\":6,\"269\":1,\"270\":2,\"277\":3,\"279\":2,\"290\":2}}],[\"最先\",{\"1\":{\"281\":1,\"290\":1}}],[\"最高级\",{\"1\":{\"260\":1}}],[\"最多\",{\"1\":{\"250\":1,\"273\":1}}],[\"最合适\",{\"1\":{\"246\":2}}],[\"最快\",{\"1\":{\"212\":1}}],[\"最弱\",{\"1\":{\"184\":1}}],[\"最轻\",{\"1\":{\"166\":1}}],[\"最少\",{\"1\":{\"126\":1,\"166\":1}}],[\"最佳\",{\"1\":{\"112\":1}}],[\"最大化\",{\"1\":{\"171\":1}}],[\"最大\",{\"1\":{\"94\":2,\"166\":1,\"191\":1,\"276\":1}}],[\"最低\",{\"1\":{\"77\":1}}],[\"最近\",{\"1\":{\"55\":1,\"64\":2,\"86\":1,\"87\":1}}],[\"最终\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"166\":1,\"210\":1,\"219\":1}}],[\"最\",{\"1\":{\"30\":1,\"32\":1,\"94\":2,\"240\":1,\"259\":3,\"264\":1}}],[\"最后\",{\"1\":{\"21\":1,\"77\":2,\"86\":1,\"92\":1,\"125\":1,\"126\":1,\"139\":1,\"168\":1,\"201\":1,\"204\":1,\"209\":1,\"212\":1,\"219\":1,\"221\":1,\"237\":2,\"242\":1,\"256\":1,\"257\":1,\"262\":1,\"268\":1,\"269\":1,\"270\":1,\"277\":1,\"278\":2,\"279\":1,\"287\":1,\"288\":1,\"290\":3,\"297\":1}}],[\"最小化\",{\"1\":{\"171\":1}}],[\"最小\",{\"1\":{\"17\":1,\"94\":1}}],[\"最新\",{\"1\":{\"11\":3,\"12\":2,\"67\":2,\"86\":1,\"208\":1,\"209\":1}}],[\"叫做\",{\"1\":{\"244\":1,\"281\":5,\"290\":3}}],[\"叫\",{\"1\":{\"17\":1,\"181\":2,\"239\":1,\"245\":1,\"277\":1,\"290\":1}}],[\"存满\",{\"1\":{\"277\":2,\"297\":1}}],[\"存放\",{\"1\":{\"100\":1,\"106\":2}}],[\"存储容量\",{\"1\":{\"262\":1,\"273\":2,\"279\":1,\"291\":1,\"297\":1}}],[\"存储空间\",{\"1\":{\"22\":2,\"262\":1,\"273\":2,\"276\":1,\"279\":2,\"291\":1,\"293\":1,\"297\":1}}],[\"存储单元\",{\"1\":{\"17\":1,\"264\":1,\"265\":1,\"270\":1,\"272\":1,\"273\":6,\"276\":2,\"277\":5,\"279\":2,\"281\":2,\"284\":1,\"291\":1,\"293\":1,\"297\":5}}],[\"存储\",{\"1\":{\"17\":1,\"41\":1,\"51\":3,\"78\":1,\"191\":1,\"250\":2,\"264\":1,\"267\":1,\"270\":1,\"272\":1,\"277\":1,\"290\":2}}],[\"存在\",{\"1\":{\"4\":1,\"32\":1,\"64\":1,\"119\":1,\"189\":1,\"190\":1,\"258\":3,\"259\":5,\"260\":4,\"261\":2,\"272\":4,\"276\":1}}],[\"介绍\",{\"0\":{\"17\":1},\"1\":{\"17\":1,\"22\":1,\"28\":1,\"36\":1,\"37\":1,\"83\":1,\"84\":1,\"99\":1,\"237\":1,\"250\":3,\"257\":1,\"262\":1,\"290\":1}}],[\"信息\",{\"0\":{\"69\":1,\"111\":1},\"1\":{\"16\":1,\"55\":4,\"60\":3,\"69\":5,\"70\":2,\"74\":1,\"79\":1,\"86\":1,\"98\":2,\"124\":1,\"128\":2,\"137\":1,\"202\":2,\"205\":2,\"206\":2,\"232\":1,\"240\":2}}],[\"术语\",{\"1\":{\"16\":1}}],[\"常\",{\"1\":{\"185\":1}}],[\"常见于\",{\"1\":{\"188\":1}}],[\"常见\",{\"1\":{\"16\":1,\"19\":1,\"28\":1,\"37\":1,\"69\":1,\"264\":1}}],[\"常用软件\",{\"0\":{\"177\":1}}],[\"常用命令\",{\"0\":{\"102\":1},\"1\":{\"43\":1,\"60\":1}}],[\"常用\",{\"1\":{\"16\":1,\"184\":1,\"189\":1,\"190\":1,\"201\":1,\"202\":1,\"204\":1}}],[\"科普\",{\"1\":{\"16\":1}}],[\"三序\",{\"1\":{\"257\":2}}],[\"三大\",{\"1\":{\"245\":1}}],[\"三类\",{\"1\":{\"180\":1}}],[\"三行\",{\"1\":{\"85\":1,\"242\":1}}],[\"三角形\",{\"1\":{\"81\":1,\"182\":1,\"183\":1}}],[\"三种\",{\"1\":{\"40\":1}}],[\"三段\",{\"1\":{\"39\":1,\"257\":1}}],[\"三次\",{\"1\":{\"39\":1,\"237\":1}}],[\"三\",{\"0\":{\"28\":1,\"238\":1,\"290\":1},\"1\":{\"179\":1}}],[\"三篇\",{\"1\":{\"16\":1}}],[\"三个\",{\"1\":{\"1\":1,\"16\":1,\"25\":1,\"38\":1,\"51\":2,\"69\":1,\"70\":1,\"128\":1,\"261\":1,\"273\":1}}],[\"接口\",{\"1\":{\"181\":1,\"239\":1,\"244\":3}}],[\"接触\",{\"1\":{\"99\":1}}],[\"接下来\",{\"1\":{\"16\":1,\"28\":1,\"250\":1}}],[\"接收\",{\"1\":{\"6\":1,\"37\":2,\"38\":1,\"70\":3}}],[\"说明\",{\"1\":{\"28\":1,\"103\":1,\"106\":1}}],[\"说\",{\"1\":{\"16\":1,\"100\":1,\"242\":1,\"246\":1,\"257\":1,\"260\":1}}],[\"说法\",{\"1\":{\"4\":1}}],[\"更好\",{\"1\":{\"212\":1}}],[\"更换\",{\"1\":{\"97\":1}}],[\"更改\",{\"1\":{\"44\":1,\"64\":4,\"111\":1}}],[\"更\",{\"1\":{\"38\":1,\"81\":1,\"197\":1,\"201\":1,\"245\":1,\"246\":1,\"250\":1,\"265\":1,\"273\":1}}],[\"更加\",{\"1\":{\"28\":1,\"241\":1}}],[\"更有甚者\",{\"1\":{\"16\":1}}],[\"更新\",{\"1\":{\"0\":1,\"1\":1,\"6\":1,\"86\":1,\"134\":1,\"168\":1}}],[\"过后\",{\"1\":{\"91\":1}}],[\"过来\",{\"1\":{\"78\":1}}],[\"过\",{\"1\":{\"16\":1,\"28\":1,\"30\":1,\"31\":1,\"37\":1,\"69\":1,\"72\":1,\"73\":1,\"99\":2,\"119\":1,\"206\":1,\"246\":1,\"260\":1}}],[\"过程\",{\"1\":{\"16\":2,\"19\":1,\"30\":1,\"31\":1,\"36\":1,\"72\":1,\"73\":1,\"125\":2,\"134\":1,\"135\":1,\"142\":1,\"204\":1,\"246\":1}}],[\"”\",{\"1\":{\"16\":3,\"264\":1,\"272\":1}}],[\"请参阅\",{\"1\":{\"99\":1}}],[\"请\",{\"1\":{\"16\":1,\"77\":1,\"79\":1,\"81\":1,\"85\":1,\"94\":1,\"112\":1,\"113\":1,\"119\":2,\"126\":1,\"128\":1,\"178\":1,\"197\":1,\"204\":1}}],[\"“\",{\"1\":{\"16\":3,\"264\":1,\"272\":1}}],[\"求职者\",{\"1\":{\"16\":1}}],[\"许多\",{\"1\":{\"16\":1,\"244\":1}}],[\"题目\",{\"1\":{\"16\":1}}],[\"取栈\",{\"1\":{\"258\":1,\"259\":2,\"260\":1}}],[\"取到\",{\"1\":{\"247\":1,\"248\":1}}],[\"取出\",{\"1\":{\"64\":1,\"269\":1,\"295\":1,\"296\":1}}],[\"取决于\",{\"1\":{\"36\":1}}],[\"取前\",{\"1\":{\"25\":3}}],[\"取低\",{\"1\":{\"21\":1}}],[\"取高\",{\"1\":{\"21\":2}}],[\"取\",{\"1\":{\"16\":1,\"20\":1,\"87\":1,\"260\":1,\"264\":1}}],[\"—\",{\"0\":{\"16\":2,\"28\":2,\"69\":2,\"76\":2,\"83\":2,\"99\":2,\"237\":2,\"238\":2,\"245\":2,\"246\":2,\"250\":2,\"264\":2,\"272\":2,\"281\":2,\"290\":2},\"1\":{\"17\":2,\"19\":2,\"37\":2,\"70\":2,\"237\":2,\"282\":2}}],[\"驱动程序\",{\"1\":{\"78\":1}}],[\"驱动\",{\"1\":{\"15\":1,\"78\":2,\"174\":2}}],[\"写出\",{\"1\":{\"257\":1}}],[\"写入\",{\"1\":{\"125\":1,\"128\":1}}],[\"写文章\",{\"1\":{\"115\":1}}],[\"写作\",{\"1\":{\"100\":2}}],[\"写法\",{\"1\":{\"94\":1}}],[\"写\",{\"1\":{\"14\":1,\"28\":1,\"99\":2,\"237\":1}}],[\"参\",{\"1\":{\"245\":2}}],[\"参复\",{\"1\":{\"237\":1}}],[\"参见\",{\"1\":{\"98\":1}}],[\"参与\",{\"1\":{\"70\":1}}],[\"参数传递\",{\"1\":{\"237\":1}}],[\"参数值\",{\"1\":{\"73\":1}}],[\"参数\",{\"1\":{\"21\":1,\"37\":3,\"38\":1,\"70\":1,\"87\":1,\"104\":1,\"184\":1,\"201\":1,\"202\":1,\"204\":3,\"237\":20,\"245\":6,\"246\":4}}],[\"参照\",{\"1\":{\"14\":1,\"100\":1,\"237\":1,\"267\":1}}],[\"参考资料\",{\"1\":{\"257\":1}}],[\"参考\",{\"1\":{\"13\":1}}],[\"搭配\",{\"1\":{\"14\":1}}],[\"搭建\",{\"0\":{\"7\":1},\"1\":{\"8\":1,\"100\":1,\"106\":1,\"116\":2}}],[\"高亮\",{\"0\":{\"220\":1},\"1\":{\"220\":1}}],[\"高深\",{\"1\":{\"216\":1}}],[\"高度\",{\"1\":{\"166\":1,\"191\":1}}],[\"高手\",{\"1\":{\"78\":1}}],[\"高\",{\"1\":{\"21\":1}}],[\"高效\",{\"1\":{\"14\":1}}],[\"高级\",{\"0\":{\"246\":1},\"1\":{\"13\":1,\"40\":1,\"116\":1,\"143\":1}}],[\"且\",{\"1\":{\"14\":1,\"245\":2,\"260\":2}}],[\"简易\",{\"1\":{\"98\":2}}],[\"简化\",{\"1\":{\"55\":1}}],[\"简要\",{\"1\":{\"37\":1}}],[\"简称\",{\"1\":{\"32\":1,\"33\":2,\"34\":1,\"35\":1,\"242\":1,\"290\":1}}],[\"简洁\",{\"1\":{\"14\":1}}],[\"简单\",{\"1\":{\"1\":1,\"5\":1,\"13\":1,\"32\":1,\"83\":1,\"100\":1,\"241\":1,\"257\":1,\"272\":1}}],[\"脑图\",{\"1\":{\"13\":1}}],[\"数量\",{\"1\":{\"126\":1}}],[\"数篇\",{\"1\":{\"99\":1}}],[\"数\",{\"1\":{\"21\":2,\"94\":1}}],[\"数组\",{\"1\":{\"21\":4,\"25\":3,\"272\":2,\"273\":2}}],[\"数字\",{\"1\":{\"20\":1,\"37\":1,\"94\":1,\"189\":1}}],[\"数值\",{\"1\":{\"19\":1}}],[\"数学公式\",{\"0\":{\"158\":1},\"1\":{\"13\":1}}],[\"数据类型\",{\"1\":{\"265\":1,\"273\":1}}],[\"数据结构\",{\"0\":{\"250\":1,\"264\":1,\"272\":1,\"281\":1,\"290\":1},\"1\":{\"272\":1,\"290\":1}}],[\"数据处理\",{\"1\":{\"28\":1}}],[\"数据编码\",{\"1\":{\"24\":1}}],[\"数据\",{\"0\":{\"28\":1},\"1\":{\"6\":3,\"16\":1,\"17\":2,\"24\":1,\"28\":1,\"30\":2,\"31\":3,\"32\":2,\"33\":1,\"34\":1,\"35\":1,\"37\":5,\"38\":1,\"70\":5,\"72\":1,\"78\":1,\"128\":2,\"237\":1,\"242\":1,\"245\":1,\"272\":7}}],[\"功能\",{\"1\":{\"13\":1,\"83\":1,\"99\":2,\"197\":1,\"212\":1,\"245\":1,\"262\":1}}],[\"还是\",{\"1\":{\"176\":1,\"245\":1,\"257\":1}}],[\"还要\",{\"1\":{\"87\":1}}],[\"还会\",{\"1\":{\"86\":1,\"139\":1}}],[\"还有\",{\"1\":{\"37\":1}}],[\"还原\",{\"1\":{\"28\":1,\"74\":1}}],[\"还\",{\"1\":{\"13\":1,\"28\":1,\"69\":1,\"85\":1,\"100\":1,\"116\":1,\"128\":1,\"173\":2,\"197\":1,\"201\":1,\"241\":1}}],[\"基\",{\"1\":{\"262\":1,\"273\":2,\"279\":1,\"291\":1,\"293\":1,\"297\":1}}],[\"基类\",{\"1\":{\"242\":2,\"243\":2,\"244\":5,\"245\":21}}],[\"基础\",{\"0\":{\"99\":1},\"1\":{\"83\":1,\"100\":1,\"116\":2,\"135\":1,\"166\":1,\"189\":1,\"190\":1,\"200\":1}}],[\"基数\",{\"1\":{\"19\":7,\"21\":3,\"23\":6,\"25\":1}}],[\"基本一致\",{\"1\":{\"40\":1}}],[\"基本\",{\"1\":{\"13\":1,\"83\":1,\"237\":1,\"272\":1}}],[\"基于\",{\"1\":{\"8\":2,\"19\":1,\"33\":1,\"107\":1,\"116\":2,\"178\":1,\"237\":1,\"250\":1}}],[\"文泉艺\",{\"1\":{\"170\":1}}],[\"文本编辑\",{\"1\":{\"216\":1,\"217\":1}}],[\"文本文件\",{\"1\":{\"191\":1}}],[\"文本\",{\"0\":{\"148\":1},\"1\":{\"106\":2}}],[\"文明\",{\"1\":{\"90\":1}}],[\"文字\",{\"0\":{\"90\":1},\"1\":{\"90\":2}}],[\"文章内容\",{\"1\":{\"83\":1}}],[\"文章\",{\"1\":{\"16\":1,\"83\":1,\"85\":1,\"87\":9,\"99\":2,\"100\":1,\"111\":2,\"115\":1}}],[\"文档\",{\"1\":{\"13\":1,\"14\":1,\"100\":1}}],[\"文件类型\",{\"1\":{\"126\":1}}],[\"文件夹\",{\"1\":{\"89\":2,\"90\":2,\"91\":2,\"92\":2,\"93\":1,\"94\":2,\"95\":1,\"96\":1,\"97\":1,\"111\":1,\"112\":3,\"113\":3,\"208\":2,\"209\":4,\"210\":2,\"211\":2}}],[\"文件\",{\"0\":{\"73\":1,\"175\":1,\"199\":1},\"1\":{\"8\":2,\"41\":1,\"44\":3,\"55\":1,\"70\":2,\"73\":4,\"77\":6,\"81\":1,\"87\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"97\":1,\"104\":1,\"105\":2,\"106\":6,\"112\":3,\"113\":3,\"125\":1,\"126\":1,\"134\":1,\"135\":2,\"138\":1,\"142\":1,\"172\":1,\"200\":3,\"201\":6,\"202\":3,\"203\":1,\"204\":3,\"205\":2,\"206\":4,\"208\":1,\"209\":5,\"210\":1,\"211\":6,\"219\":1,\"221\":1,\"277\":1}}],[\"支持\",{\"1\":{\"13\":3,\"38\":1,\"40\":2,\"69\":1,\"77\":2,\"85\":1,\"114\":1,\"121\":1,\"124\":1,\"125\":1,\"144\":1,\"172\":1,\"176\":1,\"200\":1,\"201\":1,\"215\":1,\"217\":2,\"221\":1,\"244\":1,\"246\":3,\"277\":2}}],[\"wps\",{\"1\":{\"177\":2}}],[\"wl\",{\"1\":{\"174\":1}}],[\"wqy\",{\"1\":{\"170\":1}}],[\"wq\",{\"1\":{\"134\":1,\"138\":1,\"172\":1}}],[\"www\",{\"1\":{\"127\":1}}],[\"wrap\",{\"1\":{\"210\":1}}],[\"wrapper\",{\"1\":{\"77\":1}}],[\"write\",{\"1\":{\"52\":4,\"128\":1}}],[\"wechat\",{\"1\":{\"177\":1}}],[\"weight\",{\"1\":{\"90\":1}}],[\"weighted\",{\"1\":{\"53\":1}}],[\"webkitcancelanimationframe\",{\"1\":{\"94\":1}}],[\"webkitrequestanimationframe\",{\"1\":{\"89\":1,\"94\":1}}],[\"webkit\",{\"1\":{\"89\":2}}],[\"we\",{\"1\":{\"52\":1,\"57\":1}}],[\"world\",{\"1\":{\"210\":1}}],[\"word\",{\"1\":{\"92\":4}}],[\"wordcount\",{\"1\":{\"92\":2}}],[\"workspace\",{\"1\":{\"227\":1}}],[\"worktree\",{\"1\":{\"47\":2,\"51\":3,\"66\":1}}],[\"worktrees\",{\"1\":{\"47\":1,\"66\":1}}],[\"working\",{\"1\":{\"44\":1,\"45\":2,\"49\":1,\"54\":1,\"56\":1,\"61\":2}}],[\"would\",{\"1\":{\"50\":1}}],[\"wheels\",{\"1\":{\"189\":1}}],[\"wheel\",{\"1\":{\"138\":3,\"189\":4,\"224\":1}}],[\"where\",{\"1\":{\"59\":1}}],[\"when\",{\"1\":{\"45\":2,\"46\":1,\"51\":2,\"65\":2,\"67\":1}}],[\"what\",{\"1\":{\"50\":1,\"59\":2}}],[\"while\",{\"1\":{\"49\":1,\"53\":1,\"73\":1,\"241\":1,\"258\":2,\"259\":3,\"260\":1,\"261\":2,\"268\":2,\"269\":2,\"270\":1}}],[\"whitespace\",{\"1\":{\"45\":5,\"59\":3}}],[\"which\",{\"1\":{\"44\":1,\"49\":1,\"53\":1,\"54\":1}}],[\"way\",{\"1\":{\"45\":2,\"47\":1,\"66\":1}}],[\"was\",{\"1\":{\"21\":1,\"25\":1}}],[\"wiki\",{\"1\":{\"170\":1}}],[\"win\",{\"1\":{\"142\":1}}],[\"window\",{\"1\":{\"89\":1,\"91\":10,\"94\":14,\"171\":1}}],[\"windows\",{\"0\":{\"11\":1,\"140\":1},\"1\":{\"51\":1,\"117\":1,\"128\":1,\"131\":1,\"136\":1}}],[\"wifi\",{\"1\":{\"125\":1}}],[\"width\",{\"1\":{\"89\":2,\"91\":6,\"94\":9,\"210\":2}}],[\"widget\",{\"1\":{\"87\":1,\"110\":1}}],[\"within\",{\"1\":{\"52\":1}}],[\"without\",{\"1\":{\"45\":1,\"52\":1}}],[\"with\",{\"1\":{\"44\":2,\"45\":3,\"47\":3,\"48\":2,\"50\":4,\"51\":2,\"53\":2,\"56\":1,\"58\":2,\"59\":2,\"61\":2,\"62\":1,\"63\":3,\"65\":1,\"66\":1}}],[\"will\",{\"1\":{\"44\":1,\"49\":3,\"54\":1,\"61\":1}}],[\"w\",{\"1\":{\"23\":2,\"25\":2}}],[\"wget\",{\"1\":{\"12\":2}}],[\"|\",{\"1\":{\"12\":2,\"44\":1,\"46\":7,\"47\":1,\"48\":3,\"50\":10,\"52\":1,\"53\":1,\"54\":2,\"57\":3,\"58\":4,\"59\":4,\"60\":12,\"61\":4,\"62\":3,\"63\":1,\"64\":20,\"66\":1,\"67\":5,\"89\":10,\"91\":8,\"92\":1,\"93\":2,\"94\":32,\"182\":2,\"183\":2,\"248\":3,\"260\":2,\"269\":2}}],[\"47\",{\"1\":{\"23\":1}}],[\"46\",{\"1\":{\"23\":1}}],[\"45\",{\"1\":{\"23\":1,\"89\":4}}],[\"44\",{\"1\":{\"23\":1}}],[\"43\",{\"1\":{\"23\":1}}],[\"42\",{\"1\":{\"23\":1,\"96\":1}}],[\"41\",{\"1\":{\"23\":1}}],[\"404\",{\"1\":{\"299\":1}}],[\"4096\",{\"1\":{\"232\":1}}],[\"403\",{\"1\":{\"172\":1}}],[\"4001\",{\"1\":{\"104\":2}}],[\"4000\",{\"1\":{\"104\":1}}],[\"40\",{\"1\":{\"23\":1,\"130\":1,\"131\":1}}],[\"40.1\",{\"1\":{\"12\":2}}],[\"48\",{\"1\":{\"23\":1}}],[\"49\",{\"1\":{\"19\":1,\"23\":1,\"24\":3}}],[\"4\",{\"0\":{\"80\":1,\"197\":1,\"211\":1,\"218\":1},\"1\":{\"17\":1,\"19\":3,\"20\":3,\"21\":3,\"23\":2,\"24\":4,\"25\":10,\"49\":1,\"52\":1,\"57\":1,\"58\":1,\"99\":1,\"112\":1,\"130\":1,\"131\":1,\"167\":1,\"171\":1,\"189\":2,\"206\":2,\"272\":1}}],[\"4.8\",{\"0\":{\"115\":1}}],[\"4.7\",{\"0\":{\"114\":1}}],[\"4.6\",{\"0\":{\"113\":1}}],[\"4.5\",{\"0\":{\"112\":1}}],[\"4.4\",{\"0\":{\"111\":1}}],[\"4.3\",{\"0\":{\"110\":1}}],[\"4.2\",{\"0\":{\"109\":1}}],[\"4.1\",{\"0\":{\"108\":1}}],[\"4.10.1\",{\"1\":{\"77\":1}}],[\"4.0.3\",{\"1\":{\"77\":1}}],[\"4.\",{\"0\":{\"4\":1,\"26\":1,\"92\":1,\"107\":1}}],[\"已满\",{\"1\":{\"277\":1,\"297\":1}}],[\"已经\",{\"1\":{\"79\":1,\"84\":1,\"93\":1,\"113\":1,\"115\":1,\"116\":1,\"119\":1,\"172\":1,\"176\":1,\"209\":1,\"242\":1,\"243\":2,\"246\":1,\"260\":1,\"273\":1,\"277\":2,\"297\":1}}],[\"已有\",{\"1\":{\"77\":1,\"128\":1,\"245\":2}}],[\"已\",{\"1\":{\"11\":1,\"12\":1,\"96\":1,\"99\":1,\"172\":1,\"202\":1,\"278\":1,\"297\":1}}],[\"查\",{\"1\":{\"94\":1}}],[\"查阅\",{\"1\":{\"17\":1,\"250\":1}}],[\"查看\",{\"1\":{\"11\":1,\"12\":2,\"55\":3,\"64\":1,\"85\":1,\"86\":4,\"128\":1,\"135\":1,\"137\":1,\"167\":1,\"173\":1,\"174\":1,\"202\":1}}],[\"查询\",{\"1\":{\"11\":1}}],[\"#\",{\"1\":{\"11\":3,\"12\":6,\"44\":3,\"48\":1,\"50\":5,\"51\":1,\"54\":5,\"55\":10,\"56\":1,\"57\":1,\"58\":5,\"60\":4,\"62\":1,\"64\":3,\"67\":6,\"85\":13,\"87\":87,\"89\":1,\"90\":1,\"91\":10,\"92\":1,\"93\":1,\"94\":3,\"98\":7,\"103\":1,\"104\":3,\"105\":3,\"106\":16,\"108\":3,\"109\":4,\"110\":2,\"111\":5,\"112\":5,\"113\":1,\"114\":1,\"115\":1,\"127\":3,\"128\":8,\"132\":4,\"133\":6,\"134\":11,\"135\":3,\"136\":13,\"137\":3,\"138\":6,\"139\":6,\"167\":4,\"168\":5,\"169\":2,\"170\":1,\"171\":5,\"172\":9,\"174\":4,\"176\":5,\"177\":5,\"179\":2,\"202\":2,\"204\":1,\"205\":1,\"206\":2,\"224\":4,\"226\":1,\"227\":1,\"232\":6,\"233\":1,\"234\":2,\"235\":1,\"237\":1,\"241\":2,\"242\":2,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"254\":3,\"262\":13,\"270\":3,\"279\":5,\"288\":3,\"291\":2,\"297\":5}}],[\"解析\",{\"1\":{\"237\":3}}],[\"解释\",{\"0\":{\"43\":1},\"1\":{\"28\":1,\"164\":2}}],[\"解密\",{\"1\":{\"26\":1,\"28\":1,\"30\":2,\"37\":3,\"38\":1,\"39\":2}}],[\"解码\",{\"1\":{\"21\":1,\"25\":1,\"26\":1,\"28\":1}}],[\"解压\",{\"1\":{\"11\":1,\"77\":1,\"119\":1,\"200\":2}}],[\"解决问题\",{\"1\":{\"260\":1}}],[\"解决\",{\"1\":{\"0\":1,\"1\":2,\"64\":1,\"171\":1}}],[\"下个\",{\"1\":{\"264\":1}}],[\"下列\",{\"1\":{\"245\":1}}],[\"下标\",{\"0\":{\"155\":1},\"1\":{\"264\":1,\"268\":1,\"269\":2,\"272\":1,\"277\":3,\"278\":9,\"279\":1}}],[\"下次\",{\"1\":{\"139\":1,\"273\":1}}],[\"下图\",{\"1\":{\"119\":1}}],[\"下方\",{\"1\":{\"112\":1}}],[\"下雪\",{\"1\":{\"94\":2}}],[\"下来\",{\"1\":{\"73\":2,\"125\":1,\"126\":1,\"142\":1,\"219\":1}}],[\"下表\",{\"1\":{\"19\":2,\"277\":1}}],[\"下\",{\"1\":{\"16\":1,\"44\":1,\"54\":1,\"77\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":4,\"93\":2,\"94\":2,\"96\":2,\"99\":1,\"103\":1,\"104\":1,\"106\":1,\"111\":1,\"112\":1,\"113\":1,\"124\":1,\"127\":3,\"131\":1,\"134\":1,\"144\":1,\"192\":1,\"194\":1,\"209\":2,\"210\":2,\"219\":1,\"237\":1,\"242\":1,\"244\":1,\"245\":1,\"262\":1,\"264\":1,\"265\":1,\"269\":3,\"270\":1,\"278\":1}}],[\"下载安装\",{\"1\":{\"172\":1}}],[\"下载方式\",{\"1\":{\"172\":1}}],[\"下载\",{\"0\":{\"117\":1,\"141\":1},\"1\":{\"11\":1,\"73\":3,\"77\":9,\"116\":2,\"117\":1,\"119\":6,\"125\":3,\"126\":2,\"134\":1,\"135\":1,\"136\":1,\"141\":2,\"142\":1,\"172\":2,\"216\":1,\"219\":2}}],[\"下面\",{\"1\":{\"1\":2,\"4\":2,\"30\":1,\"51\":1,\"54\":1,\"83\":1,\"85\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":2,\"96\":1,\"98\":1,\"103\":1,\"105\":1,\"106\":2,\"111\":1,\"127\":1,\"138\":2,\"143\":1,\"144\":1,\"167\":1,\"211\":1,\"221\":1,\"264\":1}}],[\"管理局\",{\"1\":{\"69\":1}}],[\"管理\",{\"0\":{\"167\":1,\"175\":1},\"1\":{\"10\":1,\"60\":1,\"85\":1,\"86\":1,\"167\":3,\"233\":1,\"237\":2,\"260\":1}}],[\"较大\",{\"1\":{\"166\":1}}],[\"较为\",{\"1\":{\"25\":1}}],[\"较\",{\"1\":{\"10\":1,\"13\":1,\"70\":1,\"167\":1}}],[\"版本控制\",{\"1\":{\"106\":1}}],[\"版本号\",{\"1\":{\"12\":1,\"79\":1}}],[\"版本\",{\"1\":{\"10\":2,\"11\":5,\"12\":3,\"67\":1,\"77\":6,\"85\":1,\"106\":1,\"119\":1,\"208\":3,\"242\":1}}],[\"ntp\",{\"1\":{\"137\":1}}],[\"ntfs\",{\"1\":{\"136\":2}}],[\"nth\",{\"1\":{\"53\":1}}],[\"nautilus\",{\"1\":{\"175\":1}}],[\"nat\",{\"1\":{\"126\":1,\"127\":1}}],[\"named\",{\"1\":{\"47\":1,\"56\":1,\"57\":1,\"66\":1}}],[\"namespace\",{\"1\":{\"237\":1,\"241\":1,\"242\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1}}],[\"names\",{\"1\":{\"46\":2,\"51\":1,\"53\":1,\"67\":1}}],[\"name\",{\"1\":{\"46\":4,\"48\":1,\"49\":2,\"51\":13,\"54\":4,\"55\":1,\"56\":3,\"58\":3,\"60\":10,\"67\":8,\"112\":5,\"113\":4,\"210\":3,\"230\":2,\"234\":1}}],[\"nbsp\",{\"1\":{\"92\":2}}],[\"npm\",{\"1\":{\"92\":1,\"98\":1,\"106\":2}}],[\"nick\",{\"1\":{\"85\":1}}],[\"next\",{\"1\":{\"262\":1,\"264\":1,\"265\":2,\"267\":1,\"268\":12,\"269\":14,\"270\":5,\"282\":1,\"287\":2,\"288\":3}}],[\"networkmanager\",{\"1\":{\"174\":3}}],[\"net\",{\"1\":{\"112\":1}}],[\"netease\",{\"1\":{\"87\":6,\"177\":1}}],[\"nest\",{\"1\":{\"95\":2}}],[\"needs\",{\"1\":{\"67\":1}}],[\"negotiate\",{\"1\":{\"52\":1}}],[\"negotiation\",{\"1\":{\"52\":2,\"57\":1}}],[\"negotiating\",{\"1\":{\"52\":1}}],[\"newon\",{\"1\":{\"94\":3}}],[\"newurl\",{\"1\":{\"60\":2}}],[\"newbase\",{\"1\":{\"59\":2,\"277\":3,\"297\":3}}],[\"new\",{\"1\":{\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"21\":3,\"25\":3,\"38\":2,\"39\":3,\"40\":2,\"45\":3,\"46\":2,\"47\":5,\"49\":1,\"51\":2,\"60\":1,\"66\":4,\"73\":4,\"86\":2,\"90\":1,\"92\":1,\"94\":2,\"96\":2,\"106\":1,\"128\":1,\"237\":6,\"241\":2,\"242\":2,\"243\":1}}],[\"noreferrer\",{\"1\":{\"87\":1}}],[\"normal\",{\"1\":{\"45\":1,\"50\":1,\"65\":1}}],[\"noopener\",{\"1\":{\"87\":1}}],[\"nofollow\",{\"1\":{\"87\":1,\"112\":2,\"113\":3}}],[\"none\",{\"1\":{\"91\":1,\"94\":1}}],[\"non\",{\"1\":{\"56\":1}}],[\"now\",{\"1\":{\"50\":1,\"96\":7}}],[\"note\",{\"1\":{\"179\":1,\"221\":1}}],[\"notify\",{\"1\":{\"85\":2}}],[\"nothing\",{\"1\":{\"63\":1}}],[\"not\",{\"1\":{\"45\":1,\"46\":2,\"47\":2,\"49\":1,\"52\":2,\"56\":2,\"57\":2,\"59\":1,\"63\":1,\"65\":1,\"66\":1,\"67\":1,\"299\":1}}],[\"notation\",{\"1\":{\"45\":1}}],[\"no\",{\"1\":{\"44\":1,\"45\":1,\"46\":3,\"47\":1,\"48\":1,\"49\":3,\"50\":5,\"52\":3,\"53\":3,\"56\":1,\"57\":1,\"58\":3,\"59\":4,\"60\":1,\"61\":1,\"62\":2,\"64\":2,\"65\":3,\"66\":1,\"67\":5}}],[\"nosuchpaddingexception\",{\"1\":{\"41\":2}}],[\"nosuchalgorithmexception\",{\"1\":{\"41\":3,\"72\":1,\"73\":1}}],[\"nopadding\",{\"1\":{\"37\":1}}],[\"nodename\",{\"1\":{\"91\":4}}],[\"node\",{\"0\":{\"10\":1},\"1\":{\"10\":1,\"11\":1,\"258\":1,\"261\":6,\"262\":2,\"265\":2,\"268\":12,\"269\":14,\"270\":3,\"287\":5,\"288\":8}}],[\"nodejs\",{\"1\":{\"8\":1}}],[\"nul\",{\"1\":{\"44\":2,\"45\":1,\"47\":2,\"50\":4,\"51\":1,\"61\":3,\"63\":3,\"64\":1,\"65\":1}}],[\"null\",{\"1\":{\"19\":1,\"21\":4,\"25\":4,\"38\":2,\"39\":2,\"40\":2,\"41\":3,\"50\":1,\"51\":1,\"65\":1,\"72\":1,\"73\":1,\"221\":1,\"253\":2,\"254\":2,\"255\":1,\"256\":1,\"257\":1,\"258\":3,\"259\":3,\"260\":3,\"267\":1,\"268\":3,\"269\":3,\"270\":1,\"288\":1}}],[\"numberofparticules\",{\"1\":{\"91\":4}}],[\"numbering\",{\"1\":{\"53\":1}}],[\"numbered\",{\"1\":{\"53\":3}}],[\"number\",{\"1\":{\"45\":1,\"48\":2,\"49\":1,\"51\":1,\"52\":1,\"53\":2,\"57\":1,\"62\":2}}],[\"numstat\",{\"1\":{\"45\":1}}],[\"num\",{\"1\":{\"25\":7,\"45\":2,\"55\":2,\"67\":1}}],[\"n\",{\"1\":{\"23\":2,\"25\":2,\"44\":2,\"45\":3,\"46\":2,\"48\":2,\"49\":2,\"50\":1,\"52\":3,\"53\":7,\"56\":3,\"57\":5,\"58\":1,\"59\":2,\"60\":2,\"61\":1,\"62\":2,\"63\":2,\"65\":1,\"67\":5,\"89\":2,\"91\":16,\"134\":1,\"189\":2,\"190\":1,\"269\":2}}],[\"nvm\",{\"1\":{\"10\":1,\"11\":3,\"12\":8}}],[\"因此\",{\"1\":{\"8\":1,\"22\":2,\"24\":3,\"25\":1,\"28\":1,\"30\":1,\"31\":1,\"33\":1,\"39\":1,\"41\":1,\"69\":1,\"78\":1,\"86\":1,\"116\":2,\"128\":1,\"191\":1,\"200\":2,\"204\":1,\"206\":2,\"237\":4,\"242\":1,\"244\":2,\"245\":1,\"246\":1,\"257\":1,\"268\":1,\"272\":1,\"277\":1,\"281\":1,\"295\":1,\"296\":1}}],[\"因为\",{\"1\":{\"4\":1,\"6\":1,\"78\":1,\"100\":1,\"173\":1,\"237\":2,\"240\":1,\"242\":1,\"258\":1,\"272\":1}}],[\"编辑器\",{\"0\":{\"225\":1}}],[\"编辑\",{\"1\":{\"134\":2,\"138\":1,\"143\":1,\"172\":2,\"211\":2}}],[\"编程语言\",{\"1\":{\"25\":1,\"77\":1}}],[\"编程\",{\"0\":{\"246\":1},\"1\":{\"16\":1}}],[\"编码方式\",{\"1\":{\"19\":1}}],[\"编码\",{\"0\":{\"16\":2,\"17\":1,\"18\":1,\"22\":1,\"28\":1,\"69\":1},\"1\":{\"16\":1,\"17\":3,\"19\":2,\"21\":1,\"22\":4,\"24\":6,\"25\":1,\"26\":1,\"28\":3,\"100\":1,\"221\":1}}],[\"编写\",{\"1\":{\"8\":2,\"212\":1,\"245\":1}}],[\"编译器\",{\"1\":{\"237\":7,\"242\":3,\"243\":1,\"244\":1,\"245\":1,\"246\":1}}],[\"编译\",{\"1\":{\"8\":1,\"77\":2,\"81\":1,\"237\":3,\"242\":1,\"244\":2,\"272\":2,\"277\":1}}],[\"与此同时\",{\"1\":{\"241\":1}}],[\"与其\",{\"1\":{\"33\":1}}],[\"与\",{\"0\":{\"166\":1,\"176\":1,\"224\":1,\"237\":1},\"1\":{\"8\":1,\"19\":1,\"25\":2,\"28\":1,\"33\":1,\"34\":2,\"35\":4,\"128\":1,\"171\":1,\"186\":1,\"189\":1,\"190\":1,\"191\":1,\"246\":3,\"277\":1}}],[\"主体\",{\"1\":{\"237\":2,\"244\":1}}],[\"主\",{\"0\":{\"209\":1},\"1\":{\"211\":1}}],[\"主机\",{\"1\":{\"126\":1}}],[\"主板\",{\"1\":{\"124\":3,\"125\":3,\"126\":1,\"128\":1}}],[\"主页\",{\"0\":{\"109\":1},\"1\":{\"86\":2,\"87\":1,\"101\":2,\"112\":2,\"113\":1}}],[\"主要\",{\"1\":{\"31\":1,\"37\":3,\"54\":1,\"70\":1,\"116\":1,\"128\":1,\"179\":1}}],[\"主题目录\",{\"1\":{\"89\":1,\"90\":1,\"91\":1}}],[\"主题\",{\"1\":{\"14\":2,\"15\":1,\"83\":1,\"84\":1,\"85\":1,\"87\":2,\"89\":1,\"90\":1,\"91\":1,\"92\":3,\"93\":1,\"94\":2,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"101\":1,\"106\":6,\"107\":1,\"109\":1,\"110\":1,\"171\":1,\"172\":1}}],[\"主流\",{\"1\":{\"8\":1,\"290\":1}}],[\"主线\",{\"1\":{\"0\":1,\"1\":2,\"2\":1,\"4\":3,\"5\":3,\"6\":2}}],[\"就是\",{\"1\":{\"237\":1,\"239\":1,\"241\":1,\"244\":2,\"246\":1,\"260\":3,\"272\":1,\"290\":1,\"291\":1}}],[\"就\",{\"1\":{\"7\":1,\"28\":1,\"37\":1,\"77\":1,\"86\":1,\"87\":1,\"115\":1,\"216\":1,\"237\":2,\"240\":1,\"242\":3,\"244\":1,\"246\":1,\"264\":1,\"277\":1,\"282\":1,\"288\":1}}],[\"以便\",{\"1\":{\"64\":1}}],[\"以\",{\"1\":{\"41\":1,\"72\":1,\"73\":1,\"86\":1,\"262\":1,\"264\":1,\"273\":1,\"279\":1,\"291\":1,\"297\":1}}],[\"以下内容\",{\"1\":{\"218\":1}}],[\"以下\",{\"1\":{\"37\":1,\"54\":1,\"107\":1,\"128\":1,\"134\":1,\"209\":1,\"242\":1,\"245\":1,\"265\":1}}],[\"以及\",{\"1\":{\"7\":1,\"13\":1,\"38\":1,\"69\":1,\"77\":1,\"191\":1,\"250\":1,\"260\":2}}],[\"以上\",{\"1\":{\"4\":1,\"17\":1,\"40\":1,\"91\":1,\"92\":1,\"133\":1,\"171\":1,\"201\":1}}],[\"买到\",{\"1\":{\"281\":1}}],[\"买\",{\"1\":{\"7\":1}}],[\"页面\",{\"1\":{\"7\":1,\"77\":1,\"79\":2,\"86\":2,\"87\":4,\"89\":1,\"93\":2,\"106\":2,\"113\":1,\"125\":1,\"220\":1,\"232\":1}}],[\"静态方法\",{\"1\":{\"184\":1}}],[\"静态\",{\"1\":{\"7\":1,\"15\":1,\"237\":6,\"242\":3,\"243\":1,\"284\":1}}],[\"只够\",{\"1\":{\"290\":1}}],[\"只读\",{\"1\":{\"241\":1}}],[\"只差\",{\"1\":{\"212\":1}}],[\"只能\",{\"1\":{\"100\":1,\"200\":1,\"205\":1,\"237\":1,\"243\":1,\"244\":1,\"281\":4,\"290\":2}}],[\"只是\",{\"1\":{\"69\":1,\"171\":1,\"197\":1,\"241\":1,\"244\":1,\"246\":1,\"251\":1,\"262\":2,\"272\":1,\"291\":1}}],[\"只要\",{\"1\":{\"28\":2,\"86\":1}}],[\"只\",{\"1\":{\"7\":1,\"28\":1,\"40\":1,\"55\":1,\"73\":1,\"84\":1,\"87\":1,\"93\":1,\"109\":2,\"113\":1,\"128\":2,\"166\":1,\"167\":1,\"200\":1,\"201\":1,\"215\":1,\"216\":1,\"239\":1,\"241\":1,\"242\":3,\"245\":2,\"250\":1,\"264\":1,\"268\":1,\"282\":2,\"290\":2}}],[\"只不过\",{\"1\":{\"6\":1}}],[\"只有\",{\"1\":{\"6\":1,\"26\":1,\"128\":1,\"237\":2,\"245\":1,\"250\":1,\"276\":1}}],[\"b2\",{\"1\":{\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2}}],[\"b1\",{\"1\":{\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2}}],[\"blank\",{\"1\":{\"87\":1}}],[\"blog\",{\"1\":{\"103\":3,\"106\":5}}],[\"blob\",{\"1\":{\"51\":4}}],[\"block\",{\"1\":{\"33\":1}}],[\"bcdfc\",{\"1\":{\"87\":1}}],[\"bgm\",{\"0\":{\"87\":1}}],[\"birthday\",{\"1\":{\"241\":3,\"242\":3}}],[\"bin\",{\"1\":{\"138\":1,\"143\":4,\"144\":1,\"224\":2}}],[\"binary\",{\"1\":{\"53\":2}}],[\"bios\",{\"0\":{\"130\":1},\"1\":{\"121\":1,\"124\":1,\"126\":1,\"127\":1,\"128\":1,\"136\":1}}],[\"bittree\",{\"1\":{\"251\":1,\"253\":1,\"254\":3,\"255\":1,\"256\":1,\"257\":1,\"258\":2,\"259\":2,\"260\":4,\"261\":2,\"262\":18}}],[\"bitnode\",{\"1\":{\"251\":3,\"262\":3}}],[\"bits\",{\"1\":{\"47\":1}}],[\"bit\",{\"1\":{\"17\":3,\"19\":1,\"20\":1,\"23\":1,\"44\":1}}],[\"box\",{\"1\":{\"92\":1}}],[\"bold\",{\"1\":{\"90\":1}}],[\"border\",{\"1\":{\"89\":3}}],[\"body\",{\"1\":{\"53\":2,\"89\":2,\"90\":2,\"94\":3,\"190\":3}}],[\"boundary\",{\"1\":{\"53\":2}}],[\"bootstrap\",{\"1\":{\"235\":1}}],[\"bootloader\",{\"1\":{\"136\":1}}],[\"boot\",{\"1\":{\"131\":1,\"133\":4,\"136\":2}}],[\"bootcss\",{\"1\":{\"91\":1,\"95\":1}}],[\"bool\",{\"1\":{\"51\":5,\"248\":2}}],[\"book\",{\"1\":{\"32\":1}}],[\"both\",{\"1\":{\"46\":1}}],[\"bypass\",{\"1\":{\"50\":2,\"56\":1,\"58\":1}}],[\"by\",{\"1\":{\"45\":1,\"48\":1,\"50\":2,\"53\":2,\"56\":1,\"57\":2,\"59\":1,\"62\":1,\"237\":17}}],[\"byteslen\",{\"1\":{\"25\":2}}],[\"byte\",{\"1\":{\"17\":4,\"19\":1,\"21\":6,\"25\":7,\"38\":6,\"39\":6,\"40\":6,\"41\":4,\"51\":1,\"70\":1,\"72\":1,\"73\":3}}],[\"beginpath\",{\"1\":{\"91\":4,\"94\":1}}],[\"begin\",{\"1\":{\"59\":1}}],[\"become\",{\"1\":{\"59\":1}}],[\"because\",{\"1\":{\"44\":1}}],[\"being\",{\"1\":{\"59\":2}}],[\"behind\",{\"1\":{\"50\":2,\"65\":2}}],[\"before\",{\"1\":{\"49\":1,\"55\":1,\"56\":2,\"57\":2,\"59\":1,\"60\":1,\"89\":2}}],[\"be\",{\"1\":{\"44\":3,\"45\":2,\"49\":4,\"50\":1,\"52\":2,\"54\":3,\"56\":2,\"57\":2,\"58\":5,\"59\":1,\"60\":2,\"61\":2,\"65\":1}}],[\"ba\",{\"1\":{\"93\":1}}],[\"baidu\",{\"1\":{\"93\":4,\"127\":1}}],[\"bare\",{\"1\":{\"49\":3,\"54\":3}}],[\"backupnode\",{\"1\":{\"260\":4}}],[\"backup\",{\"1\":{\"260\":5}}],[\"backgroundcolor\",{\"1\":{\"112\":1}}],[\"background\",{\"1\":{\"89\":3}}],[\"back\",{\"1\":{\"45\":1}}],[\"badpaddingexception\",{\"1\":{\"41\":2}}],[\"basicactivity\",{\"1\":{\"77\":1}}],[\"baseclass\",{\"1\":{\"244\":1}}],[\"based\",{\"1\":{\"45\":1,\"52\":1,\"53\":1,\"57\":1}}],[\"base\",{\"1\":{\"25\":1,\"53\":2,\"54\":1,\"59\":5,\"135\":1}}],[\"base64str\",{\"1\":{\"25\":12}}],[\"base64strbuff\",{\"1\":{\"25\":11}}],[\"base64\",{\"0\":{\"22\":1},\"1\":{\"16\":2,\"22\":2,\"23\":1,\"24\":9,\"25\":11,\"26\":1,\"30\":1},\"2\":{\"27\":1}}],[\"bash\",{\"1\":{\"12\":2,\"138\":1,\"224\":2}}],[\"breastfeedanimal\",{\"1\":{\"241\":12,\"242\":12,\"245\":16}}],[\"break\",{\"1\":{\"25\":11,\"269\":1,\"278\":1}}],[\"brew\",{\"1\":{\"215\":1}}],[\"broadcom\",{\"1\":{\"174\":1}}],[\"broadcastreceiver\",{\"1\":{\"6\":1}}],[\"br\",{\"1\":{\"112\":1}}],[\"branchname\",{\"1\":{\"64\":1}}],[\"branches\",{\"1\":{\"46\":8,\"52\":2,\"57\":2,\"59\":1,\"60\":1}}],[\"branch\",{\"0\":{\"46\":1},\"1\":{\"46\":32,\"47\":13,\"49\":7,\"50\":2,\"53\":1,\"54\":5,\"57\":1,\"59\":5,\"60\":3,\"64\":1,\"65\":2,\"66\":10,\"106\":1,\"112\":1,\"115\":1}}],[\"b\",{\"1\":{\"21\":4,\"23\":2,\"25\":2,\"47\":4,\"49\":1,\"54\":3,\"65\":1,\"182\":3,\"184\":5,\"186\":7,\"187\":7,\"246\":4}}],[\"buryit\",{\"1\":{\"90\":1}}],[\"buff\",{\"1\":{\"73\":3}}],[\"but\",{\"1\":{\"56\":1,\"58\":1,\"59\":1,\"61\":1}}],[\"butterfly\",{\"1\":{\"14\":1}}],[\"buildscript\",{\"1\":{\"208\":1,\"209\":1}}],[\"build\",{\"1\":{\"45\":2,\"208\":4,\"209\":3,\"211\":2}}],[\"bundles\",{\"1\":{\"49\":1}}],[\"bundle\",{\"1\":{\"5\":1,\"49\":1,\"210\":2}}],[\"提权\",{\"1\":{\"138\":2}}],[\"提\",{\"1\":{\"86\":1}}],[\"提供\",{\"1\":{\"70\":1,\"87\":1,\"166\":1,\"191\":1,\"200\":1,\"203\":1,\"244\":1,\"245\":1,\"275\":1}}],[\"提示\",{\"0\":{\"160\":1},\"1\":{\"64\":1,\"78\":1,\"79\":2,\"83\":1,\"119\":1,\"172\":1,\"219\":1}}],[\"提交者\",{\"1\":{\"55\":1}}],[\"提交\",{\"1\":{\"44\":1,\"50\":4,\"54\":2,\"55\":10,\"64\":3,\"67\":4}}],[\"提出\",{\"1\":{\"41\":1}}],[\"提到\",{\"1\":{\"31\":1,\"243\":1,\"281\":1}}],[\"提下\",{\"1\":{\"6\":1}}],[\"提高\",{\"1\":{\"0\":1,\"245\":1}}],[\"复制到\",{\"1\":{\"77\":1,\"219\":1}}],[\"复制\",{\"1\":{\"77\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"172\":2,\"221\":1,\"237\":2}}],[\"复用\",{\"1\":{\"6\":1,\"262\":1,\"281\":1}}],[\"复杂度\",{\"1\":{\"241\":1}}],[\"复杂\",{\"1\":{\"1\":1,\"25\":1}}],[\"用到\",{\"1\":{\"261\":1,\"262\":1}}],[\"用来\",{\"1\":{\"98\":1,\"215\":1,\"237\":1}}],[\"用过\",{\"1\":{\"84\":1}}],[\"用户名\",{\"1\":{\"54\":1,\"101\":1,\"115\":1,\"138\":1}}],[\"用户\",{\"0\":{\"110\":1,\"138\":1,\"224\":1},\"1\":{\"51\":1,\"54\":1,\"86\":1,\"93\":2,\"130\":1,\"131\":3,\"132\":1,\"133\":2,\"138\":1,\"224\":1}}],[\"用于\",{\"1\":{\"22\":1,\"40\":1,\"54\":1,\"70\":1,\"72\":1,\"87\":1,\"135\":1,\"206\":1,\"237\":1,\"244\":2}}],[\"用\",{\"1\":{\"8\":1,\"16\":1,\"17\":1,\"19\":2,\"20\":1,\"24\":1,\"30\":1,\"32\":1,\"34\":1,\"35\":1,\"38\":1,\"39\":1,\"54\":1,\"69\":1,\"85\":1,\"99\":1,\"100\":1,\"104\":1,\"139\":1,\"179\":1,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":2,\"189\":1,\"190\":1,\"205\":1,\"208\":1,\"216\":1,\"237\":6,\"240\":2,\"241\":2,\"242\":1,\"245\":1,\"247\":1,\"248\":1,\"260\":1,\"281\":1}}],[\"用途\",{\"0\":{\"71\":1},\"1\":{\"6\":1,\"237\":1,\"241\":1}}],[\"用作\",{\"1\":{\"6\":1}}],[\"用法\",{\"1\":{\"6\":1,\"35\":1,\"197\":1,\"216\":1,\"247\":1,\"248\":1}}],[\"所有\",{\"1\":{\"106\":1,\"113\":2,\"115\":1,\"237\":3,\"242\":1,\"244\":1,\"245\":2,\"261\":1,\"270\":1,\"273\":1}}],[\"所\",{\"1\":{\"22\":1,\"237\":1,\"243\":1,\"246\":1,\"273\":1}}],[\"所示\",{\"1\":{\"6\":1}}],[\"所以\",{\"1\":{\"6\":1,\"20\":1,\"93\":1,\"241\":1,\"242\":2,\"244\":1,\"261\":1,\"291\":1}}],[\"对表\",{\"1\":{\"272\":1}}],[\"对外\",{\"1\":{\"239\":1,\"240\":1}}],[\"对齐\",{\"0\":{\"162\":1},\"1\":{\"206\":5}}],[\"对比\",{\"1\":{\"28\":1,\"77\":1,\"100\":1,\"237\":1,\"260\":1,\"268\":1}}],[\"对于\",{\"1\":{\"28\":1,\"268\":1}}],[\"对应\",{\"1\":{\"24\":3,\"26\":1,\"41\":1,\"128\":1,\"204\":3}}],[\"对称\",{\"1\":{\"16\":1,\"30\":5,\"31\":2,\"40\":1}}],[\"对\",{\"1\":{\"10\":1,\"16\":1,\"17\":1,\"20\":2,\"21\":1,\"24\":2,\"25\":1,\"32\":1,\"33\":1,\"36\":1,\"37\":2,\"41\":3,\"67\":4,\"69\":1,\"70\":1,\"81\":1,\"86\":1,\"126\":1,\"128\":1,\"134\":1,\"168\":1,\"184\":1,\"189\":1,\"200\":2,\"201\":5,\"203\":1,\"204\":1,\"206\":1,\"227\":1,\"237\":1,\"240\":2,\"241\":1,\"244\":1,\"247\":1,\"260\":1,\"264\":2,\"272\":3,\"290\":3}}],[\"对此\",{\"1\":{\"6\":1}}],[\"对象\",{\"0\":{\"237\":1},\"1\":{\"6\":4,\"37\":2,\"70\":1,\"94\":1,\"184\":1,\"185\":1,\"192\":2,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"237\":17,\"241\":4,\"242\":4,\"243\":2,\"244\":7,\"245\":5}}],[\"间\",{\"1\":{\"6\":1}}],[\"间通信\",{\"0\":{\"0\":1}}],[\"才能\",{\"1\":{\"26\":1,\"237\":1,\"242\":3}}],[\"才\",{\"1\":{\"6\":1,\"176\":1,\"237\":1,\"242\":1}}],[\"牵强\",{\"1\":{\"6\":1}}],[\"做\",{\"1\":{\"6\":1,\"8\":1,\"21\":1,\"22\":2,\"25\":1,\"37\":1,\"39\":4,\"70\":1,\"93\":1,\"100\":1,\"111\":1,\"112\":1,\"113\":1,\"138\":1,\"212\":1,\"242\":3,\"244\":1,\"245\":1,\"247\":1,\"260\":1}}],[\"如想\",{\"1\":{\"208\":1}}],[\"如父\",{\"1\":{\"181\":1}}],[\"如上\",{\"1\":{\"172\":1}}],[\"如图所示\",{\"1\":{\"142\":1,\"179\":1}}],[\"如图\",{\"1\":{\"77\":1,\"86\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"96\":1,\"208\":1,\"210\":2,\"246\":1}}],[\"如需\",{\"1\":{\"73\":1,\"124\":1,\"178\":1,\"204\":1}}],[\"如下\",{\"1\":{\"8\":1,\"12\":1,\"60\":1,\"77\":1,\"81\":1,\"86\":1,\"106\":1,\"112\":1,\"113\":1,\"118\":1,\"119\":1,\"125\":1,\"128\":1,\"142\":1,\"171\":1,\"204\":1,\"208\":1,\"209\":2,\"211\":1,\"237\":1,\"242\":1,\"272\":2}}],[\"如\",{\"1\":{\"6\":1,\"13\":1,\"36\":1,\"37\":1,\"54\":1,\"58\":1,\"64\":1,\"67\":1,\"103\":1,\"124\":1,\"125\":1,\"128\":3,\"131\":1,\"136\":1,\"181\":1,\"189\":1,\"190\":1,\"201\":3,\"272\":4,\"290\":1}}],[\"如何\",{\"1\":{\"6\":1,\"83\":2,\"93\":1,\"119\":1}}],[\"如果\",{\"1\":{\"1\":1,\"3\":1,\"32\":1,\"77\":1,\"78\":2,\"79\":1,\"85\":1,\"87\":1,\"98\":1,\"99\":1,\"100\":1,\"111\":1,\"119\":3,\"126\":2,\"128\":1,\"131\":1,\"174\":1,\"237\":2,\"241\":1,\"242\":1,\"244\":3,\"245\":10,\"258\":1,\"259\":1,\"260\":3,\"279\":1,\"287\":1,\"290\":1,\"295\":1,\"296\":1}}],[\"了解\",{\"1\":{\"37\":1,\"124\":1,\"125\":1,\"178\":1,\"212\":1}}],[\"了\",{\"1\":{\"6\":1,\"7\":1,\"16\":1,\"22\":1,\"31\":1,\"37\":1,\"69\":1,\"70\":3,\"77\":1,\"83\":1,\"84\":1,\"93\":2,\"99\":2,\"100\":1,\"111\":1,\"115\":1,\"171\":1,\"173\":1,\"212\":1,\"237\":2,\"241\":2,\"242\":2,\"243\":1,\"244\":2,\"245\":6,\"246\":1,\"250\":4,\"257\":1,\"260\":1,\"261\":2,\"262\":1,\"272\":1,\"282\":1}}],[\"演示\",{\"1\":{\"6\":1}}],[\"传给\",{\"1\":{\"295\":1,\"296\":1}}],[\"传值\",{\"1\":{\"295\":1,\"296\":1}}],[\"传统模式\",{\"1\":{\"124\":1}}],[\"传送门\",{\"1\":{\"99\":2}}],[\"传输\",{\"1\":{\"22\":1,\"72\":1,\"73\":1}}],[\"传递\",{\"1\":{\"6\":2}}],[\"传递数据\",{\"0\":{\"6\":1}}],[\"传入\",{\"1\":{\"4\":1}}],[\"ubuntu\",{\"0\":{\"223\":1},\"1\":{\"223\":1}}],[\"ultraedit\",{\"1\":{\"216\":1}}],[\"uml\",{\"0\":{\"179\":1},\"1\":{\"179\":1,\"181\":1,\"191\":1,\"218\":1,\"219\":1},\"2\":{\"198\":1}}],[\"utc\",{\"1\":{\"137\":1}}],[\"utraiso\",{\"1\":{\"125\":1}}],[\"utf\",{\"1\":{\"17\":1,\"139\":2,\"176\":2,\"209\":1,\"210\":2,\"211\":1,\"221\":2}}],[\"uefi\",{\"0\":{\"131\":1},\"1\":{\"121\":1,\"124\":2,\"126\":1,\"127\":1,\"128\":1,\"136\":1}}],[\"url\",{\"1\":{\"51\":2,\"60\":6,\"87\":1,\"98\":4,\"112\":5,\"113\":4}}],[\"urlmatch\",{\"1\":{\"51\":1}}],[\"uri\",{\"1\":{\"49\":3}}],[\"updownleftright\",{\"1\":{\"191\":1}}],[\"updating\",{\"1\":{\"44\":1,\"47\":1,\"52\":1,\"61\":1,\"63\":1,\"66\":1}}],[\"updatecoords\",{\"1\":{\"91\":4}}],[\"updated\",{\"1\":{\"52\":1,\"57\":1}}],[\"updates\",{\"1\":{\"52\":2,\"57\":2,\"58\":2}}],[\"update\",{\"1\":{\"44\":2,\"47\":1,\"48\":1,\"52\":4,\"56\":2,\"57\":2,\"59\":3,\"60\":1,\"62\":1,\"66\":1,\"70\":2,\"73\":1,\"91\":6,\"94\":2,\"225\":1}}],[\"up\",{\"0\":{\"193\":1},\"1\":{\"59\":1,\"63\":1,\"193\":3}}],[\"upload\",{\"1\":{\"49\":2,\"52\":2,\"57\":2}}],[\"upstream\",{\"1\":{\"46\":6,\"49\":1,\"52\":2,\"53\":2,\"57\":2,\"58\":2,\"59\":7}}],[\"unmatch\",{\"1\":{\"63\":2}}],[\"unmerged\",{\"1\":{\"47\":2}}],[\"under\",{\"1\":{\"59\":1}}],[\"unchanged\",{\"1\":{\"59\":2}}],[\"unrelated\",{\"1\":{\"56\":2,\"57\":2}}],[\"unregister\",{\"1\":{\"5\":1}}],[\"until\",{\"1\":{\"55\":1}}],[\"untracked\",{\"1\":{\"44\":1,\"50\":2,\"64\":4,\"65\":4}}],[\"unparented\",{\"1\":{\"47\":1,\"66\":1}}],[\"unshallow\",{\"1\":{\"52\":1,\"57\":1}}],[\"unset\",{\"1\":{\"46\":2,\"51\":2}}],[\"unsafe\",{\"1\":{\"45\":1}}],[\"unidiff\",{\"1\":{\"45\":1}}],[\"using\",{\"1\":{\"237\":1,\"241\":1,\"242\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1}}],[\"us\",{\"1\":{\"139\":1,\"176\":1}}],[\"usr\",{\"1\":{\"137\":1}}],[\"ustc\",{\"1\":{\"134\":1,\"168\":1}}],[\"usb\",{\"1\":{\"78\":1,\"79\":3}}],[\"usage\",{\"1\":{\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1}}],[\"usermod\",{\"1\":{\"224\":1}}],[\"useradd\",{\"1\":{\"138\":1,\"224\":2}}],[\"users\",{\"1\":{\"54\":1}}],[\"user\",{\"1\":{\"51\":3,\"55\":2,\"59\":1,\"67\":1,\"87\":1,\"98\":1,\"108\":1,\"110\":1,\"111\":1,\"112\":1,\"230\":2,\"232\":1}}],[\"used\",{\"1\":{\"49\":1,\"50\":1,\"54\":1,\"58\":1}}],[\"use\",{\"1\":{\"11\":1,\"12\":1,\"45\":1,\"46\":3,\"47\":1,\"49\":6,\"50\":3,\"51\":7,\"52\":3,\"53\":6,\"54\":1,\"56\":2,\"57\":4,\"58\":3,\"59\":6,\"62\":1,\"67\":2,\"91\":2}}],[\"u\",{\"1\":{\"23\":2,\"25\":2,\"44\":2,\"46\":1,\"49\":1,\"50\":2,\"52\":1,\"58\":1,\"64\":3,\"65\":1,\"67\":2,\"125\":2,\"135\":1}}],[\"uid\",{\"1\":{\"1\":3}}],[\"ui\",{\"1\":{\"0\":2,\"1\":1,\"2\":1,\"3\":1,\"5\":1,\"6\":1}}],[\"监听\",{\"1\":{\"5\":2}}],[\"注\",{\"1\":{\"221\":1,\"273\":1,\"290\":1}}],[\"注脚\",{\"0\":{\"154\":1},\"1\":{\"164\":2}}],[\"注释\",{\"1\":{\"106\":1,\"168\":1}}],[\"注意\",{\"1\":{\"39\":1,\"77\":1,\"92\":1,\"211\":1,\"232\":1,\"237\":1,\"246\":1,\"247\":1,\"248\":2}}],[\"注销\",{\"1\":{\"5\":1,\"171\":1,\"176\":1}}],[\"注册\",{\"1\":{\"5\":1,\"85\":2,\"93\":1,\"101\":1,\"210\":1}}],[\"注解\",{\"1\":{\"5\":1}}],[\"阻塞\",{\"1\":{\"5\":2,\"241\":1}}],[\"lnode\",{\"1\":{\"265\":7,\"267\":2,\"268\":3,\"270\":2}}],[\"ln\",{\"1\":{\"137\":1,\"227\":1}}],[\"lck\",{\"1\":{\"77\":1}}],[\"lf\",{\"1\":{\"51\":1}}],[\"last\",{\"1\":{\"290\":1}}],[\"lastnode\",{\"1\":{\"260\":4}}],[\"labs\",{\"1\":{\"215\":1}}],[\"launcher\",{\"1\":{\"210\":1}}],[\"landanimal\",{\"1\":{\"241\":2,\"242\":3,\"245\":2}}],[\"landscape\",{\"1\":{\"106\":2}}],[\"lang\",{\"1\":{\"85\":1,\"176\":2}}],[\"later\",{\"1\":{\"44\":1,\"49\":1,\"61\":1}}],[\"layout\",{\"1\":{\"5\":1,\"87\":2,\"89\":2,\"90\":2,\"91\":2,\"92\":2,\"93\":1,\"94\":2,\"95\":2,\"96\":1,\"97\":2,\"112\":1,\"113\":2,\"210\":6}}],[\"levelordertraverse\",{\"1\":{\"261\":1,\"262\":1}}],[\"legacy\",{\"1\":{\"124\":1}}],[\"less\",{\"1\":{\"106\":1}}],[\"left\",{\"0\":{\"195\":1},\"1\":{\"89\":2,\"90\":1,\"91\":3,\"94\":3,\"195\":3,\"237\":12,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":2,\"259\":3,\"260\":3,\"261\":2,\"262\":1}}],[\"leftbit\",{\"1\":{\"25\":10}}],[\"len\",{\"1\":{\"73\":3,\"237\":18,\"272\":2}}],[\"length\",{\"1\":{\"21\":3,\"25\":5,\"53\":2,\"89\":1,\"90\":1,\"91\":4,\"96\":3,\"237\":57,\"262\":1,\"273\":1,\"276\":1,\"277\":6,\"278\":9,\"279\":2,\"291\":1,\"293\":1,\"294\":1,\"295\":2,\"296\":2,\"297\":4}}],[\"let\",{\"1\":{\"59\":1}}],[\"letter\",{\"1\":{\"53\":5}}],[\"leancloud\",{\"1\":{\"85\":4}}],[\"lease\",{\"1\":{\"58\":1}}],[\"least\",{\"1\":{\"45\":2}}],[\"leave\",{\"1\":{\"45\":1,\"56\":1,\"85\":1}}],[\"leading\",{\"1\":{\"45\":1}}],[\"leonard\",{\"1\":{\"41\":1}}],[\"l\",{\"1\":{\"21\":5,\"23\":2,\"25\":2,\"46\":2,\"47\":1,\"49\":1,\"51\":1,\"67\":3,\"128\":1,\"276\":5,\"277\":17,\"278\":15,\"279\":5}}],[\"lts\",{\"1\":{\"12\":1}}],[\"ls\",{\"1\":{\"12\":1}}],[\"library\",{\"1\":{\"211\":6}}],[\"like\",{\"1\":{\"85\":1}}],[\"limit\",{\"1\":{\"47\":1,\"98\":1}}],[\"linklist\",{\"1\":{\"265\":5,\"267\":3,\"268\":11,\"269\":6,\"270\":15}}],[\"linknode\",{\"1\":{\"265\":2,\"270\":2}}],[\"linktype\",{\"1\":{\"265\":3,\"268\":3,\"269\":2,\"270\":7}}],[\"linkqueue\",{\"1\":{\"262\":4,\"282\":4,\"287\":1,\"288\":7}}],[\"links\",{\"1\":{\"112\":2}}],[\"link\",{\"1\":{\"85\":1,\"112\":1,\"267\":1,\"268\":5,\"269\":2,\"270\":8}}],[\"line3\",{\"1\":{\"237\":10}}],[\"line2\",{\"1\":{\"237\":34}}],[\"line1\",{\"1\":{\"237\":33}}],[\"linearlayout\",{\"1\":{\"210\":2}}],[\"linear\",{\"1\":{\"91\":2,\"94\":1}}],[\"linewidth\",{\"1\":{\"91\":8}}],[\"line\",{\"1\":{\"45\":3,\"51\":1,\"237\":122}}],[\"lines\",{\"1\":{\"45\":3,\"59\":1,\"67\":1}}],[\"linuxqq\",{\"1\":{\"177\":1}}],[\"linux\",{\"0\":{\"12\":1},\"1\":{\"54\":1,\"78\":3,\"117\":1,\"128\":3,\"132\":2,\"135\":2,\"174\":2}}],[\"listsize\",{\"1\":{\"262\":1,\"273\":1,\"276\":1,\"277\":3,\"279\":2,\"291\":1,\"293\":1,\"297\":4}}],[\"listincrement\",{\"1\":{\"262\":1,\"277\":2,\"279\":1,\"291\":1,\"297\":3}}],[\"listing\",{\"1\":{\"67\":1}}],[\"listed\",{\"1\":{\"44\":1}}],[\"list\",{\"1\":{\"11\":1,\"12\":1,\"46\":4,\"51\":2,\"59\":3,\"63\":1,\"64\":2,\"65\":1,\"67\":3,\"85\":1,\"87\":2,\"189\":1,\"190\":1,\"232\":1,\"262\":1,\"275\":5,\"276\":2,\"279\":1,\"291\":1,\"293\":2,\"297\":1}}],[\"love\",{\"1\":{\"89\":2}}],[\"lookup\",{\"1\":{\"51\":1}}],[\"loop\",{\"1\":{\"4\":1,\"94\":1}}],[\"looper\",{\"1\":{\"4\":4}}],[\"location\",{\"1\":{\"51\":1}}],[\"locale\",{\"1\":{\"139\":2,\"176\":1}}],[\"localtime\",{\"1\":{\"137\":1}}],[\"locally\",{\"1\":{\"58\":2}}],[\"localhost\",{\"1\":{\"54\":1}}],[\"local\",{\"1\":{\"46\":1,\"47\":1,\"49\":3,\"51\":3,\"52\":2,\"54\":3,\"57\":1,\"61\":1,\"66\":2,\"67\":1}}],[\"longer\",{\"1\":{\"52\":2,\"57\":1}}],[\"long\",{\"1\":{\"50\":2,\"65\":2,\"232\":1}}],[\"low\",{\"1\":{\"21\":4}}],[\"logo\",{\"0\":{\"108\":1,\"110\":1},\"1\":{\"109\":4,\"110\":1}}],[\"log\",{\"0\":{\"55\":1},\"1\":{\"1\":1,\"55\":10,\"56\":1,\"57\":1,\"64\":1}}],[\"rf\",{\"1\":{\"235\":1}}],[\"rfc\",{\"1\":{\"53\":2}}],[\"rss\",{\"0\":{\"98\":1},\"1\":{\"98\":3,\"112\":1}}],[\"rsa4096\",{\"1\":{\"232\":1}}],[\"rsa\",{\"0\":{\"41\":1},\"1\":{\"28\":1,\"41\":2,\"232\":1},\"2\":{\"42\":1}}],[\"right\",{\"0\":{\"196\":1},\"1\":{\"179\":1,\"196\":3,\"221\":1,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":2,\"259\":2,\"260\":3,\"261\":2,\"262\":1}}],[\"ribbon\",{\"1\":{\"97\":1}}],[\"rivest\",{\"1\":{\"41\":1}}],[\"rgba\",{\"1\":{\"94\":3}}],[\"rgb\",{\"1\":{\"89\":1,\"94\":1}}],[\"rm\",{\"0\":{\"63\":1},\"1\":{\"63\":2,\"235\":1}}],[\"radius\",{\"1\":{\"89\":3,\"91\":12}}],[\"random\",{\"1\":{\"87\":1,\"89\":3,\"91\":18,\"94\":13}}],[\"range\",{\"1\":{\"53\":2}}],[\"rather\",{\"1\":{\"57\":1}}],[\"raw\",{\"1\":{\"12\":2}}],[\"rc\",{\"1\":{\"47\":2}}],[\"round\",{\"1\":{\"96\":1}}],[\"rotate\",{\"1\":{\"89\":4}}],[\"roll\",{\"1\":{\"53\":1}}],[\"root\",{\"1\":{\"45\":2,\"49\":1,\"59\":3,\"136\":2,\"138\":1,\"139\":1,\"166\":1,\"253\":3}}],[\"ron\",{\"1\":{\"41\":1}}],[\"reboot\",{\"1\":{\"136\":1}}],[\"rebasing\",{\"1\":{\"57\":1}}],[\"rebased\",{\"1\":{\"59\":1}}],[\"rebase\",{\"0\":{\"59\":1},\"1\":{\"57\":1,\"59\":14}}],[\"requestanimationframe\",{\"1\":{\"89\":3,\"94\":3}}],[\"request\",{\"1\":{\"58\":1}}],[\"require\",{\"1\":{\"58\":2}}],[\"release\",{\"1\":{\"202\":2}}],[\"relevant\",{\"1\":{\"58\":1}}],[\"rel\",{\"1\":{\"87\":1,\"112\":2,\"113\":3}}],[\"related\",{\"1\":{\"57\":2,\"87\":1}}],[\"reroll\",{\"1\":{\"53\":2}}],[\"rerere\",{\"1\":{\"48\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"reapply\",{\"1\":{\"59\":1}}],[\"realloc\",{\"1\":{\"277\":1,\"297\":1}}],[\"really\",{\"1\":{\"98\":1}}],[\"real\",{\"1\":{\"56\":1}}],[\"reachable\",{\"1\":{\"52\":1,\"57\":1,\"59\":1}}],[\"ready\",{\"1\":{\"90\":1}}],[\"readable\",{\"1\":{\"50\":1,\"58\":1,\"65\":1}}],[\"read\",{\"1\":{\"44\":1,\"47\":1,\"50\":2,\"51\":1,\"56\":1,\"61\":1,\"63\":1,\"67\":1,\"73\":1}}],[\"re\",{\"1\":{\"52\":1,\"53\":1,\"59\":1}}],[\"reply\",{\"1\":{\"53\":2}}],[\"replace\",{\"1\":{\"51\":2,\"67\":1}}],[\"repositories\",{\"1\":{\"208\":1,\"209\":2}}],[\"repository\",{\"1\":{\"49\":8,\"51\":1,\"52\":4,\"54\":2,\"57\":3,\"58\":3}}],[\"report\",{\"1\":{\"52\":1,\"57\":1,\"61\":1}}],[\"reporting\",{\"1\":{\"47\":2,\"49\":1,\"52\":1,\"56\":1,\"57\":1,\"58\":1,\"66\":2}}],[\"repo\",{\"1\":{\"49\":3,\"51\":1,\"58\":1,\"86\":4,\"115\":1}}],[\"regex\",{\"1\":{\"51\":1}}],[\"regexp\",{\"1\":{\"51\":2}}],[\"register\",{\"1\":{\"5\":1}}],[\"rewrite\",{\"1\":{\"50\":2}}],[\"reword\",{\"1\":{\"50\":3}}],[\"reuse\",{\"1\":{\"50\":3}}],[\"reused\",{\"1\":{\"48\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"reedit\",{\"1\":{\"50\":1}}],[\"rev\",{\"1\":{\"49\":1,\"52\":1,\"53\":2,\"57\":1}}],[\"revision\",{\"1\":{\"49\":1,\"52\":2,\"53\":1,\"57\":2,\"59\":1}}],[\"revert\",{\"0\":{\"62\":1},\"1\":{\"48\":3,\"62\":6}}],[\"reverse\",{\"1\":{\"45\":2}}],[\"redundant\",{\"1\":{\"48\":2}}],[\"research\",{\"1\":{\"215\":1}}],[\"reset\",{\"0\":{\"61\":1},\"1\":{\"47\":1,\"50\":2,\"59\":1,\"61\":12,\"66\":1,\"94\":2}}],[\"res\",{\"1\":{\"210\":4}}],[\"restart\",{\"1\":{\"139\":1}}],[\"restore\",{\"1\":{\"94\":1}}],[\"resize\",{\"1\":{\"91\":2}}],[\"reschedule\",{\"1\":{\"59\":1}}],[\"resulting\",{\"1\":{\"53\":1}}],[\"resume\",{\"1\":{\"48\":1,\"62\":1}}],[\"respect\",{\"1\":{\"51\":1,\"67\":1}}],[\"resolution\",{\"1\":{\"48\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"refine\",{\"1\":{\"59\":1}}],[\"refname\",{\"1\":{\"58\":1}}],[\"refmap\",{\"1\":{\"52\":3,\"57\":3}}],[\"refer\",{\"1\":{\"62\":1}}],[\"references\",{\"1\":{\"52\":2}}],[\"reference\",{\"1\":{\"49\":5,\"52\":1,\"62\":2}}],[\"refetch\",{\"1\":{\"52\":1}}],[\"refs\",{\"1\":{\"52\":3,\"57\":1,\"58\":5,\"59\":1}}],[\"refspecs\",{\"1\":{\"52\":1}}],[\"refspec\",{\"1\":{\"52\":2,\"53\":2,\"57\":1,\"58\":1}}],[\"ref\",{\"1\":{\"47\":1,\"52\":1,\"58\":1,\"66\":1}}],[\"reflog\",{\"1\":{\"46\":4,\"47\":1,\"67\":3}}],[\"refreshing\",{\"1\":{\"61\":1}}],[\"refresh\",{\"1\":{\"44\":2,\"61\":1}}],[\"renderer\",{\"1\":{\"106\":1}}],[\"render\",{\"1\":{\"91\":4,\"94\":2}}],[\"renderparticule\",{\"1\":{\"91\":6}}],[\"renames\",{\"1\":{\"65\":4}}],[\"rename\",{\"1\":{\"46\":3,\"51\":2,\"60\":2}}],[\"renormalize\",{\"1\":{\"44\":2}}],[\"receive\",{\"1\":{\"58\":5}}],[\"recursive\",{\"1\":{\"47\":1,\"49\":1,\"52\":1,\"57\":1,\"58\":1,\"61\":1,\"63\":1,\"66\":1}}],[\"recurse\",{\"1\":{\"46\":3,\"47\":1,\"49\":2,\"52\":1,\"57\":1,\"58\":1,\"61\":1,\"66\":1}}],[\"recount\",{\"1\":{\"45\":1}}],[\"record\",{\"1\":{\"44\":1,\"61\":1}}],[\"rej\",{\"1\":{\"45\":1}}],[\"rejected\",{\"1\":{\"45\":1}}],[\"reject\",{\"1\":{\"45\":1,\"49\":1}}],[\"removelist\",{\"1\":{\"278\":2,\"279\":2}}],[\"removenode\",{\"1\":{\"269\":2,\"270\":2}}],[\"removeattr\",{\"1\":{\"90\":1}}],[\"removechild\",{\"1\":{\"89\":1}}],[\"remove\",{\"1\":{\"45\":1,\"51\":4,\"60\":2,\"63\":1,\"90\":1,\"94\":1}}],[\"removed\",{\"1\":{\"44\":1,\"58\":1,\"61\":1,\"63\":1}}],[\"removal\",{\"1\":{\"44\":1,\"63\":1}}],[\"remotes\",{\"1\":{\"46\":1,\"52\":2,\"57\":1}}],[\"remote\",{\"0\":{\"60\":1},\"1\":{\"12\":1,\"46\":2,\"49\":5,\"52\":4,\"54\":1,\"57\":3,\"58\":2,\"60\":21}}],[\"return\",{\"1\":{\"21\":6,\"25\":13,\"38\":4,\"39\":4,\"40\":4,\"41\":4,\"45\":1,\"72\":3,\"73\":3,\"89\":2,\"91\":12,\"237\":6,\"241\":2,\"242\":4,\"245\":1,\"247\":7,\"248\":11,\"249\":2,\"254\":1,\"258\":2,\"259\":2,\"260\":3,\"267\":1,\"269\":1,\"275\":2,\"276\":2,\"277\":4,\"278\":4,\"284\":1,\"285\":2,\"286\":2,\"287\":2,\"288\":2,\"293\":2,\"294\":1,\"295\":2,\"296\":2,\"297\":2}}],[\"r\",{\"1\":{\"5\":1,\"23\":2,\"25\":2,\"45\":1,\"46\":5,\"57\":1,\"59\":1,\"63\":2,\"89\":3,\"142\":1,\"210\":1}}],[\"runonuithread\",{\"0\":{\"3\":1},\"1\":{\"3\":3}}],[\"run\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":2,\"44\":3,\"50\":2,\"52\":4,\"57\":2,\"58\":2,\"59\":1,\"60\":1,\"63\":2}}],[\"runnable\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":3,\"6\":1}}],[\"sq\",{\"1\":{\"275\":1,\"276\":1,\"277\":3,\"278\":2,\"279\":8}}],[\"sqlist\",{\"1\":{\"273\":1,\"275\":5,\"276\":1,\"277\":2,\"278\":2,\"279\":13}}],[\"squash\",{\"1\":{\"50\":3,\"56\":1,\"57\":1,\"59\":1}}],[\"sf\",{\"1\":{\"137\":1,\"227\":1}}],[\"sfx\",{\"1\":{\"53\":2}}],[\"swapon\",{\"1\":{\"133\":1}}],[\"swap\",{\"1\":{\"128\":1,\"132\":1}}],[\"switch\",{\"0\":{\"66\":1},\"1\":{\"25\":2,\"66\":5}}],[\"sdc\",{\"1\":{\"128\":1}}],[\"sdb\",{\"1\":{\"128\":1}}],[\"sda4\",{\"1\":{\"128\":1,\"132\":1,\"133\":1}}],[\"sda3\",{\"1\":{\"128\":1,\"132\":1,\"133\":1}}],[\"sda2\",{\"1\":{\"128\":1,\"132\":1,\"133\":1}}],[\"sda1\",{\"1\":{\"128\":2,\"132\":1,\"133\":1,\"226\":2}}],[\"sda\",{\"1\":{\"128\":4,\"136\":1}}],[\"sdk\",{\"1\":{\"116\":2,\"119\":2,\"209\":1}}],[\"snum\",{\"1\":{\"96\":5}}],[\"snowflake\",{\"1\":{\"94\":5}}],[\"snowfall\",{\"1\":{\"94\":4}}],[\"snowcanvas\",{\"1\":{\"94\":12}}],[\"snowbox\",{\"1\":{\"94\":1}}],[\"snow\",{\"1\":{\"94\":12}}],[\"src\",{\"1\":{\"89\":1,\"90\":1,\"91\":2,\"93\":1,\"94\":1,\"95\":1,\"97\":2,\"209\":2,\"210\":1}}],[\"sm3\",{\"1\":{\"69\":1}}],[\"social\",{\"1\":{\"98\":1,\"110\":1}}],[\"source\",{\"1\":{\"89\":1,\"90\":1,\"91\":1,\"94\":1,\"106\":1,\"111\":1,\"112\":1,\"113\":1,\"172\":1}}],[\"song\",{\"1\":{\"87\":4}}],[\"soft\",{\"1\":{\"61\":2}}],[\"sorting\",{\"1\":{\"46\":1,\"67\":1}}],[\"sort\",{\"1\":{\"46\":2,\"67\":3}}],[\"syy\",{\"1\":{\"134\":1,\"168\":1}}],[\"syndication\",{\"1\":{\"98\":1}}],[\"synonym\",{\"1\":{\"56\":1}}],[\"systemctl\",{\"1\":{\"127\":2,\"136\":2,\"167\":2,\"174\":2}}],[\"system\",{\"1\":{\"51\":4,\"128\":1,\"132\":1}}],[\"sc\",{\"1\":{\"232\":1}}],[\"schemas\",{\"1\":{\"210\":2}}],[\"schedule\",{\"1\":{\"59\":1}}],[\"scaffolds\",{\"1\":{\"106\":1}}],[\"scale\",{\"1\":{\"89\":5,\"91\":2}}],[\"script\",{\"1\":{\"89\":2,\"90\":2,\"91\":4,\"93\":4,\"94\":2,\"95\":2,\"96\":2,\"97\":4}}],[\"scope\",{\"1\":{\"51\":2}}],[\"scm\",{\"1\":{\"9\":1}}],[\"slot\",{\"1\":{\"51\":2}}],[\"slashes\",{\"1\":{\"45\":1}}],[\"siglevel\",{\"1\":{\"168\":1}}],[\"signingkey\",{\"1\":{\"232\":1}}],[\"signing\",{\"1\":{\"201\":2}}],[\"signatures\",{\"1\":{\"56\":1,\"57\":1}}],[\"signature\",{\"1\":{\"53\":5,\"56\":1,\"57\":1}}],[\"sign\",{\"1\":{\"48\":2,\"50\":2,\"56\":2,\"57\":2,\"58\":1,\"59\":2,\"62\":2,\"67\":2,\"201\":2}}],[\"signedjar\",{\"1\":{\"204\":2}}],[\"signed\",{\"1\":{\"48\":1,\"50\":1,\"53\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"67\":1,\"204\":1,\"205\":1}}],[\"signoff\",{\"1\":{\"48\":1,\"50\":1,\"53\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1}}],[\"site\",{\"1\":{\"108\":1,\"111\":1,\"112\":1}}],[\"sizeof\",{\"1\":{\"254\":1,\"262\":1,\"265\":2,\"267\":1,\"268\":3,\"273\":1,\"275\":1,\"276\":1,\"277\":1,\"279\":1,\"288\":1,\"291\":1,\"293\":1,\"297\":2}}],[\"sizeflake\",{\"1\":{\"94\":2}}],[\"size\",{\"1\":{\"85\":1,\"94\":5,\"262\":1,\"276\":2,\"279\":1,\"291\":1,\"293\":2,\"297\":1}}],[\"similarity\",{\"1\":{\"65\":1}}],[\"simple\",{\"1\":{\"53\":1,\"98\":1}}],[\"sidebar\",{\"1\":{\"87\":5,\"91\":4,\"110\":1,\"112\":1}}],[\"side\",{\"1\":{\"58\":1}}],[\"sin\",{\"1\":{\"91\":2}}],[\"single\",{\"1\":{\"49\":1,\"53\":3,\"56\":1,\"57\":1,\"87\":1}}],[\"since\",{\"1\":{\"49\":2,\"52\":1,\"53\":1,\"55\":1,\"57\":1}}],[\"spec\",{\"1\":{\"241\":3,\"242\":3,\"245\":6}}],[\"species\",{\"1\":{\"241\":4,\"242\":15,\"243\":3,\"244\":1,\"245\":4}}],[\"specify\",{\"1\":{\"52\":1,\"54\":2,\"57\":1}}],[\"specified\",{\"1\":{\"50\":7}}],[\"specific\",{\"1\":{\"46\":1,\"49\":2,\"51\":1,\"52\":1,\"57\":1,\"58\":1}}],[\"speed\",{\"1\":{\"94\":6}}],[\"splice\",{\"1\":{\"89\":1}}],[\"span\",{\"1\":{\"90\":1,\"92\":16,\"96\":4}}],[\"spaces\",{\"1\":{\"48\":1,\"50\":1,\"56\":1,\"57\":1,\"62\":1,\"67\":1}}],[\"space\",{\"1\":{\"45\":1}}],[\"sparse\",{\"1\":{\"44\":2,\"47\":1,\"49\":2,\"63\":2}}],[\"skipping\",{\"1\":{\"59\":1}}],[\"skip\",{\"1\":{\"44\":1,\"47\":1,\"48\":3,\"59\":3,\"61\":1,\"62\":3}}],[\"save\",{\"1\":{\"64\":1,\"92\":1,\"94\":1}}],[\"savedinstancestate\",{\"1\":{\"5\":2,\"210\":2}}],[\"same\",{\"1\":{\"44\":1}}],[\"s\",{\"1\":{\"23\":2,\"25\":2,\"46\":1,\"48\":4,\"49\":2,\"50\":6,\"53\":2,\"56\":2,\"57\":2,\"59\":3,\"62\":4,\"64\":2,\"65\":1,\"67\":2,\"89\":2,\"93\":3,\"106\":1,\"136\":4,\"138\":2,\"139\":1,\"167\":2,\"168\":1,\"169\":2,\"170\":1,\"171\":4,\"172\":1,\"173\":1,\"174\":3,\"175\":1,\"176\":3,\"177\":4,\"224\":2,\"237\":17,\"241\":2}}],[\"studio64\",{\"1\":{\"119\":1}}],[\"studio\",{\"1\":{\"117\":4,\"119\":1}}],[\"step\",{\"1\":{\"94\":2}}],[\"stepsize\",{\"1\":{\"94\":2}}],[\"storepass\",{\"1\":{\"204\":2}}],[\"store\",{\"1\":{\"53\":1,\"64\":1}}],[\"std\",{\"1\":{\"237\":1,\"241\":1,\"242\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1}}],[\"stdin\",{\"1\":{\"52\":2}}],[\"stdout\",{\"1\":{\"51\":1,\"53\":1}}],[\"structure\",{\"0\":{\"301\":1}}],[\"struct\",{\"1\":{\"251\":3,\"262\":9,\"265\":2,\"270\":2,\"273\":1,\"279\":1,\"282\":5,\"287\":1,\"288\":8,\"291\":1,\"297\":1}}],[\"stroke\",{\"1\":{\"91\":2}}],[\"strokestyle\",{\"1\":{\"91\":2}}],[\"strategies\",{\"1\":{\"59\":2}}],[\"strategy\",{\"1\":{\"48\":5,\"56\":5,\"57\":5,\"59\":5,\"62\":5}}],[\"str\",{\"1\":{\"51\":1}}],[\"strict\",{\"1\":{\"91\":2}}],[\"strip\",{\"1\":{\"48\":1,\"50\":1,\"53\":1,\"56\":1,\"57\":1,\"62\":1,\"67\":1}}],[\"stringbuffer\",{\"1\":{\"21\":2,\"25\":2}}],[\"string\",{\"1\":{\"21\":3,\"25\":3,\"38\":2,\"39\":3,\"40\":2,\"41\":1,\"51\":2,\"72\":2,\"73\":2,\"96\":3,\"179\":1,\"241\":6,\"242\":10,\"243\":2,\"244\":2,\"245\":9}}],[\"stylesheet\",{\"1\":{\"89\":1}}],[\"styles\",{\"1\":{\"53\":1}}],[\"style\",{\"1\":{\"46\":1,\"47\":2,\"53\":1,\"65\":1,\"66\":2,\"67\":1,\"85\":1,\"89\":2,\"91\":5,\"94\":1}}],[\"stacknode\",{\"1\":{\"262\":1,\"291\":1,\"297\":1}}],[\"stacktype\",{\"1\":{\"262\":2,\"291\":2,\"293\":2,\"295\":1,\"296\":1,\"297\":9}}],[\"stack\",{\"1\":{\"258\":7,\"259\":10,\"260\":8,\"262\":4,\"291\":1,\"293\":6,\"294\":3,\"295\":5,\"296\":5,\"297\":21}}],[\"staged\",{\"1\":{\"64\":2}}],[\"stash\",{\"0\":{\"64\":1},\"1\":{\"56\":2,\"57\":2,\"59\":2,\"64\":23,\"65\":2}}],[\"startuml\",{\"1\":{\"179\":1,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"221\":1}}],[\"startopacity\",{\"1\":{\"94\":2}}],[\"startpositionleft\",{\"1\":{\"94\":3}}],[\"start\",{\"1\":{\"46\":1,\"53\":2,\"94\":2,\"127\":1,\"136\":1,\"167\":1,\"174\":1}}],[\"status\",{\"0\":{\"65\":1},\"1\":{\"50\":5,\"58\":1,\"63\":1,\"65\":4,\"137\":1}}],[\"stat\",{\"1\":{\"45\":2,\"53\":2,\"55\":1,\"56\":2,\"57\":1,\"59\":2}}],[\"staticmember\",{\"1\":{\"237\":1}}],[\"static\",{\"1\":{\"21\":3,\"25\":4,\"38\":4,\"39\":5,\"40\":4,\"41\":6,\"70\":1,\"72\":1,\"73\":1,\"237\":3}}],[\"standard\",{\"1\":{\"38\":1,\"40\":1,\"51\":1,\"53\":1}}],[\"sheep\",{\"1\":{\"241\":15,\"242\":42,\"243\":8,\"245\":8}}],[\"shell\",{\"1\":{\"171\":2}}],[\"shortlog\",{\"1\":{\"56\":1,\"57\":1}}],[\"short\",{\"1\":{\"50\":1,\"65\":1}}],[\"show\",{\"1\":{\"45\":1,\"46\":3,\"50\":6,\"51\":5,\"52\":1,\"53\":5,\"56\":2,\"57\":3,\"59\":3,\"60\":1,\"64\":1,\"65\":7,\"67\":1,\"90\":2}}],[\"shanghai\",{\"1\":{\"137\":1}}],[\"share\",{\"1\":{\"137\":1}}],[\"shared\",{\"1\":{\"49\":2,\"54\":3}}],[\"sha\",{\"1\":{\"73\":2}}],[\"sha256\",{\"1\":{\"69\":2,\"70\":1,\"73\":1},\"2\":{\"75\":1}}],[\"sha1\",{\"1\":{\"69\":2,\"70\":1,\"73\":2},\"2\":{\"75\":1}}],[\"shallow\",{\"1\":{\"49\":9,\"52\":8,\"53\":1,\"57\":8}}],[\"shamir\",{\"1\":{\"41\":1}}],[\"sh\",{\"1\":{\"12\":4,\"172\":6}}],[\"seqtype\",{\"1\":{\"273\":4,\"276\":2,\"277\":5,\"278\":2,\"279\":6}}],[\"sequence\",{\"1\":{\"48\":3,\"53\":1,\"62\":3}}],[\"search\",{\"1\":{\"87\":3,\"106\":1}}],[\"several\",{\"1\":{\"54\":1}}],[\"series\",{\"1\":{\"53\":2}}],[\"server\",{\"1\":{\"49\":2,\"52\":2,\"57\":2,\"58\":1,\"87\":3,\"104\":3,\"134\":1,\"168\":1}}],[\"separate\",{\"1\":{\"49\":2,\"54\":3}}],[\"separated\",{\"1\":{\"44\":1,\"45\":1,\"47\":1,\"50\":1,\"61\":1,\"63\":1}}],[\"setlength\",{\"1\":{\"237\":18}}],[\"setattribute\",{\"1\":{\"94\":1}}],[\"setinterval\",{\"1\":{\"94\":1,\"96\":1}}],[\"setcanvassize\",{\"1\":{\"91\":6}}],[\"setcontentview\",{\"1\":{\"5\":1,\"210\":1}}],[\"setparticuledirection\",{\"1\":{\"91\":4}}],[\"settime\",{\"1\":{\"96\":1}}],[\"settimeout\",{\"1\":{\"89\":1,\"90\":1,\"91\":2,\"94\":1}}],[\"settings\",{\"1\":{\"86\":3,\"209\":2,\"211\":1}}],[\"setting\",{\"1\":{\"51\":1}}],[\"setup\",{\"1\":{\"49\":1}}],[\"set\",{\"1\":{\"46\":2,\"47\":1,\"49\":1,\"52\":2,\"53\":1,\"57\":2,\"58\":2,\"60\":5,\"65\":1,\"66\":1,\"137\":1}}],[\"see\",{\"1\":{\"45\":1}}],[\"selected\",{\"1\":{\"56\":1,\"57\":1}}],[\"select\",{\"1\":{\"44\":1,\"47\":1,\"48\":1,\"61\":1,\"62\":1}}],[\"sec\",{\"1\":{\"232\":1}}],[\"secret\",{\"1\":{\"86\":1,\"232\":1}}],[\"secretkeyspec\",{\"1\":{\"38\":2,\"39\":2,\"40\":2}}],[\"secure\",{\"1\":{\"69\":1}}],[\"section\",{\"1\":{\"51\":5}}],[\"seconds\",{\"1\":{\"96\":2}}],[\"second\",{\"1\":{\"25\":3,\"47\":1,\"66\":1}}],[\"sendmessage\",{\"1\":{\"6\":1}}],[\"sudo\",{\"1\":{\"138\":2,\"167\":4,\"168\":3,\"169\":2,\"170\":1,\"171\":5,\"172\":2,\"173\":1,\"174\":5,\"175\":1,\"176\":4,\"177\":4,\"224\":6,\"225\":1,\"226\":1,\"229\":1,\"233\":1,\"234\":1,\"235\":1}}],[\"suffix\",{\"1\":{\"53\":1}}],[\"succeeds\",{\"1\":{\"56\":1,\"57\":1}}],[\"successful\",{\"1\":{\"50\":1}}],[\"such\",{\"1\":{\"47\":1,\"66\":1}}],[\"support\",{\"1\":{\"219\":1}}],[\"suppress\",{\"1\":{\"46\":1,\"47\":1,\"50\":1,\"66\":1}}],[\"super\",{\"1\":{\"5\":3,\"210\":1,\"218\":1}}],[\"sublime\",{\"0\":{\"214\":1,\"216\":1},\"1\":{\"178\":2,\"216\":1,\"217\":1,\"219\":1},\"2\":{\"222\":1}}],[\"subcommand\",{\"1\":{\"60\":1}}],[\"subject\",{\"1\":{\"46\":1,\"53\":2}}],[\"submodules\",{\"1\":{\"46\":3,\"47\":2,\"49\":10,\"52\":3,\"57\":3,\"58\":2,\"61\":2,\"65\":2,\"66\":2}}],[\"subscribe\",{\"1\":{\"5\":1}}],[\"sure\",{\"1\":{\"45\":1}}],[\"summary\",{\"1\":{\"45\":3,\"50\":1,\"56\":1}}],[\"edu\",{\"1\":{\"168\":1}}],[\"editable\",{\"1\":{\"59\":1}}],[\"editor\",{\"1\":{\"51\":1,\"225\":1}}],[\"edit\",{\"1\":{\"44\":2,\"46\":2,\"48\":3,\"50\":3,\"51\":1,\"56\":2,\"57\":2,\"59\":4,\"62\":3,\"67\":2}}],[\"esc\",{\"1\":{\"134\":1}}],[\"efibootmgr\",{\"1\":{\"136\":1}}],[\"efi\",{\"1\":{\"126\":1,\"128\":1,\"131\":2,\"132\":2,\"133\":5,\"136\":4}}],[\"easeoutexpo\",{\"1\":{\"91\":4}}],[\"easing\",{\"1\":{\"91\":6}}],[\"each\",{\"1\":{\"59\":2,\"67\":1}}],[\"ejs\",{\"1\":{\"89\":1,\"90\":1,\"91\":1,\"92\":2,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1}}],[\"e3\",{\"1\":{\"89\":1}}],[\"eclipse\",{\"1\":{\"77\":1,\"116\":1}}],[\"ecb\",{\"1\":{\"32\":1,\"33\":1,\"38\":3,\"40\":1}}],[\"etc\",{\"1\":{\"51\":1,\"134\":1,\"135\":2,\"137\":1,\"139\":1,\"168\":2,\"176\":1}}],[\"equality\",{\"1\":{\"51\":1}}],[\"equalsigncount\",{\"1\":{\"25\":3}}],[\"error\",{\"1\":{\"45\":1}}],[\"errors\",{\"1\":{\"44\":2,\"45\":1,\"61\":1}}],[\"email\",{\"1\":{\"51\":1,\"53\":3,\"55\":1,\"230\":2,\"232\":1}}],[\"empty\",{\"1\":{\"45\":2,\"48\":5,\"50\":2,\"59\":2}}],[\"embedded\",{\"1\":{\"45\":1}}],[\"eof\",{\"1\":{\"45\":1}}],[\"eol\",{\"1\":{\"44\":1}}],[\"enterqueue\",{\"1\":{\"261\":3,\"288\":2}}],[\"entry\",{\"1\":{\"51\":1}}],[\"entries\",{\"1\":{\"44\":1,\"47\":1,\"50\":1,\"56\":1,\"57\":1,\"63\":1,\"65\":1}}],[\"env\",{\"0\":{\"234\":1},\"1\":{\"234\":2}}],[\"envelope\",{\"1\":{\"98\":1}}],[\"en\",{\"1\":{\"139\":1,\"176\":1}}],[\"enabled\",{\"1\":{\"201\":2}}],[\"enable\",{\"1\":{\"53\":1,\"85\":2,\"87\":2,\"127\":1,\"136\":1,\"167\":1,\"174\":1}}],[\"endif\",{\"1\":{\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"endl\",{\"1\":{\"237\":49,\"241\":2,\"242\":3,\"246\":2,\"247\":1,\"248\":1,\"249\":2}}],[\"enduml\",{\"1\":{\"179\":1,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"221\":1}}],[\"endpositionleft\",{\"1\":{\"94\":2}}],[\"endpositiontop\",{\"1\":{\"94\":2}}],[\"endpos\",{\"1\":{\"91\":6}}],[\"end\",{\"1\":{\"45\":1,\"48\":1,\"52\":1,\"56\":2,\"57\":3,\"62\":1,\"262\":1,\"282\":1,\"284\":1,\"287\":1,\"288\":5}}],[\"ensure\",{\"1\":{\"45\":1}}],[\"encapsulation\",{\"1\":{\"239\":1}}],[\"encoding\",{\"1\":{\"209\":1,\"210\":2,\"211\":1}}],[\"encode\",{\"1\":{\"21\":1,\"25\":1,\"72\":1,\"73\":1}}],[\"encrypt\",{\"1\":{\"38\":2,\"39\":2,\"40\":2,\"41\":2}}],[\"encryption\",{\"1\":{\"38\":1,\"40\":1}}],[\"even\",{\"1\":{\"44\":1,\"46\":3,\"53\":3,\"59\":3,\"63\":1}}],[\"events\",{\"1\":{\"91\":1,\"94\":1}}],[\"event\",{\"1\":{\"5\":3}}],[\"eventbus\",{\"0\":{\"5\":1},\"1\":{\"5\":7,\"6\":3}}],[\"el\",{\"1\":{\"89\":3}}],[\"elemtype\",{\"1\":{\"262\":1,\"273\":1,\"279\":1,\"291\":1,\"297\":1}}],[\"elem\",{\"1\":{\"262\":1,\"273\":1,\"276\":2,\"277\":5,\"278\":10,\"279\":2,\"286\":2,\"291\":1,\"293\":2,\"295\":4,\"296\":4,\"297\":4}}],[\"elements\",{\"1\":{\"44\":1,\"47\":1,\"50\":1,\"61\":1,\"63\":1}}],[\"electronic\",{\"1\":{\"32\":1,\"177\":1}}],[\"else\",{\"1\":{\"25\":5,\"254\":1,\"260\":1,\"268\":2,\"269\":2,\"285\":1,\"288\":1}}],[\"e\",{\"1\":{\"21\":1,\"23\":2,\"25\":2,\"38\":4,\"39\":5,\"40\":4,\"41\":22,\"44\":1,\"48\":1,\"50\":2,\"51\":1,\"53\":1,\"56\":1,\"62\":1,\"67\":2,\"72\":2,\"73\":6,\"89\":36,\"90\":3,\"91\":60,\"94\":5}}],[\"ext4\",{\"1\":{\"132\":2}}],[\"extensions\",{\"1\":{\"98\":1,\"171\":1}}],[\"extend\",{\"1\":{\"94\":1}}],[\"extends\",{\"1\":{\"5\":1,\"210\":1}}],[\"external\",{\"1\":{\"87\":1}}],[\"exe\",{\"1\":{\"119\":2,\"142\":1,\"144\":1}}],[\"exec\",{\"1\":{\"58\":1,\"59\":7}}],[\"executable\",{\"1\":{\"44\":1}}],[\"execute\",{\"1\":{\"6\":1}}],[\"exitqueue\",{\"1\":{\"261\":1,\"287\":1,\"288\":1}}],[\"exit\",{\"1\":{\"63\":1,\"136\":1,\"139\":1,\"254\":1}}],[\"exists\",{\"1\":{\"46\":2,\"67\":1,\"73\":1}}],[\"example\",{\"1\":{\"51\":2,\"106\":1}}],[\"export\",{\"1\":{\"176\":5,\"232\":1}}],[\"expiry\",{\"1\":{\"51\":2}}],[\"expect\",{\"1\":{\"45\":1,\"58\":1}}],[\"excluding\",{\"1\":{\"49\":1,\"52\":1,\"57\":1}}],[\"exclude\",{\"1\":{\"45\":1,\"49\":1,\"52\":1,\"57\":1}}],[\"exception\",{\"1\":{\"38\":2,\"39\":2,\"40\":2}}],[\"示例\",{\"0\":{\"146\":1},\"1\":{\"5\":1,\"41\":1,\"77\":1,\"113\":1,\"115\":1,\"128\":1,\"202\":2,\"204\":1,\"205\":1}}],[\"*\",{\"1\":{\"5\":10,\"20\":1,\"21\":18,\"24\":3,\"25\":32,\"45\":1,\"70\":16,\"72\":7,\"73\":7,\"89\":3,\"91\":16,\"94\":99,\"96\":10,\"190\":2,\"219\":4,\"221\":1,\"237\":21,\"241\":3,\"242\":7,\"243\":2,\"246\":1,\"247\":9,\"248\":14,\"251\":2,\"253\":4,\"254\":13,\"255\":6,\"256\":6,\"257\":7,\"258\":8,\"259\":22,\"260\":16,\"261\":8,\"262\":79,\"264\":1,\"265\":4,\"267\":4,\"268\":12,\"269\":8,\"270\":42,\"273\":2,\"275\":7,\"276\":8,\"277\":14,\"278\":12,\"279\":42,\"282\":3,\"284\":4,\"285\":4,\"286\":4,\"287\":5,\"288\":41,\"290\":1,\"291\":1,\"293\":2,\"297\":12}}],[\"_\",{\"1\":{\"5\":3,\"38\":11,\"39\":11,\"40\":11,\"41\":10,\"52\":2,\"57\":1,\"85\":5,\"87\":2,\"90\":8,\"92\":5,\"93\":9,\"96\":1,\"106\":5,\"108\":2,\"109\":1,\"110\":2,\"111\":1,\"112\":1,\"113\":1,\"115\":1,\"117\":1,\"136\":1,\"139\":2,\"143\":5,\"172\":1,\"176\":7,\"210\":11,\"218\":1,\"241\":1,\"242\":1,\"262\":16,\"267\":1,\"268\":5,\"269\":2,\"270\":14,\"275\":1,\"276\":5,\"277\":3,\"278\":2,\"279\":16,\"288\":6,\"291\":2,\"293\":4,\"297\":8}}],[\"mnt\",{\"1\":{\"133\":8,\"135\":4,\"136\":1}}],[\"mnum\",{\"1\":{\"96\":6}}],[\"mkconfig\",{\"1\":{\"136\":1}}],[\"mkdir\",{\"1\":{\"133\":3}}],[\"mkswap\",{\"1\":{\"132\":1}}],[\"mkfs\",{\"1\":{\"132\":3}}],[\"mktable\",{\"1\":{\"128\":1}}],[\"mbr\",{\"0\":{\"130\":1},\"1\":{\"128\":3,\"136\":1}}],[\"mb\",{\"1\":{\"125\":1,\"126\":1}}],[\"msdos\",{\"1\":{\"128\":1}}],[\"mscancelanimationframe\",{\"1\":{\"94\":1}}],[\"msrequestanimationframe\",{\"1\":{\"89\":1,\"94\":1}}],[\"msg\",{\"1\":{\"50\":2,\"56\":1,\"57\":1,\"67\":1}}],[\"mp\",{\"1\":{\"85\":1}}],[\"minutes\",{\"1\":{\"96\":2}}],[\"minsize\",{\"1\":{\"94\":3}}],[\"min2read\",{\"1\":{\"92\":1}}],[\"min\",{\"1\":{\"91\":1,\"95\":1,\"97\":1}}],[\"mixed\",{\"1\":{\"61\":2}}],[\"mirrors\",{\"1\":{\"168\":1}}],[\"mirrorlist\",{\"1\":{\"134\":1,\"168\":1}}],[\"mirror\",{\"1\":{\"49\":2,\"58\":3,\"60\":1}}],[\"missing\",{\"1\":{\"44\":2,\"45\":1,\"51\":1,\"58\":1}}],[\"mount\",{\"1\":{\"133\":3,\"226\":1}}],[\"mousedown\",{\"1\":{\"91\":2}}],[\"mozcancelanimationframe\",{\"1\":{\"94\":1}}],[\"mozrequestanimationframe\",{\"1\":{\"89\":1,\"94\":1}}],[\"moz\",{\"1\":{\"89\":2}}],[\"most\",{\"1\":{\"56\":1,\"57\":1}}],[\"move\",{\"1\":{\"46\":4,\"59\":1}}],[\"more\",{\"1\":{\"45\":2,\"49\":2,\"52\":2,\"56\":2,\"57\":2,\"58\":2,\"87\":1}}],[\"modules\",{\"1\":{\"144\":1}}],[\"module\",{\"0\":{\"209\":1,\"211\":1},\"1\":{\"144\":1,\"176\":2,\"211\":2}}],[\"modify\",{\"1\":{\"52\":1}}],[\"modifications\",{\"1\":{\"47\":1,\"66\":2}}],[\"modified\",{\"1\":{\"45\":1}}],[\"modes\",{\"1\":{\"50\":1,\"65\":2}}],[\"mode\",{\"1\":{\"34\":1,\"35\":1,\"38\":2,\"39\":2,\"40\":2,\"41\":2,\"47\":1,\"48\":1,\"50\":4,\"53\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1,\"65\":2,\"67\":1,\"87\":1}}],[\"media\",{\"1\":{\"226\":2,\"227\":2}}],[\"method\",{\"1\":{\"179\":1}}],[\"meta\",{\"1\":{\"92\":10}}],[\"menu\",{\"1\":{\"113\":1}}],[\"merging\",{\"1\":{\"56\":1,\"57\":3,\"59\":1}}],[\"merges\",{\"1\":{\"57\":1,\"59\":2}}],[\"merged\",{\"1\":{\"46\":8,\"59\":1,\"67\":6}}],[\"merge\",{\"0\":{\"56\":1},\"1\":{\"45\":1,\"47\":3,\"48\":2,\"56\":16,\"57\":8,\"59\":5,\"61\":2,\"62\":2,\"66\":3}}],[\"messaging\",{\"1\":{\"53\":1}}],[\"messagedigest\",{\"1\":{\"70\":2,\"72\":4,\"73\":5}}],[\"messages\",{\"1\":{\"46\":1,\"48\":1}}],[\"message\",{\"1\":{\"6\":4,\"48\":3,\"50\":19,\"53\":3,\"55\":1,\"56\":7,\"57\":3,\"62\":2,\"64\":6,\"67\":12,\"69\":1}}],[\"me\",{\"1\":{\"50\":1,\"98\":1}}],[\"multilib\",{\"1\":{\"168\":2}}],[\"multiple\",{\"1\":{\"52\":3,\"53\":1}}],[\"music\",{\"1\":{\"87\":7,\"98\":1,\"177\":1}}],[\"must\",{\"1\":{\"60\":1}}],[\"mufh\",{\"1\":{\"24\":1}}],[\"mue\",{\"1\":{\"24\":1}}],[\"mq\",{\"1\":{\"24\":1}}],[\"m\",{\"1\":{\"23\":2,\"25\":2,\"46\":5,\"47\":1,\"48\":2,\"50\":6,\"52\":1,\"53\":1,\"56\":1,\"59\":1,\"60\":1,\"62\":2,\"64\":2,\"65\":1,\"66\":1,\"67\":3,\"69\":1,\"131\":1,\"138\":1,\"218\":2,\"221\":1,\"224\":2,\"234\":1}}],[\"md2md4\",{\"1\":{\"69\":1}}],[\"md5\",{\"1\":{\"16\":2,\"30\":1,\"69\":3,\"70\":1,\"72\":4,\"73\":4,\"74\":3},\"2\":{\"75\":1}}],[\"md\",{\"1\":{\"8\":1,\"87\":1,\"100\":1,\"112\":3,\"113\":3}}],[\"malloc\",{\"1\":{\"254\":1,\"265\":2,\"267\":1,\"268\":3,\"275\":1,\"276\":1,\"288\":1,\"293\":1}}],[\"manifest\",{\"1\":{\"209\":2,\"210\":2,\"211\":2}}],[\"matrial\",{\"1\":{\"101\":1}}],[\"math\",{\"1\":{\"89\":3,\"91\":10,\"94\":18,\"96\":4}}],[\"material\",{\"1\":{\"84\":1,\"93\":1,\"106\":4,\"107\":1,\"113\":1,\"114\":1}}],[\"matched\",{\"1\":{\"63\":1}}],[\"matches\",{\"1\":{\"51\":1}}],[\"match\",{\"1\":{\"45\":1,\"59\":1,\"210\":3}}],[\"matching\",{\"1\":{\"45\":2,\"51\":1,\"53\":1,\"65\":1}}],[\"master\",{\"1\":{\"60\":1,\"115\":1}}],[\"mailto\",{\"1\":{\"98\":1}}],[\"mail\",{\"1\":{\"53\":2,\"85\":2}}],[\"maintenance\",{\"1\":{\"52\":3}}],[\"mainline\",{\"1\":{\"48\":2,\"62\":2}}],[\"mainactivity\",{\"1\":{\"5\":1,\"210\":6}}],[\"main\",{\"1\":{\"5\":6,\"54\":3,\"58\":4,\"60\":1,\"209\":2,\"210\":5,\"237\":4,\"241\":1,\"242\":5,\"243\":1,\"246\":1,\"247\":1,\"248\":1}}],[\"maxflake\",{\"1\":{\"94\":9}}],[\"maxsize\",{\"1\":{\"94\":5}}],[\"max\",{\"1\":{\"53\":2}}],[\"mark\",{\"1\":{\"45\":1,\"53\":1}}],[\"markdown\",{\"0\":{\"13\":1,\"145\":1},\"1\":{\"8\":1,\"13\":2,\"85\":1,\"100\":1},\"2\":{\"165\":1}}],[\"make\",{\"1\":{\"45\":1,\"49\":1,\"53\":1,\"59\":1}}],[\"made\",{\"1\":{\"45\":1}}],[\"machine\",{\"1\":{\"50\":1,\"58\":1,\"65\":1}}],[\"mac\",{\"0\":{\"12\":1},\"1\":{\"78\":3,\"117\":2,\"215\":1}}],[\"my\",{\"1\":{\"172\":4}}],[\"myuid\",{\"1\":{\"1\":1}}],[\"mypid\",{\"1\":{\"1\":1}}],[\"mytid\",{\"1\":{\"1\":1}}],[\"使该\",{\"1\":{\"265\":1}}],[\"使得\",{\"1\":{\"241\":1,\"245\":1}}],[\"使\",{\"1\":{\"5\":1,\"78\":1,\"172\":1,\"241\":1,\"273\":1}}],[\"使用\",{\"0\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"80\":1,\"85\":1,\"86\":1,\"114\":1,\"178\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"10\":1,\"12\":2,\"14\":1,\"17\":1,\"19\":1,\"24\":1,\"25\":1,\"26\":1,\"30\":2,\"34\":1,\"35\":3,\"37\":1,\"38\":1,\"39\":5,\"41\":1,\"50\":1,\"54\":1,\"55\":1,\"60\":3,\"69\":1,\"70\":5,\"77\":1,\"78\":2,\"79\":2,\"83\":2,\"86\":3,\"98\":2,\"99\":3,\"100\":4,\"101\":1,\"104\":1,\"105\":1,\"106\":8,\"111\":2,\"114\":1,\"115\":2,\"119\":1,\"124\":1,\"125\":3,\"126\":3,\"127\":1,\"131\":1,\"138\":1,\"142\":1,\"143\":1,\"144\":1,\"167\":2,\"170\":1,\"171\":1,\"172\":1,\"176\":1,\"179\":1,\"184\":1,\"185\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"200\":2,\"201\":10,\"202\":3,\"204\":6,\"205\":4,\"206\":1,\"208\":1,\"216\":1,\"218\":1,\"232\":2,\"237\":6,\"243\":1,\"244\":2,\"245\":3,\"246\":1,\"250\":1,\"267\":1,\"273\":2}}],[\"哪个\",{\"1\":{\"5\":1,\"86\":1,\"216\":2}}],[\"订阅\",{\"0\":{\"98\":1},\"1\":{\"5\":3,\"98\":2}}],[\"gwenview\",{\"1\":{\"177\":1}}],[\"gome\",{\"1\":{\"176\":1}}],[\"googlepinyin\",{\"1\":{\"176\":1}}],[\"google\",{\"1\":{\"169\":1,\"176\":1,\"200\":1,\"208\":1,\"209\":2}}],[\"gtk\",{\"1\":{\"171\":1,\"176\":1}}],[\"gdm\",{\"1\":{\"167\":4}}],[\"gnome\",{\"0\":{\"167\":1,\"171\":1},\"1\":{\"167\":3,\"171\":4,\"173\":1,\"176\":1}}],[\"gg\",{\"1\":{\"134\":1}}],[\"gpt\",{\"0\":{\"131\":1},\"1\":{\"128\":4,\"136\":1}}],[\"gpgsign\",{\"1\":{\"232\":1}}],[\"gpg\",{\"0\":{\"231\":1},\"1\":{\"48\":2,\"50\":3,\"56\":3,\"57\":3,\"58\":1,\"59\":2,\"62\":2,\"67\":1,\"232\":5}}],[\"gb\",{\"1\":{\"126\":1}}],[\"gbk\",{\"1\":{\"17\":1}}],[\"gh\",{\"1\":{\"112\":1}}],[\"guest\",{\"1\":{\"85\":1}}],[\"guess\",{\"1\":{\"47\":2,\"66\":2}}],[\"gc\",{\"1\":{\"52\":1}}],[\"grub\",{\"1\":{\"136\":7}}],[\"grin\",{\"1\":{\"113\":1,\"114\":2}}],[\"grid\",{\"1\":{\"87\":2}}],[\"grt\",{\"1\":{\"96\":5}}],[\"gravatar\",{\"1\":{\"85\":1}}],[\"gradle\",{\"1\":{\"77\":6,\"208\":5,\"209\":5,\"211\":3}}],[\"graphviz\",{\"0\":{\"215\":1},\"1\":{\"215\":3}}],[\"graph\",{\"1\":{\"52\":2,\"55\":1}}],[\"grep\",{\"1\":{\"55\":1}}],[\"greenrobot\",{\"1\":{\"5\":1}}],[\"group\",{\"1\":{\"52\":2,\"60\":1,\"112\":1}}],[\"globalalpha\",{\"1\":{\"91\":4}}],[\"global\",{\"1\":{\"51\":7,\"230\":3,\"232\":2}}],[\"gif\",{\"1\":{\"112\":1}}],[\"give\",{\"1\":{\"46\":1}}],[\"given\",{\"1\":{\"45\":2,\"47\":1,\"51\":3,\"59\":2,\"66\":1}}],[\"gitalk\",{\"0\":{\"86\":1},\"1\":{\"86\":2}}],[\"gitlab\",{\"1\":{\"58\":1,\"100\":1,\"232\":1}}],[\"gitee\",{\"1\":{\"54\":1,\"58\":1}}],[\"gitconfig\",{\"1\":{\"51\":2}}],[\"gitdir\",{\"1\":{\"49\":1,\"54\":1}}],[\"gitignore\",{\"1\":{\"44\":1}}],[\"git\",{\"0\":{\"9\":1,\"43\":1,\"228\":1},\"1\":{\"8\":1,\"9\":1,\"43\":1,\"44\":5,\"45\":3,\"46\":12,\"47\":6,\"48\":3,\"49\":5,\"50\":8,\"51\":7,\"52\":8,\"53\":2,\"54\":14,\"55\":10,\"56\":4,\"57\":5,\"58\":9,\"59\":6,\"60\":22,\"61\":5,\"62\":3,\"63\":2,\"64\":17,\"65\":2,\"66\":3,\"67\":10,\"106\":4,\"115\":2,\"172\":1,\"229\":1,\"230\":3,\"232\":4},\"2\":{\"68\":1}}],[\"githubusercontent\",{\"1\":{\"12\":2}}],[\"github\",{\"1\":{\"7\":1,\"8\":1,\"11\":1,\"12\":1,\"54\":1,\"58\":1,\"60\":7,\"86\":8,\"98\":2,\"100\":1,\"101\":8,\"106\":3,\"112\":2,\"115\":5,\"172\":2}}],[\"gen\",{\"1\":{\"139\":2,\"232\":1}}],[\"genfstab\",{\"1\":{\"135\":1}}],[\"generator\",{\"1\":{\"98\":2,\"106\":2}}],[\"generating\",{\"1\":{\"53\":1}}],[\"generate\",{\"1\":{\"53\":2}}],[\"generatekeypair\",{\"1\":{\"41\":1}}],[\"generic\",{\"1\":{\"46\":1}}],[\"getfirst\",{\"1\":{\"286\":1,\"288\":1}}],[\"getage\",{\"1\":{\"241\":3,\"242\":2}}],[\"getspecies\",{\"1\":{\"241\":3,\"242\":18,\"243\":5,\"244\":2,\"245\":2}}],[\"getlength\",{\"1\":{\"237\":23}}],[\"getelementbyid\",{\"1\":{\"96\":2}}],[\"getelementsbytagname\",{\"1\":{\"89\":1,\"93\":1,\"94\":1}}],[\"gettime\",{\"1\":{\"96\":1}}],[\"getchar\",{\"1\":{\"254\":2}}],[\"getcharindex\",{\"1\":{\"25\":5}}],[\"getcount\",{\"1\":{\"237\":3}}],[\"getcontext\",{\"1\":{\"91\":4,\"94\":1}}],[\"getboundingclientrect\",{\"1\":{\"91\":4}}],[\"getbytes\",{\"1\":{\"39\":1,\"72\":1}}],[\"get\",{\"0\":{\"235\":1},\"1\":{\"51\":11,\"60\":1,\"235\":4}}],[\"getpublic\",{\"1\":{\"41\":1}}],[\"getprivate\",{\"1\":{\"41\":1}}],[\"getinstance\",{\"1\":{\"37\":1,\"38\":3,\"39\":2,\"40\":2,\"41\":3,\"70\":1,\"72\":1,\"73\":2}}],[\"getdefault\",{\"1\":{\"5\":3}}],[\"getmainlooper\",{\"1\":{\"4\":2}}],[\"g\",{\"1\":{\"23\":2,\"25\":2,\"97\":2,\"126\":3,\"130\":2,\"131\":3,\"136\":1,\"138\":1,\"167\":1,\"224\":2}}],[\"=\",{\"1\":{\"4\":1,\"5\":1,\"17\":1,\"19\":1,\"20\":4,\"21\":21,\"23\":1,\"24\":7,\"25\":52,\"38\":4,\"39\":5,\"40\":4,\"41\":8,\"46\":4,\"47\":2,\"48\":1,\"49\":3,\"50\":7,\"51\":1,\"52\":1,\"53\":4,\"54\":5,\"56\":3,\"57\":7,\"58\":2,\"59\":2,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":6,\"66\":2,\"67\":6,\"72\":2,\"73\":6,\"87\":1,\"89\":18,\"90\":8,\"91\":112,\"92\":14,\"93\":5,\"94\":79,\"95\":6,\"96\":23,\"97\":4,\"98\":1,\"112\":2,\"126\":1,\"136\":4,\"138\":1,\"168\":3,\"172\":1,\"176\":8,\"209\":3,\"210\":15,\"211\":3,\"237\":19,\"241\":5,\"242\":4,\"243\":1,\"244\":2,\"245\":2,\"247\":9,\"248\":35,\"249\":4,\"253\":2,\"254\":8,\"255\":1,\"256\":1,\"257\":1,\"258\":6,\"259\":10,\"260\":18,\"261\":3,\"265\":2,\"267\":2,\"268\":20,\"269\":19,\"270\":3,\"272\":1,\"275\":1,\"276\":3,\"277\":9,\"278\":11,\"279\":2,\"284\":2,\"285\":2,\"286\":3,\"287\":9,\"288\":13,\"293\":3,\"295\":3,\"296\":1,\"297\":6}}],[\"情况\",{\"1\":{\"4\":1,\"77\":1,\"79\":2,\"104\":1,\"127\":1,\"128\":1,\"133\":1,\"173\":1,\"205\":1,\"221\":1,\"237\":1,\"242\":2,\"244\":1,\"245\":3,\"281\":1}}],[\"事情\",{\"1\":{\"257\":1}}],[\"事实上\",{\"1\":{\"242\":1}}],[\"事\",{\"1\":{\"4\":1}}],[\"hc\",{\"1\":{\"97\":2}}],[\"hnum\",{\"1\":{\"96\":7}}],[\"http\",{\"1\":{\"98\":1,\"104\":2,\"210\":2}}],[\"https\",{\"1\":{\"9\":1,\"12\":2,\"85\":1,\"86\":1,\"87\":1,\"93\":1,\"97\":2,\"98\":2,\"101\":3,\"106\":3,\"112\":3,\"115\":2,\"168\":1,\"172\":1,\"235\":1}}],[\"html\",{\"1\":{\"94\":1,\"100\":1}}],[\"hm\",{\"1\":{\"93\":5}}],[\"hmt\",{\"1\":{\"93\":2}}],[\"hiding\",{\"1\":{\"239\":1}}],[\"hidden\",{\"1\":{\"112\":1}}],[\"highlight\",{\"1\":{\"85\":1}}],[\"histories\",{\"1\":{\"56\":2,\"57\":2}}],[\"history\",{\"1\":{\"49\":1,\"52\":4,\"57\":4}}],[\"hierarchy\",{\"1\":{\"0\":1}}],[\"hours\",{\"1\":{\"96\":2}}],[\"hourglass\",{\"1\":{\"92\":1}}],[\"home\",{\"1\":{\"87\":1,\"98\":1,\"130\":1,\"131\":1,\"133\":3,\"143\":3}}],[\"hook\",{\"1\":{\"50\":1,\"58\":1,\"59\":1}}],[\"hooks\",{\"1\":{\"50\":1,\"56\":1,\"57\":1}}],[\"how\",{\"1\":{\"48\":1,\"50\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1,\"67\":1}}],[\"holding\",{\"1\":{\"47\":1,\"66\":1}}],[\"hope\",{\"1\":{\"15\":1}}],[\"hunk\",{\"1\":{\"45\":1}}],[\"hunks\",{\"1\":{\"44\":1,\"45\":2,\"47\":1,\"61\":1}}],[\"handshake\",{\"1\":{\"112\":1}}],[\"handle\",{\"1\":{\"59\":1}}],[\"handler\",{\"0\":{\"4\":1},\"1\":{\"4\":9,\"6\":3}}],[\"half\",{\"1\":{\"92\":1}}],[\"hard\",{\"1\":{\"61\":2}}],[\"hardlinks\",{\"1\":{\"49\":2}}],[\"has\",{\"1\":{\"56\":1,\"57\":1,\"189\":1}}],[\"hashtag\",{\"1\":{\"113\":1}}],[\"hash\",{\"1\":{\"46\":1,\"53\":1,\"54\":2,\"69\":1}}],[\"have\",{\"1\":{\"45\":1,\"52\":1,\"57\":1}}],[\"h\",{\"1\":{\"21\":5,\"23\":2,\"25\":2,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"144\":1,\"262\":12,\"270\":4,\"279\":4,\"288\":4,\"297\":4}}],[\"hello\",{\"1\":{\"210\":1}}],[\"helloword\",{\"0\":{\"76\":1}}],[\"heart\",{\"1\":{\"87\":1,\"89\":6}}],[\"headphones\",{\"1\":{\"98\":1}}],[\"header\",{\"1\":{\"53\":7,\"85\":1}}],[\"headers\",{\"1\":{\"45\":1}}],[\"head\",{\"1\":{\"47\":1,\"49\":2,\"52\":5,\"57\":1,\"59\":1,\"60\":1,\"61\":5,\"66\":1,\"89\":1,\"93\":1,\"262\":1,\"267\":4,\"268\":9,\"269\":4,\"270\":4,\"282\":1,\"284\":1,\"285\":1,\"286\":2,\"287\":3,\"288\":3}}],[\"height\",{\"1\":{\"21\":4,\"89\":2,\"91\":6,\"94\":8,\"210\":2}}],[\"hexutil\",{\"1\":{\"72\":1,\"73\":1}}],[\"hexstr\",{\"1\":{\"21\":8}}],[\"hexsrtbuff\",{\"1\":{\"21\":4}}],[\"hex\",{\"1\":{\"21\":12}}],[\"hexo\",{\"0\":{\"14\":1,\"83\":1,\"99\":1,\"102\":1},\"1\":{\"14\":2,\"83\":2,\"92\":1,\"98\":3,\"99\":3,\"100\":2,\"103\":1,\"104\":3,\"105\":4,\"106\":10,\"113\":1}}],[\"实参\",{\"1\":{\"295\":1,\"296\":1}}],[\"实心\",{\"1\":{\"190\":1}}],[\"实线\",{\"1\":{\"182\":1,\"186\":1,\"189\":1,\"190\":1}}],[\"实习生\",{\"1\":{\"116\":1}}],[\"实时\",{\"1\":{\"86\":1,\"100\":1}}],[\"实际上\",{\"1\":{\"291\":1}}],[\"实际\",{\"1\":{\"31\":1,\"41\":1,\"111\":1,\"126\":2,\"133\":1,\"272\":1,\"277\":2}}],[\"实例\",{\"1\":{\"3\":1,\"4\":2,\"6\":2,\"54\":1,\"70\":1,\"242\":1,\"244\":7}}],[\"实现\",{\"0\":{\"21\":1,\"25\":1,\"37\":1,\"183\":1,\"240\":1},\"1\":{\"0\":1,\"2\":1,\"22\":1,\"25\":1,\"28\":3,\"30\":1,\"36\":1,\"40\":1,\"70\":1,\"181\":2,\"183\":3,\"239\":2,\"240\":2,\"244\":5,\"246\":2,\"250\":2,\"260\":1,\"262\":1,\"281\":1,\"291\":1}}],[\"31\",{\"1\":{\"23\":1}}],[\"31.584\",{\"1\":{\"1\":1}}],[\"300\",{\"1\":{\"94\":1,\"131\":1}}],[\"3000\",{\"1\":{\"90\":1}}],[\"30\",{\"1\":{\"23\":1,\"91\":2,\"94\":1,\"270\":1,\"279\":1,\"288\":1}}],[\"39\",{\"1\":{\"23\":1}}],[\"38\",{\"1\":{\"23\":1}}],[\"37\",{\"1\":{\"23\":1}}],[\"360\",{\"1\":{\"91\":2}}],[\"36\",{\"1\":{\"23\":1}}],[\"35\",{\"1\":{\"23\":1}}],[\"34\",{\"1\":{\"23\":1,\"24\":1}}],[\"33\",{\"1\":{\"23\":1,\"24\":1}}],[\"32\",{\"1\":{\"23\":1,\"36\":1,\"40\":2,\"91\":2}}],[\"3\",{\"0\":{\"39\":1,\"79\":1,\"119\":1,\"143\":1,\"191\":1,\"210\":1,\"217\":1},\"1\":{\"19\":1,\"21\":1,\"23\":2,\"24\":1,\"25\":5,\"28\":1,\"39\":4,\"41\":1,\"45\":2,\"47\":2,\"66\":1,\"136\":1,\"219\":1,\"237\":3,\"247\":1},\"2\":{\"42\":1}}],[\"3.5\",{\"0\":{\"196\":1}}],[\"3.4\",{\"0\":{\"195\":1}}],[\"3.3\",{\"0\":{\"25\":1,\"91\":1,\"194\":1},\"1\":{\"117\":1}}],[\"3.2.1\",{\"1\":{\"208\":2,\"209\":1}}],[\"3.2\",{\"0\":{\"24\":1,\"90\":1,\"193\":1}}],[\"3.1\",{\"0\":{\"23\":1,\"89\":1,\"192\":1}}],[\"3.\",{\"0\":{\"3\":1,\"22\":1,\"74\":1,\"88\":1,\"106\":1,\"206\":1}}],[\"}\",{\"1\":{\"2\":2,\"3\":2,\"4\":2,\"5\":7,\"21\":6,\"25\":10,\"38\":6,\"39\":6,\"40\":6,\"41\":17,\"59\":1,\"72\":3,\"73\":6,\"89\":17,\"90\":6,\"91\":52,\"92\":4,\"93\":2,\"94\":29,\"96\":4,\"179\":1,\"186\":1,\"187\":2,\"188\":1,\"189\":1,\"190\":1,\"208\":3,\"209\":6,\"210\":2,\"211\":1,\"218\":1,\"237\":36,\"241\":11,\"242\":18,\"243\":2,\"244\":1,\"245\":12,\"246\":3,\"247\":11,\"248\":16,\"249\":6,\"251\":1,\"253\":1,\"254\":3,\"255\":2,\"256\":2,\"257\":2,\"258\":4,\"259\":5,\"260\":6,\"261\":2,\"262\":5,\"265\":1,\"267\":1,\"268\":5,\"269\":9,\"270\":3,\"273\":1,\"275\":1,\"276\":1,\"277\":6,\"278\":6,\"279\":2,\"282\":2,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":6,\"291\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":2,\"297\":4}}],[\"执行\",{\"1\":{\"2\":1,\"3\":1,\"4\":4,\"5\":2,\"6\":1,\"50\":1,\"54\":1,\"58\":1,\"64\":3,\"70\":1,\"93\":1,\"103\":1,\"106\":2,\"127\":1,\"128\":2,\"133\":1,\"134\":1,\"142\":1,\"144\":1,\"172\":2,\"204\":1,\"237\":3,\"245\":3}}],[\"vscode\",{\"1\":{\"216\":1,\"217\":1}}],[\"v1\",{\"1\":{\"200\":6,\"201\":2,\"202\":1}}],[\"vfat\",{\"1\":{\"132\":1}}],[\"visit\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":2,\"260\":1,\"261\":1,\"262\":2}}],[\"visudo\",{\"1\":{\"138\":1}}],[\"virtual\",{\"0\":{\"234\":1},\"1\":{\"234\":2,\"243\":2,\"244\":2}}],[\"virtualbox\",{\"1\":{\"126\":1}}],[\"vi\",{\"1\":{\"138\":1}}],[\"vimix\",{\"1\":{\"171\":4}}],[\"vim\",{\"1\":{\"134\":3,\"138\":1,\"139\":4,\"168\":1,\"172\":2,\"176\":2}}],[\"views\",{\"1\":{\"0\":1}}],[\"view\",{\"0\":{\"2\":1},\"1\":{\"0\":1,\"2\":1}}],[\"volume\",{\"1\":{\"87\":1}}],[\"volantis\",{\"1\":{\"85\":2}}],[\"void\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":5,\"70\":1,\"179\":1,\"210\":1,\"237\":20,\"246\":2,\"247\":2,\"248\":2,\"249\":2,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":13,\"268\":3,\"269\":2,\"270\":7,\"279\":2,\"288\":1}}],[\"val\",{\"1\":{\"268\":8,\"269\":3,\"277\":4,\"278\":3,\"287\":2}}],[\"valine\",{\"1\":{\"85\":8}}],[\"valines\",{\"0\":{\"85\":1}}],[\"valid\",{\"1\":{\"56\":1,\"57\":1}}],[\"values\",{\"1\":{\"50\":1,\"51\":4,\"65\":1}}],[\"value\",{\"1\":{\"49\":1,\"50\":1,\"51\":21,\"56\":1,\"57\":1,\"58\":2,\"91\":2}}],[\"variable\",{\"1\":{\"51\":3}}],[\"variables\",{\"1\":{\"51\":1}}],[\"var\",{\"1\":{\"51\":1,\"89\":5,\"90\":4,\"91\":18,\"93\":3,\"94\":11,\"96\":2}}],[\"v2\",{\"1\":{\"47\":2,\"200\":5,\"201\":2,\"202\":1,\"206\":1}}],[\"venv\",{\"1\":{\"234\":2}}],[\"velx\",{\"1\":{\"94\":5}}],[\"vely\",{\"1\":{\"94\":5}}],[\"verify\",{\"1\":{\"50\":2,\"56\":3,\"57\":3,\"58\":1,\"59\":1,\"67\":2,\"85\":2,\"202\":3,\"205\":2}}],[\"version\",{\"1\":{\"47\":2,\"65\":1,\"142\":1,\"209\":1,\"210\":2,\"211\":1}}],[\"verbose\",{\"1\":{\"44\":2,\"45\":2,\"46\":1,\"49\":2,\"50\":1,\"52\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":1,\"60\":5,\"65\":2,\"204\":2,\"205\":2}}],[\"vector\",{\"1\":{\"33\":1}}],[\"v\",{\"1\":{\"23\":2,\"25\":2,\"44\":1,\"45\":1,\"46\":1,\"49\":1,\"50\":2,\"52\":1,\"53\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":5,\"65\":1,\"67\":2,\"202\":3,\"206\":2}}],[\"vue\",{\"1\":{\"15\":1}}],[\"vuepress\",{\"0\":{\"15\":1,\"145\":1},\"1\":{\"13\":1,\"15\":2}}],[\"v0\",{\"1\":{\"12\":2,\"106\":1}}],[\"@\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":5,\"21\":4,\"25\":6,\"51\":1,\"54\":1,\"60\":1,\"72\":2,\"73\":2,\"98\":1,\"112\":1,\"176\":1,\"179\":2,\"182\":2,\"183\":2,\"184\":2,\"186\":2,\"187\":2,\"188\":2,\"189\":2,\"190\":2,\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2,\"210\":1,\"221\":2}}],[\"{\",{\"1\":{\"2\":2,\"3\":2,\"4\":2,\"5\":7,\"21\":6,\"25\":10,\"38\":6,\"39\":6,\"40\":6,\"41\":17,\"59\":1,\"72\":3,\"73\":6,\"89\":17,\"90\":6,\"91\":52,\"92\":4,\"93\":2,\"94\":29,\"96\":4,\"179\":1,\"186\":1,\"187\":2,\"188\":1,\"189\":1,\"190\":1,\"208\":3,\"209\":6,\"210\":2,\"211\":1,\"218\":1,\"237\":36,\"241\":11,\"242\":18,\"243\":2,\"244\":1,\"245\":12,\"246\":3,\"247\":11,\"248\":16,\"249\":6,\"251\":1,\"253\":1,\"254\":3,\"255\":2,\"256\":2,\"257\":2,\"258\":4,\"259\":5,\"260\":6,\"261\":2,\"262\":5,\"265\":1,\"267\":1,\"268\":5,\"269\":9,\"270\":3,\"273\":1,\"275\":1,\"276\":1,\"277\":6,\"278\":6,\"279\":2,\"282\":2,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":6,\"291\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":2,\"297\":4}}],[\"将队\",{\"1\":{\"287\":1}}],[\"将会\",{\"1\":{\"281\":1}}],[\"将长\",{\"1\":{\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"将\",{\"1\":{\"2\":1,\"6\":1,\"20\":1,\"21\":2,\"22\":1,\"28\":1,\"31\":1,\"32\":1,\"33\":2,\"34\":2,\"35\":2,\"36\":1,\"41\":1,\"44\":1,\"50\":1,\"58\":1,\"64\":1,\"69\":1,\"70\":1,\"73\":1,\"77\":1,\"83\":1,\"93\":2,\"99\":1,\"100\":1,\"101\":1,\"105\":1,\"119\":1,\"125\":1,\"127\":1,\"167\":1,\"204\":1,\"212\":1,\"218\":1,\"219\":2,\"224\":1,\"226\":1,\"237\":2,\"240\":2,\"241\":1,\"242\":2,\"245\":2,\"253\":1,\"258\":4,\"259\":6,\"260\":2,\"261\":2,\"262\":1,\"268\":3,\"277\":1,\"278\":1,\"281\":1,\"290\":2}}],[\"此次\",{\"1\":{\"250\":1}}],[\"此带\",{\"1\":{\"245\":1}}],[\"此参数\",{\"1\":{\"202\":1}}],[\"此行\",{\"1\":{\"168\":1}}],[\"此篇\",{\"1\":{\"166\":1,\"212\":2}}],[\"此为\",{\"1\":{\"92\":1}}],[\"此时\",{\"1\":{\"36\":1,\"37\":2,\"171\":1,\"173\":1,\"244\":1,\"259\":1,\"260\":1}}],[\"此类\",{\"1\":{\"6\":1,\"168\":1}}],[\"此处\",{\"1\":{\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"19\":1,\"28\":1,\"33\":1,\"94\":3,\"96\":1,\"110\":1,\"113\":1,\"119\":1,\"167\":1,\"242\":2,\"260\":1}}],[\"此\",{\"1\":{\"2\":1,\"70\":2,\"86\":1,\"92\":1,\"93\":1,\"101\":1,\"106\":2,\"111\":1,\"167\":1,\"232\":1}}],[\"到头\",{\"1\":{\"268\":1}}],[\"到子\",{\"1\":{\"6\":1}}],[\"到\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"25\":1,\"28\":1,\"44\":1,\"50\":2,\"51\":1,\"54\":1,\"55\":1,\"58\":3,\"60\":2,\"64\":1,\"69\":1,\"77\":1,\"83\":1,\"99\":1,\"106\":2,\"115\":3,\"119\":1,\"125\":1,\"128\":1,\"133\":3,\"134\":1,\"224\":1,\"226\":1,\"232\":1,\"237\":1,\"243\":1,\"244\":1,\"250\":1,\"257\":1,\"259\":4,\"260\":3,\"268\":1,\"277\":3,\"278\":2,\"281\":2}}],[\"能否\",{\"1\":{\"237\":1}}],[\"能\",{\"1\":{\"2\":1,\"237\":1}}],[\"能够\",{\"1\":{\"1\":1,\"3\":1,\"28\":1,\"64\":1,\"78\":1,\"93\":1,\"212\":2,\"237\":2,\"242\":1}}],[\"fcitx\",{\"1\":{\"176\":8}}],[\"fstab\",{\"1\":{\"135\":3}}],[\"fdisk\",{\"1\":{\"128\":1}}],[\"f12\",{\"1\":{\"125\":2}}],[\"f212d2cfebf50880\",{\"1\":{\"232\":4}}],[\"f2\",{\"1\":{\"124\":1,\"125\":1}}],[\"fw\",{\"1\":{\"112\":1}}],[\"flag\",{\"1\":{\"259\":3,\"260\":2}}],[\"flakes\",{\"1\":{\"94\":7}}],[\"flakesize\",{\"1\":{\"94\":6}}],[\"flakemove\",{\"1\":{\"94\":5}}],[\"flakecolor\",{\"1\":{\"94\":2}}],[\"flake\",{\"1\":{\"94\":2}}],[\"float\",{\"1\":{\"246\":1}}],[\"floor\",{\"1\":{\"94\":3,\"96\":3}}],[\"flukey\",{\"1\":{\"108\":1}}],[\"flueky\",{\"1\":{\"1\":1,\"54\":2,\"55\":1,\"60\":1,\"98\":1,\"101\":7,\"106\":3,\"109\":1,\"111\":1,\"112\":3,\"115\":4,\"209\":1,\"210\":3,\"211\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"fn\",{\"1\":{\"94\":2}}],[\"fbf38c\",{\"1\":{\"91\":2}}],[\"f00\",{\"1\":{\"89\":1,\"91\":2}}],[\"function\",{\"1\":{\"89\":11,\"90\":4,\"91\":32,\"92\":1,\"93\":1,\"94\":17,\"96\":1,\"244\":1}}],[\"full\",{\"1\":{\"50\":1,\"65\":1,\"232\":1}}],[\"fully\",{\"1\":{\"46\":1}}],[\"features\",{\"1\":{\"112\":1}}],[\"feed\",{\"1\":{\"98\":4}}],[\"feedback\",{\"1\":{\"34\":1,\"35\":1}}],[\"fetched\",{\"1\":{\"52\":2}}],[\"fetches\",{\"1\":{\"49\":1}}],[\"fetch\",{\"0\":{\"52\":1},\"1\":{\"52\":16,\"57\":5,\"60\":1}}],[\"fetching\",{\"1\":{\"49\":1,\"52\":4,\"57\":2}}],[\"fffd\",{\"1\":{\"112\":1}}],[\"ffffff\",{\"1\":{\"94\":1}}],[\"ff92\",{\"1\":{\"91\":2}}],[\"ff1461\",{\"1\":{\"91\":2}}],[\"ff0000\",{\"1\":{\"90\":1}}],[\"ff\",{\"1\":{\"48\":2,\"56\":2,\"57\":2,\"59\":1}}],[\"favicon\",{\"1\":{\"108\":1}}],[\"fab\",{\"1\":{\"98\":1}}],[\"far\",{\"1\":{\"87\":1}}],[\"fa\",{\"1\":{\"87\":2,\"92\":4,\"98\":4,\"112\":7,\"113\":4,\"114\":1}}],[\"fas\",{\"1\":{\"87\":1,\"98\":3,\"112\":6,\"113\":4,\"114\":1}}],[\"fast\",{\"1\":{\"48\":1,\"56\":3,\"57\":2}}],[\"failed\",{\"1\":{\"59\":1}}],[\"fails\",{\"1\":{\"45\":1,\"59\":1}}],[\"false\",{\"1\":{\"51\":1,\"57\":1,\"85\":2,\"87\":1,\"201\":3}}],[\"fallspeed\",{\"1\":{\"94\":8}}],[\"fall\",{\"1\":{\"45\":1}}],[\"fake\",{\"1\":{\"45\":1}}],[\"factor\",{\"1\":{\"53\":1}}],[\"fact\",{\"1\":{\"44\":1,\"61\":1}}],[\"free\",{\"1\":{\"269\":2,\"270\":1,\"279\":2,\"287\":1}}],[\"friend\",{\"1\":{\"237\":3,\"249\":2}}],[\"friends\",{\"1\":{\"112\":2}}],[\"from\",{\"1\":{\"44\":4,\"45\":1,\"47\":3,\"48\":1,\"49\":4,\"50\":8,\"51\":1,\"52\":4,\"53\":8,\"54\":2,\"56\":3,\"57\":4,\"61\":4,\"62\":1,\"63\":5,\"64\":1,\"67\":2}}],[\"fragment\",{\"1\":{\"2\":1}}],[\"fifo\",{\"1\":{\"281\":1}}],[\"firmware\",{\"1\":{\"174\":1}}],[\"firefox\",{\"1\":{\"169\":1}}],[\"fireworks\",{\"1\":{\"91\":5}}],[\"first\",{\"1\":{\"25\":3,\"53\":1,\"281\":2,\"290\":1}}],[\"fixed\",{\"1\":{\"51\":1,\"89\":2,\"91\":1}}],[\"fixup\",{\"1\":{\"50\":3,\"59\":1}}],[\"filo\",{\"1\":{\"290\":1}}],[\"fill\",{\"1\":{\"91\":2,\"94\":1}}],[\"fillstyle\",{\"1\":{\"91\":2,\"94\":1}}],[\"filters\",{\"1\":{\"49\":1}}],[\"filter\",{\"1\":{\"49\":2,\"52\":1,\"210\":2}}],[\"filtering\",{\"1\":{\"46\":1,\"49\":1,\"52\":1,\"67\":1}}],[\"filenotfoundexception\",{\"1\":{\"73\":1}}],[\"filename\",{\"1\":{\"53\":2}}],[\"filenames\",{\"1\":{\"45\":1,\"53\":1}}],[\"fileinputstream\",{\"1\":{\"73\":1}}],[\"filemd5\",{\"1\":{\"73\":1}}],[\"filepath\",{\"1\":{\"55\":1}}],[\"file\",{\"1\":{\"44\":7,\"45\":2,\"47\":6,\"49\":1,\"50\":14,\"51\":10,\"52\":1,\"53\":4,\"56\":2,\"59\":1,\"61\":7,\"63\":8,\"64\":3,\"67\":4,\"73\":6,\"204\":2,\"205\":1}}],[\"filesystem\",{\"1\":{\"128\":1,\"132\":1}}],[\"files\",{\"1\":{\"44\":7,\"45\":2,\"47\":3,\"49\":1,\"50\":6,\"53\":2,\"56\":1,\"63\":1,\"65\":4,\"66\":1,\"143\":2}}],[\"field\",{\"1\":{\"46\":1,\"67\":1,\"179\":1}}],[\"finish\",{\"1\":{\"119\":1}}],[\"find\",{\"1\":{\"51\":2,\"65\":1}}],[\"finding\",{\"1\":{\"45\":2}}],[\"final\",{\"1\":{\"21\":2,\"25\":2,\"38\":4,\"39\":5,\"40\":4,\"41\":3,\"72\":1,\"73\":1}}],[\"found\",{\"1\":{\"299\":1}}],[\"four\",{\"1\":{\"25\":3}}],[\"folder\",{\"1\":{\"113\":1}}],[\"follow\",{\"1\":{\"49\":1,\"58\":1}}],[\"footer\",{\"1\":{\"96\":1}}],[\"footprints\",{\"1\":{\"85\":1}}],[\"fontawesome\",{\"1\":{\"114\":1}}],[\"font\",{\"1\":{\"90\":1,\"94\":1}}],[\"foreach\",{\"1\":{\"92\":1}}],[\"fork\",{\"1\":{\"59\":2}}],[\"forward\",{\"1\":{\"48\":1,\"56\":3,\"57\":2}}],[\"formatted\",{\"1\":{\"50\":2}}],[\"format\",{\"0\":{\"53\":1},\"1\":{\"46\":4,\"50\":1,\"53\":3,\"54\":3,\"62\":1,\"65\":1,\"67\":8,\"232\":1}}],[\"forced\",{\"1\":{\"52\":2,\"57\":2}}],[\"force\",{\"1\":{\"44\":1,\"46\":2,\"47\":3,\"49\":1,\"50\":1,\"52\":3,\"53\":1,\"56\":1,\"57\":3,\"58\":5,\"59\":1,\"63\":2,\"66\":4,\"67\":2}}],[\"for\",{\"1\":{\"21\":2,\"25\":3,\"45\":3,\"46\":3,\"47\":3,\"48\":1,\"49\":1,\"50\":3,\"51\":2,\"52\":2,\"53\":1,\"56\":2,\"57\":4,\"58\":1,\"62\":1,\"67\":1,\"89\":1,\"91\":4,\"94\":2,\"277\":1,\"278\":3}}],[\"f\",{\"1\":{\"19\":1,\"21\":1,\"23\":2,\"25\":2,\"44\":2,\"46\":2,\"47\":1,\"50\":2,\"51\":1,\"52\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"63\":2,\"66\":1,\"67\":4}}],[\"29\",{\"1\":{\"23\":1}}],[\"28\",{\"1\":{\"23\":1,\"209\":2,\"211\":1}}],[\"27\",{\"1\":{\"23\":1}}],[\"2615636388\",{\"1\":{\"87\":2}}],[\"26\",{\"1\":{\"23\":1,\"25\":3,\"297\":1}}],[\"250\",{\"1\":{\"96\":2}}],[\"255\",{\"1\":{\"89\":3,\"94\":9}}],[\"25\",{\"1\":{\"23\":1,\"262\":1}}],[\"256\",{\"1\":{\"17\":1,\"41\":1,\"73\":1}}],[\"245\",{\"1\":{\"95\":1}}],[\"24\",{\"1\":{\"23\":1,\"24\":2,\"39\":3,\"40\":2,\"96\":4}}],[\"220\",{\"1\":{\"95\":3}}],[\"22\",{\"1\":{\"23\":1}}],[\"210\",{\"1\":{\"95\":1}}],[\"21\",{\"1\":{\"23\":1}}],[\"2016\",{\"1\":{\"99\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"2019\",{\"1\":{\"96\":1}}],[\"2010\",{\"1\":{\"69\":1}}],[\"2024.2.1.10\",{\"1\":{\"117\":4}}],[\"2024\",{\"1\":{\"55\":2,\"232\":1}}],[\"2048\",{\"1\":{\"41\":3}}],[\"2000\",{\"1\":{\"90\":1}}],[\"200\",{\"1\":{\"24\":1,\"94\":2,\"95\":1}}],[\"20\",{\"1\":{\"23\":1,\"24\":2,\"90\":1,\"94\":1,\"98\":1,\"232\":1}}],[\"20.18.0\",{\"1\":{\"11\":2,\"12\":2}}],[\"2\",{\"0\":{\"78\":1,\"118\":1,\"142\":1,\"180\":1,\"209\":1,\"216\":1},\"1\":{\"17\":2,\"19\":7,\"20\":1,\"21\":5,\"23\":3,\"24\":5,\"25\":9,\"47\":1,\"91\":16,\"94\":4,\"95\":1,\"99\":1,\"126\":1,\"134\":1,\"164\":1,\"202\":1,\"237\":3,\"246\":1,\"247\":7,\"248\":2,\"262\":1,\"291\":1,\"297\":1}}],[\"2.4\",{\"0\":{\"41\":1}}],[\"2.3.5\",{\"0\":{\"190\":1}}],[\"2.3.4\",{\"0\":{\"189\":1}}],[\"2.3.3\",{\"0\":{\"188\":1}}],[\"2.3.2\",{\"0\":{\"187\":1}}],[\"2.3.1\",{\"0\":{\"186\":1}}],[\"2.3\",{\"0\":{\"21\":1,\"40\":1,\"105\":1,\"185\":1}}],[\"2.2.\",{\"0\":{\"205\":1}}],[\"2.2.0\",{\"1\":{\"91\":1}}],[\"2.2\",{\"0\":{\"20\":1,\"39\":1,\"73\":1,\"104\":1,\"184\":1}}],[\"2.1.\",{\"0\":{\"204\":1}}],[\"2.1.2\",{\"0\":{\"183\":1}}],[\"2.1.1\",{\"0\":{\"182\":1}}],[\"2.1\",{\"0\":{\"19\":1,\"38\":1,\"72\":1,\"103\":1,\"181\":1}}],[\"2.\",{\"0\":{\"2\":1,\"18\":1,\"37\":1,\"71\":1,\"87\":1,\"102\":1,\"203\":1},\"1\":{\"70\":1}}],[\"23\",{\"1\":{\"23\":1,\"237\":6}}],[\"2393\",{\"1\":{\"1\":3}}],[\"2368\",{\"1\":{\"1\":4}}],[\"这点\",{\"1\":{\"273\":1}}],[\"这种\",{\"1\":{\"181\":2,\"237\":1,\"242\":1,\"243\":1}}],[\"这是\",{\"1\":{\"179\":1,\"221\":1,\"257\":1}}],[\"这里\",{\"1\":{\"87\":1,\"115\":1,\"119\":1,\"237\":1,\"242\":1,\"257\":1,\"265\":1,\"267\":1,\"275\":1,\"282\":1,\"290\":1,\"291\":1}}],[\"这样\",{\"1\":{\"86\":1,\"99\":1,\"100\":1,\"126\":1,\"242\":1,\"245\":1}}],[\"这台\",{\"1\":{\"79\":1}}],[\"这么\",{\"1\":{\"69\":1,\"78\":1,\"260\":1}}],[\"这\",{\"1\":{\"22\":1,\"69\":1,\"85\":1,\"99\":1,\"204\":1,\"217\":1,\"241\":2,\"242\":2,\"244\":4,\"245\":1,\"257\":1,\"262\":1,\"264\":1,\"277\":1,\"281\":2,\"282\":1}}],[\"这些\",{\"1\":{\"1\":1}}],[\"这个\",{\"1\":{\"0\":1,\"16\":1,\"60\":1,\"78\":1,\"119\":1,\"237\":1,\"241\":1}}],[\"操作方法\",{\"1\":{\"291\":1}}],[\"操作数\",{\"1\":{\"247\":1,\"248\":1}}],[\"操作\",{\"0\":{\"252\":1,\"266\":1,\"274\":1,\"283\":1,\"292\":1},\"1\":{\"1\":1,\"6\":1,\"26\":1,\"31\":1,\"36\":1,\"37\":1,\"39\":4,\"64\":1,\"112\":1,\"113\":1,\"124\":1,\"127\":1,\"128\":1,\"134\":1,\"138\":2,\"172\":1,\"176\":1,\"237\":1,\"241\":1,\"243\":1,\"244\":2,\"247\":1,\"248\":1,\"262\":2,\"264\":1,\"272\":1,\"281\":2,\"282\":2,\"290\":3,\"291\":1}}],[\"p4\",{\"1\":{\"248\":2}}],[\"p3\",{\"1\":{\"248\":4}}],[\"p2\",{\"1\":{\"247\":2,\"248\":6}}],[\"p1\",{\"1\":{\"247\":11,\"248\":12}}],[\"py\",{\"1\":{\"235\":4}}],[\"pypa\",{\"1\":{\"235\":1}}],[\"python3\",{\"1\":{\"233\":1,\"234\":2,\"235\":1}}],[\"python\",{\"0\":{\"233\":1},\"1\":{\"233\":2}}],[\"pc\",{\"1\":{\"136\":1}}],[\"png\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1}}],[\"px\",{\"1\":{\"89\":6,\"91\":4,\"94\":1}}],[\"plugin\",{\"1\":{\"98\":1,\"209\":1,\"211\":1}}],[\"plugins\",{\"1\":{\"98\":2}}],[\"plantumldiagrams\",{\"1\":{\"217\":1,\"219\":1,\"220\":1}}],[\"plantuml\",{\"0\":{\"178\":1,\"191\":1,\"214\":1,\"217\":1},\"1\":{\"178\":2,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"189\":1,\"190\":1,\"191\":2,\"197\":1,\"217\":1,\"219\":2},\"2\":{\"198\":1,\"222\":1}}],[\"play\",{\"1\":{\"91\":2}}],[\"playlist\",{\"1\":{\"87\":5}}],[\"placeholder\",{\"1\":{\"85\":2}}],[\"placed\",{\"1\":{\"60\":1}}],[\"place\",{\"1\":{\"52\":1}}],[\"please\",{\"1\":{\"85\":1}}],[\"publish\",{\"1\":{\"106\":1}}],[\"publickey\",{\"1\":{\"41\":4}}],[\"public\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":3,\"21\":2,\"25\":2,\"30\":1,\"38\":2,\"39\":2,\"40\":2,\"41\":2,\"72\":1,\"73\":1,\"179\":2,\"210\":1,\"237\":7,\"240\":2,\"241\":6,\"242\":9,\"243\":1,\"244\":1,\"245\":13,\"247\":1,\"248\":1,\"249\":1}}],[\"pushing\",{\"1\":{\"58\":1}}],[\"push\",{\"0\":{\"58\":1},\"1\":{\"54\":1,\"58\":14,\"60\":4,\"64\":1,\"89\":1,\"91\":2,\"94\":1,\"258\":3,\"259\":3,\"260\":4,\"297\":2}}],[\"pulled\",{\"1\":{\"57\":1}}],[\"pull\",{\"0\":{\"57\":1},\"1\":{\"52\":1,\"57\":3,\"58\":1}}],[\"permitted\",{\"1\":{\"201\":1}}],[\"permissions\",{\"1\":{\"54\":2}}],[\"permalink\",{\"1\":{\"111\":1}}],[\"percentage\",{\"1\":{\"53\":1}}],[\"per\",{\"1\":{\"51\":1}}],[\"perform\",{\"1\":{\"47\":1,\"56\":1,\"57\":1,\"66\":1}}],[\"poweroff\",{\"1\":{\"139\":1}}],[\"pop\",{\"1\":{\"56\":1,\"57\":1,\"59\":1,\"64\":3,\"258\":2,\"259\":2,\"260\":2,\"296\":1,\"297\":1}}],[\"porcelain\",{\"1\":{\"50\":1,\"58\":1,\"65\":1}}],[\"position\",{\"1\":{\"89\":2,\"90\":1,\"91\":1,\"94\":2,\"268\":5}}],[\"possible\",{\"1\":{\"48\":1,\"56\":2,\"57\":1,\"59\":1,\"62\":1}}],[\"postordertraversenormal\",{\"1\":{\"260\":1,\"262\":1}}],[\"postordertraverse\",{\"1\":{\"257\":3,\"262\":1}}],[\"posts\",{\"1\":{\"87\":2,\"106\":2}}],[\"post\",{\"0\":{\"2\":1,\"4\":1},\"1\":{\"2\":2,\"4\":3,\"5\":1,\"50\":2,\"92\":14,\"106\":1}}],[\"pointer\",{\"1\":{\"91\":1,\"94\":1}}],[\"pointery\",{\"1\":{\"91\":6}}],[\"pointerx\",{\"1\":{\"91\":6}}],[\"points\",{\"1\":{\"46\":2,\"67\":2}}],[\"point\",{\"1\":{\"46\":1,\"59\":3,\"247\":34,\"248\":65,\"249\":12}}],[\"pip\",{\"0\":{\"235\":1},\"1\":{\"233\":2,\"235\":5}}],[\"ping\",{\"1\":{\"127\":2}}],[\"pic\",{\"1\":{\"108\":1,\"110\":1,\"111\":1,\"112\":1}}],[\"picks\",{\"1\":{\"59\":1}}],[\"pick\",{\"0\":{\"48\":1},\"1\":{\"48\":6,\"59\":2,\"62\":3}}],[\"picking\",{\"1\":{\"44\":1}}],[\"piao\",{\"1\":{\"97\":1}}],[\"pi\",{\"1\":{\"91\":6,\"94\":1}}],[\"pid\",{\"1\":{\"1\":2}}],[\"pkcs5padding\",{\"1\":{\"37\":2,\"38\":3,\"39\":1,\"40\":1}}],[\"p\",{\"1\":{\"23\":2,\"25\":3,\"44\":1,\"45\":1,\"47\":1,\"50\":1,\"52\":2,\"53\":1,\"55\":1,\"57\":1,\"60\":1,\"61\":1,\"64\":2,\"104\":1,\"134\":1,\"248\":12,\"249\":6}}],[\"pacamn\",{\"1\":{\"136\":1}}],[\"pacstrap\",{\"1\":{\"135\":1}}],[\"pacman\",{\"1\":{\"134\":2,\"136\":3,\"138\":1,\"139\":1,\"167\":2,\"168\":4,\"169\":2,\"170\":1,\"171\":5,\"172\":1,\"173\":1,\"174\":3,\"175\":1,\"176\":3,\"177\":4}}],[\"packages\",{\"1\":{\"219\":1}}],[\"package\",{\"1\":{\"106\":1,\"209\":1,\"210\":2,\"211\":1,\"217\":2}}],[\"packfile\",{\"1\":{\"52\":1}}],[\"pack\",{\"1\":{\"49\":2,\"52\":3,\"57\":3,\"58\":6}}],[\"pagey\",{\"1\":{\"90\":1}}],[\"pagex\",{\"1\":{\"90\":1}}],[\"page\",{\"1\":{\"85\":1,\"87\":2,\"109\":1,\"112\":1}}],[\"pagesize\",{\"1\":{\"85\":1}}],[\"pages\",{\"1\":{\"7\":1,\"8\":1}}],[\"password\",{\"1\":{\"201\":4,\"204\":1}}],[\"passwd\",{\"1\":{\"136\":1,\"138\":1,\"224\":1}}],[\"pass\",{\"1\":{\"59\":1,\"201\":4}}],[\"passed\",{\"1\":{\"59\":2}}],[\"parted\",{\"1\":{\"128\":2}}],[\"part\",{\"1\":{\"77\":1}}],[\"parts\",{\"1\":{\"53\":1}}],[\"partial\",{\"1\":{\"49\":1,\"92\":4,\"93\":1,\"96\":1}}],[\"parallel\",{\"1\":{\"49\":1,\"52\":1,\"57\":1}}],[\"param\",{\"1\":{\"21\":2,\"25\":3,\"72\":1,\"73\":1}}],[\"parentnode\",{\"1\":{\"93\":1}}],[\"parent\",{\"1\":{\"48\":3,\"62\":3,\"210\":3,\"254\":7,\"255\":5,\"256\":5,\"257\":5,\"258\":3,\"259\":3,\"260\":3,\"261\":2}}],[\"paht\",{\"1\":{\"44\":1}}],[\"pattern\",{\"1\":{\"46\":1,\"51\":7,\"67\":1}}],[\"paths\",{\"1\":{\"44\":1,\"45\":3,\"61\":1}}],[\"pathspecs\",{\"1\":{\"47\":1}}],[\"pathspec\",{\"1\":{\"44\":6,\"47\":5,\"49\":2,\"50\":8,\"61\":9,\"63\":8,\"64\":3,\"65\":1}}],[\"path\",{\"1\":{\"44\":2,\"45\":4,\"49\":2,\"51\":2,\"52\":2,\"56\":1,\"57\":2,\"73\":3,\"98\":1,\"143\":2,\"144\":1}}],[\"patches\",{\"1\":{\"45\":1,\"53\":4}}],[\"patch\",{\"0\":{\"53\":1},\"1\":{\"44\":1,\"45\":12,\"47\":1,\"50\":2,\"53\":19,\"59\":3,\"61\":2,\"64\":2}}],[\"prune\",{\"1\":{\"52\":4,\"57\":2,\"58\":2,\"60\":2}}],[\"preordertraversenormal\",{\"1\":{\"258\":1,\"262\":1}}],[\"preordertraverse\",{\"1\":{\"255\":3,\"262\":1}}],[\"present\",{\"1\":{\"59\":1}}],[\"preserve\",{\"1\":{\"48\":1}}],[\"prerequisite\",{\"1\":{\"53\":1}}],[\"prefix\",{\"1\":{\"53\":3}}],[\"prefetch\",{\"1\":{\"52\":2}}],[\"previous\",{\"1\":{\"50\":1}}],[\"pre\",{\"1\":{\"50\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1}}],[\"prepend\",{\"1\":{\"45\":1}}],[\"prepare\",{\"1\":{\"4\":1}}],[\"printf\",{\"1\":{\"237\":3,\"262\":1,\"269\":3,\"277\":3,\"297\":2}}],[\"printline\",{\"1\":{\"237\":16}}],[\"printcert\",{\"1\":{\"205\":1}}],[\"print\",{\"1\":{\"46\":5,\"52\":1,\"53\":2,\"67\":6,\"202\":3,\"237\":13,\"246\":5,\"247\":8,\"248\":13,\"249\":2}}],[\"printstacktrace\",{\"1\":{\"38\":2,\"39\":2,\"40\":2,\"41\":11,\"72\":1,\"73\":3}}],[\"privatekey\",{\"1\":{\"41\":4}}],[\"private\",{\"1\":{\"25\":1,\"30\":1,\"38\":2,\"39\":3,\"40\":2,\"41\":3,\"179\":2,\"237\":7,\"240\":3,\"241\":2,\"242\":2,\"245\":5,\"247\":1,\"248\":1,\"249\":1}}],[\"project\",{\"1\":{\"211\":1}}],[\"projects\",{\"1\":{\"112\":2}}],[\"providers\",{\"1\":{\"201\":1}}],[\"prober\",{\"1\":{\"136\":1}}],[\"prototype\",{\"1\":{\"94\":4}}],[\"protected\",{\"1\":{\"5\":3,\"179\":2,\"210\":1,\"237\":1,\"240\":2,\"241\":2,\"242\":2,\"243\":1,\"244\":1,\"245\":8}}],[\"properties\",{\"1\":{\"77\":1}}],[\"program\",{\"1\":{\"58\":2,\"143\":2,\"176\":1}}],[\"progress\",{\"1\":{\"47\":3,\"49\":2,\"52\":2,\"53\":2,\"56\":4,\"57\":2,\"58\":2,\"66\":3}}],[\"process\",{\"1\":{\"1\":3}}],[\"方面\",{\"1\":{\"166\":1}}],[\"方向键\",{\"1\":{\"128\":1}}],[\"方向\",{\"1\":{\"94\":2}}],[\"方便\",{\"1\":{\"6\":1,\"22\":1,\"37\":1,\"78\":1,\"125\":1,\"127\":1,\"168\":1,\"191\":1,\"215\":1,\"272\":1}}],[\"方法\",{\"1\":{\"2\":1,\"3\":2,\"4\":1,\"6\":3,\"37\":2,\"38\":1,\"70\":6,\"94\":1,\"179\":3,\"184\":1,\"244\":1,\"245\":1,\"246\":1,\"262\":1}}],[\"方式\",{\"1\":{\"1\":2,\"2\":1,\"5\":1,\"6\":1,\"17\":1,\"20\":1,\"30\":1,\"78\":2,\"79\":1,\"86\":4,\"98\":1,\"100\":1,\"105\":1,\"116\":1,\"121\":1,\"125\":3,\"126\":1,\"127\":1,\"134\":1,\"174\":1,\"184\":1,\"201\":1,\"202\":1,\"233\":1,\"237\":2,\"242\":1,\"245\":1,\"247\":1,\"248\":1,\"254\":2,\"257\":2,\"260\":1,\"272\":1,\"281\":2,\"284\":1,\"295\":1,\"296\":1}}],[\"方案\",{\"1\":{\"0\":1}}],[\"重名\",{\"1\":{\"277\":1}}],[\"重用\",{\"1\":{\"245\":1}}],[\"重装系统\",{\"1\":{\"131\":1}}],[\"重新安装\",{\"1\":{\"139\":1}}],[\"重新启动\",{\"1\":{\"136\":1}}],[\"重新\",{\"1\":{\"79\":2,\"128\":1,\"171\":1,\"243\":1,\"245\":1}}],[\"重新分配\",{\"1\":{\"1\":1}}],[\"重启\",{\"1\":{\"77\":1,\"91\":1,\"106\":1,\"136\":1,\"139\":1,\"176\":1}}],[\"重命名\",{\"1\":{\"60\":1}}],[\"重载\",{\"0\":{\"246\":1,\"247\":1,\"248\":1,\"249\":1},\"1\":{\"37\":1,\"70\":1,\"237\":3,\"244\":1,\"245\":1,\"246\":21,\"247\":7,\"248\":11,\"277\":2}}],[\"重复\",{\"1\":{\"32\":2}}],[\"重点\",{\"1\":{\"30\":1,\"69\":1,\"258\":1,\"279\":1}}],[\"重要\",{\"1\":{\"0\":1,\"128\":1}}],[\"卸载\",{\"1\":{\"1\":1}}],[\"覆盖\",{\"1\":{\"1\":1}}],[\"唯一\",{\"1\":{\"1\":1}}],[\"其后\",{\"1\":{\"246\":1}}],[\"其它\",{\"1\":{\"106\":1}}],[\"其次\",{\"1\":{\"78\":1,\"259\":1}}],[\"其他\",{\"0\":{\"177\":1},\"1\":{\"37\":1,\"38\":1,\"64\":1,\"78\":1,\"87\":1,\"94\":1,\"98\":1,\"119\":1,\"170\":1,\"191\":1,\"217\":1,\"237\":2,\"244\":1,\"246\":1}}],[\"其实\",{\"1\":{\"4\":1,\"69\":1,\"216\":1,\"217\":1}}],[\"其\",{\"1\":{\"1\":1,\"17\":1,\"21\":1,\"33\":1,\"99\":1,\"138\":1,\"172\":2,\"239\":1,\"242\":1,\"250\":1,\"259\":1}}],[\"其中\",{\"1\":{\"1\":1,\"6\":1,\"38\":1,\"58\":1,\"101\":1,\"116\":1,\"128\":1,\"179\":1,\"204\":1,\"237\":1}}],[\"给出\",{\"1\":{\"16\":1,\"51\":1,\"244\":3}}],[\"给\",{\"1\":{\"1\":1,\"83\":1,\"172\":1,\"210\":1,\"237\":3,\"244\":1,\"245\":1,\"278\":1,\"281\":1,\"293\":1,\"295\":1,\"296\":1}}],[\"序号\",{\"1\":{\"1\":1}}],[\"会先\",{\"1\":{\"242\":1}}],[\"会弹\",{\"1\":{\"119\":1}}],[\"会出\",{\"1\":{\"116\":1}}],[\"会\",{\"1\":{\"1\":2,\"2\":1,\"3\":1,\"5\":2,\"6\":1,\"28\":1,\"64\":1,\"77\":2,\"78\":1,\"79\":1,\"176\":1,\"237\":5,\"240\":1,\"242\":3,\"243\":1,\"244\":3,\"245\":4,\"246\":1,\"260\":1,\"272\":1,\"276\":1}}],[\"则\",{\"1\":{\"1\":1,\"4\":1,\"64\":1,\"109\":1,\"125\":1,\"131\":2,\"181\":2,\"237\":2,\"244\":2,\"245\":6,\"258\":1,\"260\":1}}],[\"i386\",{\"1\":{\"136\":1}}],[\"iostream\",{\"1\":{\"237\":1,\"241\":1,\"242\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1}}],[\"ios\",{\"1\":{\"125\":1}}],[\"io\",{\"1\":{\"98\":1,\"101\":3,\"112\":2,\"115\":2,\"235\":1}}],[\"ioexception\",{\"1\":{\"73\":1}}],[\"implementation\",{\"1\":{\"211\":1,\"239\":1}}],[\"implies\",{\"1\":{\"44\":1,\"49\":1,\"59\":1}}],[\"import\",{\"1\":{\"210\":2}}],[\"im\",{\"1\":{\"176\":4}}],[\"image\",{\"1\":{\"111\":1}}],[\"img\",{\"1\":{\"91\":2,\"111\":1,\"112\":1}}],[\"icon\",{\"0\":{\"114\":1},\"1\":{\"87\":2,\"92\":2,\"98\":4,\"108\":1,\"110\":1,\"111\":1,\"112\":6,\"113\":4,\"114\":2,\"171\":1}}],[\"items\",{\"1\":{\"112\":1}}],[\"item\",{\"1\":{\"92\":4}}],[\"it\",{\"1\":{\"59\":1}}],[\"its\",{\"1\":{\"0\":1,\"46\":2}}],[\"ipv6\",{\"1\":{\"49\":2,\"52\":2,\"57\":2,\"58\":2}}],[\"ipv4\",{\"1\":{\"49\":2,\"52\":2,\"57\":2,\"58\":2}}],[\"isemptystack\",{\"1\":{\"294\":1,\"297\":1}}],[\"isempty\",{\"1\":{\"285\":1,\"287\":1,\"288\":1}}],[\"istream\",{\"1\":{\"249\":4}}],[\"ispostlist\",{\"1\":{\"92\":2}}],[\"issues\",{\"1\":{\"86\":6}}],[\"ish\",{\"1\":{\"61\":3}}],[\"is\",{\"1\":{\"45\":2,\"47\":1,\"50\":1,\"51\":8,\"53\":1,\"54\":1,\"56\":1,\"57\":1,\"59\":2,\"66\":1,\"73\":1,\"181\":1,\"237\":46,\"241\":2}}],[\"ignore\",{\"1\":{\"44\":4,\"45\":5,\"46\":1,\"47\":3,\"53\":1,\"56\":1,\"59\":3,\"63\":2,\"65\":2,\"66\":2,\"67\":1}}],[\"ignored\",{\"1\":{\"44\":2,\"47\":1,\"56\":1,\"65\":2,\"66\":1}}],[\"ivparameterspec\",{\"1\":{\"39\":1}}],[\"iv\",{\"1\":{\"33\":2,\"34\":1,\"35\":1,\"37\":1,\"38\":1,\"39\":2}}],[\"i\",{\"1\":{\"21\":6,\"23\":2,\"25\":13,\"44\":1,\"46\":1,\"50\":2,\"59\":4,\"67\":1,\"89\":2,\"90\":5,\"91\":10,\"92\":5,\"94\":3,\"106\":1,\"112\":2,\"135\":1,\"172\":1,\"241\":2,\"248\":4,\"269\":5,\"277\":5,\"278\":10}}],[\"illegalblocksizeexception\",{\"1\":{\"41\":2}}],[\"illegal\",{\"1\":{\"21\":1,\"25\":1,\"73\":1}}],[\"illegalargumentexception\",{\"1\":{\"21\":1,\"25\":1,\"73\":1}}],[\"inordertraversenormal\",{\"1\":{\"259\":1,\"262\":1}}],[\"inordertraverse\",{\"1\":{\"256\":3,\"262\":1}}],[\"innerhtml\",{\"1\":{\"96\":2}}],[\"innerheight\",{\"1\":{\"91\":4,\"94\":1}}],[\"innerwidth\",{\"1\":{\"91\":4,\"94\":2}}],[\"inline\",{\"1\":{\"53\":2,\"237\":6}}],[\"insertlist\",{\"1\":{\"277\":3,\"279\":2}}],[\"insertlast\",{\"1\":{\"268\":2,\"270\":1}}],[\"insert\",{\"1\":{\"268\":1,\"270\":1}}],[\"insertfirst\",{\"1\":{\"268\":2,\"270\":1}}],[\"insertbefore\",{\"1\":{\"93\":1}}],[\"insensitive\",{\"1\":{\"46\":1,\"67\":1}}],[\"inside\",{\"1\":{\"49\":1}}],[\"instream\",{\"1\":{\"249\":4}}],[\"instead\",{\"1\":{\"45\":3,\"49\":2,\"52\":2,\"53\":5,\"56\":2,\"57\":2,\"59\":2}}],[\"install\",{\"1\":{\"11\":1,\"12\":3,\"98\":1,\"106\":1,\"136\":2,\"172\":2,\"215\":1,\"217\":2,\"229\":1,\"233\":1,\"234\":1}}],[\"instanceof\",{\"1\":{\"5\":1}}],[\"info\",{\"1\":{\"46\":2,\"53\":1,\"85\":2,\"112\":1}}],[\"informational\",{\"1\":{\"46\":1}}],[\"information\",{\"1\":{\"45\":1,\"50\":1,\"65\":2}}],[\"inherit\",{\"1\":{\"46\":1,\"47\":1,\"66\":1,\"89\":3}}],[\"incorporate\",{\"1\":{\"57\":1}}],[\"incorrectly\",{\"1\":{\"45\":1}}],[\"includes\",{\"1\":{\"51\":1,\"58\":1}}],[\"include\",{\"1\":{\"45\":1,\"49\":1,\"50\":2,\"51\":1,\"53\":1,\"64\":3,\"168\":1,\"209\":1,\"211\":1,\"237\":1,\"241\":2,\"242\":2,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"262\":4}}],[\"inaccurate\",{\"1\":{\"45\":1}}],[\"inputstream\",{\"1\":{\"73\":3}}],[\"input\",{\"1\":{\"45\":2,\"51\":2,\"85\":1,\"230\":1}}],[\"in\",{\"1\":{\"44\":2,\"45\":6,\"46\":1,\"49\":2,\"50\":3,\"52\":1,\"53\":8,\"56\":2,\"57\":1,\"59\":1,\"65\":2,\"67\":1,\"201\":3,\"202\":2,\"206\":1,\"281\":1,\"290\":1}}],[\"invalidkeyexception\",{\"1\":{\"41\":2}}],[\"initlist\",{\"1\":{\"276\":1,\"279\":1}}],[\"initstack\",{\"1\":{\"258\":1,\"259\":1,\"260\":2,\"293\":1,\"297\":1}}],[\"initbittree\",{\"1\":{\"253\":1,\"262\":1}}],[\"initial\",{\"1\":{\"54\":3}}],[\"initially\",{\"1\":{\"48\":1}}],[\"initialize\",{\"1\":{\"41\":1,\"49\":2}}],[\"initialization\",{\"1\":{\"33\":1}}],[\"init\",{\"0\":{\"54\":1},\"1\":{\"37\":1,\"38\":3,\"39\":2,\"40\":2,\"41\":2,\"54\":5,\"103\":1,\"106\":2,\"262\":1,\"276\":2,\"279\":1,\"291\":1,\"293\":2,\"297\":1}}],[\"index\",{\"1\":{\"25\":16,\"44\":1,\"45\":4,\"48\":1,\"50\":1,\"56\":2,\"59\":1,\"61\":4,\"62\":1,\"63\":1,\"64\":4,\"65\":1,\"89\":1,\"90\":1,\"91\":1,\"94\":2,\"112\":3,\"113\":5,\"269\":5,\"277\":7,\"278\":14,\"279\":1}}],[\"into\",{\"1\":{\"56\":1}}],[\"integrated\",{\"1\":{\"58\":1}}],[\"interface\",{\"1\":{\"183\":1}}],[\"interval\",{\"1\":{\"94\":1}}],[\"internal\",{\"1\":{\"87\":1}}],[\"interdiff\",{\"1\":{\"53\":1}}],[\"interactively\",{\"1\":{\"44\":1,\"47\":1,\"50\":2,\"61\":1}}],[\"interactive\",{\"1\":{\"44\":2,\"50\":2,\"57\":1,\"59\":2}}],[\"intent\",{\"1\":{\"44\":1,\"45\":2,\"61\":1,\"210\":5}}],[\"int\",{\"1\":{\"21\":5,\"25\":16,\"51\":3,\"73\":1,\"237\":12,\"241\":5,\"242\":8,\"243\":2,\"246\":5,\"247\":12,\"248\":14,\"249\":6,\"259\":1,\"260\":1,\"262\":3,\"265\":1,\"268\":1,\"269\":2,\"270\":3,\"272\":1,\"273\":3,\"276\":1,\"277\":4,\"278\":6,\"279\":10,\"282\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":6,\"291\":3,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"297\":9}}],[\"ifndef\",{\"1\":{\"262\":3,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"if\",{\"1\":{\"5\":1,\"21\":3,\"25\":13,\"44\":1,\"45\":2,\"46\":3,\"47\":1,\"48\":1,\"49\":1,\"53\":3,\"56\":3,\"57\":2,\"58\":2,\"59\":3,\"62\":1,\"63\":1,\"66\":1,\"67\":1,\"73\":1,\"91\":2,\"92\":2,\"93\":1,\"94\":2,\"96\":3,\"254\":2,\"255\":1,\"256\":1,\"257\":1,\"258\":4,\"259\":3,\"260\":6,\"261\":2,\"268\":2,\"269\":4,\"276\":1,\"277\":4,\"278\":3,\"285\":1,\"286\":1,\"287\":2,\"288\":3,\"293\":1,\"295\":1,\"296\":1,\"297\":2}}],[\"idx\",{\"1\":{\"90\":4}}],[\"identical\",{\"1\":{\"53\":1}}],[\"ident\",{\"1\":{\"53\":3}}],[\"id\",{\"1\":{\"1\":3,\"48\":1,\"50\":1,\"51\":1,\"53\":2,\"55\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1,\"67\":3,\"85\":2,\"86\":1,\"87\":7,\"91\":4,\"94\":2,\"96\":2,\"98\":1,\"136\":1,\"232\":1}}],[\"指明\",{\"1\":{\"247\":1,\"248\":1}}],[\"指对\",{\"1\":{\"247\":1,\"248\":1}}],[\"指针\",{\"1\":{\"237\":10,\"247\":1,\"248\":1,\"251\":2,\"253\":1,\"262\":2,\"264\":2,\"265\":2,\"270\":1,\"281\":1,\"282\":4,\"284\":1,\"285\":1,\"286\":1,\"287\":3,\"288\":5,\"290\":2}}],[\"指向\",{\"1\":{\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"189\":1,\"190\":1,\"192\":2,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"201\":1,\"237\":1,\"264\":3,\"265\":1,\"270\":1,\"285\":1,\"287\":1,\"288\":2}}],[\"指父\",{\"1\":{\"181\":1}}],[\"指定\",{\"1\":{\"37\":1,\"38\":1,\"44\":2,\"55\":4,\"67\":2,\"70\":1,\"104\":1,\"115\":1,\"119\":1,\"191\":1,\"201\":10,\"202\":1,\"204\":5,\"219\":1,\"245\":1,\"246\":1,\"264\":1,\"268\":2,\"269\":6,\"270\":3,\"272\":1,\"277\":1,\"278\":5,\"279\":2}}],[\"指\",{\"1\":{\"1\":2,\"37\":1,\"112\":1,\"237\":1,\"242\":1,\"245\":2,\"246\":1}}],[\"/\",{\"0\":{\"12\":1,\"249\":1},\"1\":{\"1\":8,\"2\":4,\"3\":4,\"4\":8,\"5\":12,\"9\":3,\"12\":12,\"21\":14,\"23\":1,\"24\":1,\"25\":34,\"37\":2,\"38\":8,\"39\":4,\"40\":2,\"45\":2,\"46\":3,\"47\":2,\"50\":4,\"51\":5,\"52\":5,\"53\":2,\"55\":2,\"56\":1,\"57\":4,\"58\":3,\"59\":2,\"60\":2,\"65\":1,\"66\":1,\"70\":6,\"72\":2,\"73\":2,\"77\":1,\"78\":1,\"85\":5,\"86\":5,\"87\":11,\"89\":7,\"90\":6,\"91\":17,\"92\":18,\"93\":5,\"94\":92,\"95\":7,\"96\":18,\"97\":12,\"98\":12,\"101\":10,\"104\":4,\"106\":13,\"108\":1,\"109\":1,\"110\":1,\"111\":4,\"112\":19,\"113\":4,\"115\":6,\"128\":4,\"130\":2,\"131\":4,\"132\":8,\"133\":25,\"134\":4,\"135\":8,\"136\":8,\"137\":7,\"138\":3,\"139\":2,\"168\":9,\"172\":5,\"176\":3,\"208\":2,\"209\":6,\"210\":20,\"211\":1,\"219\":5,\"224\":5,\"226\":6,\"227\":5,\"232\":1,\"235\":3,\"237\":88,\"241\":20,\"242\":26,\"243\":6,\"244\":6,\"245\":14,\"247\":16,\"248\":26,\"253\":2,\"254\":4,\"255\":6,\"256\":6,\"257\":6,\"258\":10,\"259\":20,\"260\":34,\"261\":14,\"262\":46,\"265\":8,\"267\":2,\"268\":16,\"269\":16,\"270\":28,\"273\":8,\"275\":6,\"276\":10,\"277\":18,\"278\":12,\"279\":32,\"282\":4,\"284\":2,\"285\":2,\"286\":2,\"287\":4,\"288\":24,\"291\":8,\"293\":2,\"297\":16}}],[\"04\",{\"1\":{\"232\":1}}],[\"03\",{\"1\":{\"96\":1}}],[\"05\",{\"1\":{\"94\":1}}],[\"0.9\",{\"1\":{\"94\":1}}],[\"0.98\",{\"1\":{\"94\":1}}],[\"0.2\",{\"1\":{\"94\":1,\"106\":1}}],[\"0.5\",{\"1\":{\"91\":2,\"94\":2}}],[\"0.1\",{\"1\":{\"91\":4}}],[\"0.7\",{\"1\":{\"87\":1,\"95\":1}}],[\"0.0\",{\"1\":{\"47\":2}}],[\"02\",{\"1\":{\"55\":1}}],[\"004\",{\"1\":{\"89\":1}}],[\"000101\",{\"1\":{\"24\":1}}],[\"000100\",{\"1\":{\"24\":1}}],[\"00001111\",{\"1\":{\"19\":1}}],[\"00001110\",{\"1\":{\"19\":1}}],[\"00001101\",{\"1\":{\"19\":1}}],[\"00001100\",{\"1\":{\"19\":1}}],[\"00001011\",{\"1\":{\"19\":1}}],[\"00001010\",{\"1\":{\"19\":1}}],[\"00001001\",{\"1\":{\"19\":1}}],[\"00001000\",{\"1\":{\"19\":1}}],[\"00000111\",{\"1\":{\"19\":1}}],[\"00000110\",{\"1\":{\"19\":1}}],[\"00000101\",{\"1\":{\"19\":1}}],[\"00000100\",{\"1\":{\"19\":1}}],[\"00000011\",{\"1\":{\"19\":1}}],[\"00000010\",{\"1\":{\"19\":1}}],[\"00000001\",{\"1\":{\"19\":2}}],[\"00000000\",{\"1\":{\"17\":1,\"19\":2}}],[\"00\",{\"1\":{\"24\":1,\"96\":1}}],[\"001100\",{\"1\":{\"24\":3,\"25\":1}}],[\"00110001\",{\"1\":{\"19\":1,\"24\":3,\"25\":1}}],[\"0\",{\"1\":{\"17\":8,\"19\":26,\"20\":3,\"21\":8,\"23\":2,\"24\":8,\"25\":33,\"73\":2,\"77\":1,\"87\":1,\"89\":3,\"90\":2,\"91\":40,\"93\":1,\"94\":17,\"96\":3,\"237\":8,\"241\":3,\"242\":2,\"244\":2,\"247\":6,\"248\":2,\"249\":2,\"258\":2,\"259\":1,\"260\":7,\"261\":3,\"262\":1,\"268\":4,\"269\":4,\"276\":3,\"277\":3,\"278\":7,\"279\":3,\"284\":2,\"285\":2,\"286\":2,\"287\":6,\"288\":5,\"293\":4,\"294\":2,\"295\":3,\"296\":3,\"297\":2}}],[\"08\",{\"1\":{\"1\":1}}],[\"013\",{\"1\":{\"89\":1}}],[\"010100\",{\"1\":{\"24\":2}}],[\"010000\",{\"1\":{\"24\":1,\"25\":1}}],[\"01000001\",{\"1\":{\"19\":1,\"24\":2}}],[\"0100\",{\"1\":{\"20\":1}}],[\"01100100\",{\"1\":{\"20\":1}}],[\"01100001\",{\"1\":{\"19\":1,\"24\":1}}],[\"0110\",{\"1\":{\"20\":1}}],[\"01\",{\"1\":{\"1\":1,\"55\":1}}],[\":\",{\"1\":{\"1\":3,\"9\":1,\"12\":2,\"21\":3,\"25\":6,\"44\":1,\"45\":1,\"46\":9,\"47\":2,\"48\":2,\"49\":1,\"50\":6,\"51\":16,\"52\":4,\"53\":5,\"54\":2,\"56\":3,\"57\":1,\"58\":3,\"59\":3,\"60\":14,\"61\":4,\"62\":2,\"63\":1,\"64\":11,\"65\":7,\"66\":1,\"67\":4,\"85\":19,\"86\":7,\"87\":33,\"89\":34,\"90\":8,\"91\":49,\"92\":5,\"93\":2,\"94\":23,\"96\":2,\"97\":2,\"98\":19,\"101\":3,\"104\":4,\"106\":5,\"108\":2,\"109\":3,\"110\":4,\"111\":2,\"112\":34,\"113\":22,\"114\":1,\"115\":6,\"138\":1,\"143\":2,\"168\":1,\"172\":2,\"179\":1,\"201\":2,\"208\":2,\"209\":5,\"210\":12,\"211\":3,\"218\":2,\"219\":1,\"221\":3,\"235\":1,\"237\":56,\"241\":21,\"242\":32,\"243\":2,\"244\":4,\"245\":26,\"247\":20,\"248\":30,\"249\":8,\"262\":2,\"270\":2,\"272\":1,\"278\":1,\"279\":2,\"288\":2,\"297\":2}}],[\"1977\",{\"1\":{\"41\":1}}],[\"19\",{\"1\":{\"23\":1}}],[\"181\",{\"1\":{\"143\":2}}],[\"18.12.27\",{\"1\":{\"112\":1}}],[\"1800\",{\"1\":{\"91\":4}}],[\"180\",{\"1\":{\"90\":1,\"91\":4}}],[\"18\",{\"1\":{\"23\":1,\"24\":1,\"91\":2}}],[\"17\",{\"1\":{\"23\":1,\"36\":1}}],[\"15\",{\"1\":{\"19\":1,\"21\":2,\"23\":1,\"36\":1,\"77\":1}}],[\"14\",{\"1\":{\"19\":1,\"23\":1,\"96\":1}}],[\"136\",{\"1\":{\"24\":1}}],[\"13\",{\"1\":{\"19\":1,\"23\":1,\"237\":1}}],[\"127.0.0.1\",{\"1\":{\"104\":2}}],[\"12143853\",{\"1\":{\"98\":1}}],[\"1200\",{\"1\":{\"91\":4}}],[\"128\",{\"1\":{\"41\":1}}],[\"12345678\",{\"1\":{\"39\":1}}],[\"12\",{\"1\":{\"19\":1,\"23\":1,\"24\":4,\"69\":1,\"237\":8}}],[\"10.0\",{\"1\":{\"237\":5}}],[\"10.\",{\"0\":{\"98\":1}}],[\"1024\",{\"1\":{\"41\":2,\"73\":1,\"126\":1}}],[\"10\",{\"1\":{\"19\":4,\"21\":8,\"23\":1,\"24\":3,\"25\":1,\"55\":2,\"85\":1,\"89\":2,\"94\":3,\"141\":1,\"237\":7,\"262\":1,\"272\":1,\"279\":1,\"291\":1,\"297\":1}}],[\"1000\",{\"1\":{\"94\":2,\"96\":4}}],[\"100001\",{\"1\":{\"24\":1}}],[\"10052\",{\"1\":{\"94\":1}}],[\"100\",{\"1\":{\"17\":1,\"20\":5,\"24\":3,\"94\":1,\"126\":1}}],[\"1\",{\"0\":{\"77\":1,\"117\":1,\"141\":1,\"179\":1,\"208\":1,\"215\":1},\"1\":{\"17\":9,\"19\":6,\"20\":1,\"21\":2,\"23\":2,\"24\":4,\"25\":7,\"37\":3,\"53\":1,\"73\":1,\"87\":2,\"89\":4,\"90\":1,\"91\":17,\"94\":5,\"96\":3,\"112\":1,\"126\":2,\"164\":1,\"189\":2,\"190\":1,\"202\":1,\"237\":2,\"246\":2,\"247\":6,\"248\":1,\"259\":1,\"262\":1,\"268\":1,\"276\":2,\"277\":2,\"278\":9,\"285\":1,\"286\":1,\"287\":2,\"288\":2,\"293\":2,\"295\":3,\"296\":2,\"297\":2}}],[\"160\",{\"1\":{\"91\":2}}],[\"163.\",{\"1\":{\"87\":1,\"98\":1}}],[\"16\",{\"1\":{\"1\":1,\"17\":1,\"19\":7,\"20\":3,\"21\":7,\"22\":2,\"23\":1,\"24\":6,\"26\":1,\"36\":2,\"37\":1,\"40\":2,\"91\":2,\"94\":1},\"2\":{\"27\":1}}],[\"11.1\",{\"1\":{\"237\":9}}],[\"11111111\",{\"1\":{\"17\":1}}],[\"11\",{\"0\":{\"144\":1},\"1\":{\"1\":1,\"19\":1,\"23\":1,\"96\":1,\"144\":1}}],[\"1.0\",{\"1\":{\"209\":1,\"210\":2,\"211\":1}}],[\"1.0.0\",{\"1\":{\"95\":1}}],[\"1.3\",{\"0\":{\"36\":1}}],[\"1.2.\",{\"0\":{\"202\":1}}],[\"1.2.4\",{\"0\":{\"35\":1}}],[\"1.2.3\",{\"0\":{\"34\":1}}],[\"1.2.2\",{\"0\":{\"33\":1}}],[\"1.2.1\",{\"0\":{\"32\":1}}],[\"1.2\",{\"0\":{\"31\":1,\"86\":1},\"1\":{\"246\":1}}],[\"1.1.\",{\"0\":{\"201\":1}}],[\"1.1\",{\"0\":{\"30\":1,\"85\":1,\"101\":1}}],[\"1.\",{\"0\":{\"1\":1,\"17\":1,\"29\":1,\"70\":1,\"84\":1,\"100\":1,\"200\":1},\"1\":{\"70\":1}}],[\"-\",{\"0\":{\"48\":1,\"53\":1,\"140\":1,\"235\":1},\"1\":{\"1\":3,\"9\":1,\"12\":7,\"14\":2,\"17\":5,\"19\":3,\"21\":4,\"25\":8,\"37\":1,\"44\":71,\"45\":88,\"46\":123,\"47\":76,\"48\":80,\"49\":119,\"50\":186,\"51\":120,\"52\":132,\"53\":124,\"54\":49,\"55\":26,\"56\":96,\"57\":132,\"58\":88,\"59\":151,\"60\":56,\"61\":70,\"62\":62,\"63\":56,\"64\":84,\"65\":44,\"66\":48,\"67\":109,\"73\":2,\"77\":1,\"79\":2,\"84\":1,\"85\":1,\"86\":3,\"87\":10,\"89\":23,\"90\":8,\"91\":16,\"92\":39,\"93\":5,\"94\":15,\"95\":7,\"96\":18,\"97\":8,\"98\":14,\"104\":3,\"106\":18,\"107\":1,\"110\":1,\"112\":37,\"113\":22,\"114\":2,\"117\":12,\"128\":1,\"134\":1,\"135\":2,\"136\":23,\"137\":2,\"138\":4,\"139\":4,\"142\":1,\"144\":9,\"167\":3,\"168\":3,\"169\":3,\"170\":2,\"171\":13,\"172\":7,\"173\":3,\"174\":5,\"175\":1,\"176\":8,\"177\":8,\"179\":2,\"181\":1,\"182\":4,\"186\":5,\"187\":8,\"188\":3,\"189\":6,\"190\":6,\"192\":4,\"193\":4,\"194\":4,\"195\":4,\"196\":4,\"201\":36,\"202\":16,\"204\":11,\"205\":9,\"206\":3,\"209\":1,\"210\":4,\"211\":1,\"220\":1,\"221\":2,\"224\":7,\"225\":3,\"227\":1,\"230\":6,\"232\":21,\"234\":2,\"235\":6,\"237\":19,\"240\":1,\"241\":5,\"242\":4,\"243\":1,\"247\":62,\"248\":43,\"249\":10,\"254\":3,\"255\":2,\"256\":2,\"257\":2,\"267\":1,\"268\":18,\"269\":16,\"270\":4,\"277\":3,\"278\":7,\"286\":1,\"287\":3,\"288\":3,\"295\":1,\"296\":2}}],[\";\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":4,\"5\":8,\"21\":19,\"25\":67,\"38\":12,\"39\":13,\"40\":12,\"41\":28,\"52\":1,\"60\":1,\"72\":5,\"73\":13,\"89\":31,\"90\":13,\"91\":30,\"92\":2,\"93\":6,\"94\":79,\"96\":17,\"143\":2,\"210\":5,\"237\":148,\"241\":24,\"242\":44,\"243\":10,\"244\":5,\"245\":18,\"246\":5,\"247\":46,\"248\":73,\"249\":18,\"251\":5,\"253\":2,\"254\":9,\"255\":3,\"256\":3,\"257\":3,\"258\":8,\"259\":13,\"260\":18,\"261\":6,\"262\":31,\"265\":6,\"267\":3,\"268\":18,\"269\":20,\"270\":14,\"272\":2,\"273\":5,\"275\":4,\"276\":5,\"277\":16,\"278\":19,\"279\":16,\"282\":7,\"284\":4,\"285\":2,\"286\":3,\"287\":8,\"288\":22,\"291\":5,\"293\":5,\"294\":1,\"295\":3,\"296\":3,\"297\":19}}],[\")\",{\"1\":{\"1\":4,\"2\":3,\"3\":3,\"4\":8,\"5\":21,\"6\":1,\"21\":27,\"25\":57,\"38\":14,\"39\":16,\"40\":14,\"41\":35,\"44\":3,\"45\":1,\"46\":5,\"47\":6,\"48\":1,\"49\":1,\"50\":10,\"51\":3,\"52\":2,\"53\":2,\"56\":6,\"57\":3,\"58\":4,\"59\":1,\"60\":2,\"62\":1,\"64\":2,\"65\":4,\"66\":4,\"72\":7,\"73\":19,\"85\":3,\"89\":47,\"90\":21,\"91\":128,\"92\":9,\"93\":7,\"94\":89,\"96\":29,\"106\":1,\"138\":1,\"179\":2,\"208\":2,\"209\":4,\"210\":3,\"211\":1,\"237\":96,\"239\":2,\"241\":21,\"242\":47,\"243\":9,\"244\":4,\"245\":15,\"246\":5,\"247\":39,\"248\":59,\"249\":10,\"253\":1,\"254\":17,\"255\":5,\"256\":5,\"257\":5,\"258\":14,\"259\":20,\"260\":26,\"261\":10,\"262\":16,\"265\":6,\"267\":4,\"268\":18,\"269\":13,\"270\":10,\"273\":1,\"275\":4,\"276\":5,\"277\":15,\"278\":8,\"279\":11,\"284\":1,\"285\":2,\"286\":2,\"287\":5,\"288\":13,\"291\":1,\"293\":5,\"294\":1,\"295\":2,\"296\":2,\"297\":15}}],[\"\\\"\",{\"1\":{\"1\":4,\"21\":2,\"25\":2,\"38\":4,\"39\":6,\"40\":4,\"41\":2,\"51\":8,\"72\":2,\"73\":4,\"87\":2,\"89\":40,\"90\":60,\"91\":92,\"92\":20,\"93\":6,\"94\":26,\"95\":10,\"96\":28,\"97\":8,\"112\":4,\"172\":2,\"189\":4,\"190\":4,\"209\":6,\"210\":30,\"211\":6,\"218\":8,\"221\":6,\"230\":4,\"232\":2,\"234\":2,\"237\":98,\"241\":8,\"242\":10,\"245\":2,\"246\":6,\"247\":4,\"248\":4,\"249\":8,\"262\":10,\"269\":6,\"277\":6,\"297\":4}}],[\"(\",{\"1\":{\"1\":4,\"2\":3,\"3\":3,\"4\":8,\"5\":21,\"6\":1,\"21\":27,\"25\":57,\"38\":14,\"39\":16,\"40\":14,\"41\":35,\"44\":3,\"45\":1,\"46\":5,\"47\":6,\"48\":1,\"49\":1,\"50\":9,\"51\":3,\"52\":2,\"53\":2,\"56\":6,\"57\":3,\"58\":4,\"59\":1,\"60\":2,\"62\":1,\"64\":2,\"65\":4,\"66\":4,\"72\":7,\"73\":19,\"85\":3,\"89\":47,\"90\":21,\"91\":128,\"92\":9,\"93\":7,\"94\":89,\"96\":29,\"106\":1,\"138\":1,\"179\":2,\"208\":2,\"209\":4,\"210\":3,\"211\":1,\"237\":96,\"239\":2,\"241\":21,\"242\":47,\"243\":9,\"244\":4,\"245\":15,\"246\":5,\"247\":39,\"248\":59,\"249\":10,\"253\":1,\"254\":17,\"255\":5,\"256\":5,\"257\":5,\"258\":14,\"259\":20,\"260\":26,\"261\":10,\"262\":16,\"265\":6,\"267\":4,\"268\":18,\"269\":13,\"270\":10,\"273\":1,\"275\":4,\"276\":5,\"277\":15,\"278\":8,\"279\":11,\"284\":1,\"285\":2,\"286\":2,\"287\":5,\"288\":13,\"291\":1,\"293\":5,\"294\":1,\"295\":2,\"296\":2,\"297\":15}}],[\"dd\",{\"1\":{\"134\":1}}],[\"dhcpcd\",{\"1\":{\"127\":2,\"136\":3}}],[\"dhcp\",{\"1\":{\"127\":1,\"136\":3}}],[\"dnum\",{\"1\":{\"96\":5}}],[\"days\",{\"1\":{\"96\":2}}],[\"date\",{\"1\":{\"50\":5,\"51\":2,\"59\":7,\"63\":1,\"96\":2}}],[\"data\",{\"0\":{\"301\":1},\"1\":{\"21\":7,\"25\":15,\"38\":5,\"39\":4,\"40\":4,\"41\":4,\"72\":3,\"73\":1,\"226\":2,\"227\":2,\"297\":2}}],[\"durationfall\",{\"1\":{\"94\":2}}],[\"duration\",{\"1\":{\"91\":8}}],[\"during\",{\"1\":{\"59\":1}}],[\"drafts\",{\"1\":{\"106\":2}}],[\"draft\",{\"1\":{\"104\":1}}],[\"drawsnow\",{\"1\":{\"94\":3}}],[\"draw\",{\"1\":{\"91\":6}}],[\"drop\",{\"1\":{\"59\":1,\"64\":3}}],[\"dry\",{\"1\":{\"44\":3,\"50\":2,\"52\":2,\"57\":2,\"58\":2,\"60\":1,\"63\":2}}],[\"diagram\",{\"1\":{\"219\":1,\"220\":1}}],[\"diagrams\",{\"1\":{\"218\":1}}],[\"div\",{\"1\":{\"89\":1,\"92\":5,\"94\":1}}],[\"digest\",{\"1\":{\"69\":1,\"70\":2,\"72\":3,\"73\":3}}],[\"digits\",{\"1\":{\"46\":1}}],[\"disc\",{\"1\":{\"87\":1}}],[\"discard\",{\"1\":{\"66\":1}}],[\"dissociate\",{\"1\":{\"49\":1}}],[\"display\",{\"1\":{\"46\":1,\"59\":1,\"218\":1}}],[\"dirty\",{\"1\":{\"65\":1}}],[\"dir\",{\"1\":{\"49\":3,\"53\":2,\"54\":4}}],[\"directives\",{\"1\":{\"51\":1}}],[\"direct\",{\"1\":{\"46\":1,\"47\":1,\"66\":1}}],[\"directory\",{\"1\":{\"45\":1,\"49\":2,\"51\":1,\"53\":1,\"54\":4,\"136\":1}}],[\"diffs\",{\"1\":{\"53\":1}}],[\"diffstat\",{\"1\":{\"45\":1,\"56\":2,\"57\":2,\"59\":2}}],[\"diff3\",{\"1\":{\"47\":1,\"66\":1}}],[\"diff\",{\"1\":{\"44\":1,\"45\":1,\"50\":1,\"53\":1,\"64\":1}}],[\"double\",{\"1\":{\"237\":31}}],[\"down\",{\"0\":{\"194\":1},\"1\":{\"194\":3}}],[\"downloaded\",{\"1\":{\"52\":1,\"57\":1}}],[\"downloading\",{\"1\":{\"49\":1}}],[\"dom\",{\"1\":{\"94\":1}}],[\"dock\",{\"1\":{\"171\":2}}],[\"documentwidth\",{\"1\":{\"94\":2}}],[\"documentheight\",{\"1\":{\"94\":3}}],[\"document\",{\"1\":{\"89\":1,\"90\":1,\"91\":4,\"93\":2,\"94\":5,\"96\":2}}],[\"docs\",{\"1\":{\"60\":1}}],[\"doing\",{\"1\":{\"56\":1,\"57\":1}}],[\"do\",{\"1\":{\"45\":1,\"47\":2,\"52\":2,\"56\":1,\"57\":1,\"59\":1,\"63\":1,\"65\":1,\"66\":1}}],[\"don\",{\"1\":{\"44\":1,\"45\":3,\"46\":1,\"48\":1,\"49\":4,\"53\":4,\"62\":1,\"67\":1}}],[\"dofinal\",{\"1\":{\"37\":1,\"38\":2,\"39\":2,\"40\":2,\"41\":2}}],[\"define\",{\"1\":{\"262\":5,\"270\":1,\"279\":3,\"288\":1,\"291\":2,\"297\":3}}],[\"defaults\",{\"1\":{\"94\":2}}],[\"default\",{\"0\":{\"192\":1},\"1\":{\"38\":3,\"39\":3,\"40\":3,\"41\":4,\"47\":3,\"50\":2,\"51\":3,\"53\":1,\"56\":3,\"57\":1,\"65\":4,\"66\":1}}],[\"debug\",{\"1\":{\"201\":1}}],[\"debuggable\",{\"1\":{\"201\":1}}],[\"debounce\",{\"1\":{\"91\":4}}],[\"dependencies\",{\"1\":{\"208\":1,\"209\":1}}],[\"deploy\",{\"1\":{\"105\":2,\"115\":2}}],[\"depth\",{\"1\":{\"49\":3,\"52\":2,\"57\":2}}],[\"delay\",{\"1\":{\"90\":2}}],[\"deletion\",{\"1\":{\"46\":1}}],[\"delete\",{\"1\":{\"46\":3,\"58\":2,\"60\":2,\"67\":2,\"128\":1,\"237\":7,\"242\":4,\"243\":1}}],[\"deleted\",{\"1\":{\"45\":1,\"237\":15}}],[\"deg\",{\"1\":{\"89\":4}}],[\"deep\",{\"1\":{\"53\":1}}],[\"deepen\",{\"1\":{\"49\":1,\"52\":5,\"57\":5}}],[\"demand\",{\"1\":{\"52\":1,\"57\":1,\"58\":1}}],[\"demo\",{\"1\":{\"1\":1,\"81\":2,\"106\":1,\"208\":1,\"209\":1,\"210\":3}}],[\"detach\",{\"1\":{\"47\":2,\"66\":2}}],[\"detected\",{\"1\":{\"45\":1}}],[\"detect\",{\"1\":{\"45\":1,\"65\":2}}],[\"developer\",{\"1\":{\"86\":1}}],[\"dev\",{\"1\":{\"46\":2,\"47\":1,\"128\":2,\"132\":4,\"133\":4,\"136\":1,\"226\":1}}],[\"decimal\",{\"1\":{\"45\":1,\"51\":1}}],[\"decrypt\",{\"1\":{\"38\":2,\"39\":2,\"40\":2,\"41\":2}}],[\"decode\",{\"1\":{\"21\":1,\"25\":1}}],[\"destorylist\",{\"1\":{\"279\":2}}],[\"destory\",{\"1\":{\"270\":2}}],[\"destorybittree\",{\"1\":{\"262\":1}}],[\"desktop\",{\"1\":{\"113\":1,\"144\":1}}],[\"description\",{\"1\":{\"46\":2,\"53\":3}}],[\"desede\",{\"1\":{\"39\":4}}],[\"des\",{\"0\":{\"38\":1,\"39\":1},\"1\":{\"28\":3,\"37\":1,\"38\":4,\"39\":10,\"40\":2},\"2\":{\"42\":2}}],[\"d\",{\"1\":{\"1\":2,\"21\":1,\"23\":2,\"25\":2,\"39\":1,\"46\":5,\"47\":1,\"58\":3,\"60\":1,\"66\":1,\"67\":3,\"69\":1,\"89\":16,\"91\":4,\"94\":1,\"131\":1,\"134\":1,\"168\":1}}],[\"也\",{\"1\":{\"1\":3,\"4\":1,\"6\":3,\"14\":1,\"28\":1,\"32\":1,\"40\":1,\"69\":1,\"70\":1,\"78\":2,\"86\":1,\"99\":2,\"100\":1,\"128\":1,\"139\":1,\"171\":1,\"187\":1,\"189\":1,\"237\":3,\"241\":2,\"242\":1,\"244\":5,\"245\":3,\"246\":3,\"257\":1,\"260\":1,\"267\":1,\"279\":1,\"290\":1,\"291\":1}}],[\"也许\",{\"1\":{\"1\":1,\"24\":1,\"237\":1,\"244\":1,\"261\":1}}],[\"巧\",{\"1\":{\"1\":1}}],[\"不到\",{\"1\":{\"278\":1}}],[\"不为\",{\"1\":{\"259\":1,\"260\":2,\"288\":1,\"294\":1}}],[\"不算\",{\"1\":{\"246\":1}}],[\"不想\",{\"1\":{\"245\":1}}],[\"不然\",{\"1\":{\"219\":1}}],[\"不错\",{\"1\":{\"215\":1}}],[\"不适\",{\"1\":{\"206\":1}}],[\"不尽人意\",{\"1\":{\"191\":1}}],[\"不可\",{\"1\":{\"190\":1,\"241\":1,\"246\":1}}],[\"不了\",{\"1\":{\"170\":1,\"171\":1,\"173\":1,\"219\":1}}],[\"不用\",{\"1\":{\"167\":1,\"201\":1}}],[\"不论是\",{\"1\":{\"245\":1}}],[\"不论\",{\"1\":{\"166\":1}}],[\"不要\",{\"1\":{\"74\":1,\"243\":1}}],[\"不是\",{\"1\":{\"26\":1,\"119\":1,\"237\":5,\"247\":1,\"248\":1,\"260\":2}}],[\"不难\",{\"1\":{\"19\":1,\"22\":1}}],[\"不再\",{\"1\":{\"17\":1,\"144\":1}}],[\"不足为奇\",{\"1\":{\"246\":1}}],[\"不足\",{\"1\":{\"17\":1,\"24\":2,\"264\":1}}],[\"不太\",{\"1\":{\"10\":1}}],[\"不同\",{\"1\":{\"10\":1,\"17\":1,\"39\":1,\"124\":1,\"125\":1,\"128\":1,\"181\":1,\"245\":1,\"246\":4,\"248\":1,\"262\":1,\"272\":1,\"290\":1}}],[\"不\",{\"1\":{\"7\":1,\"21\":1,\"24\":1,\"28\":1,\"30\":1,\"37\":2,\"64\":1,\"69\":1,\"74\":1,\"78\":1,\"87\":1,\"91\":1,\"100\":1,\"109\":1,\"113\":1,\"119\":3,\"128\":2,\"131\":1,\"138\":1,\"167\":1,\"171\":1,\"189\":1,\"201\":2,\"204\":1,\"208\":1,\"237\":8,\"240\":1,\"241\":1,\"245\":2,\"246\":1,\"259\":2,\"260\":4,\"264\":1,\"268\":3,\"269\":1,\"272\":1,\"273\":1,\"295\":1}}],[\"不服\",{\"1\":{\"6\":1}}],[\"不够\",{\"1\":{\"4\":1,\"36\":2,\"276\":1,\"293\":1}}],[\"不会\",{\"1\":{\"1\":1,\"5\":1,\"98\":1}}],[\"不过\",{\"1\":{\"1\":1}}],[\"不能\",{\"1\":{\"0\":1,\"24\":3,\"28\":1,\"58\":1,\"74\":1,\"200\":1,\"205\":1,\"244\":5,\"245\":1}}],[\"之外\",{\"1\":{\"270\":1}}],[\"之\",{\"1\":{\"268\":1,\"269\":1}}],[\"之一\",{\"1\":{\"197\":1}}],[\"之所以\",{\"1\":{\"16\":1}}],[\"之前\",{\"1\":{\"6\":1,\"14\":1,\"25\":2,\"28\":1,\"31\":1,\"37\":1,\"55\":1,\"69\":1,\"119\":1,\"128\":1,\"138\":1,\"139\":1,\"172\":1,\"176\":1,\"204\":1,\"237\":1,\"243\":1,\"246\":1,\"250\":2,\"257\":1,\"260\":1,\"262\":1,\"273\":1,\"275\":1,\"277\":1}}],[\"之后\",{\"1\":{\"1\":1,\"55\":1,\"67\":1,\"70\":1,\"77\":3,\"81\":2,\"83\":1,\"115\":1,\"119\":1,\"134\":1,\"144\":1,\"174\":1,\"200\":2,\"206\":1,\"241\":1,\"242\":2,\"260\":1}}],[\"之间\",{\"1\":{\"0\":1,\"98\":1,\"125\":1,\"184\":1,\"185\":1,\"191\":1,\"272\":5}}],[\"阅读\",{\"0\":{\"92\":1},\"1\":{\"1\":1,\"81\":1,\"92\":1,\"257\":2}}],[\"去掉\",{\"1\":{\"209\":1}}],[\"去\",{\"1\":{\"1\":2,\"237\":1,\"244\":2}}],[\"精力\",{\"1\":{\"1\":1}}],[\"可选\",{\"1\":{\"136\":1}}],[\"可有可无\",{\"1\":{\"116\":1}}],[\"可撤回\",{\"1\":{\"64\":1}}],[\"可用\",{\"1\":{\"44\":1,\"130\":1,\"131\":1}}],[\"可逆\",{\"1\":{\"26\":1,\"28\":3,\"74\":1}}],[\"可供\",{\"1\":{\"25\":1}}],[\"可见\",{\"1\":{\"17\":1,\"113\":1}}],[\"可变\",{\"1\":{\"17\":1}}],[\"可\",{\"1\":{\"14\":1,\"17\":1,\"50\":1,\"55\":1,\"70\":1,\"78\":1,\"93\":1,\"94\":2,\"106\":2,\"128\":1,\"130\":2,\"131\":2,\"166\":1,\"172\":1,\"189\":2,\"191\":1,\"244\":1,\"246\":1,\"262\":1,\"264\":3,\"286\":1,\"290\":2}}],[\"可能\",{\"1\":{\"1\":2,\"5\":1,\"78\":1,\"115\":1,\"128\":1,\"281\":1}}],[\"可以\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"6\":5,\"7\":1,\"17\":2,\"19\":1,\"22\":1,\"24\":1,\"38\":1,\"40\":2,\"41\":1,\"70\":1,\"74\":1,\"77\":1,\"78\":3,\"79\":1,\"85\":1,\"86\":4,\"90\":1,\"94\":2,\"95\":1,\"98\":1,\"101\":1,\"106\":2,\"112\":1,\"115\":2,\"116\":1,\"119\":1,\"126\":2,\"127\":1,\"128\":3,\"139\":2,\"168\":1,\"171\":1,\"173\":1,\"174\":1,\"180\":1,\"191\":1,\"197\":1,\"200\":1,\"201\":5,\"202\":1,\"204\":1,\"206\":1,\"215\":1,\"218\":1,\"221\":1,\"224\":1,\"237\":15,\"241\":1,\"243\":1,\"244\":3,\"245\":3,\"246\":3,\"260\":1,\"264\":1,\"267\":1,\"272\":2,\"281\":1,\"290\":3,\"295\":1,\"296\":1}}],[\"函数调用\",{\"1\":{\"242\":1}}],[\"函数\",{\"0\":{\"243\":1,\"244\":1},\"1\":{\"1\":1,\"5\":3,\"237\":69,\"242\":19,\"243\":10,\"244\":22,\"245\":4,\"246\":16,\"258\":1,\"262\":3,\"277\":3}}],[\"、\",{\"0\":{\"16\":1,\"28\":1,\"69\":1},\"1\":{\"1\":1,\"16\":2,\"19\":2,\"25\":4,\"28\":3,\"37\":1,\"38\":2,\"39\":4,\"40\":2,\"41\":1,\"69\":3,\"77\":3,\"83\":3,\"85\":1,\"87\":1,\"99\":1,\"112\":2,\"116\":2,\"124\":1,\"143\":1,\"179\":6,\"180\":2,\"184\":1,\"197\":2,\"201\":1,\"202\":1,\"209\":1,\"216\":3,\"237\":4,\"245\":6,\"247\":5,\"248\":15,\"250\":3,\"261\":1,\"272\":2,\"282\":2,\"290\":4}}],[\"类生\",{\"1\":{\"245\":1}}],[\"类时\",{\"1\":{\"245\":1}}],[\"类中\",{\"1\":{\"243\":1}}],[\"类似\",{\"1\":{\"237\":1,\"273\":1}}],[\"类有\",{\"1\":{\"179\":1,\"186\":1}}],[\"类名\",{\"1\":{\"179\":1,\"237\":2}}],[\"类图\",{\"0\":{\"178\":1},\"1\":{\"178\":1}}],[\"类型转换\",{\"1\":{\"242\":1}}],[\"类型\",{\"1\":{\"6\":1,\"28\":1,\"37\":2,\"126\":1,\"128\":1,\"132\":3,\"237\":3,\"243\":1,\"245\":2,\"246\":7,\"262\":3,\"265\":5,\"270\":3,\"273\":3,\"279\":1,\"291\":1,\"297\":1}}],[\"类\",{\"0\":{\"179\":1,\"180\":1,\"237\":1},\"1\":{\"1\":1,\"37\":1,\"78\":1,\"87\":1,\"90\":1,\"179\":2,\"180\":1,\"181\":3,\"184\":4,\"185\":1,\"186\":3,\"187\":4,\"188\":2,\"191\":2,\"210\":1,\"221\":1,\"237\":38,\"241\":1,\"242\":11,\"244\":6,\"245\":11,\"272\":1}}],[\"通行\",{\"1\":{\"290\":1}}],[\"通病\",{\"1\":{\"172\":1}}],[\"通用\",{\"1\":{\"79\":1,\"174\":1}}],[\"通俗易懂\",{\"1\":{\"28\":1}}],[\"通过观察\",{\"1\":{\"19\":1}}],[\"通过\",{\"1\":{\"1\":1,\"5\":1,\"6\":1,\"16\":1,\"70\":1,\"73\":2,\"86\":5,\"128\":1,\"171\":2,\"191\":1,\"233\":1,\"237\":2,\"240\":2,\"242\":1,\"245\":1,\"246\":1,\"260\":1,\"286\":1,\"287\":1}}],[\"通常\",{\"1\":{\"1\":1,\"17\":3,\"55\":1,\"73\":1,\"105\":1,\"125\":1,\"128\":1,\"174\":1,\"201\":1,\"237\":2,\"242\":2,\"245\":1,\"272\":1}}],[\"通信\",{\"1\":{\"0\":1}}],[\"或非\",{\"1\":{\"261\":1}}],[\"或右\",{\"1\":{\"254\":1,\"260\":1}}],[\"或者\",{\"1\":{\"79\":1,\"87\":1,\"100\":1,\"106\":1,\"139\":1,\"143\":1,\"184\":1,\"187\":1,\"237\":1}}],[\"或\",{\"1\":{\"1\":1,\"2\":1,\"5\":1,\"37\":1,\"39\":1,\"41\":1,\"64\":1,\"77\":2,\"81\":1,\"100\":1,\"106\":1,\"128\":1,\"136\":1,\"138\":1,\"176\":1,\"181\":1,\"191\":1,\"197\":1,\"200\":1,\"205\":1,\"237\":1,\"242\":1,\"243\":1,\"245\":2,\"246\":3,\"260\":2,\"264\":1,\"272\":1}}],[\"出队\",{\"0\":{\"287\":1},\"1\":{\"261\":1,\"281\":2}}],[\"出栈\",{\"0\":{\"296\":1},\"1\":{\"258\":2,\"259\":6,\"260\":8}}],[\"出错\",{\"1\":{\"245\":1}}],[\"出生日期\",{\"1\":{\"241\":2,\"242\":1}}],[\"出售\",{\"1\":{\"189\":1}}],[\"出现\",{\"1\":{\"69\":1,\"79\":1,\"85\":1,\"125\":1,\"209\":1}}],[\"出来\",{\"1\":{\"32\":2,\"33\":1,\"290\":3}}],[\"出原\",{\"1\":{\"28\":1}}],[\"出自\",{\"1\":{\"5\":1}}],[\"出\",{\"1\":{\"1\":1,\"24\":1,\"26\":1,\"74\":2,\"119\":1,\"189\":1,\"190\":1,\"242\":1,\"282\":1}}],[\"辨别\",{\"1\":{\"1\":1}}],[\"逻辑\",{\"1\":{\"1\":1,\"248\":1}}],[\"一段\",{\"1\":{\"293\":1}}],[\"一段时间\",{\"1\":{\"77\":1,\"79\":1}}],[\"一群\",{\"1\":{\"290\":1}}],[\"一端\",{\"1\":{\"281\":3,\"290\":3}}],[\"一元\",{\"0\":{\"247\":1},\"1\":{\"247\":2}}],[\"一点\",{\"1\":{\"244\":1}}],[\"一类\",{\"1\":{\"237\":1}}],[\"一致\",{\"1\":{\"232\":1,\"251\":1}}],[\"一条\",{\"1\":{\"215\":1}}],[\"一对\",{\"1\":{\"189\":1}}],[\"一张\",{\"1\":{\"171\":1}}],[\"一步\",{\"1\":{\"167\":2,\"219\":1}}],[\"一篇\",{\"1\":{\"166\":1}}],[\"一根\",{\"1\":{\"125\":1}}],[\"一系列\",{\"1\":{\"116\":1}}],[\"一批\",{\"1\":{\"116\":1}}],[\"一年\",{\"1\":{\"99\":1}}],[\"一直\",{\"1\":{\"99\":1,\"259\":3}}],[\"一帧\",{\"1\":{\"94\":2}}],[\"一款\",{\"1\":{\"93\":1}}],[\"一律\",{\"1\":{\"79\":1}}],[\"一只\",{\"1\":{\"78\":1}}],[\"一起\",{\"1\":{\"41\":1}}],[\"一样\",{\"1\":{\"39\":2,\"128\":1,\"201\":1,\"211\":1,\"237\":3,\"246\":2}}],[\"一种\",{\"1\":{\"37\":1,\"38\":1,\"69\":2,\"74\":2,\"98\":1,\"190\":1,\"237\":2,\"244\":1,\"250\":1,\"272\":1,\"275\":2}}],[\"一块\",{\"1\":{\"33\":2,\"34\":2,\"35\":3,\"128\":1,\"264\":1}}],[\"一定\",{\"1\":{\"24\":1,\"128\":1,\"260\":1,\"261\":1}}],[\"一共\",{\"1\":{\"23\":1,\"24\":3}}],[\"一倍\",{\"1\":{\"22\":1}}],[\"一次\",{\"1\":{\"22\":1,\"50\":1,\"70\":2,\"237\":3,\"260\":1}}],[\"一组\",{\"1\":{\"21\":1,\"25\":1}}],[\"一节\",{\"1\":{\"21\":1,\"22\":1}}],[\"一串\",{\"1\":{\"19\":1}}],[\"一一列举\",{\"1\":{\"17\":1}}],[\"一般而言\",{\"1\":{\"244\":1}}],[\"一般\",{\"1\":{\"17\":1,\"26\":1,\"70\":1,\"237\":1}}],[\"一\",{\"0\":{\"16\":1,\"237\":1,\"246\":1,\"272\":1},\"1\":{\"94\":3,\"97\":1,\"223\":1}}],[\"一行\",{\"1\":{\"1\":1,\"138\":1,\"221\":1,\"224\":1}}],[\"一些\",{\"1\":{\"1\":1,\"8\":1,\"73\":1,\"83\":1,\"100\":1,\"134\":1,\"168\":1}}],[\"一个个\",{\"1\":{\"241\":1}}],[\"一个\",{\"1\":{\"0\":2,\"1\":2,\"7\":1,\"17\":2,\"19\":2,\"32\":1,\"33\":1,\"36\":1,\"50\":1,\"54\":1,\"74\":1,\"77\":2,\"86\":1,\"109\":1,\"112\":1,\"119\":1,\"127\":1,\"128\":3,\"134\":1,\"167\":1,\"179\":2,\"201\":2,\"206\":1,\"217\":1,\"237\":12,\"240\":1,\"241\":1,\"242\":1,\"244\":4,\"245\":13,\"246\":4,\"247\":1,\"257\":2,\"259\":1,\"260\":3,\"264\":3,\"265\":3,\"267\":1,\"268\":1,\"270\":1,\"272\":4,\"273\":1,\"278\":1,\"287\":1,\"290\":4}}],[\"）\",{\"0\":{\"16\":1,\"28\":1,\"69\":1,\"237\":1,\"238\":1,\"245\":1,\"246\":1,\"250\":1,\"264\":1,\"272\":1,\"281\":1,\"290\":1},\"1\":{\"0\":1,\"19\":1,\"22\":1,\"23\":1,\"30\":2,\"39\":1,\"41\":3,\"64\":1,\"69\":1,\"85\":1,\"87\":31,\"89\":1,\"90\":1,\"91\":1,\"94\":1,\"97\":2,\"98\":1,\"124\":1,\"127\":1,\"130\":2,\"131\":2,\"166\":1,\"171\":1,\"215\":1,\"232\":1,\"237\":4,\"242\":3,\"244\":1,\"245\":8,\"246\":1,\"250\":1,\"258\":1,\"260\":1,\"262\":1,\"264\":2,\"269\":2,\"270\":2,\"272\":2,\"273\":1,\"277\":1,\"279\":2,\"281\":1,\"290\":2,\"291\":1,\"297\":1}}],[\"（\",{\"0\":{\"16\":1,\"28\":1,\"69\":1,\"237\":1,\"238\":1,\"245\":1,\"246\":1,\"250\":1,\"264\":1,\"272\":1,\"281\":1,\"290\":1},\"1\":{\"0\":1,\"19\":1,\"22\":1,\"23\":1,\"30\":2,\"39\":1,\"41\":3,\"64\":1,\"69\":1,\"85\":1,\"87\":31,\"89\":1,\"90\":1,\"91\":1,\"94\":1,\"97\":2,\"98\":1,\"124\":1,\"127\":1,\"130\":2,\"131\":2,\"166\":1,\"171\":1,\"215\":1,\"232\":1,\"237\":4,\"242\":3,\"244\":1,\"245\":8,\"246\":1,\"250\":1,\"258\":1,\"260\":1,\"262\":1,\"264\":2,\"269\":2,\"270\":2,\"272\":2,\"273\":1,\"277\":1,\"279\":2,\"281\":1,\"290\":2,\"291\":1,\"297\":1}}],[\"程度\",{\"1\":{\"94\":1}}],[\"程序执行\",{\"1\":{\"242\":1}}],[\"程序员\",{\"1\":{\"240\":1}}],[\"程序设计\",{\"1\":{\"240\":1,\"245\":1}}],[\"程序运行\",{\"1\":{\"237\":1,\"241\":1,\"275\":1}}],[\"程序\",{\"1\":{\"77\":1,\"81\":1,\"106\":1,\"124\":1,\"128\":1,\"136\":5,\"138\":1,\"142\":1,\"167\":1,\"173\":1,\"212\":1,\"237\":5,\"242\":2,\"243\":1,\"264\":1}}],[\"程中\",{\"1\":{\"1\":2,\"2\":1,\"4\":3,\"5\":3,\"6\":2}}],[\"程\",{\"1\":{\"0\":1}}],[\"和析构\",{\"1\":{\"237\":1}}],[\"和谐\",{\"1\":{\"90\":1}}],[\"和\",{\"0\":{\"16\":1,\"28\":1,\"69\":1,\"92\":1,\"108\":1,\"238\":1},\"1\":{\"0\":1,\"6\":2,\"16\":1,\"17\":1,\"20\":2,\"21\":2,\"22\":2,\"26\":1,\"28\":2,\"30\":4,\"35\":1,\"37\":3,\"40\":2,\"41\":3,\"50\":1,\"55\":2,\"58\":1,\"64\":2,\"67\":1,\"69\":1,\"73\":3,\"77\":2,\"78\":4,\"79\":1,\"81\":1,\"85\":1,\"86\":1,\"87\":1,\"98\":1,\"106\":1,\"109\":1,\"112\":1,\"116\":2,\"119\":1,\"121\":1,\"124\":1,\"125\":3,\"126\":2,\"128\":1,\"131\":1,\"135\":1,\"136\":1,\"139\":1,\"167\":1,\"171\":1,\"176\":1,\"179\":2,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"189\":3,\"190\":2,\"200\":1,\"202\":1,\"204\":1,\"209\":1,\"210\":1,\"211\":1,\"215\":1,\"232\":2,\"237\":7,\"241\":3,\"242\":7,\"244\":1,\"245\":9,\"246\":9,\"247\":1,\"248\":1,\"250\":4,\"251\":1,\"255\":1,\"257\":1,\"258\":1,\"260\":4,\"262\":2,\"264\":3,\"265\":2,\"268\":1,\"272\":2,\"273\":1,\"277\":1,\"281\":2,\"282\":1,\"284\":1,\"288\":1,\"290\":7}}],[\"子类\",{\"1\":{\"181\":1,\"241\":1,\"242\":1,\"244\":4,\"245\":14}}],[\"子\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"5\":2}}],[\"问题\",{\"1\":{\"0\":1,\"16\":1,\"32\":1,\"119\":1,\"241\":1,\"242\":2}}],[\"为空\",{\"0\":{\"285\":1,\"294\":1},\"1\":{\"254\":1}}],[\"为了\",{\"1\":{\"244\":1,\"260\":2,\"273\":1}}],[\"为例\",{\"1\":{\"72\":1,\"73\":1,\"86\":1,\"115\":1,\"264\":1}}],[\"为\",{\"1\":{\"0\":1,\"5\":1,\"30\":1,\"31\":1,\"37\":1,\"41\":1,\"54\":1,\"85\":1,\"106\":1,\"119\":1,\"127\":1,\"180\":1,\"221\":1,\"237\":6,\"242\":2,\"243\":1,\"244\":3,\"245\":2,\"262\":1,\"272\":1,\"273\":1,\"279\":1,\"291\":1,\"293\":1,\"297\":1}}],[\".\",{\"0\":{\"2\":1,\"3\":1,\"4\":1,\"10\":1},\"1\":{\"0\":1,\"1\":6,\"2\":1,\"3\":1,\"4\":6,\"5\":15,\"6\":2,\"9\":1,\"10\":1,\"11\":1,\"12\":8,\"21\":8,\"25\":20,\"38\":10,\"39\":11,\"40\":10,\"41\":24,\"44\":5,\"45\":4,\"46\":6,\"47\":7,\"48\":3,\"50\":8,\"51\":9,\"52\":8,\"53\":1,\"54\":2,\"55\":3,\"56\":3,\"57\":8,\"58\":3,\"59\":1,\"60\":9,\"61\":6,\"62\":3,\"63\":3,\"64\":3,\"65\":6,\"67\":9,\"72\":5,\"73\":9,\"77\":1,\"85\":2,\"86\":1,\"87\":1,\"89\":55,\"90\":15,\"91\":215,\"92\":8,\"93\":11,\"94\":167,\"95\":6,\"96\":20,\"97\":8,\"98\":7,\"101\":8,\"106\":8,\"108\":2,\"109\":2,\"110\":2,\"111\":1,\"112\":11,\"113\":3,\"115\":7,\"119\":2,\"127\":2,\"128\":6,\"132\":3,\"134\":1,\"136\":1,\"139\":3,\"143\":2,\"144\":2,\"168\":5,\"172\":8,\"176\":4,\"183\":4,\"184\":4,\"201\":1,\"202\":2,\"204\":4,\"205\":5,\"206\":3,\"208\":4,\"209\":12,\"210\":28,\"211\":9,\"219\":2,\"230\":3,\"232\":2,\"235\":6,\"237\":20,\"242\":5,\"243\":1,\"247\":8,\"248\":25,\"249\":4,\"253\":2,\"258\":4,\"259\":5,\"260\":6,\"261\":4,\"262\":6,\"270\":1,\"276\":4,\"277\":14,\"278\":13,\"279\":4,\"284\":2,\"285\":1,\"286\":2,\"287\":4,\"288\":7,\"293\":4,\"294\":1,\"295\":3,\"296\":3,\"297\":10}}],[\"typedef\",{\"1\":{\"251\":2,\"262\":6,\"265\":2,\"270\":2,\"273\":2,\"279\":2,\"282\":2,\"288\":2,\"291\":2,\"297\":2}}],[\"typeof\",{\"1\":{\"89\":1}}],[\"type\",{\"1\":{\"51\":4,\"87\":3,\"89\":2,\"90\":1,\"91\":2,\"94\":1,\"95\":1,\"97\":2,\"98\":1,\"115\":1,\"128\":1,\"241\":1,\"242\":1,\"245\":2}}],[\"tty\",{\"1\":{\"51\":1}}],[\"tilix\",{\"1\":{\"167\":1}}],[\"tiemdatectl\",{\"1\":{\"137\":1}}],[\"titlebars\",{\"1\":{\"171\":1}}],[\"title\",{\"1\":{\"87\":1,\"92\":1,\"108\":1,\"109\":2,\"112\":3,\"113\":2}}],[\"tips\",{\"1\":{\"52\":1}}],[\"tip\",{\"1\":{\"52\":1,\"57\":1}}],[\"times\",{\"1\":{\"96\":2}}],[\"timedatectl\",{\"1\":{\"137\":1}}],[\"timedate\",{\"1\":{\"96\":2}}],[\"timeline\",{\"1\":{\"91\":2}}],[\"time\",{\"1\":{\"49\":2,\"52\":2,\"57\":2,\"92\":2,\"241\":3,\"242\":3}}],[\"tid\",{\"1\":{\"1\":3}}],[\"tap\",{\"1\":{\"91\":4}}],[\"targets\",{\"1\":{\"91\":4}}],[\"target\",{\"1\":{\"46\":2,\"56\":1,\"87\":1,\"91\":10,\"136\":2}}],[\"tagcloud\",{\"1\":{\"87\":2}}],[\"tagname\",{\"1\":{\"67\":3}}],[\"tags\",{\"1\":{\"47\":1,\"49\":2,\"52\":7,\"57\":2,\"58\":6,\"60\":2,\"67\":7,\"112\":1,\"113\":2}}],[\"tag\",{\"0\":{\"67\":1},\"1\":{\"1\":2,\"58\":4,\"67\":34,\"113\":1}}],[\"tweaks\",{\"1\":{\"171\":3}}],[\"twice\",{\"1\":{\"46\":1}}],[\"two\",{\"1\":{\"25\":4}}],[\"trhx\",{\"1\":{\"83\":1}}],[\"true\",{\"1\":{\"51\":2,\"57\":1,\"85\":8,\"87\":3,\"92\":1,\"110\":1,\"112\":1,\"113\":2,\"137\":1,\"201\":3,\"232\":1}}],[\"trustall\",{\"1\":{\"168\":1}}],[\"trust\",{\"1\":{\"45\":1}}],[\"transform\",{\"1\":{\"89\":4}}],[\"transaction\",{\"1\":{\"52\":1,\"58\":1}}],[\"transmit\",{\"1\":{\"49\":1,\"52\":1,\"57\":1,\"58\":1}}],[\"trailer\",{\"1\":{\"48\":1,\"50\":5,\"53\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1}}],[\"tracking\",{\"1\":{\"46\":3,\"47\":1,\"49\":1,\"52\":1,\"57\":1,\"66\":1}}],[\"track\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"66\":1}}],[\"tracked\",{\"1\":{\"44\":3}}],[\"traditional\",{\"1\":{\"45\":1,\"65\":2}}],[\"treetype\",{\"1\":{\"251\":2,\"262\":2}}],[\"tree\",{\"1\":{\"44\":1,\"45\":1,\"49\":1,\"53\":1,\"54\":1,\"56\":1,\"61\":5,\"262\":6}}],[\"tripledes\",{\"1\":{\"39\":1}}],[\"try\",{\"1\":{\"38\":2,\"39\":2,\"40\":2,\"41\":3,\"59\":1,\"72\":1,\"73\":1,\"89\":1}}],[\"t\",{\"1\":{\"23\":2,\"25\":2,\"44\":1,\"45\":3,\"46\":2,\"47\":1,\"48\":1,\"49\":4,\"50\":1,\"51\":1,\"52\":1,\"53\":4,\"57\":1,\"58\":1,\"60\":1,\"62\":1,\"66\":1,\"67\":1,\"89\":11,\"91\":32,\"241\":1,\"242\":1}}],[\"tools\",{\"1\":{\"119\":1,\"172\":1,\"208\":1,\"209\":1}}],[\"toggle\",{\"1\":{\"91\":2}}],[\"topnode\",{\"1\":{\"258\":6,\"259\":13,\"260\":13}}],[\"topmetas\",{\"1\":{\"92\":1}}],[\"top\",{\"1\":{\"89\":2,\"90\":2,\"91\":3,\"94\":3,\"259\":2,\"260\":2,\"295\":1,\"297\":1}}],[\"toc\",{\"1\":{\"87\":1}}],[\"todo\",{\"1\":{\"59\":3}}],[\"token\",{\"1\":{\"50\":1}}],[\"tolerate\",{\"1\":{\"45\":1}}],[\"to\",{\"1\":{\"44\":1,\"45\":4,\"46\":4,\"47\":1,\"48\":1,\"49\":7,\"50\":4,\"51\":1,\"52\":7,\"53\":8,\"54\":2,\"56\":4,\"57\":9,\"58\":3,\"59\":13,\"61\":1,\"62\":3,\"63\":1,\"65\":1,\"66\":2,\"67\":4}}],[\"tostring\",{\"1\":{\"21\":1,\"25\":1}}],[\"touches\",{\"1\":{\"45\":1,\"91\":4}}],[\"touching\",{\"1\":{\"45\":1}}],[\"touch\",{\"1\":{\"0\":1}}],[\"tewak\",{\"1\":{\"171\":1}}],[\"terminal\",{\"1\":{\"167\":2}}],[\"terminate\",{\"1\":{\"50\":1,\"51\":1,\"65\":1}}],[\"tech\",{\"1\":{\"112\":1}}],[\"textcolor\",{\"1\":{\"112\":1}}],[\"text\",{\"0\":{\"216\":1},\"1\":{\"89\":2,\"90\":4,\"91\":2,\"92\":2,\"94\":1,\"95\":1,\"97\":2,\"210\":1,\"219\":1}}],[\"textview\",{\"1\":{\"2\":1,\"210\":1}}],[\"tencent\",{\"1\":{\"87\":3}}],[\"temp\",{\"1\":{\"247\":4,\"248\":4,\"268\":11,\"269\":11}}],[\"templates\",{\"1\":{\"49\":1,\"54\":1}}],[\"template\",{\"1\":{\"49\":2,\"50\":4,\"54\":4}}],[\"temporary\",{\"1\":{\"45\":1}}],[\"test\",{\"1\":{\"1\":2,\"54\":6,\"204\":2,\"205\":1}}],[\"those\",{\"1\":{\"59\":1}}],[\"than\",{\"1\":{\"57\":1}}],[\"that\",{\"1\":{\"0\":1,\"44\":1,\"45\":3,\"46\":4,\"49\":1,\"52\":2,\"54\":1,\"56\":1,\"57\":3,\"59\":5,\"61\":1,\"67\":4,\"94\":2}}],[\"thin\",{\"1\":{\"58\":2}}],[\"third\",{\"1\":{\"25\":3}}],[\"this\",{\"1\":{\"5\":2,\"51\":1,\"52\":1,\"57\":1,\"58\":1,\"91\":2,\"94\":67,\"237\":11,\"247\":14,\"248\":25,\"249\":5}}],[\"through\",{\"1\":{\"46\":1,\"59\":1}}],[\"throw\",{\"1\":{\"21\":1,\"25\":1,\"47\":1,\"66\":2,\"73\":1}}],[\"three\",{\"1\":{\"25\":4,\"45\":1}}],[\"threading\",{\"1\":{\"53\":1}}],[\"threadmode\",{\"1\":{\"5\":4}}],[\"thread\",{\"1\":{\"0\":1,\"53\":1}}],[\"thr\",{\"1\":{\"25\":1}}],[\"them\",{\"1\":{\"49\":1,\"59\":1}}],[\"themes\",{\"1\":{\"106\":2,\"171\":2}}],[\"theme\",{\"1\":{\"14\":1,\"15\":1,\"92\":1,\"106\":3,\"172\":1}}],[\"their\",{\"1\":{\"47\":1,\"49\":1}}],[\"theirs\",{\"1\":{\"47\":1}}],[\"the\",{\"1\":{\"0\":1,\"21\":1,\"44\":7,\"45\":19,\"46\":9,\"47\":2,\"48\":2,\"49\":4,\"50\":1,\"51\":3,\"52\":3,\"53\":6,\"54\":4,\"56\":10,\"57\":6,\"58\":1,\"59\":13,\"61\":2,\"62\":3,\"63\":3,\"66\":2,\"67\":6,\"73\":1,\"239\":1,\"241\":2}}],[\"cpp\",{\"1\":{\"277\":1}}],[\"cpu\",{\"1\":{\"126\":2}}],[\"c#\",{\"1\":{\"246\":1}}],[\"ctime\",{\"1\":{\"241\":1,\"242\":1}}],[\"ctx\",{\"1\":{\"91\":26,\"94\":13}}],[\"c++\",{\"0\":{\"237\":1,\"238\":1,\"245\":1,\"246\":1},\"1\":{\"240\":1,\"244\":1,\"246\":5,\"247\":1,\"276\":1,\"277\":2}}],[\"certs\",{\"1\":{\"202\":3,\"205\":2}}],[\"center\",{\"1\":{\"173\":1}}],[\"cfg\",{\"1\":{\"136\":1}}],[\"cfdisk\",{\"1\":{\"128\":2}}],[\"cfb\",{\"1\":{\"34\":1,\"35\":3,\"38\":1}}],[\"cst\",{\"1\":{\"137\":1}}],[\"csdn\",{\"1\":{\"99\":1}}],[\"css\",{\"1\":{\"89\":1,\"90\":1,\"94\":2}}],[\"csstext\",{\"1\":{\"89\":2}}],[\"cdn\",{\"1\":{\"91\":1,\"95\":1,\"112\":1}}],[\"circle\",{\"1\":{\"112\":1}}],[\"circulation\",{\"1\":{\"87\":2}}],[\"cipher\",{\"1\":{\"33\":1,\"34\":1,\"37\":2,\"38\":15,\"39\":15,\"40\":15,\"41\":16}}],[\"cn\",{\"1\":{\"85\":1,\"139\":1,\"168\":1,\"176\":1}}],[\"cmd\",{\"1\":{\"59\":2,\"142\":1}}],[\"cc\",{\"1\":{\"53\":2}}],[\"crlf\",{\"1\":{\"51\":1}}],[\"creation\",{\"1\":{\"46\":1,\"53\":2,\"67\":1}}],[\"createlist\",{\"1\":{\"275\":1,\"279\":1}}],[\"createhead\",{\"1\":{\"267\":1,\"270\":1}}],[\"createqueue\",{\"1\":{\"261\":1,\"284\":1,\"288\":1}}],[\"createbittree\",{\"1\":{\"254\":3,\"262\":1}}],[\"createtime\",{\"1\":{\"96\":2}}],[\"createtextnode\",{\"1\":{\"89\":1}}],[\"createradialgradient\",{\"1\":{\"94\":1}}],[\"createflakes\",{\"1\":{\"94\":2}}],[\"createcircle\",{\"1\":{\"91\":4}}],[\"createparticule\",{\"1\":{\"91\":4}}],[\"createelement\",{\"1\":{\"89\":2,\"93\":1,\"94\":1}}],[\"create\",{\"1\":{\"46\":2,\"47\":3,\"49\":5,\"54\":1,\"56\":1,\"57\":1,\"64\":1,\"66\":4,\"67\":3}}],[\"created\",{\"1\":{\"0\":1,\"237\":12,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"custom\",{\"1\":{\"50\":1}}],[\"current\",{\"1\":{\"44\":1,\"45\":1,\"46\":2,\"48\":1,\"56\":2,\"59\":4,\"62\":1}}],[\"curl\",{\"1\":{\"12\":2,\"235\":1}}],[\"click\",{\"1\":{\"90\":3}}],[\"clientheight\",{\"1\":{\"94\":1}}],[\"clienty\",{\"1\":{\"89\":1,\"91\":4}}],[\"clientx\",{\"1\":{\"89\":1,\"91\":4}}],[\"clientsecret\",{\"1\":{\"86\":2}}],[\"clientid\",{\"1\":{\"86\":2}}],[\"client\",{\"1\":{\"86\":2}}],[\"clean\",{\"1\":{\"105\":2}}],[\"cleanup\",{\"1\":{\"48\":1,\"50\":2,\"56\":1,\"57\":1,\"62\":1,\"67\":1}}],[\"clearqueue\",{\"1\":{\"288\":1}}],[\"clearbittree\",{\"1\":{\"262\":1}}],[\"clearrect\",{\"1\":{\"91\":2,\"94\":1}}],[\"cleartimeout\",{\"1\":{\"91\":2}}],[\"clear\",{\"1\":{\"64\":1}}],[\"cloud\",{\"1\":{\"177\":1}}],[\"clobber\",{\"1\":{\"52\":1}}],[\"cloning\",{\"1\":{\"49\":1}}],[\"cloned\",{\"1\":{\"49\":3}}],[\"clone\",{\"0\":{\"49\":1},\"1\":{\"49\":11,\"52\":3,\"57\":3,\"94\":1,\"106\":3}}],[\"classpath\",{\"1\":{\"208\":1,\"209\":1}}],[\"classname\",{\"1\":{\"89\":1,\"237\":3}}],[\"class\",{\"1\":{\"5\":1,\"91\":1,\"92\":11,\"112\":1,\"179\":1,\"182\":1,\"183\":1,\"184\":2,\"186\":2,\"187\":2,\"188\":1,\"189\":2,\"190\":2,\"192\":4,\"193\":4,\"194\":4,\"195\":4,\"196\":4,\"210\":1,\"221\":1,\"237\":7,\"241\":4,\"242\":5,\"243\":1,\"244\":1,\"245\":6,\"247\":1,\"248\":1,\"249\":1}}],[\"child\",{\"1\":{\"261\":1}}],[\"china\",{\"1\":{\"134\":2}}],[\"chrome\",{\"1\":{\"169\":1,\"171\":1}}],[\"chroot\",{\"1\":{\"136\":1}}],[\"cherry\",{\"0\":{\"48\":1},\"1\":{\"48\":6,\"59\":3,\"62\":3}}],[\"checkout\",{\"0\":{\"47\":1},\"1\":{\"44\":1,\"47\":12,\"49\":4,\"63\":1,\"66\":2}}],[\"check\",{\"1\":{\"44\":1,\"45\":2,\"47\":1,\"52\":1,\"57\":1,\"58\":1,\"59\":1,\"63\":1,\"66\":1}}],[\"chmod\",{\"1\":{\"44\":1,\"172\":1}}],[\"changeline\",{\"1\":{\"237\":9}}],[\"changed\",{\"1\":{\"50\":1,\"52\":1,\"59\":2}}],[\"change\",{\"1\":{\"45\":1,\"46\":1}}],[\"changes\",{\"1\":{\"44\":1,\"45\":4,\"50\":1,\"53\":2,\"57\":1,\"59\":2,\"61\":1,\"65\":1,\"66\":1}}],[\"chaining\",{\"1\":{\"33\":1}}],[\"charset\",{\"1\":{\"221\":2}}],[\"character\",{\"1\":{\"44\":1,\"45\":1,\"47\":1,\"50\":1,\"61\":1,\"63\":1}}],[\"charat\",{\"1\":{\"21\":2,\"25\":5}}],[\"char\",{\"1\":{\"21\":3,\"25\":2,\"237\":4,\"241\":1,\"242\":3,\"243\":1,\"246\":2,\"247\":1,\"248\":1,\"251\":1,\"254\":1,\"262\":1,\"272\":1}}],[\"cbc\",{\"1\":{\"33\":1,\"38\":1,\"39\":1}}],[\"cout\",{\"1\":{\"237\":49,\"241\":2,\"242\":3,\"246\":2,\"247\":1,\"248\":1,\"249\":1}}],[\"count\",{\"1\":{\"53\":2,\"92\":4,\"95\":1,\"237\":2}}],[\"counts\",{\"1\":{\"45\":1}}],[\"core\",{\"1\":{\"230\":1}}],[\"corresponding\",{\"1\":{\"45\":1}}],[\"cos\",{\"1\":{\"91\":2,\"94\":1}}],[\"cover\",{\"1\":{\"53\":7,\"109\":1,\"112\":1}}],[\"columns\",{\"1\":{\"46\":1,\"65\":1,\"67\":1}}],[\"column\",{\"1\":{\"46\":1,\"65\":1,\"67\":3}}],[\"colors\",{\"1\":{\"67\":1,\"91\":6}}],[\"colorbool\",{\"1\":{\"51\":1}}],[\"colored\",{\"1\":{\"46\":1}}],[\"color\",{\"1\":{\"46\":1,\"51\":3,\"67\":1,\"87\":1,\"89\":2,\"90\":1,\"91\":8,\"94\":1,\"95\":1}}],[\"copy\",{\"1\":{\"46\":3,\"49\":1,\"237\":7}}],[\"const\",{\"1\":{\"237\":6,\"248\":8,\"249\":4}}],[\"convert\",{\"1\":{\"52\":1,\"57\":1}}],[\"concisely\",{\"1\":{\"50\":1,\"65\":1}}],[\"conf\",{\"1\":{\"168\":1,\"176\":1}}],[\"configtool\",{\"1\":{\"176\":1}}],[\"configured\",{\"1\":{\"51\":1}}],[\"configuration\",{\"1\":{\"46\":1,\"47\":1,\"66\":1}}],[\"config\",{\"0\":{\"51\":1},\"1\":{\"49\":2,\"51\":15,\"60\":1,\"93\":2,\"106\":2,\"108\":1,\"109\":1,\"110\":1,\"115\":1,\"225\":1,\"230\":3,\"232\":3}}],[\"conflict\",{\"1\":{\"47\":2,\"48\":1,\"56\":1,\"59\":1,\"62\":1,\"66\":2}}],[\"content\",{\"1\":{\"89\":1,\"92\":2,\"106\":1,\"210\":1}}],[\"contents\",{\"1\":{\"50\":1}}],[\"context\",{\"1\":{\"45\":4}}],[\"continue\",{\"1\":{\"48\":3,\"56\":3,\"59\":4,\"62\":3,\"260\":2}}],[\"control\",{\"1\":{\"47\":1,\"52\":1,\"57\":2,\"58\":1,\"61\":1,\"66\":1,\"173\":1,\"217\":1}}],[\"contain\",{\"1\":{\"46\":2,\"67\":2}}],[\"contains\",{\"1\":{\"46\":2,\"67\":4,\"190\":1}}],[\"cone\",{\"1\":{\"44\":1,\"63\":1}}],[\"code\",{\"1\":{\"32\":1,\"85\":1,\"112\":1}}],[\"compilesdkversion\",{\"1\":{\"209\":1,\"211\":1}}],[\"comparetreenode\",{\"1\":{\"260\":3,\"262\":1}}],[\"comparing\",{\"1\":{\"51\":1}}],[\"compact\",{\"1\":{\"87\":1}}],[\"complete\",{\"1\":{\"52\":1,\"57\":1}}],[\"compute\",{\"1\":{\"50\":1,\"65\":1}}],[\"comment\",{\"1\":{\"85\":3,\"112\":1}}],[\"comments\",{\"1\":{\"48\":1,\"50\":1,\"56\":1,\"57\":1,\"62\":1,\"67\":1,\"112\":1}}],[\"common\",{\"1\":{\"52\":1}}],[\"command\",{\"1\":{\"51\":2,\"218\":2,\"221\":1}}],[\"committing\",{\"1\":{\"56\":1,\"57\":1}}],[\"committer\",{\"1\":{\"53\":1,\"59\":2}}],[\"committed\",{\"1\":{\"50\":1}}],[\"commits\",{\"1\":{\"48\":4,\"52\":1,\"59\":8,\"62\":1}}],[\"commit\",{\"0\":{\"50\":1},\"1\":{\"46\":6,\"47\":1,\"48\":7,\"50\":39,\"52\":2,\"53\":3,\"56\":10,\"57\":8,\"59\":2,\"61\":1,\"62\":6,\"64\":1,\"66\":1,\"67\":12,\"232\":1}}],[\"com\",{\"1\":{\"1\":1,\"9\":1,\"12\":2,\"51\":1,\"60\":1,\"86\":1,\"87\":1,\"91\":1,\"93\":1,\"95\":1,\"97\":2,\"98\":3,\"101\":2,\"106\":3,\"115\":1,\"127\":1,\"172\":1,\"208\":1,\"209\":3,\"210\":5,\"211\":2}}],[\"called\",{\"1\":{\"237\":17}}],[\"callback\",{\"1\":{\"94\":2}}],[\"car\",{\"1\":{\"189\":3}}],[\"cat\",{\"1\":{\"135\":1}}],[\"categories\",{\"1\":{\"113\":2}}],[\"category\",{\"1\":{\"87\":2,\"113\":1,\"210\":2}}],[\"catch\",{\"1\":{\"38\":2,\"39\":2,\"40\":2,\"41\":11,\"72\":1,\"73\":3,\"89\":1}}],[\"cached\",{\"1\":{\"45\":1,\"63\":2}}],[\"case\",{\"1\":{\"25\":6,\"46\":2,\"67\":2}}],[\"canvasheight\",{\"1\":{\"94\":2}}],[\"canvaswidth\",{\"1\":{\"94\":2}}],[\"canvas\",{\"1\":{\"91\":2,\"94\":14,\"95\":2}}],[\"canvasel\",{\"1\":{\"91\":24}}],[\"cancelanimationframe\",{\"1\":{\"94\":2}}],[\"cancel\",{\"1\":{\"48\":1,\"62\":1}}],[\"cannot\",{\"1\":{\"44\":1}}],[\"can\",{\"1\":{\"0\":1,\"58\":1}}],[\"c\",{\"0\":{\"300\":1},\"1\":{\"21\":1,\"23\":2,\"25\":15,\"45\":1,\"46\":4,\"49\":1,\"50\":6,\"59\":1,\"66\":2,\"89\":2,\"131\":1,\"143\":2,\"183\":3,\"206\":1,\"240\":1,\"246\":2,\"262\":1}}],[\"age\",{\"1\":{\"241\":1}}],[\"against\",{\"1\":{\"53\":2}}],[\"a2\",{\"1\":{\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2}}],[\"a1\",{\"1\":{\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2}}],[\"aur\",{\"1\":{\"171\":1,\"172\":1}}],[\"auth\",{\"1\":{\"86\":1}}],[\"authored\",{\"1\":{\"50\":1}}],[\"author\",{\"1\":{\"50\":7,\"55\":1,\"59\":4,\"87\":2,\"110\":1,\"111\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"autoplay\",{\"1\":{\"87\":1}}],[\"autostash\",{\"1\":{\"56\":1,\"57\":1,\"59\":1}}],[\"autosquash\",{\"1\":{\"50\":2,\"59\":1}}],[\"auto\",{\"1\":{\"52\":4,\"60\":1}}],[\"autocrlf\",{\"1\":{\"51\":1,\"230\":1}}],[\"autoupdate\",{\"1\":{\"48\":1,\"56\":1,\"59\":1,\"62\":1}}],[\"automatically\",{\"1\":{\"48\":1,\"56\":1,\"57\":1,\"59\":2,\"62\":1}}],[\"afdaef\",{\"1\":{\"94\":1}}],[\"after\",{\"1\":{\"50\":1,\"52\":3,\"55\":1,\"56\":1,\"57\":1,\"59\":2,\"61\":1,\"89\":2}}],[\"a87ff\",{\"1\":{\"91\":2}}],[\"avatar\",{\"1\":{\"85\":2,\"110\":1,\"111\":1,\"112\":3}}],[\"apt\",{\"1\":{\"229\":1,\"233\":1,\"234\":1}}],[\"api\",{\"1\":{\"77\":1}}],[\"apksigner\",{\"0\":{\"200\":1},\"1\":{\"201\":3,\"202\":3,\"205\":1}}],[\"apk\",{\"0\":{\"199\":1},\"1\":{\"77\":1,\"200\":5,\"201\":9,\"202\":6,\"204\":7,\"205\":3,\"206\":7,\"210\":2}}],[\"apps\",{\"1\":{\"86\":1}}],[\"appkey\",{\"1\":{\"85\":3}}],[\"appid\",{\"1\":{\"85\":3}}],[\"app\",{\"1\":{\"81\":1,\"85\":4,\"86\":1,\"202\":2,\"206\":1,\"209\":5,\"210\":2}}],[\"application\",{\"1\":{\"209\":1,\"210\":2,\"219\":1}}],[\"applications\",{\"1\":{\"86\":1}}],[\"applicable\",{\"1\":{\"45\":2}}],[\"applied\",{\"1\":{\"59\":1}}],[\"applying\",{\"1\":{\"45\":3}}],[\"apply\",{\"0\":{\"45\":1},\"1\":{\"44\":1,\"45\":8,\"49\":1,\"59\":5,\"64\":1,\"91\":2,\"94\":4,\"209\":1,\"211\":1}}],[\"appendto\",{\"1\":{\"94\":1}}],[\"appendchild\",{\"1\":{\"89\":3,\"94\":1}}],[\"append\",{\"1\":{\"21\":2,\"25\":9,\"48\":1,\"52\":2,\"57\":2,\"90\":1}}],[\"amongst\",{\"1\":{\"54\":1}}],[\"amend\",{\"1\":{\"50\":8}}],[\"ahead\",{\"1\":{\"50\":2,\"65\":2}}],[\"arr\",{\"1\":{\"272\":1}}],[\"array\",{\"1\":{\"90\":1}}],[\"armor\",{\"1\":{\"232\":1}}],[\"arm\",{\"1\":{\"117\":1}}],[\"aria\",{\"1\":{\"112\":1}}],[\"archlinuxcn\",{\"0\":{\"168\":1},\"1\":{\"168\":4}}],[\"arch\",{\"0\":{\"121\":1,\"166\":1},\"1\":{\"121\":1,\"124\":1,\"125\":1,\"128\":1,\"135\":1,\"136\":2,\"139\":1,\"166\":1,\"168\":1,\"170\":1}}],[\"archives\",{\"1\":{\"113\":2}}],[\"archive\",{\"1\":{\"113\":1}}],[\"arc\",{\"1\":{\"91\":4,\"94\":1}}],[\"article\",{\"1\":{\"87\":1}}],[\"argv\",{\"1\":{\"237\":4,\"241\":1,\"242\":3,\"243\":1,\"246\":1,\"247\":1,\"248\":1}}],[\"argc\",{\"1\":{\"237\":4,\"241\":1,\"242\":3,\"243\":1,\"246\":1,\"247\":1,\"248\":1}}],[\"arguments\",{\"1\":{\"91\":2}}],[\"argument\",{\"1\":{\"59\":1}}],[\"args\",{\"1\":{\"49\":1,\"52\":1}}],[\"area\",{\"1\":{\"45\":1}}],[\"are\",{\"1\":{\"44\":2,\"45\":1,\"46\":3,\"47\":1,\"50\":1,\"59\":1,\"61\":1,\"63\":1,\"67\":3}}],[\"about\",{\"1\":{\"112\":2}}],[\"abort\",{\"1\":{\"48\":2,\"56\":5,\"57\":1,\"59\":4,\"62\":2}}],[\"abstract\",{\"1\":{\"182\":1}}],[\"absolute\",{\"1\":{\"90\":1,\"94\":2}}],[\"absent\",{\"1\":{\"53\":1}}],[\"able\",{\"1\":{\"49\":1}}],[\"abbrev\",{\"1\":{\"46\":1}}],[\"away\",{\"1\":{\"47\":1,\"66\":2}}],[\"at&t\",{\"1\":{\"215\":1}}],[\"atom\",{\"1\":{\"98\":5,\"216\":1}}],[\"atomic\",{\"1\":{\"52\":2,\"58\":2}}],[\"attach\",{\"1\":{\"53\":2}}],[\"attempt\",{\"1\":{\"45\":1}}],[\"at\",{\"1\":{\"45\":3,\"46\":2,\"47\":1,\"49\":1,\"53\":1,\"56\":3,\"57\":3,\"58\":1,\"66\":1,\"67\":2}}],[\"analytics\",{\"1\":{\"93\":3}}],[\"animal\",{\"1\":{\"241\":6,\"242\":27,\"243\":13,\"244\":4,\"245\":4}}],[\"animatables\",{\"1\":{\"91\":4}}],[\"animateparticules\",{\"1\":{\"91\":4}}],[\"animate\",{\"1\":{\"90\":1,\"94\":1}}],[\"animejs\",{\"1\":{\"91\":1}}],[\"anime\",{\"1\":{\"91\":23}}],[\"annotated\",{\"1\":{\"67\":2}}],[\"annotate\",{\"1\":{\"67\":1}}],[\"an\",{\"1\":{\"51\":2,\"59\":1}}],[\"any\",{\"1\":{\"49\":3,\"59\":1}}],[\"another\",{\"1\":{\"47\":1,\"66\":1,\"67\":1}}],[\"ancestors\",{\"1\":{\"52\":1}}],[\"ancestor\",{\"1\":{\"45\":1}}],[\"and\",{\"1\":{\"44\":2,\"45\":1,\"46\":5,\"47\":2,\"48\":2,\"49\":1,\"50\":3,\"52\":2,\"56\":4,\"57\":4,\"59\":5,\"61\":3,\"62\":2,\"66\":2,\"67\":3}}],[\"androidmanifest\",{\"1\":{\"209\":1,\"210\":2,\"211\":2}}],[\"androidstudio\",{\"0\":{\"116\":1,\"117\":1,\"118\":1,\"119\":1},\"1\":{\"77\":4,\"81\":1,\"116\":1,\"117\":1,\"119\":2,\"208\":1,\"212\":1},\"2\":{\"82\":1,\"120\":1,\"213\":1}}],[\"android\",{\"0\":{\"0\":1,\"76\":1,\"207\":1},\"1\":{\"0\":1,\"77\":2,\"78\":2,\"81\":1,\"112\":1,\"116\":5,\"117\":4,\"119\":1,\"208\":1,\"209\":3,\"210\":18,\"211\":2,\"212\":2}}],[\"act\",{\"1\":{\"46\":1}}],[\"actions\",{\"1\":{\"46\":1,\"190\":1}}],[\"action\",{\"1\":{\"45\":1,\"51\":1,\"59\":1,\"190\":4,\"210\":2}}],[\"activity\",{\"0\":{\"3\":1,\"210\":1},\"1\":{\"2\":1,\"3\":2,\"5\":2,\"77\":1,\"209\":1,\"210\":7}}],[\"accept\",{\"1\":{\"45\":1,\"52\":2,\"57\":1}}],[\"alternatives\",{\"1\":{\"225\":1}}],[\"alt\",{\"1\":{\"98\":1}}],[\"alpha\",{\"1\":{\"89\":4,\"91\":6}}],[\"album\",{\"1\":{\"87\":3}}],[\"already\",{\"1\":{\"59\":1}}],[\"alone\",{\"1\":{\"56\":1}}],[\"alias\",{\"1\":{\"49\":1,\"201\":1,\"204\":3,\"205\":1}}],[\"always\",{\"1\":{\"49\":1}}],[\"also\",{\"1\":{\"45\":1,\"49\":1}}],[\"allprojects\",{\"1\":{\"209\":1}}],[\"all\",{\"1\":{\"44\":3,\"45\":1,\"46\":1,\"50\":4,\"51\":7,\"52\":7,\"53\":1,\"57\":4,\"58\":4,\"59\":4,\"60\":1,\"64\":2,\"65\":4,\"138\":3}}],[\"allow\",{\"1\":{\"44\":2,\"45\":3,\"48\":4,\"50\":2,\"52\":1,\"56\":3,\"57\":3,\"59\":1,\"63\":2}}],[\"algorithm\",{\"1\":{\"38\":6,\"39\":6,\"40\":6,\"41\":4,\"54\":1,\"69\":1,\"70\":1}}],[\"admin\",{\"1\":{\"86\":1}}],[\"adb\",{\"1\":{\"79\":1}}],[\"addcolorstop\",{\"1\":{\"94\":3}}],[\"addeventlistener\",{\"1\":{\"91\":4}}],[\"added\",{\"1\":{\"44\":2,\"45\":1,\"61\":1}}],[\"address\",{\"1\":{\"53\":1}}],[\"addresses\",{\"1\":{\"49\":2,\"52\":2,\"57\":2,\"58\":2}}],[\"additions\",{\"1\":{\"45\":1}}],[\"adding\",{\"1\":{\"44\":1}}],[\"add\",{\"0\":{\"44\":1},\"1\":{\"44\":9,\"45\":4,\"48\":1,\"50\":6,\"51\":2,\"53\":9,\"54\":1,\"56\":2,\"57\":2,\"59\":2,\"60\":4,\"61\":1,\"62\":1,\"91\":4,\"144\":1}}],[\"adleman\",{\"1\":{\"41\":1}}],[\"adi\",{\"1\":{\"41\":1}}],[\"advanced\",{\"1\":{\"40\":1}}],[\"aes\",{\"0\":{\"40\":1},\"1\":{\"28\":2,\"40\":4},\"2\":{\"42\":1}}],[\"aa\",{\"1\":{\"24\":1}}],[\"asia\",{\"1\":{\"137\":1}}],[\"assets\",{\"1\":{\"109\":1,\"111\":1,\"112\":1}}],[\"associated\",{\"1\":{\"52\":1,\"57\":1}}],[\"ask\",{\"1\":{\"59\":1}}],[\"asked\",{\"1\":{\"58\":1}}],[\"as\",{\"1\":{\"44\":1,\"49\":1,\"53\":1,\"59\":1,\"119\":3}}],[\"ascii\",{\"1\":{\"17\":2}}],[\"asynctask\",{\"1\":{\"6\":2}}],[\"a\",{\"1\":{\"0\":1,\"17\":2,\"19\":3,\"21\":1,\"23\":2,\"24\":1,\"25\":6,\"44\":1,\"45\":4,\"46\":8,\"47\":3,\"48\":1,\"49\":8,\"50\":4,\"51\":4,\"52\":3,\"53\":11,\"54\":1,\"56\":8,\"57\":9,\"59\":2,\"60\":2,\"62\":1,\"63\":1,\"64\":2,\"66\":3,\"67\":5,\"89\":10,\"90\":7,\"91\":72,\"179\":4,\"181\":1,\"182\":3,\"183\":3,\"184\":4,\"186\":5,\"187\":7,\"188\":9,\"189\":1,\"190\":1,\"221\":2,\"224\":1,\"246\":4}}],[\"ox\",{\"1\":{\"242\":29,\"243\":4}}],[\"oop\",{\"1\":{\"240\":2}}],[\"ohmyzsh\",{\"1\":{\"172\":2}}],[\"oh\",{\"1\":{\"172\":4}}],[\"ostream\",{\"1\":{\"249\":4}}],[\"os\",{\"1\":{\"136\":1,\"210\":1}}],[\"ocancelanimationframe\",{\"1\":{\"94\":1}}],[\"owner\",{\"1\":{\"86\":1}}],[\"oauth\",{\"1\":{\"86\":1}}],[\"ov\",{\"1\":{\"79\":1}}],[\"overwriting\",{\"1\":{\"52\":1,\"57\":1}}],[\"overwrite\",{\"1\":{\"47\":1,\"52\":1,\"56\":1,\"57\":1,\"66\":1}}],[\"overlay\",{\"1\":{\"47\":2}}],[\"overlapping\",{\"1\":{\"45\":1}}],[\"overlap\",{\"1\":{\"45\":1}}],[\"override\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":4,\"44\":1,\"50\":2,\"54\":1,\"63\":1,\"210\":1}}],[\"ok\",{\"1\":{\"52\":1,\"77\":2}}],[\"operator\",{\"1\":{\"246\":1,\"247\":14,\"248\":22,\"249\":4}}],[\"open\",{\"1\":{\"51\":1,\"113\":1}}],[\"opacity\",{\"1\":{\"89\":1,\"90\":1,\"94\":2,\"95\":1}}],[\"oppo\",{\"1\":{\"79\":1}}],[\"optionally\",{\"1\":{\"65\":1}}],[\"optional\",{\"1\":{\"50\":1,\"65\":3,\"168\":1}}],[\"option\",{\"1\":{\"48\":3,\"49\":2,\"52\":2,\"56\":3,\"57\":5,\"58\":2,\"59\":2,\"62\":3}}],[\"options\",{\"1\":{\"44\":1,\"45\":1,\"46\":9,\"47\":2,\"49\":1,\"50\":2,\"51\":1,\"52\":4,\"53\":1,\"56\":1,\"57\":3,\"58\":1,\"59\":2,\"64\":2,\"65\":1,\"66\":1,\"67\":3,\"94\":7,\"204\":2,\"205\":1}}],[\"our\",{\"1\":{\"47\":1}}],[\"ours\",{\"1\":{\"47\":1}}],[\"outstream\",{\"1\":{\"249\":4}}],[\"outside\",{\"1\":{\"44\":1,\"45\":1,\"63\":1}}],[\"out\",{\"1\":{\"53\":1,\"59\":1,\"100\":1,\"201\":2,\"206\":2,\"281\":1,\"290\":1}}],[\"output\",{\"1\":{\"35\":1,\"45\":2,\"46\":2,\"50\":1,\"53\":5,\"58\":1,\"65\":1,\"67\":1,\"144\":1}}],[\"others\",{\"2\":{\"236\":1}}],[\"other\",{\"1\":{\"47\":1,\"51\":1,\"66\":1}}],[\"otherwise\",{\"1\":{\"44\":1}}],[\"oldurl\",{\"1\":{\"60\":1}}],[\"old\",{\"1\":{\"46\":2,\"51\":1,\"58\":1,\"60\":1}}],[\"office\",{\"1\":{\"177\":2}}],[\"offset\",{\"1\":{\"91\":2}}],[\"off\",{\"1\":{\"48\":1,\"50\":1,\"53\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1}}],[\"of\",{\"1\":{\"44\":4,\"45\":7,\"46\":1,\"47\":1,\"49\":6,\"50\":1,\"51\":2,\"52\":10,\"53\":7,\"54\":1,\"56\":4,\"57\":12,\"58\":2,\"59\":7,\"61\":1,\"63\":1,\"66\":1,\"67\":3}}],[\"ofb\",{\"1\":{\"35\":3,\"38\":1}}],[\"o\",{\"1\":{\"12\":1,\"23\":2,\"25\":2,\"49\":1,\"50\":2,\"52\":1,\"53\":1,\"57\":1,\"58\":1,\"89\":2,\"92\":1,\"136\":1,\"189\":2,\"235\":1}}],[\"obtain\",{\"1\":{\"6\":1}}],[\"objcount\",{\"1\":{\"237\":11}}],[\"obj\",{\"1\":{\"6\":1,\"237\":10}}],[\"objective\",{\"1\":{\"240\":1}}],[\"objects\",{\"1\":{\"52\":2,\"57\":2,\"237\":12}}],[\"object\",{\"1\":{\"5\":1,\"46\":3,\"49\":1,\"51\":1,\"52\":2,\"54\":2,\"57\":1,\"67\":4,\"237\":27}}],[\"onresize\",{\"1\":{\"94\":1}}],[\"onclick\",{\"1\":{\"89\":3,\"90\":1}}],[\"oncreate\",{\"1\":{\"5\":2,\"210\":2}}],[\"onto\",{\"1\":{\"59\":4}}],[\"on\",{\"1\":{\"45\":2,\"46\":2,\"49\":1,\"51\":1,\"52\":6,\"53\":1,\"57\":5,\"58\":2,\"67\":1,\"167\":1,\"176\":1,\"262\":1,\"270\":1,\"279\":1,\"288\":1,\"297\":1}}],[\"oneline\",{\"1\":{\"55\":1}}],[\"one\",{\"1\":{\"25\":3,\"45\":1,\"49\":1}}],[\"onpostexecute\",{\"1\":{\"6\":2}}],[\"onstop\",{\"1\":{\"5\":2}}],[\"onstart\",{\"1\":{\"5\":2}}],[\"onmessageevent\",{\"1\":{\"5\":1}}],[\"only\",{\"1\":{\"0\":1,\"44\":2,\"46\":5,\"47\":1,\"49\":5,\"50\":2,\"51\":2,\"52\":4,\"56\":1,\"57\":4,\"58\":2,\"61\":3,\"63\":1,\"64\":1,\"67\":5}}],[\"orequestanimationframe\",{\"1\":{\"89\":1,\"94\":1}}],[\"order\",{\"1\":{\"87\":1}}],[\"ordered\",{\"1\":{\"5\":2}}],[\"org\",{\"1\":{\"85\":1}}],[\"origin\",{\"1\":{\"49\":3,\"51\":2,\"58\":9,\"60\":3}}],[\"original\",{\"1\":{\"0\":1,\"59\":1}}],[\"orphan\",{\"1\":{\"47\":1,\"66\":1}}],[\"or\",{\"1\":{\"45\":1,\"46\":7,\"47\":2,\"48\":4,\"49\":1,\"50\":1,\"51\":6,\"52\":3,\"53\":3,\"56\":2,\"58\":1,\"59\":3,\"60\":12,\"61\":3,\"62\":4,\"64\":10,\"66\":1,\"67\":3}}],[\",\",{\"1\":{\"0\":2,\"1\":10,\"2\":1,\"3\":1,\"4\":3,\"5\":2,\"6\":4,\"8\":3,\"11\":3,\"12\":2,\"14\":2,\"15\":1,\"16\":1,\"17\":2,\"19\":78,\"20\":2,\"21\":18,\"23\":136,\"24\":15,\"25\":64,\"28\":4,\"30\":4,\"32\":4,\"33\":5,\"34\":4,\"35\":8,\"36\":1,\"37\":6,\"38\":9,\"39\":11,\"40\":9,\"41\":4,\"44\":14,\"45\":10,\"46\":19,\"47\":13,\"48\":8,\"49\":17,\"50\":24,\"51\":20,\"52\":17,\"53\":11,\"54\":9,\"55\":1,\"56\":9,\"57\":17,\"58\":14,\"59\":17,\"60\":4,\"61\":8,\"62\":7,\"63\":5,\"64\":6,\"65\":17,\"66\":10,\"67\":16,\"69\":3,\"70\":2,\"72\":2,\"73\":5,\"77\":17,\"78\":3,\"79\":4,\"81\":2,\"83\":3,\"85\":9,\"86\":14,\"87\":18,\"89\":28,\"90\":25,\"91\":209,\"92\":10,\"93\":9,\"94\":76,\"95\":5,\"96\":5,\"97\":1,\"98\":7,\"99\":4,\"100\":7,\"101\":5,\"103\":1,\"106\":10,\"108\":3,\"109\":2,\"110\":2,\"112\":8,\"113\":7,\"114\":1,\"115\":4,\"116\":1,\"117\":4,\"119\":5,\"124\":1,\"125\":4,\"126\":13,\"127\":3,\"128\":5,\"130\":2,\"131\":5,\"133\":1,\"134\":1,\"135\":1,\"136\":3,\"139\":5,\"141\":1,\"142\":2,\"143\":10,\"144\":2,\"164\":1,\"166\":2,\"167\":5,\"168\":2,\"170\":2,\"171\":7,\"172\":6,\"173\":3,\"176\":1,\"179\":2,\"181\":1,\"182\":1,\"183\":1,\"184\":2,\"186\":1,\"187\":1,\"188\":1,\"189\":4,\"190\":3,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"200\":4,\"201\":8,\"202\":5,\"204\":7,\"205\":4,\"206\":2,\"208\":4,\"209\":10,\"210\":12,\"211\":7,\"215\":5,\"216\":1,\"217\":4,\"218\":3,\"219\":3,\"221\":3,\"233\":1,\"237\":64,\"240\":3,\"241\":7,\"242\":18,\"243\":5,\"244\":7,\"245\":24,\"246\":16,\"247\":11,\"248\":11,\"249\":6,\"250\":1,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":2,\"258\":5,\"259\":8,\"260\":16,\"261\":5,\"262\":7,\"264\":3,\"265\":3,\"267\":1,\"268\":11,\"269\":7,\"270\":11,\"272\":8,\"273\":2,\"275\":1,\"276\":1,\"277\":9,\"278\":6,\"279\":9,\"281\":3,\"282\":1,\"284\":1,\"285\":1,\"286\":2,\"287\":2,\"288\":7,\"290\":7,\"291\":1,\"293\":1,\"294\":1,\"295\":2,\"296\":2,\"297\":8},\"2\":{\"27\":1,\"42\":3,\"75\":2,\"198\":1,\"222\":1}}],[\"：\",{\"1\":{\"0\":1,\"12\":1,\"13\":1,\"16\":2,\"17\":1,\"19\":2,\"20\":1,\"21\":3,\"24\":2,\"25\":4,\"28\":2,\"30\":1,\"33\":1,\"37\":1,\"38\":1,\"60\":1,\"64\":1,\"69\":1,\"72\":1,\"73\":1,\"77\":4,\"79\":1,\"86\":4,\"87\":1,\"89\":3,\"90\":3,\"91\":2,\"92\":2,\"93\":1,\"94\":2,\"95\":1,\"96\":2,\"97\":1,\"98\":1,\"104\":2,\"108\":2,\"109\":1,\"110\":1,\"112\":7,\"113\":2,\"118\":1,\"119\":1,\"125\":1,\"128\":1,\"136\":1,\"142\":1,\"171\":1,\"172\":2,\"180\":1,\"190\":1,\"201\":4,\"202\":1,\"204\":1,\"208\":2,\"209\":4,\"210\":6,\"211\":2,\"221\":1,\"237\":3,\"242\":3,\"245\":7,\"246\":2,\"247\":1,\"260\":1,\"272\":9,\"273\":2,\"281\":1,\"290\":4}}],[\"很多\",{\"1\":{\"116\":1,\"125\":1,\"166\":1,\"171\":1,\"290\":1,\"291\":1}}],[\"很大\",{\"1\":{\"1\":1}}],[\"很\",{\"1\":{\"0\":1,\"1\":1,\"28\":1,\"77\":1,\"78\":1,\"180\":1,\"212\":1,\"215\":1,\"257\":2}}],[\"有病\",{\"1\":{\"247\":1,\"248\":1}}],[\"有时候\",{\"1\":{\"242\":1}}],[\"有效\",{\"1\":{\"176\":1,\"273\":1,\"290\":1}}],[\"有利于\",{\"1\":{\"134\":1}}],[\"有关\",{\"1\":{\"106\":1}}],[\"有着\",{\"1\":{\"99\":1}}],[\"有没有\",{\"1\":{\"69\":1}}],[\"有些\",{\"1\":{\"35\":1,\"79\":1}}],[\"有空\",{\"1\":{\"28\":1}}],[\"有点\",{\"1\":{\"6\":1,\"260\":1}}],[\"有人\",{\"1\":{\"1\":1,\"242\":1}}],[\"有\",{\"1\":{\"0\":2,\"1\":1,\"17\":2,\"23\":1,\"32\":1,\"37\":2,\"79\":1,\"81\":1,\"86\":2,\"94\":1,\"112\":1,\"116\":1,\"125\":1,\"128\":3,\"139\":1,\"166\":2,\"167\":1,\"174\":1,\"180\":1,\"201\":1,\"202\":1,\"233\":1,\"237\":11,\"240\":1,\"241\":1,\"244\":2,\"245\":3,\"246\":1,\"247\":1,\"257\":1,\"272\":1,\"273\":1,\"276\":1,\"281\":2,\"290\":2}}],[\"多态\",{\"0\":{\"238\":1},\"1\":{\"242\":2,\"245\":1}}],[\"多种\",{\"1\":{\"180\":1,\"201\":1,\"215\":1,\"272\":1}}],[\"多余\",{\"1\":{\"167\":1}}],[\"多块\",{\"1\":{\"128\":1}}],[\"多片\",{\"1\":{\"94\":1}}],[\"多数\",{\"1\":{\"83\":1,\"125\":1,\"260\":1}}],[\"多次\",{\"1\":{\"70\":1}}],[\"多少\",{\"1\":{\"37\":2,\"237\":1}}],[\"多\",{\"1\":{\"10\":1,\"38\":1,\"126\":1,\"167\":1,\"176\":1,\"189\":1,\"197\":1,\"216\":1,\"245\":1,\"250\":1,\"260\":1,\"265\":1,\"273\":1}}],[\"多重\",{\"1\":{\"0\":1}}],[\"多线程\",{\"1\":{\"0\":1,\"126\":1}}],[\"多个\",{\"1\":{\"0\":1,\"37\":1,\"77\":1,\"128\":1,\"201\":1,\"245\":1,\"246\":1,\"272\":3}}],[\"。\",{\"1\":{\"0\":3,\"1\":10,\"2\":1,\"3\":1,\"4\":2,\"5\":4,\"6\":9,\"7\":3,\"8\":2,\"10\":2,\"11\":1,\"13\":4,\"14\":4,\"15\":2,\"16\":2,\"17\":13,\"19\":9,\"20\":5,\"21\":4,\"22\":5,\"23\":2,\"24\":24,\"25\":2,\"26\":2,\"28\":5,\"30\":6,\"31\":4,\"32\":5,\"33\":6,\"34\":5,\"35\":9,\"36\":7,\"37\":14,\"38\":6,\"39\":8,\"40\":4,\"41\":4,\"44\":2,\"50\":3,\"51\":4,\"54\":6,\"55\":10,\"58\":2,\"60\":2,\"64\":5,\"67\":2,\"69\":5,\"70\":11,\"72\":1,\"73\":2,\"74\":2,\"77\":19,\"78\":8,\"79\":9,\"81\":3,\"83\":5,\"84\":2,\"85\":5,\"86\":14,\"87\":1,\"89\":1,\"90\":1,\"91\":2,\"92\":2,\"93\":5,\"94\":2,\"96\":2,\"98\":4,\"99\":8,\"100\":10,\"101\":6,\"103\":1,\"106\":15,\"107\":1,\"108\":1,\"109\":2,\"110\":1,\"111\":2,\"112\":5,\"113\":8,\"114\":1,\"115\":6,\"116\":7,\"119\":10,\"121\":2,\"124\":5,\"125\":7,\"126\":23,\"127\":5,\"128\":22,\"130\":4,\"131\":9,\"133\":1,\"134\":1,\"137\":1,\"138\":1,\"139\":4,\"142\":3,\"143\":3,\"144\":3,\"164\":2,\"166\":9,\"167\":7,\"168\":2,\"170\":3,\"171\":8,\"172\":8,\"173\":4,\"176\":3,\"178\":1,\"179\":4,\"180\":1,\"181\":4,\"182\":2,\"183\":2,\"184\":4,\"185\":2,\"186\":3,\"187\":3,\"188\":2,\"189\":8,\"190\":6,\"191\":5,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":2,\"200\":7,\"201\":21,\"202\":6,\"203\":1,\"204\":9,\"205\":4,\"206\":4,\"208\":3,\"209\":3,\"210\":5,\"211\":3,\"212\":4,\"215\":2,\"216\":4,\"217\":3,\"218\":2,\"219\":2,\"220\":1,\"221\":3,\"223\":1,\"232\":2,\"233\":2,\"237\":55,\"239\":2,\"240\":5,\"241\":9,\"242\":16,\"243\":5,\"244\":16,\"245\":26,\"246\":14,\"247\":4,\"248\":3,\"250\":7,\"251\":1,\"253\":1,\"254\":1,\"256\":1,\"257\":3,\"258\":3,\"259\":4,\"260\":13,\"261\":3,\"262\":4,\"264\":9,\"265\":4,\"267\":1,\"268\":7,\"269\":3,\"270\":1,\"272\":14,\"273\":4,\"275\":1,\"276\":1,\"277\":4,\"278\":7,\"279\":3,\"281\":14,\"282\":3,\"284\":2,\"285\":1,\"286\":2,\"287\":4,\"288\":3,\"290\":16,\"291\":2,\"293\":2,\"294\":1,\"295\":3,\"296\":3,\"297\":4}}],[\"的话\",{\"1\":{\"112\":1}}],[\"的\",{\"0\":{\"1\":1,\"179\":1,\"180\":1,\"241\":1},\"1\":{\"0\":3,\"1\":5,\"2\":2,\"4\":3,\"5\":1,\"6\":5,\"7\":1,\"8\":1,\"11\":1,\"12\":1,\"13\":2,\"14\":2,\"15\":1,\"16\":5,\"17\":8,\"19\":5,\"21\":3,\"22\":3,\"24\":8,\"25\":5,\"26\":4,\"28\":8,\"30\":2,\"31\":1,\"32\":7,\"33\":5,\"34\":4,\"35\":10,\"36\":5,\"37\":5,\"38\":2,\"39\":4,\"40\":1,\"41\":4,\"44\":2,\"51\":3,\"54\":6,\"55\":9,\"58\":4,\"60\":1,\"64\":10,\"67\":4,\"69\":6,\"70\":9,\"72\":1,\"73\":4,\"74\":2,\"77\":15,\"78\":5,\"79\":6,\"81\":5,\"83\":3,\"84\":1,\"85\":5,\"86\":17,\"87\":7,\"92\":1,\"93\":6,\"94\":4,\"95\":1,\"96\":2,\"97\":1,\"98\":1,\"99\":4,\"100\":3,\"101\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":6,\"109\":2,\"111\":2,\"112\":5,\"113\":1,\"114\":1,\"115\":4,\"116\":4,\"119\":7,\"124\":3,\"125\":3,\"126\":4,\"127\":2,\"128\":8,\"131\":1,\"134\":4,\"135\":1,\"136\":3,\"138\":3,\"139\":3,\"142\":1,\"143\":2,\"144\":1,\"166\":6,\"167\":2,\"168\":3,\"170\":1,\"171\":2,\"172\":3,\"173\":1,\"176\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":3,\"182\":1,\"183\":1,\"184\":5,\"185\":2,\"186\":2,\"187\":2,\"189\":6,\"190\":4,\"191\":8,\"197\":1,\"200\":4,\"201\":8,\"202\":4,\"203\":2,\"204\":12,\"205\":4,\"206\":4,\"208\":2,\"209\":1,\"211\":2,\"212\":5,\"215\":5,\"216\":2,\"217\":1,\"219\":2,\"220\":1,\"221\":4,\"223\":1,\"232\":1,\"233\":1,\"237\":86,\"239\":1,\"240\":3,\"241\":9,\"242\":18,\"243\":9,\"244\":22,\"245\":49,\"246\":18,\"247\":3,\"248\":4,\"250\":12,\"251\":4,\"253\":1,\"254\":2,\"257\":5,\"258\":2,\"259\":5,\"260\":31,\"261\":6,\"262\":13,\"264\":13,\"265\":3,\"268\":15,\"269\":7,\"270\":5,\"272\":22,\"273\":5,\"275\":4,\"276\":3,\"277\":12,\"278\":10,\"279\":7,\"281\":14,\"282\":4,\"286\":2,\"288\":4,\"290\":19,\"291\":5,\"293\":3,\"295\":3,\"296\":3,\"297\":5}}],[\"独立\",{\"1\":{\"0\":1,\"21\":1,\"189\":2,\"190\":1,\"241\":1}}],[\"是指\",{\"1\":{\"246\":1}}],[\"是否是\",{\"1\":{\"30\":1,\"260\":1,\"285\":1,\"288\":1}}],[\"是否\",{\"0\":{\"285\":1,\"294\":1},\"1\":{\"22\":1,\"30\":1,\"72\":1,\"73\":1,\"85\":1,\"87\":2,\"93\":1,\"119\":1,\"126\":1,\"143\":1,\"166\":1,\"201\":3,\"202\":1,\"259\":1,\"260\":1,\"261\":2,\"264\":1,\"277\":1}}],[\"是因为\",{\"1\":{\"16\":1}}],[\"是\",{\"0\":{\"239\":1},\"1\":{\"0\":1,\"1\":4,\"7\":1,\"14\":1,\"15\":1,\"16\":2,\"17\":2,\"19\":1,\"24\":1,\"26\":1,\"28\":4,\"30\":2,\"31\":1,\"35\":1,\"37\":1,\"39\":1,\"41\":4,\"54\":1,\"70\":2,\"74\":3,\"77\":3,\"78\":3,\"79\":1,\"86\":4,\"92\":1,\"93\":2,\"94\":2,\"98\":1,\"100\":1,\"101\":4,\"103\":1,\"107\":1,\"116\":2,\"119\":1,\"124\":1,\"126\":1,\"127\":2,\"128\":3,\"134\":1,\"139\":1,\"143\":1,\"174\":1,\"181\":2,\"187\":1,\"189\":1,\"190\":1,\"191\":2,\"200\":2,\"201\":4,\"203\":1,\"206\":2,\"209\":1,\"215\":1,\"217\":1,\"232\":1,\"237\":13,\"240\":1,\"241\":2,\"242\":8,\"243\":3,\"244\":3,\"245\":4,\"246\":3,\"247\":1,\"248\":1,\"250\":2,\"254\":1,\"257\":1,\"258\":1,\"260\":5,\"262\":3,\"264\":2,\"265\":3,\"267\":1,\"269\":2,\"270\":2,\"272\":3,\"273\":2,\"275\":2,\"277\":4,\"278\":1,\"279\":1,\"281\":1,\"290\":1,\"291\":1,\"295\":1,\"296\":1}}],[\"时区\",{\"0\":{\"137\":1},\"1\":{\"137\":2}}],[\"时分秒\",{\"1\":{\"96\":1}}],[\"时长\",{\"0\":{\"92\":1},\"1\":{\"92\":1}}],[\"时间\",{\"0\":{\"96\":1},\"1\":{\"55\":2,\"96\":1,\"99\":1,\"119\":1,\"137\":4,\"241\":2,\"245\":1}}],[\"时候\",{\"1\":{\"22\":1,\"73\":1,\"77\":1,\"245\":4,\"272\":2,\"273\":1}}],[\"时\",{\"1\":{\"0\":1,\"1\":3,\"2\":1,\"4\":2,\"10\":1,\"17\":1,\"25\":1,\"30\":2,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"77\":1,\"86\":2,\"106\":2,\"111\":1,\"113\":1,\"116\":1,\"124\":2,\"125\":1,\"128\":5,\"131\":2,\"135\":1,\"139\":1,\"168\":1,\"172\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"200\":1,\"201\":1,\"202\":1,\"204\":1,\"206\":1,\"209\":1,\"237\":10,\"241\":1,\"242\":2,\"243\":1,\"244\":1,\"245\":4,\"246\":2,\"260\":1,\"269\":1}}],[\"在上\",{\"1\":{\"192\":1}}],[\"在线\",{\"1\":{\"137\":1}}],[\"在于\",{\"1\":{\"30\":1,\"35\":1,\"166\":2,\"191\":2,\"212\":1}}],[\"在子\",{\"1\":{\"0\":1,\"1\":2,\"2\":1,\"3\":1,\"4\":4,\"5\":1,\"6\":1}}],[\"在\",{\"1\":{\"0\":2,\"1\":7,\"2\":2,\"3\":1,\"4\":3,\"5\":5,\"6\":2,\"16\":2,\"17\":2,\"25\":1,\"30\":1,\"31\":1,\"37\":1,\"38\":2,\"41\":1,\"44\":1,\"51\":3,\"54\":4,\"55\":1,\"60\":1,\"64\":1,\"69\":2,\"70\":1,\"72\":1,\"73\":1,\"77\":1,\"78\":1,\"81\":1,\"85\":7,\"86\":7,\"87\":6,\"89\":2,\"90\":2,\"91\":2,\"92\":4,\"93\":3,\"94\":2,\"95\":1,\"96\":2,\"97\":1,\"98\":2,\"99\":2,\"100\":2,\"103\":1,\"104\":1,\"105\":1,\"106\":4,\"111\":2,\"112\":2,\"113\":1,\"116\":2,\"119\":1,\"124\":2,\"125\":2,\"127\":2,\"128\":2,\"142\":1,\"143\":4,\"144\":1,\"166\":2,\"171\":2,\"173\":1,\"174\":1,\"180\":1,\"184\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"200\":4,\"201\":1,\"209\":5,\"210\":4,\"211\":2,\"217\":1,\"220\":1,\"237\":21,\"240\":2,\"241\":1,\"242\":2,\"243\":3,\"244\":5,\"245\":6,\"246\":2,\"250\":1,\"258\":1,\"260\":3,\"264\":1,\"268\":2,\"270\":1,\"272\":5,\"273\":1,\"275\":1,\"276\":1,\"277\":2,\"279\":2,\"281\":6,\"290\":10,\"297\":1}}],[\"，\",{\"1\":{\"0\":4,\"1\":11,\"2\":2,\"3\":1,\"4\":6,\"5\":5,\"6\":7,\"7\":2,\"8\":2,\"10\":2,\"11\":1,\"12\":1,\"13\":4,\"16\":7,\"17\":14,\"19\":5,\"20\":3,\"21\":5,\"22\":7,\"24\":9,\"25\":5,\"26\":4,\"28\":11,\"30\":10,\"31\":4,\"32\":4,\"33\":3,\"34\":2,\"35\":1,\"36\":4,\"37\":16,\"38\":5,\"39\":6,\"40\":3,\"41\":6,\"44\":3,\"50\":2,\"51\":3,\"54\":3,\"55\":4,\"58\":2,\"60\":3,\"64\":7,\"67\":2,\"69\":4,\"70\":5,\"73\":2,\"74\":5,\"77\":20,\"78\":14,\"79\":11,\"81\":5,\"83\":3,\"85\":4,\"86\":11,\"87\":4,\"89\":4,\"90\":5,\"91\":6,\"92\":5,\"93\":13,\"94\":8,\"95\":3,\"96\":2,\"97\":2,\"98\":5,\"99\":9,\"100\":8,\"101\":4,\"103\":2,\"104\":2,\"105\":1,\"106\":14,\"107\":1,\"109\":3,\"111\":4,\"112\":6,\"113\":5,\"115\":3,\"116\":9,\"119\":11,\"121\":1,\"124\":7,\"125\":12,\"126\":15,\"127\":9,\"128\":28,\"130\":6,\"131\":13,\"132\":3,\"134\":7,\"135\":3,\"136\":2,\"137\":2,\"138\":5,\"139\":5,\"142\":3,\"143\":3,\"144\":3,\"166\":6,\"167\":5,\"168\":2,\"170\":1,\"171\":7,\"172\":5,\"174\":3,\"176\":3,\"178\":1,\"179\":3,\"180\":2,\"181\":4,\"182\":2,\"183\":2,\"184\":3,\"185\":1,\"186\":3,\"187\":2,\"189\":8,\"190\":7,\"191\":6,\"192\":2,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":3,\"200\":4,\"201\":5,\"202\":2,\"204\":5,\"205\":1,\"206\":3,\"208\":3,\"209\":6,\"210\":2,\"211\":5,\"212\":5,\"216\":1,\"217\":2,\"218\":4,\"219\":3,\"220\":2,\"221\":2,\"232\":6,\"237\":51,\"239\":1,\"240\":9,\"241\":9,\"242\":24,\"243\":6,\"244\":26,\"245\":33,\"246\":17,\"247\":10,\"248\":6,\"250\":8,\"251\":2,\"254\":1,\"255\":1,\"256\":2,\"257\":5,\"258\":7,\"259\":13,\"260\":19,\"261\":9,\"262\":6,\"264\":8,\"265\":3,\"267\":3,\"268\":11,\"269\":7,\"270\":2,\"272\":10,\"273\":8,\"275\":3,\"276\":3,\"277\":10,\"278\":11,\"279\":3,\"281\":10,\"282\":2,\"285\":1,\"287\":5,\"288\":3,\"290\":19,\"291\":1,\"293\":3,\"294\":2,\"295\":6,\"296\":5,\"297\":4}}],[\"中序\",{\"0\":{\"256\":1,\"259\":1},\"1\":{\"256\":1,\"259\":1,\"262\":2}}],[\"中才\",{\"1\":{\"244\":1,\"276\":1,\"277\":1}}],[\"中用\",{\"1\":{\"237\":1}}],[\"中文\",{\"0\":{\"176\":1},\"1\":{\"176\":1,\"221\":1}}],[\"中文字体\",{\"0\":{\"170\":1}}],[\"中心\",{\"0\":{\"173\":1}}],[\"中科大\",{\"1\":{\"125\":1}}],[\"中以\",{\"1\":{\"115\":1}}],[\"中间\",{\"1\":{\"35\":7}}],[\"中\",{\"1\":{\"0\":4,\"1\":6,\"2\":2,\"3\":1,\"4\":4,\"5\":2,\"6\":1,\"16\":2,\"17\":1,\"25\":1,\"30\":1,\"31\":2,\"36\":2,\"37\":1,\"38\":1,\"39\":3,\"41\":2,\"44\":1,\"50\":2,\"55\":1,\"64\":1,\"72\":1,\"73\":1,\"77\":1,\"79\":1,\"85\":5,\"86\":5,\"87\":4,\"89\":1,\"90\":1,\"91\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":2,\"99\":1,\"106\":4,\"111\":1,\"119\":1,\"125\":2,\"126\":1,\"127\":2,\"128\":4,\"142\":1,\"143\":3,\"166\":1,\"171\":1,\"173\":1,\"174\":1,\"180\":1,\"181\":1,\"184\":1,\"200\":1,\"201\":1,\"202\":1,\"204\":1,\"205\":1,\"209\":2,\"211\":2,\"232\":1,\"237\":8,\"240\":2,\"242\":2,\"243\":5,\"244\":5,\"245\":2,\"246\":4,\"247\":1,\"250\":1,\"258\":1,\"260\":2,\"261\":3,\"262\":4,\"264\":2,\"268\":3,\"272\":7,\"277\":1,\"281\":2,\"282\":1,\"290\":2}}],[\" \",{\"0\":{\"0\":1,\"1\":1,\"2\":2,\"3\":2,\"4\":2,\"5\":2,\"6\":1,\"9\":1,\"10\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":2,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"43\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"83\":1,\"84\":1,\"85\":2,\"86\":2,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":2,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":4,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":2,\"115\":1,\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":2,\"166\":1,\"167\":2,\"168\":2,\"171\":1,\"172\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"215\":2,\"216\":2,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"223\":1,\"234\":1,\"301\":1},\"1\":{\"0\":16,\"1\":36,\"2\":22,\"3\":20,\"4\":35,\"5\":90,\"6\":34,\"7\":2,\"8\":9,\"10\":3,\"11\":18,\"12\":35,\"13\":5,\"14\":6,\"15\":7,\"16\":10,\"17\":32,\"19\":7,\"20\":29,\"21\":209,\"23\":6,\"24\":89,\"25\":530,\"26\":4,\"28\":7,\"30\":8,\"32\":6,\"33\":15,\"34\":8,\"35\":17,\"36\":12,\"37\":45,\"38\":106,\"39\":123,\"40\":100,\"41\":164,\"43\":2,\"44\":171,\"45\":276,\"46\":288,\"47\":176,\"48\":129,\"49\":270,\"50\":337,\"51\":267,\"52\":305,\"53\":287,\"54\":122,\"55\":63,\"56\":228,\"57\":335,\"58\":203,\"59\":333,\"60\":166,\"61\":120,\"62\":113,\"63\":78,\"64\":146,\"65\":100,\"66\":112,\"67\":274,\"69\":18,\"70\":39,\"72\":40,\"73\":102,\"74\":5,\"77\":47,\"78\":14,\"79\":12,\"81\":7,\"83\":6,\"84\":1,\"85\":81,\"86\":54,\"87\":168,\"89\":41,\"90\":89,\"91\":69,\"92\":91,\"93\":45,\"94\":625,\"95\":11,\"96\":162,\"97\":13,\"98\":50,\"99\":15,\"100\":16,\"101\":23,\"103\":8,\"104\":15,\"105\":14,\"106\":105,\"107\":3,\"108\":11,\"109\":13,\"110\":13,\"111\":15,\"112\":109,\"113\":76,\"114\":10,\"115\":19,\"116\":24,\"117\":1,\"119\":9,\"121\":1,\"124\":11,\"125\":18,\"126\":15,\"127\":23,\"128\":74,\"130\":4,\"131\":11,\"132\":19,\"133\":34,\"134\":40,\"135\":22,\"136\":76,\"137\":16,\"138\":42,\"139\":32,\"141\":4,\"142\":7,\"143\":3,\"144\":19,\"164\":2,\"166\":1,\"167\":35,\"168\":35,\"169\":11,\"170\":6,\"171\":50,\"172\":48,\"173\":3,\"174\":29,\"175\":3,\"176\":46,\"177\":28,\"179\":22,\"182\":14,\"183\":14,\"184\":14,\"186\":19,\"187\":23,\"188\":14,\"189\":20,\"190\":20,\"191\":1,\"192\":16,\"193\":15,\"194\":15,\"195\":15,\"196\":15,\"200\":26,\"201\":65,\"202\":33,\"203\":4,\"204\":39,\"205\":22,\"206\":29,\"208\":13,\"209\":36,\"210\":55,\"211\":16,\"215\":7,\"217\":2,\"218\":6,\"219\":3,\"221\":11,\"223\":2,\"224\":37,\"225\":3,\"226\":8,\"227\":7,\"229\":3,\"230\":16,\"232\":54,\"233\":11,\"234\":15,\"235\":12,\"237\":702,\"239\":2,\"240\":4,\"241\":105,\"242\":207,\"243\":48,\"244\":18,\"245\":86,\"246\":34,\"247\":144,\"248\":217,\"249\":71,\"251\":16,\"253\":14,\"254\":41,\"255\":17,\"256\":17,\"257\":17,\"258\":52,\"259\":83,\"260\":121,\"261\":34,\"262\":192,\"265\":25,\"267\":18,\"268\":124,\"269\":119,\"270\":106,\"272\":5,\"273\":16,\"275\":17,\"276\":37,\"277\":105,\"278\":126,\"279\":112,\"281\":6,\"282\":20,\"284\":17,\"285\":17,\"286\":21,\"287\":42,\"288\":144,\"290\":7,\"291\":23,\"293\":24,\"294\":6,\"295\":19,\"296\":19,\"297\":97,\"299\":2}}]],\"serializationVersion\":2}}")).map(([localePath, index]) => [
    localePath,
    loadIndex(index, {
        fields: [/** Heading */ "h", /** Text */ "t", /** CustomFields */ "c"],
        storeFields: [
            /** Heading */ "h",
            /** Text */ "t",
            /** CustomFields */ "c",
        ],
    }),
]));
self.onmessage = ({ data: { type = "all", query, locale, options, id }, }) => {
    const searchLocaleIndex = searchIndex[locale];
    if (type === "suggest")
        self.postMessage([
            type,
            id,
            getSuggestions(query, searchLocaleIndex, options),
        ]);
    else if (type === "search")
        self.postMessage([type, id, getResults(query, searchLocaleIndex, options)]);
    else
        self.postMessage({
            suggestions: [
                type,
                id,
                getSuggestions(query, searchLocaleIndex, options),
            ],
            results: [type, id, getResults(query, searchLocaleIndex, options)],
        });
};
//# sourceMappingURL=index.js.map