import { entries, fromEntries } from "@vuepress/helper/client";
import { loadIndex } from "slimsearch";
import { getResults } from "../client/worker/result.js";
import { getSuggestions } from "../client/worker/suggestion.js";
const searchIndex = fromEntries(entries(JSON.parse("{\"/\":{\"documentCount\":62,\"nextId\":62,\"documentIds\":{\"0\":\"1\",\"1\":\"1#add\",\"2\":\"1#apply\",\"3\":\"1#branch\",\"4\":\"1#checkout\",\"5\":\"1#cherry-pick\",\"6\":\"1#clone\",\"7\":\"1#commit\",\"8\":\"1#config\",\"9\":\"1#fetch\",\"10\":\"1#format-patch\",\"11\":\"1#init\",\"12\":\"1#log\",\"13\":\"1#merge\",\"14\":\"1#pull\",\"15\":\"1#push\",\"16\":\"1#rebase\",\"17\":\"1#remote\",\"18\":\"1#reset\",\"19\":\"1#revert\",\"20\":\"1#rm\",\"21\":\"1#stash\",\"22\":\"1#status\",\"23\":\"1#switch\",\"24\":\"1#tag\",\"25\":\"1@0\",\"26\":\"2\",\"27\":\"2#示例\",\"28\":\"2#标题\",\"29\":\"2#文本\",\"30\":\"2#列表\",\"31\":\"2#引用\",\"32\":\"2#代码块\",\"33\":\"2#链接\",\"34\":\"2#图像\",\"35\":\"2#注脚\",\"36\":\"2#上标下标\",\"37\":\"2#表格\",\"38\":\"2#分割线\",\"39\":\"2#数学公式\",\"40\":\"2#警告\",\"41\":\"2#提示\",\"42\":\"2#标签\",\"43\":\"2#自定义对齐\",\"44\":\"2#思维导图\",\"45\":\"2#流程图\",\"46\":\"2@0\",\"47\":\"3\",\"48\":\"3#用户与组\",\"49\":\"3#编辑器\",\"50\":\"3#挂载硬盘\",\"51\":\"3#设置快捷方式\",\"52\":\"3#git\",\"53\":\"3#安装\",\"54\":\"3#配置\",\"55\":\"3#gpg\",\"56\":\"3#配置-1\",\"57\":\"3#python\",\"58\":\"3#virtual-env\",\"59\":\"3#get-pip\",\"60\":\"3@0\",\"61\":\"4\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[4,4],\"1\":[1,143],\"2\":[1,180],\"3\":[1,139],\"4\":[1,136],\"5\":[3,99],\"6\":[1,163],\"7\":[1,190],\"8\":[1,165],\"9\":[1,182],\"10\":[3,175],\"11\":[1,110],\"12\":[1,74],\"13\":[1,149],\"14\":[1,218],\"15\":[1,157],\"16\":[1,198],\"17\":[1,100],\"18\":[1,77],\"19\":[1,90],\"20\":[1,69],\"21\":[1,116],\"22\":[1,84],\"23\":[1,97],\"24\":[1,142],\"25\":[null,null,1],\"26\":[4],\"27\":[1],\"28\":[1],\"29\":[1],\"30\":[1],\"31\":[1],\"32\":[2],\"33\":[1],\"34\":[1],\"35\":[1],\"36\":[2],\"37\":[1],\"38\":[1],\"39\":[1],\"40\":[1],\"41\":[1],\"42\":[1],\"43\":[2],\"44\":[2],\"45\":[1,9],\"46\":[null,null,1],\"47\":[4,10],\"48\":[3,32],\"49\":[1,7],\"50\":[2,13],\"51\":[2,13],\"52\":[1],\"53\":[1,5],\"54\":[1,14],\"55\":[1],\"56\":[1,73],\"57\":[1,20],\"58\":[3,16],\"59\":[3,20],\"60\":[null,null,1],\"61\":[0,4]},\"averageFieldLength\":[1.4034990649836372,105.86288266525433,0.07434734780392263],\"storedFields\":{\"0\":{\"h\":\"Git 命令解释\",\"t\":[\"记录 Git 常用命令\"]},\"1\":{\"h\":\"add\",\"t\":[\"git add -h\",\"usage: git add [<options>] [--] <pathspec>... -n, --dry-run dry run -v, --verbose be verbose -i, --interactive interactive picking -p, --patch select hunks interactively -e, --edit edit current diff and apply -f, --force allow adding otherwise ignored files -u, --update update tracked files --renormalize renormalize EOL of tracked files (implies -u) -N, --intent-to-add record only the fact that the path will be added later -A, --all add changes from all tracked and untracked files --ignore-removal ignore paths removed in the working tree (same as --no-all) --refresh don't add, only refresh the index --ignore-errors just skip files which cannot be added because of errors --ignore-missing check if - even missing - files are ignored in dry run --sparse allow updating entries outside of the sparse-checkout cone --chmod (+|-)x override the executable bit of the listed files --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"add 将工作区的更改保存到暂存区，准备提交。\",\"git add . # 添加当前目录下的全部文件 git add 'file path' # 添加指定文件，可用相对路径。 git add -f 'file paht' # 强制添加指定文件，即使在 .gitignore 中\"]},\"2\":{\"h\":\"apply\",\"t\":[\"git apply -h\",\"usage: git apply [<options>] [<patch>...] --exclude <path> don't apply changes matching the given path --include <path> apply changes matching the given path -p <num> remove <num> leading slashes from traditional diff paths --no-add ignore additions made by the patch --stat instead of applying the patch, output diffstat for the input --numstat show number of added and deleted lines in decimal notation --summary instead of applying the patch, output a summary for the input --check instead of applying the patch, see if the patch is applicable --index make sure the patch is applicable to the current index -N, --intent-to-add mark new files with `git add --intent-to-add` --cached apply a patch without touching the working tree --unsafe-paths accept a patch that touches outside the working area --apply also apply the patch (use with --stat/--summary/--check) -3, --3way attempt three-way merge, fall back on normal patch if that fails --build-fake-ancestor <file> build a temporary index based on embedded index information -z paths are separated with NUL character -C <n> ensure at least <n> lines of context match --whitespace <action> detect new or modified lines that have whitespace errors --ignore-space-change ignore changes in whitespace when finding context --ignore-whitespace ignore changes in whitespace when finding context -R, --reverse apply the patch in reverse --unidiff-zero don't expect at least one line of context --reject leave the rejected hunks in corresponding *.rej files --allow-overlap allow overlapping hunks -v, --verbose be more verbose -q, --quiet be more quiet --inaccurate-eof tolerate incorrectly detected missing new-line at the end of file --recount do not trust the line counts in the hunk headers --directory <root> prepend <root> to all filenames --allow-empty don't return error for empty patches\"]},\"3\":{\"h\":\"branch\",\"t\":[\"git branch -h\",\"usage: git branch [<options>] [-r | -a] [--merged] [--no-merged] or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>] or: git branch [<options>] [-l] [<pattern>...] or: git branch [<options>] [-r] (-d | -D) <branch-name>... or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch> or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch> or: git branch [<options>] [-r | -a] [--points-at] or: git branch [<options>] [-r | -a] [--format] Generic options -v, --verbose show hash and subject, give twice for upstream branch -q, --quiet suppress informational messages -t, --track[=(direct|inherit)] set branch tracking configuration -u, --set-upstream-to <upstream> change the upstream info --unset-upstream unset the upstream info --color[=<when>] use colored output -r, --remotes act on remote-tracking branches --contains <commit> print only branches that contain the commit --no-contains <commit> print only branches that don't contain the commit --abbrev[=<n>] use <n> digits to display object names Specific git-branch actions: -a, --all list both remote-tracking and local branches -d, --delete delete fully merged branch -D delete branch (even if not merged) -m, --move move/rename a branch and its reflog -M move/rename a branch, even if target exists -c, --copy copy a branch and its reflog -C copy a branch, even if target exists -l, --list list branch names --show-current show current branch name --create-reflog create the branch's reflog --edit-description edit the description for the branch -f, --force force creation, move/rename, deletion --merged <commit> print only branches that are merged --no-merged <commit> print only branches that are not merged --column[=<style>] list branches in columns --sort <key> field name to sort on --points-at <object> print only branches of the object -i, --ignore-case sorting and filtering are case insensitive --recurse-submodules recurse through submodules --format <format> format to use for the output\",\"git branch -M dev-branch git branch -D dev-branch\"]},\"4\":{\"h\":\"checkout\",\"t\":[\"git checkout -h\",\"usage: git checkout [<options>] <branch> or: git checkout [<options>] [<branch>] -- <file>... -b <branch> create and checkout a new branch -B <branch> create/reset and checkout a branch -l create reflog for new branch --guess second guess 'git checkout <no-such-branch>' (default) --overlay use overlay mode (default) -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref -2, --ours checkout our version for unmerged files -3, --theirs checkout their version for unmerged files -p, --patch select hunks interactively --ignore-skip-worktree-bits do not limit pathspecs to sparse entries only --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"git checkout -b dev-branch git checkout tags/v2.0.0-rc.52 -b v2.0.0-rc.52\"]},\"5\":{\"h\":\"cherry-pick\",\"t\":[\"git cherry-pick -h\",\"usage: git cherry-pick [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff] [-S[<keyid>]] <commit>... or: git cherry-pick (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit -x append commit name --ff allow fast-forward --allow-empty preserve initially empty commits --allow-empty-message allow commits with empty messages --keep-redundant-commits keep redundant, empty commits\"]},\"6\":{\"h\":\"clone\",\"t\":[\"git clone -h\",\"usage: git clone [<options>] [--] <repo> [<dir>] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --reject-shallow don't clone shallow repository -n, --no-checkout don't create a checkout --bare create a bare repository --mirror create a mirror repository (implies bare) -l, --local to clone from a local repository --no-hardlinks don't use local hardlinks, always copy -s, --shared setup as shared repository --recurse-submodules[=<pathspec>] initialize submodules in the clone --recursive[=<pathspec>] alias of --recurse-submodules -j, --jobs <n> number of submodules cloned in parallel --template <template-directory> directory from which templates will be used --reference <repo> reference repository --reference-if-able <repo> reference repository --dissociate use --reference only while cloning -o, --origin <name> use <name> instead of 'origin' to track upstream -b, --branch <branch> checkout <branch> instead of the remote's HEAD -u, --upload-pack <path> path to git-upload-pack on the remote --depth <depth> create a shallow clone of that depth --shallow-since <time> create a shallow clone since a specific time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --single-branch clone only one branch, HEAD or --branch --no-tags don't clone any tags, and make later fetches not to follow them --shallow-submodules any cloned submodules will be shallow --separate-git-dir <gitdir> separate git dir from working tree -c, --config <key=value> set config inside the new repository --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --filter <args> object filtering --also-filter-submodules apply partial clone filters to submodules --remote-submodules any cloned submodules will use their remote-tracking branch --sparse initialize sparse-checkout file to include only files at root --bundle-uri <uri> a URI for downloading bundles before fetching from origin remote\"]},\"7\":{\"h\":\"commit\",\"t\":[\"git commit -h\",\"usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend] [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)] [-F <file> | -m <msg>] [--reset-author] [--allow-empty] [--allow-empty-message] [--no-verify] [-e] [--author=<author>] [--date=<date>] [--cleanup=<mode>] [--[no-]status] [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]] [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]] [--] [<pathspec>...] -q, --quiet suppress summary after successful commit -v, --verbose show diff in commit message template Commit message options -F, --file <file> read message from file --author <author> override author for commit --date <date> override date for commit -m, --message <message> commit message -c, --reedit-message <commit> reuse and edit message from specified commit -C, --reuse-message <commit> reuse message from specified commit --fixup [(amend|reword):]commit use autosquash formatted message to fixup or amend/reword specified commit --squash <commit> use autosquash formatted message to squash specified commit --reset-author the commit is authored by me now (used with -C/-c/--amend) --trailer <trailer> add custom trailer(s) -s, --signoff add a Signed-off-by trailer -t, --template <file> use specified template file -e, --edit force edit of commit --cleanup <mode> how to strip spaces and #comments from message --status include status in commit message template -S, --gpg-sign[=<key-id>] GPG sign commit Commit contents options -a, --all commit all changed files -i, --include add specified files to index for commit --interactive interactively add files -p, --patch interactively add changes -o, --only commit only specified files -n, --no-verify bypass pre-commit and commit-msg hooks --dry-run show what would be committed --short show status concisely --branch show branch information --ahead-behind compute full ahead/behind values --porcelain machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL --amend amend previous commit --no-post-rewrite bypass post-rewrite hook -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\",\"commit 将暂存区内容，提交到本地仓库中，并生成一个提交记录。\",\"git commit -m 'commit message' # 提交代码到本地仓库 git commit --amend # 向上一次提交记录中追加改动。可同时修改 commit message。 git commit -S -m 'commit message' # 使用 GPG 签名 git commit -a -m 'commit message' # 合并 执行 git add . 和 git commit -m\"]},\"8\":{\"h\":\"config\",\"t\":[\"git config -h\",\"usage: git config [<options>] Config file location --global use global config file --system use system config file --local use repository config file --worktree use per-worktree config file -f, --file <file> use given config file --blob <blob-id> read config from given blob object Action --get get value: name [value-pattern] --get-all get all values: key [value-pattern] --get-regexp get values for regexp: name-regex [value-pattern] --get-urlmatch get value specific for the URL: section[.var] URL --replace-all replace all matching variables: name value [value-pattern] --add add a new variable: name value --unset remove a variable: name [value-pattern] --unset-all remove all matches: name [value-pattern] --rename-section rename section: old-name new-name --remove-section remove a section: name -l, --list list all --fixed-value use string equality when comparing values to 'value-pattern' -e, --edit open an editor --get-color find the color configured: slot [default] --get-colorbool find the color setting: slot [stdout-is-tty] Type -t, --type <type> value is given this type --bool value is \\\"true\\\" or \\\"false\\\" --int value is decimal number --bool-or-int value is --bool or --int --bool-or-str value is --bool or string --path value is a path (file or directory name) --expiry-date value is an expiry date Other -z, --null terminate values with NUL byte --name-only show variable names only --includes respect include directives on lookup --show-origin show origin of config (file, standard input, blob, command line) --show-scope show scope of config (worktree, local, global, system, command) --default <value> with --get, use default value when missing entry\",\"配置 git 工作环境。分系统，用户，仓库三个级别的配置。\",\"下面给出三个配置文件的位置。\",\"system: 存储在 /etc/gitconfig.\",\"global: 存储在 ~/.gitconfig.\",\"local: 存储在 <repo>/.git/config.\",\"git config --global user.name \\\"user name\\\" git config --global user.email \\\"example@example.com\\\" git config --global autocrlf=input # 配置 crlf 到 lf 的转换，windows 建议设置 true。\"]},\"9\":{\"h\":\"fetch\",\"t\":[\"git fetch -h\",\"usage: git fetch [<options>] [<repository> [<refspec>...]] or: git fetch [<options>] <group> or: git fetch --multiple [<options>] [(<repository> | <group>)...] or: git fetch --all [<options>] -v, --verbose be more verbose -q, --quiet be more quiet --all fetch from all remotes --set-upstream set upstream for git pull/fetch -a, --append append to .git/FETCH_HEAD instead of overwriting --atomic use atomic transaction to update references --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local reference -m, --multiple fetch from multiple remotes -t, --tags fetch all tags and associated objects -n do not fetch all tags (--no-tags) -j, --jobs <n> number of submodules fetched in parallel --prefetch modify the refspec to place all refs within refs/prefetch/ -p, --prune prune remote-tracking branches no longer on remote -P, --prune-tags prune local tags no longer on remote and clobber changed tags --recurse-submodules[=<on-demand>] control recursive fetching of submodules --dry-run dry run --write-fetch-head write fetched references to the FETCH_HEAD file -k, --keep keep downloaded pack -u, --update-head-ok allow updating of HEAD ref --progress force progress reporting --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --refetch re-fetch without negotiating common commits --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --negotiate-only do not fetch a packfile; instead, print ancestors of negotiation tips --filter <args> object filtering --auto-maintenance run 'maintenance --auto' after fetching --auto-gc run 'maintenance --auto' after fetching --show-forced-updates check for forced-updates on all updated branches --write-commit-graph write the commit-graph after fetching --stdin accept refspecs from stdin\"]},\"10\":{\"h\":\"format-patch\",\"t\":[\"git format-patch -h\",\"usage: git format-patch [<options>] [<since> | <revision-range>] -n, --numbered use [PATCH n/m] even with a single patch -N, --no-numbered use [PATCH] even with multiple patches -s, --signoff add a Signed-off-by trailer --stdout print patches to standard out --cover-letter generate a cover letter --numbered-files use simple number sequence for output file names --suffix <sfx> use <sfx> instead of '.patch' --start-number <n> start numbering patches at <n> instead of 1 -v, --reroll-count <reroll-count> mark the series as Nth re-roll --filename-max-length <n> max length of output filename --rfc use [RFC PATCH] instead of [PATCH] --cover-from-description <cover-from-description-mode> generate parts of a cover letter based on a branch's description --subject-prefix <prefix> use [<prefix>] instead of [PATCH] -o, --output-directory <dir> store resulting files in <dir> -k, --keep-subject don't strip/add [PATCH] --no-binary don't output binary diffs --zero-commit output all-zero hash in From header --ignore-if-in-upstream don't include a patch matching a commit upstream -p, --no-stat show patch format instead of default (patch + stat) Messaging --add-header <header> add email header --to <email> add To: header --cc <email> add Cc: header --from[=<ident>] set From address to <ident> (or committer ident if absent) --in-reply-to <message-id> make first mail a reply to <message-id> --attach[=<boundary>] attach the patch --inline[=<boundary>] inline the patch --thread[=<style>] enable message threading, styles: shallow, deep --signature <signature> add a signature --base <base-commit> add prerequisite tree info to the patch series --signature-file <file> add a signature from a file -q, --quiet don't print the patch filenames --progress show progress while generating patches --interdiff <rev> show changes against <rev> in cover letter or single patch --range-diff <refspec> show changes against <refspec> in cover letter or single patch --creation-factor <n> percentage by which creation is weighted --force-in-body-from show in-body From: even if identical to the e-mail header\"]},\"11\":{\"h\":\"init\",\"t\":[\"git init -h\",\"usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--separate-git-dir <git-dir>] [--object-format=<format>] [-b <branch-name> | --initial-branch=<branch-name>] [--shared[=<permissions>]] [<directory>] --template <template-directory> directory from which templates will be used --bare create a bare repository --shared[=<permissions>] specify that the git repository is to be shared amongst several users -q, --quiet be quiet --separate-git-dir <gitdir> separate git dir from working tree -b, --initial-branch <name> override the name of the initial branch --object-format <hash> specify the hash algorithm to use\",\"创建一个空的 git 仓库。\",\"git init test # 创建目录为 test 的仓库 git init -b main test # 创建默认分支 main 的仓库\",\"创建裸仓库\",\"默认创建的仓库都带工作区。裸仓库主要用在远程服务仓库，如 github，gitee， 用于开发者提交自己的代码。\",\"下面是在 linux 环境创建并使用裸仓库的实例。 用户名 flueky.zuo\",\"git init --base test # 在用户目录下创建 test 裸仓库 # 以下命令在 git 工作区仓库执行。 git remote add local flueky.zuo@localhost:test git push local main # 提交代码到 local 仓库。\"]},\"12\":{\"h\":\"log\",\"t\":[\"查看提交记录。\",\"git log # 默认按照标准格式，由近到远输出提交记录 git log --oneline # 简化输出，只显示提交 id 和信息。 git log --author 'flueky.zuo' # 查看指定提交者的信息，通常记录在 user.name 和 user.email 中。 git log --since/--after '2024-10-01' # 显示指定时间之后的提交。 git log --until/--before '2024-10-02' # 显示指定时间之前的提交。 git log --grep 'message' # 查看包含指定信息的提交。 git log --graph # 显示包含图形的提交记录 git log -p # 补丁的形式，显示每个提交的差异。可结合 -- filepath 使用。 git log --stat # 显示每次修改提交的文件统计信息。 git log -num # 显示最近 num 次的提交。\"]},\"13\":{\"h\":\"merge\",\"t\":[\"git merge -h\",\"usage: git merge [<options>] [<commit>...] or: git merge --abort or: git merge --continue -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --summary (synonym to --stat) --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) -e, --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward (default) --ff-only abort if fast-forward is not possible --rerere-autoupdate update the index with reused conflict resolution if possible --verify-signatures verify that the named commit has a valid GPG signature -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -m, --message <message> merge commit message (for a non-fast-forward merge) -F, --file <path> read message from file --into-name <name> use <name> instead of the real target -v, --verbose be more verbose -q, --quiet be more quiet --abort abort the current in-progress merge --quit --abort but leave index and working tree alone --continue continue the current in-progress merge --allow-unrelated-histories allow merging unrelated histories --progress force progress reporting -S, --gpg-sign[=<key-id>] GPG sign commit --autostash automatically stash/stash pop before and after --overwrite-ignore update ignored files (default) --signoff add a Signed-off-by trailer --no-verify bypass pre-merge-commit and commit-msg hooks\"]},\"14\":{\"h\":\"pull\",\"t\":[\"git pull -h\",\"usage: git pull [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --progress force progress reporting --recurse-submodules[=<on-demand>] control for recursive fetching of submodules Options related to merging -r, --rebase[=(false|true|merges|interactive)] incorporate changes by rebasing rather than merging -n do not show a diffstat at the end of the merge --stat show a diffstat at the end of the merge --log[=<n>] add (at most <n>) entries from shortlog to merge commit message --signoff[=...] add a Signed-off-by trailer --squash create a single commit instead of doing a merge --commit perform a commit if the merge succeeds (default) --edit edit message before committing --cleanup <mode> how to strip spaces and #comments from message --ff allow fast-forward --ff-only abort if fast-forward is not possible --verify control use of pre-merge-commit and commit-msg hooks --verify-signatures verify that the named commit has a valid GPG signature --autostash automatically stash/stash pop before and after -s, --strategy <strategy> merge strategy to use -X, --strategy-option <option=value> option for selected merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --allow-unrelated-histories allow merging unrelated histories Options related to fetching --all fetch from all remotes -a, --append append to .git/FETCH_HEAD instead of overwriting --upload-pack <path> path to upload pack on remote end -f, --force force overwrite of local branch -t, --tags fetch all tags and associated objects -p, --prune prune remote-tracking branches no longer on remote -j, --jobs[=<n>] number of submodules pulled in parallel --dry-run dry run -k, --keep keep downloaded pack --depth <depth> deepen history of shallow clone --shallow-since <time> deepen history of shallow repository based on time --shallow-exclude <revision> deepen history of shallow clone, excluding rev --deepen <n> deepen history of shallow clone --unshallow convert to a complete repository --update-shallow accept refs that update .git/shallow --refmap <refmap> specify fetch refmap -o, --server-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only --negotiation-tip <revision> report that we have only objects reachable from this object --show-forced-updates check for forced-updates on all updated branches --set-upstream set upstream for git pull/fetch\"]},\"15\":{\"h\":\"push\",\"t\":[\"git push -h\",\"usage: git push [<options>] [<repository> [<refspec>...]] -v, --verbose be more verbose -q, --quiet be more quiet --repo <repository> repository --all push all refs --mirror mirror all refs -d, --delete delete refs --tags push tags (can't be used with --all or --mirror) -n, --dry-run dry run --porcelain machine-readable output -f, --force force updates --force-with-lease[=<refname>:<expect>] require old value of ref to be at this value --force-if-includes require remote updates to be integrated locally --recurse-submodules (check|on-demand|no) control recursive pushing of submodules --thin use thin pack --receive-pack <receive-pack> receive pack program --exec <receive-pack> receive pack program -u, --set-upstream set upstream for git pull/status --progress force progress reporting --prune prune locally removed refs --no-verify bypass pre-push hook --follow-tags push missing but relevant tags --signed[=(yes|no|if-asked)] GPG sign the push --atomic request atomic transaction on remote side -o, --push-option <server-specific> option to transmit -4, --ipv4 use IPv4 addresses only -6, --ipv6 use IPv6 addresses only\",\"push 命令将本地仓库的改动推送到远程仓库。如 Github, Gitee, Gitlab 。\",\"git push origin main # 推送 main 分支到 origin 仓库 git push -d origin main # 删除 origin 仓库的 main 分支，(其中默认分支和受保护的分支不能被删除) git push origin 'tag name' # 推送单个标签 git push origin --tags # 推送全部标签到 origin 仓库 git push origin :refs/tags/'tag name' # 删除 origin 仓库的标签，需要先执行 git tag -d 'tag name'\"]},\"16\":{\"h\":\"rebase\",\"t\":[\"git rebase -h\",\"usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase> | --keep-base] [<upstream> [<branch>]] or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>] or: git rebase --continue | --abort | --skip | --edit-todo --onto <revision> rebase onto given branch instead of upstream --keep-base use the merge-base of upstream and branch as the current base --no-verify allow pre-rebase hook to run -q, --quiet be quiet. implies --no-stat -v, --verbose display a diffstat of what changed upstream -n, --no-stat do not show diffstat of what changed upstream --signoff add a Signed-off-by trailer to each commit --committer-date-is-author-date make committer date match author date --reset-author-date ignore author date and use current date -C <n> passed to 'git apply' --ignore-whitespace ignore changes in whitespace --whitespace <action> passed to 'git apply' -f, --force-rebase cherry-pick all commits, even if unchanged --no-ff cherry-pick all commits, even if unchanged --continue continue --skip skip current patch and continue --abort abort and check out the original branch --quit abort but keep HEAD where it is --edit-todo edit the todo list during an interactive rebase --show-current-patch show the patch file being applied or merged --apply use apply strategies to rebase -m, --merge use merging strategies to rebase -i, --interactive let the user edit the list of commits to rebase --rerere-autoupdate update the index with reused conflict resolution if possible --empty <{drop,keep,ask}> how to handle commits that become empty --autosquash move commits that begin with squash!/fixup! under -i --update-refs update branches that point to commits that are being rebased -S, --gpg-sign[=<key-id>] GPG-sign commits --autostash automatically stash/stash pop before and after -x, --exec <exec> add exec lines after each commit of the editable list -r, --rebase-merges[=<mode>] try to rebase merges instead of skipping them --fork-point use 'merge-base --fork-point' to refine upstream -s, --strategy <strategy> use the given merge strategy -X, --strategy-option <option> pass the argument through to the merge strategy --root rebase all reachable commits up to the root(s) --reschedule-failed-exec automatically re-schedule any `exec` that fails --reapply-cherry-picks apply all changes, even those already present upstream\"]},\"17\":{\"h\":\"remote\",\"t\":[\"git remote -h\",\"usage: git remote [-v | --verbose] or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url> or: git remote rename <old> <new> or: git remote remove <name> or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>) or: git remote [-v | --verbose] show [-n] <name> or: git remote prune [-n | --dry-run] <name> or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...] or: git remote set-branches [--add] <name> <branch>... or: git remote get-url [--push] [--all] <name> or: git remote set-url [--push] <name> <newurl> [<oldurl>] or: git remote set-url --add <name> <newurl> or: git remote set-url --delete <name> <url> -v, --verbose be verbose; must be placed before a subcommand\",\"本地仓库关联到远程仓库的信息，使用 remote 管理。配置信息保存在 .git/config。 常用命令如下：\",\"git remote -v # 检查 remote 信息 # 添加 GitHub 地址， 使用 git push github main 推送 git remote add github git@github.com:flueky/docs.git # 重命名 github 到 origin，后续使用 origin 推送代码 git remote rename github origin # 删除这个分支 git remote remove github\"]},\"18\":{\"h\":\"reset\",\"t\":[\"git reset -h\",\"usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>] or: git reset [-q] [<tree-ish>] [--] <pathspec>... or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [<tree-ish>] or: git reset --patch [<tree-ish>] [--] [<pathspec>...] -q, --quiet be quiet, only report errors --no-refresh skip refreshing the index after reset --mixed reset HEAD and index --soft reset only HEAD --hard reset HEAD, index and working tree --merge reset HEAD, index and working tree --keep reset HEAD but keep local changes --recurse-submodules[=<reset>] control recursive updating of submodules -p, --patch select hunks interactively -N, --intent-to-add record only the fact that removed paths will be added later --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"19\":{\"h\":\"revert\",\"t\":[\"git revert -h\",\"usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>... or: git revert (--continue | --skip | --abort | --quit) --quit end revert or cherry-pick sequence --continue resume revert or cherry-pick sequence --abort cancel revert or cherry-pick sequence --skip skip current commit and continue --cleanup <mode> how to strip spaces and #comments from message -n, --no-commit don't automatically commit -e, --edit edit the commit message -s, --signoff add a Signed-off-by trailer -m, --mainline <parent-number> select mainline parent --rerere-autoupdate update the index with reused conflict resolution if possible --strategy <strategy> merge strategy -X, --strategy-option <option> option for merge strategy -S, --gpg-sign[=<key-id>] GPG sign commit --reference use the 'reference' format to refer to commits\"]},\"20\":{\"h\":\"rm\",\"t\":[\"git rm -h\",\"usage: git rm [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch] [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...] -n, --dry-run dry run -q, --quiet do not list removed files --cached only remove from the index -f, --force override the up-to-date check -r allow recursive removal --ignore-unmatch exit with a zero status even if nothing matched --sparse allow updating entries outside of the sparse-checkout cone --pathspec-from-file <file> read pathspec from file --pathspec-file-nul with --pathspec-from-file, pathspec elements are separated with NUL character\"]},\"21\":{\"h\":\"stash\",\"t\":[\"git stash -h\",\"usage: git stash list [<log-options>] or: git stash show [-u | --include-untracked | --only-untracked] [<diff-options>] [<stash>] or: git stash drop [-q | --quiet] [<stash>] or: git stash pop [--index] [-q | --quiet] [<stash>] or: git stash apply [--index] [-q | --quiet] [<stash>] or: git stash branch <branchname> [<stash>] or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [(-m | --message) <message>] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...]] or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet] [-u | --include-untracked] [-a | --all] [<message>] or: git stash clear or: git stash create [<message>] or: git stash store [(-m | --message) <message>] [-q | --quiet] <commit>\",\"stash 命令将未提交的更改保存到 临时堆栈，（暂时保存在本地仓库中，可撤回）。以便能够切换分支或执行其他操作，但不丢失未提交的工作。\",\"未提交的更改包括：工作区的更改，和暂存区的更改。\",\"git stash list # 查看全部暂存的记录 git stash pop # 取出最近暂存的修改记录 git stash drop # 丢弃最近暂存的修改记录\",\"提示\",\"执行 git stash pop 后，如遇到和工作区的改动存在冲突，则会保留栈顶的记录。待解决冲突后，需要执行 git stash drop。\"]},\"22\":{\"h\":\"status\",\"t\":[\"git status -h\",\"usage: git status [<options>] [--] [<pathspec>...] -v, --verbose be verbose -s, --short show status concisely -b, --branch show branch information --show-stash show stash information --ahead-behind compute full ahead/behind values --porcelain[=<version>] machine-readable output --long show status in long format (default) -z, --null terminate entries with NUL -u, --untracked-files[=<mode>] show untracked files, optional modes: all, normal, no. (Default: all) --ignored[=<mode>] show ignored files, optional modes: traditional, matching, no. (Default: traditional) --ignore-submodules[=<when>] ignore changes to submodules, optional when: all, dirty, untracked. (Default: all) --column[=<style>] list untracked files in columns --no-renames do not detect renames -M, --find-renames[=<n>] detect renames, optionally set similarity index\"]},\"23\":{\"h\":\"switch\",\"t\":[\"git switch -h\",\"usage: git switch [<options>] [<branch>] -c, --create <branch> create and switch to a new branch -C, --force-create <branch> create/reset and switch to a branch --guess second guess 'git switch <no-such-branch>' --discard-changes throw away local modifications -q, --quiet suppress progress reporting --recurse-submodules[=<checkout>] control recursive updating of submodules --progress force progress reporting -m, --merge perform a 3-way merge with the new branch --conflict <style> conflict style (merge, diff3, or zdiff3) -d, --detach detach HEAD at named commit -t, --track[=(direct|inherit)] set branch tracking configuration -f, --force force checkout (throw away local modifications) --orphan <new-branch> new unparented branch --overwrite-ignore update ignored files (default) --ignore-other-worktrees do not check if another worktree is holding the given ref\"]},\"24\":{\"h\":\"tag\",\"t\":[\"git tag -h\",\"usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] [-e] <tagname> [<commit> | <object>] or: git tag -d <tagname>... or: git tag [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>] [--points-at <object>] [--column[=<options>] | --no-column] [--create-reflog] [--sort=<key>] [--format=<format>] [--merged <commit>] [--no-merged <commit>] [<pattern>...] or: git tag -v [--format=<format>] <tagname>... -l, --list list tag names -n[<n>] print <n> lines of each tag message -d, --delete delete tags -v, --verify verify tags Tag creation options -a, --annotate annotated tag, needs a message -m, --message <message> tag message -F, --file <file> read message from file -e, --edit force edit of tag message -s, --sign annotated and GPG-signed tag --cleanup <mode> how to strip spaces and #comments from message -u, --local-user <key-id> use another key to sign the tag -f, --force replace the tag if exists --create-reflog create a reflog Tag listing options --column[=<style>] show tag list in columns --contains <commit> print only tags that contain the commit --no-contains <commit> print only tags that don't contain the commit --merged <commit> print only tags that are merged --no-merged <commit> print only tags that are not merged --sort <key> field name to sort on --points-at <object> print only tags of the object --format <format> format to use for the output --color[=<when>] respect format colors -i, --ignore-case sorting and filtering are case insensitive\",\"tag 命令对提交记录添加标签标识。 如每次发行版本之后，对最新的提交记录打上标签。\",\"git tag -a 'tag name' -m 'tag message' # 对最新的提交添加 tag name, 并记为 tag message git tag 'tag name' 'commit id' # 对指定的提交记录添加 tag name，而后需要动态输入 tag message git tag -l # 列出全部 tag name git tag -n # 列出全部 tag name 和 tag message git tag -d 'tag name' # 删除指定的 tag\"]},\"25\":{\"c\":[\"Git\"]},\"26\":{\"h\":\"Vuepress Markdown 语法\"},\"27\":{\"h\":\"示例\"},\"28\":{\"h\":\"标题\"},\"29\":{\"h\":\"文本\"},\"30\":{\"h\":\"列表\"},\"31\":{\"h\":\"引用\"},\"32\":{\"h\":\"代码块\"},\"33\":{\"h\":\"链接\"},\"34\":{\"h\":\"图像\"},\"35\":{\"h\":\"注脚\"},\"36\":{\"h\":\"上标下标\"},\"37\":{\"h\":\"表格\"},\"38\":{\"h\":\"分割线\"},\"39\":{\"h\":\"数学公式\"},\"40\":{\"h\":\"警告\"},\"41\":{\"h\":\"提示\"},\"42\":{\"h\":\"标签\"},\"43\":{\"h\":\"自定义对齐\"},\"44\":{\"h\":\"思维导图\"},\"45\":{\"h\":\"流程图\",\"t\":[\"注脚解释1。 ↩︎\",\"注脚解释2。 ↩︎\"]},\"46\":{\"c\":[\"Markdown\"]},\"47\":{\"h\":\"Ubuntu 开箱配置\",\"t\":[\"记录 Ubuntu 从零到一的开箱配置。\"]},\"48\":{\"h\":\"用户与组\",\"t\":[\"sudo useradd -m -s /bin/bash zkf # 新增用户 zkf sudo usermod -a -G sudo zkf # 将 zkf 添加到 sudo 组 # 上述两行命令可以合并成一行 sudo useradd -m -G wheel -s /bin/bash zkf sudo passwd zkf # 设置/修改 zkf 密码\"]},\"49\":{\"h\":\"编辑器\",\"t\":[\"sudo update-alternatives --config editor\"]},\"50\":{\"h\":\"挂载硬盘\",\"t\":[\"sudo mount /dev/sda1 /media/data # 将 sda1 分区挂载到 /media/data\"]},\"51\":{\"h\":\"设置快捷方式\",\"t\":[\"ln -sf /media/data ~/workspace # 对 /media/data 设置链接\"]},\"52\":{\"h\":\"Git\"},\"53\":{\"h\":\"安装\",\"t\":[\"sudo apt install git\"]},\"54\":{\"h\":\"配置\",\"t\":[\"git config --global user.name \\\"your name\\\" git config --global user.email \\\"your email\\\" git config --global core.autocrlf input\"]},\"55\":{\"h\":\"GPG\"},\"56\":{\"h\":\"配置\",\"t\":[\"gpg --full-gen-key # 选择 rsa，4096，失效日期，姓名和邮箱地址（注意和 git config 设置的一致） gpg --list-secret-keys --keyid-format LONG \\\"your email\\\" # 列出 Key 信息。 # sec rsa4096/F212D2CFEBF50880 2024-04-20 [SC] 中，是 F212D2CFEBF50880 key id gpg --armor --export F212D2CFEBF50880 # 导出公钥，配置到 gitlab GPG Keys 页面。 git config --global user.signingkey F212D2CFEBF50880 # 告诉 git，使用此密钥签名 git config --global commit.gpgsign true # 设置默认使用 GPG key 签名\"]},\"57\":{\"h\":\"Python\",\"t\":[\"sudo apt install python3 # 安装 python\",\"python 通过 pip 管理安装包的依赖关系。安装 pip 有两种方式。\"]},\"58\":{\"h\":\"virtual env\",\"t\":[\"sudo apt install python3-venv # 安装 virtual env python3 -m venv \\\"virtual env name\\\" # 创建虚拟环境\"]},\"59\":{\"h\":\"get-pip\",\"t\":[\"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python3 get-pip.py # 安装 pip rm -rf get-pip.py\"]},\"60\":{\"c\":[\"Others\"]},\"61\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"虚拟环境\",{\"1\":{\"58\":1}}],[\"方式\",{\"1\":{\"57\":1}}],[\"两种\",{\"1\":{\"57\":1}}],[\"两行\",{\"1\":{\"48\":1}}],[\"有\",{\"1\":{\"57\":1}}],[\"关系\",{\"1\":{\"57\":1}}],[\"关联\",{\"1\":{\"17\":1}}],[\"依赖\",{\"1\":{\"57\":1}}],[\"通过\",{\"1\":{\"57\":1}}],[\"通常\",{\"1\":{\"12\":1}}],[\"密钥\",{\"1\":{\"56\":1}}],[\"密码\",{\"1\":{\"48\":1}}],[\"此\",{\"1\":{\"56\":1}}],[\"告诉\",{\"1\":{\"56\":1}}],[\"页面\",{\"1\":{\"56\":1}}],[\"公钥\",{\"1\":{\"56\":1}}],[\"导出\",{\"1\":{\"56\":1}}],[\"导图\",{\"0\":{\"44\":1}}],[\"注意\",{\"1\":{\"56\":1}}],[\"注脚\",{\"0\":{\"35\":1},\"1\":{\"45\":2}}],[\"邮箱地址\",{\"1\":{\"56\":1}}],[\"姓名\",{\"1\":{\"56\":1}}],[\"日期\",{\"1\":{\"56\":1}}],[\"失效\",{\"1\":{\"56\":1}}],[\"选择\",{\"1\":{\"56\":1}}],[\"your\",{\"1\":{\"54\":2,\"56\":1}}],[\"yes\",{\"1\":{\"15\":1}}],[\"安装包\",{\"1\":{\"57\":1}}],[\"安装\",{\"0\":{\"53\":1},\"1\":{\"57\":2,\"58\":1,\"59\":1}}],[\"快捷方式\",{\"0\":{\"51\":1}}],[\"硬盘\",{\"0\":{\"50\":1}}],[\"挂载\",{\"0\":{\"50\":1},\"1\":{\"50\":1}}],[\"编辑器\",{\"0\":{\"49\":1}}],[\"成\",{\"1\":{\"48\":1}}],[\"上述\",{\"1\":{\"48\":1}}],[\"上标\",{\"0\":{\"36\":1}}],[\"新增\",{\"1\":{\"48\":1}}],[\"组\",{\"0\":{\"48\":1},\"1\":{\"48\":1}}],[\"与\",{\"0\":{\"48\":1}}],[\"零到\",{\"1\":{\"47\":1}}],[\"从\",{\"1\":{\"47\":1}}],[\"开箱\",{\"0\":{\"47\":1},\"1\":{\"47\":1}}],[\"开发者\",{\"1\":{\"11\":1}}],[\"︎\",{\"1\":{\"45\":2}}],[\"↩\",{\"1\":{\"45\":2}}],[\"流程图\",{\"0\":{\"45\":1}}],[\"思维\",{\"0\":{\"44\":1}}],[\"自定义\",{\"0\":{\"43\":1}}],[\"自己\",{\"1\":{\"11\":1}}],[\"警告\",{\"0\":{\"40\":1}}],[\"数学公式\",{\"0\":{\"39\":1}}],[\"表格\",{\"0\":{\"37\":1}}],[\"图像\",{\"0\":{\"34\":1}}],[\"图形\",{\"1\":{\"12\":1}}],[\"链接\",{\"0\":{\"33\":1},\"1\":{\"51\":1}}],[\"块\",{\"0\":{\"32\":1}}],[\"引用\",{\"0\":{\"31\":1}}],[\"列表\",{\"0\":{\"30\":1}}],[\"列出\",{\"1\":{\"24\":2,\"56\":1}}],[\"文本\",{\"0\":{\"29\":1}}],[\"文件\",{\"1\":{\"1\":3,\"12\":1}}],[\"示例\",{\"0\":{\"27\":1}}],[\"语法\",{\"0\":{\"26\":1}}],[\"输入\",{\"1\":{\"24\":1}}],[\"输出\",{\"1\":{\"12\":2}}],[\"动态\",{\"1\":{\"24\":1}}],[\"而后\",{\"1\":{\"24\":1}}],[\"记为\",{\"1\":{\"24\":1}}],[\"记录\",{\"1\":{\"0\":1,\"7\":2,\"12\":4,\"21\":4,\"24\":3,\"47\":1}}],[\"打上\",{\"1\":{\"24\":1}}],[\"最新\",{\"1\":{\"24\":2}}],[\"最近\",{\"1\":{\"12\":1,\"21\":2}}],[\"版本\",{\"1\":{\"24\":1}}],[\"发行\",{\"1\":{\"24\":1}}],[\"对齐\",{\"0\":{\"43\":1}}],[\"对\",{\"1\":{\"24\":4,\"51\":1}}],[\"解决\",{\"1\":{\"21\":1}}],[\"解释\",{\"0\":{\"0\":1},\"1\":{\"45\":2}}],[\"待\",{\"1\":{\"21\":1}}],[\"栈顶\",{\"1\":{\"21\":1}}],[\"会\",{\"1\":{\"21\":1}}],[\"则\",{\"1\":{\"21\":1}}],[\"冲突\",{\"1\":{\"21\":2}}],[\"存在\",{\"1\":{\"21\":1}}],[\"存储\",{\"1\":{\"8\":3}}],[\"遇到\",{\"1\":{\"21\":1}}],[\"后\",{\"1\":{\"21\":2}}],[\"后续\",{\"1\":{\"17\":1}}],[\"提示\",{\"0\":{\"41\":1},\"1\":{\"21\":1}}],[\"提交者\",{\"1\":{\"12\":1}}],[\"提交\",{\"1\":{\"1\":1,\"7\":4,\"11\":2,\"12\":10,\"21\":3,\"24\":4}}],[\"丢弃\",{\"1\":{\"21\":1}}],[\"丢失\",{\"1\":{\"21\":1}}],[\"取出\",{\"1\":{\"21\":1}}],[\"包括\",{\"1\":{\"21\":1}}],[\"包含\",{\"1\":{\"12\":2}}],[\"不\",{\"1\":{\"21\":1}}],[\"不能\",{\"1\":{\"15\":1}}],[\"但\",{\"1\":{\"21\":1}}],[\"操作\",{\"1\":{\"21\":1}}],[\"其他\",{\"1\":{\"21\":1}}],[\"其中\",{\"1\":{\"15\":1}}],[\"或\",{\"1\":{\"21\":1}}],[\"切换\",{\"1\":{\"21\":1}}],[\"能够\",{\"1\":{\"21\":1}}],[\"以便\",{\"1\":{\"21\":1}}],[\"以下\",{\"1\":{\"11\":1}}],[\"）\",{\"1\":{\"21\":1,\"56\":1}}],[\"暂存\",{\"1\":{\"21\":3}}],[\"暂存区\",{\"1\":{\"1\":1,\"7\":1,\"21\":1}}],[\"暂时\",{\"1\":{\"21\":1}}],[\"（\",{\"1\":{\"21\":1,\"56\":1}}],[\"堆栈\",{\"1\":{\"21\":1}}],[\"临时\",{\"1\":{\"21\":1}}],[\"未\",{\"1\":{\"21\":3}}],[\"这个\",{\"1\":{\"17\":1}}],[\"重命名\",{\"1\":{\"17\":1}}],[\"地址\",{\"1\":{\"17\":1}}],[\"检查\",{\"1\":{\"17\":1}}],[\"：\",{\"1\":{\"17\":1,\"21\":1}}],[\"管理\",{\"1\":{\"17\":1,\"57\":1}}],[\"!\",{\"1\":{\"16\":2}}],[\"}\",{\"1\":{\"16\":1}}],[\"{\",{\"1\":{\"16\":1}}],[\"先\",{\"1\":{\"15\":1}}],[\"需要\",{\"1\":{\"15\":1,\"21\":1,\"24\":1}}],[\"标题\",{\"0\":{\"28\":1}}],[\"标识\",{\"1\":{\"24\":1}}],[\"标签\",{\"0\":{\"42\":1},\"1\":{\"15\":3,\"24\":2}}],[\"标准\",{\"1\":{\"12\":1}}],[\"单个\",{\"1\":{\"15\":1}}],[\"被\",{\"1\":{\"15\":1}}],[\"保留\",{\"1\":{\"21\":1}}],[\"保护\",{\"1\":{\"15\":1}}],[\"保存\",{\"1\":{\"1\":1,\"17\":1,\"21\":2}}],[\"受\",{\"1\":{\"15\":1}}],[\"删除\",{\"1\":{\"15\":3,\"17\":1,\"24\":1}}],[\"推送\",{\"1\":{\"15\":4,\"17\":2}}],[\"次\",{\"1\":{\"12\":1}}],[\"统计\",{\"1\":{\"12\":1}}],[\"每次\",{\"1\":{\"12\":1,\"24\":1}}],[\"每个\",{\"1\":{\"12\":1}}],[\"结合\",{\"1\":{\"12\":1}}],[\"差异\",{\"1\":{\"12\":1}}],[\"形式\",{\"1\":{\"12\":1}}],[\"补丁\",{\"1\":{\"12\":1}}],[\"之前\",{\"1\":{\"12\":1}}],[\"之后\",{\"1\":{\"12\":1,\"24\":1}}],[\"时间\",{\"1\":{\"12\":2}}],[\"04\",{\"1\":{\"56\":1}}],[\"02\",{\"1\":{\"12\":1}}],[\"01\",{\"1\":{\"12\":1}}],[\"0.0\",{\"1\":{\"4\":2}}],[\"信息\",{\"1\":{\"12\":4,\"17\":3,\"56\":1}}],[\"显示\",{\"1\":{\"12\":7}}],[\"只\",{\"1\":{\"12\":1}}],[\"简化\",{\"1\":{\"12\":1}}],[\"远\",{\"1\":{\"12\":1}}],[\"远程\",{\"1\":{\"11\":1,\"15\":1,\"17\":1}}],[\"由近\",{\"1\":{\"12\":1}}],[\"格式\",{\"1\":{\"12\":1}}],[\"按照\",{\"1\":{\"12\":1}}],[\"查看\",{\"1\":{\"12\":3,\"21\":1}}],[\"实例\",{\"1\":{\"11\":1}}],[\"是\",{\"1\":{\"11\":1,\"56\":1}}],[\"如下\",{\"1\":{\"17\":1}}],[\"如\",{\"1\":{\"11\":1,\"15\":1,\"21\":1,\"24\":1}}],[\"服务\",{\"1\":{\"11\":1}}],[\"用于\",{\"1\":{\"11\":1}}],[\"用\",{\"1\":{\"11\":1}}],[\"用户名\",{\"1\":{\"11\":1}}],[\"用户\",{\"0\":{\"48\":1},\"1\":{\"8\":1,\"11\":1,\"48\":1}}],[\"主要\",{\"1\":{\"11\":1}}],[\"带\",{\"1\":{\"11\":1}}],[\"都\",{\"1\":{\"11\":1}}],[\"裸\",{\"1\":{\"11\":4}}],[\"分区\",{\"1\":{\"50\":1}}],[\"分割线\",{\"0\":{\"38\":1}}],[\"分支\",{\"1\":{\"11\":1,\"15\":4,\"17\":1,\"21\":1}}],[\"分系统\",{\"1\":{\"8\":1}}],[\"默认\",{\"1\":{\"11\":2,\"12\":1,\"15\":1,\"56\":1}}],[\"为\",{\"1\":{\"11\":1}}],[\"目录\",{\"1\":{\"11\":2}}],[\"空\",{\"1\":{\"11\":1}}],[\"创建\",{\"1\":{\"11\":7,\"58\":1}}],[\"10\",{\"1\":{\"12\":2}}],[\"1\",{\"1\":{\"10\":1,\"45\":1}}],[\";\",{\"1\":{\"9\":1,\"17\":1}}],[\"k\",{\"1\":{\"9\":1,\"10\":1,\"14\":1,\"21\":2}}],[\"keep\",{\"1\":{\"5\":2,\"9\":2,\"10\":1,\"14\":2,\"16\":4,\"18\":3,\"21\":2}}],[\"keys\",{\"1\":{\"56\":2}}],[\"keyid\",{\"1\":{\"5\":1,\"7\":1,\"19\":1,\"56\":1}}],[\"key\",{\"1\":{\"3\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1,\"24\":5,\"56\":4}}],[\"_\",{\"1\":{\"9\":2,\"14\":1}}],[\"设置\",{\"0\":{\"51\":1},\"1\":{\"8\":1,\"48\":1,\"51\":1,\"56\":2}}],[\"建议\",{\"1\":{\"8\":1}}],[\"转换\",{\"1\":{\"8\":1}}],[\"@\",{\"1\":{\"8\":1,\"11\":1,\"17\":1}}],[\"~\",{\"1\":{\"8\":1,\"51\":1}}],[\"位置\",{\"1\":{\"8\":1}}],[\"给出\",{\"1\":{\"8\":1}}],[\"级别\",{\"1\":{\"8\":1}}],[\"三个\",{\"1\":{\"8\":2}}],[\"环境\",{\"1\":{\"8\":1,\"11\":1}}],[\"配置文件\",{\"1\":{\"8\":1}}],[\"配置\",{\"0\":{\"47\":1,\"54\":1,\"56\":1},\"1\":{\"8\":3,\"17\":1,\"47\":1,\"56\":1}}],[\"\\\"\",{\"1\":{\"8\":8,\"54\":4,\"56\":2,\"58\":2}}],[\"和\",{\"1\":{\"7\":1,\"12\":2,\"15\":1,\"21\":2,\"24\":1,\"56\":2}}],[\"执行\",{\"1\":{\"7\":1,\"11\":1,\"15\":1,\"21\":3}}],[\"合并\",{\"1\":{\"7\":1,\"48\":1}}],[\"签名\",{\"1\":{\"7\":1,\"56\":2}}],[\"使用\",{\"1\":{\"7\":1,\"11\":1,\"12\":1,\"17\":3,\"56\":2}}],[\"修改\",{\"1\":{\"7\":1,\"12\":1,\"21\":2,\"48\":1}}],[\"同时\",{\"1\":{\"7\":1}}],[\"可以\",{\"1\":{\"48\":1}}],[\"可撤回\",{\"1\":{\"21\":1}}],[\"可\",{\"1\":{\"7\":1,\"12\":1}}],[\"可用\",{\"1\":{\"1\":1}}],[\"改动\",{\"1\":{\"7\":1,\"15\":1,\"21\":1}}],[\"追加\",{\"1\":{\"7\":1}}],[\"一致\",{\"1\":{\"56\":1}}],[\"一行\",{\"1\":{\"48\":1}}],[\"一\",{\"1\":{\"47\":1}}],[\"一次\",{\"1\":{\"7\":1}}],[\"一个\",{\"1\":{\"7\":1,\"11\":1}}],[\"向上\",{\"1\":{\"7\":1}}],[\"代码\",{\"0\":{\"32\":1},\"1\":{\"7\":1,\"11\":2,\"17\":1}}],[\"生成\",{\"1\":{\"7\":1}}],[\"并\",{\"1\":{\"7\":1,\"11\":1,\"24\":1}}],[\"仓库\",{\"1\":{\"7\":2,\"8\":1,\"11\":11,\"15\":6,\"17\":2,\"21\":1}}],[\"本地\",{\"1\":{\"7\":2,\"15\":1,\"17\":1,\"21\":1}}],[\"内容\",{\"1\":{\"7\":1}}],[\"6\",{\"1\":{\"6\":1,\"9\":1,\"14\":1,\"15\":1}}],[\"404\",{\"1\":{\"61\":1}}],[\"4096\",{\"1\":{\"56\":1}}],[\"4\",{\"1\":{\"6\":1,\"9\":1,\"14\":1,\"15\":1}}],[\"jobs\",{\"1\":{\"6\":1,\"9\":1,\"14\":1}}],[\"j\",{\"1\":{\"6\":1,\"9\":1,\"14\":1}}],[\"just\",{\"1\":{\"1\":1}}],[\"52\",{\"1\":{\"4\":2}}],[\"20\",{\"1\":{\"56\":1}}],[\"2024\",{\"1\":{\"12\":2,\"56\":1}}],[\"2\",{\"1\":{\"4\":1,\"45\":1}}],[\"=\",{\"1\":{\"3\":4,\"4\":2,\"5\":1,\"6\":3,\"7\":7,\"8\":1,\"9\":1,\"10\":4,\"11\":5,\"13\":3,\"14\":7,\"15\":2,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":6,\"23\":2,\"24\":6}}],[\"g\",{\"1\":{\"48\":2}}],[\"grep\",{\"1\":{\"12\":1}}],[\"graph\",{\"1\":{\"9\":2,\"12\":1}}],[\"group\",{\"1\":{\"9\":2,\"17\":1}}],[\"gc\",{\"1\":{\"9\":1}}],[\"gen\",{\"1\":{\"56\":1}}],[\"generating\",{\"1\":{\"10\":1}}],[\"generate\",{\"1\":{\"10\":2}}],[\"generic\",{\"1\":{\"3\":1}}],[\"get\",{\"0\":{\"59\":1},\"1\":{\"8\":11,\"17\":1,\"59\":4}}],[\"global\",{\"1\":{\"8\":7,\"54\":3,\"56\":2}}],[\"gpgsign\",{\"1\":{\"56\":1}}],[\"gpg\",{\"0\":{\"55\":1},\"1\":{\"5\":2,\"7\":3,\"13\":3,\"14\":3,\"15\":1,\"16\":2,\"19\":2,\"24\":1,\"56\":5}}],[\"guess\",{\"1\":{\"4\":2,\"23\":2}}],[\"give\",{\"1\":{\"3\":1}}],[\"given\",{\"1\":{\"2\":2,\"4\":1,\"8\":3,\"16\":2,\"23\":1}}],[\"gitlab\",{\"1\":{\"15\":1,\"56\":1}}],[\"gitee\",{\"1\":{\"11\":1,\"15\":1}}],[\"github\",{\"1\":{\"11\":1,\"15\":1,\"17\":7}}],[\"gitconfig\",{\"1\":{\"8\":2}}],[\"gitdir\",{\"1\":{\"6\":1,\"11\":1}}],[\"gitignore\",{\"1\":{\"1\":1}}],[\"git\",{\"0\":{\"0\":1,\"52\":1},\"1\":{\"0\":1,\"1\":5,\"2\":3,\"3\":12,\"4\":6,\"5\":3,\"6\":5,\"7\":8,\"8\":7,\"9\":8,\"10\":2,\"11\":14,\"12\":10,\"13\":4,\"14\":5,\"15\":9,\"16\":6,\"17\":22,\"18\":5,\"19\":3,\"20\":2,\"21\":17,\"22\":2,\"23\":3,\"24\":10,\"53\":1,\"54\":3,\"56\":4},\"2\":{\"25\":1}}],[\"quit\",{\"1\":{\"5\":2,\"13\":1,\"16\":1,\"19\":2}}],[\"quiet\",{\"1\":{\"2\":2,\"3\":1,\"4\":1,\"6\":2,\"7\":1,\"9\":2,\"10\":1,\"11\":3,\"13\":2,\"14\":2,\"15\":2,\"16\":2,\"18\":2,\"20\":2,\"21\":6,\"23\":1}}],[\"q\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"6\":1,\"7\":1,\"9\":1,\"10\":1,\"11\":2,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"18\":4,\"20\":1,\"21\":6,\"23\":1}}],[\"*\",{\"1\":{\"2\":1}}],[\"zkf\",{\"1\":{\"48\":7}}],[\"zuo\",{\"1\":{\"11\":2,\"12\":1}}],[\"zdiff3\",{\"1\":{\"4\":1,\"23\":1}}],[\"zero\",{\"1\":{\"2\":1,\"10\":2,\"20\":1}}],[\"z\",{\"1\":{\"2\":1,\"7\":1,\"8\":1,\"22\":1}}],[\"3\",{\"1\":{\"2\":2,\"4\":2,\"23\":1}}],[\"/\",{\"1\":{\"2\":2,\"3\":3,\"4\":2,\"7\":4,\"8\":5,\"9\":5,\"10\":2,\"12\":2,\"13\":1,\"14\":4,\"15\":3,\"16\":2,\"17\":2,\"22\":1,\"23\":1,\"48\":5,\"50\":6,\"51\":5,\"56\":1,\"59\":3}}],[\"`\",{\"1\":{\"2\":2,\"16\":2}}],[\"must\",{\"1\":{\"17\":1}}],[\"multiple\",{\"1\":{\"9\":3,\"10\":1}}],[\"msg\",{\"1\":{\"7\":2,\"13\":1,\"14\":1,\"24\":1}}],[\"mixed\",{\"1\":{\"18\":2}}],[\"mirror\",{\"1\":{\"6\":2,\"15\":3,\"17\":1}}],[\"missing\",{\"1\":{\"1\":2,\"2\":1,\"8\":1,\"15\":1}}],[\"media\",{\"1\":{\"50\":2,\"51\":2}}],[\"merging\",{\"1\":{\"13\":1,\"14\":3,\"16\":1}}],[\"merges\",{\"1\":{\"14\":1,\"16\":2}}],[\"merged\",{\"1\":{\"3\":8,\"16\":1,\"24\":6}}],[\"merge\",{\"0\":{\"13\":1},\"1\":{\"2\":1,\"4\":3,\"5\":2,\"13\":16,\"14\":8,\"16\":5,\"18\":2,\"19\":2,\"23\":3}}],[\"messaging\",{\"1\":{\"10\":1}}],[\"message\",{\"1\":{\"5\":3,\"7\":19,\"10\":3,\"12\":1,\"13\":7,\"14\":3,\"19\":2,\"21\":6,\"24\":12}}],[\"messages\",{\"1\":{\"3\":1,\"5\":1}}],[\"me\",{\"1\":{\"7\":1}}],[\"m\",{\"1\":{\"3\":5,\"4\":1,\"5\":2,\"7\":6,\"9\":1,\"10\":1,\"13\":1,\"16\":1,\"17\":1,\"19\":2,\"21\":2,\"22\":1,\"23\":1,\"24\":3,\"48\":2,\"58\":1}}],[\"mount\",{\"1\":{\"50\":1}}],[\"most\",{\"1\":{\"13\":1,\"14\":1}}],[\"modify\",{\"1\":{\"9\":1}}],[\"modifications\",{\"1\":{\"4\":1,\"23\":2}}],[\"modified\",{\"1\":{\"2\":1}}],[\"modes\",{\"1\":{\"7\":1,\"22\":2}}],[\"mode\",{\"1\":{\"4\":1,\"5\":1,\"7\":4,\"10\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1,\"22\":2,\"24\":1}}],[\"move\",{\"1\":{\"3\":4,\"16\":1}}],[\"more\",{\"1\":{\"2\":2,\"6\":2,\"9\":2,\"13\":2,\"14\":2,\"15\":2}}],[\"master\",{\"1\":{\"17\":1}}],[\"mail\",{\"1\":{\"10\":2}}],[\"main\",{\"1\":{\"11\":3,\"15\":4,\"17\":1}}],[\"maintenance\",{\"1\":{\"9\":3}}],[\"mainline\",{\"1\":{\"5\":2,\"19\":2}}],[\"max\",{\"1\":{\"10\":2}}],[\"machine\",{\"1\":{\"7\":1,\"15\":1,\"22\":1}}],[\"matched\",{\"1\":{\"20\":1}}],[\"matches\",{\"1\":{\"8\":1}}],[\"match\",{\"1\":{\"2\":1,\"16\":1}}],[\"matching\",{\"1\":{\"2\":2,\"8\":1,\"10\":1,\"22\":1}}],[\"markdown\",{\"0\":{\"26\":1},\"2\":{\"46\":1}}],[\"mark\",{\"1\":{\"2\":1,\"10\":1}}],[\"make\",{\"1\":{\"2\":1,\"6\":1,\"10\":1,\"16\":1}}],[\"made\",{\"1\":{\"2\":1}}],[\"中\",{\"1\":{\"1\":1,\"7\":2,\"12\":1,\"21\":1,\"56\":1}}],[\"在\",{\"1\":{\"1\":1,\"8\":3,\"11\":4,\"12\":1,\"17\":1,\"21\":1}}],[\"即使\",{\"1\":{\"1\":1}}],[\"强制\",{\"1\":{\"1\":1}}],[\"相对路径\",{\"1\":{\"1\":1}}],[\"指定\",{\"1\":{\"1\":2,\"12\":4,\"24\":2}}],[\"全部\",{\"1\":{\"1\":1,\"15\":1,\"21\":1,\"24\":2}}],[\"下标\",{\"0\":{\"36\":1}}],[\"下面\",{\"1\":{\"8\":1,\"11\":1}}],[\"下\",{\"1\":{\"1\":1,\"11\":1}}],[\"当前目录\",{\"1\":{\"1\":1}}],[\"添加\",{\"1\":{\"1\":3,\"17\":1,\"24\":3,\"48\":1}}],[\"#\",{\"1\":{\"1\":3,\"5\":1,\"7\":5,\"8\":1,\"11\":5,\"12\":10,\"13\":1,\"14\":1,\"15\":5,\"17\":4,\"19\":1,\"21\":3,\"24\":6,\"48\":4,\"50\":1,\"51\":1,\"56\":6,\"57\":1,\"58\":2,\"59\":1}}],[\"。\",{\"1\":{\"1\":2,\"7\":3,\"8\":4,\"11\":6,\"12\":10,\"15\":2,\"17\":2,\"21\":5,\"24\":2,\"45\":2,\"47\":1,\"56\":2,\"57\":2}}],[\"准备\",{\"1\":{\"1\":1}}],[\"，\",{\"1\":{\"1\":3,\"7\":2,\"8\":3,\"11\":3,\"12\":4,\"15\":2,\"17\":3,\"21\":7,\"24\":2,\"56\":6}}],[\"到\",{\"1\":{\"1\":1,\"7\":2,\"8\":1,\"11\":1,\"12\":1,\"15\":3,\"17\":2,\"21\":1,\"48\":1,\"50\":1,\"56\":1}}],[\"更改\",{\"1\":{\"1\":1,\"21\":4}}],[\"的\",{\"1\":{\"1\":2,\"8\":3,\"11\":6,\"12\":9,\"15\":4,\"17\":1,\"21\":10,\"24\":4,\"47\":1,\"56\":1,\"57\":1}}],[\"区\",{\"1\":{\"1\":1,\"11\":2,\"21\":2}}],[\"工作\",{\"1\":{\"1\":1,\"8\":1,\"11\":2,\"21\":3}}],[\"将\",{\"1\":{\"1\":1,\"7\":1,\"15\":1,\"21\":1,\"48\":1,\"50\":1}}],[\"ln\",{\"1\":{\"51\":1}}],[\"let\",{\"1\":{\"16\":1}}],[\"letter\",{\"1\":{\"10\":5}}],[\"length\",{\"1\":{\"10\":2}}],[\"lease\",{\"1\":{\"15\":1}}],[\"least\",{\"1\":{\"2\":2}}],[\"leave\",{\"1\":{\"2\":1,\"13\":1}}],[\"leading\",{\"1\":{\"2\":1}}],[\"lf\",{\"1\":{\"8\":1}}],[\"log\",{\"0\":{\"12\":1},\"1\":{\"12\":10,\"13\":1,\"14\":1,\"21\":1}}],[\"lookup\",{\"1\":{\"8\":1}}],[\"location\",{\"1\":{\"8\":1}}],[\"locally\",{\"1\":{\"15\":2}}],[\"localhost\",{\"1\":{\"11\":1}}],[\"local\",{\"1\":{\"3\":1,\"4\":1,\"6\":3,\"8\":3,\"9\":2,\"11\":3,\"14\":1,\"18\":1,\"23\":2,\"24\":1}}],[\"longer\",{\"1\":{\"9\":2,\"14\":1}}],[\"long\",{\"1\":{\"7\":2,\"22\":2,\"56\":1}}],[\"l\",{\"1\":{\"3\":2,\"4\":1,\"6\":1,\"8\":1,\"24\":3}}],[\"linux\",{\"1\":{\"11\":1}}],[\"line\",{\"1\":{\"2\":3,\"8\":1}}],[\"lines\",{\"1\":{\"2\":3,\"16\":1,\"24\":1}}],[\"limit\",{\"1\":{\"4\":1}}],[\"listing\",{\"1\":{\"24\":1}}],[\"list\",{\"1\":{\"3\":4,\"8\":2,\"16\":3,\"20\":1,\"21\":2,\"22\":1,\"24\":3,\"56\":1}}],[\"listed\",{\"1\":{\"1\":1}}],[\"later\",{\"1\":{\"1\":1,\"6\":1,\"18\":1}}],[\"bin\",{\"1\":{\"48\":2}}],[\"binary\",{\"1\":{\"10\":2}}],[\"bits\",{\"1\":{\"4\":1}}],[\"bit\",{\"1\":{\"1\":1}}],[\"bootstrap\",{\"1\":{\"59\":1}}],[\"bool\",{\"1\":{\"8\":5}}],[\"body\",{\"1\":{\"10\":2}}],[\"boundary\",{\"1\":{\"10\":2}}],[\"both\",{\"1\":{\"3\":1}}],[\"blob\",{\"1\":{\"8\":4}}],[\"but\",{\"1\":{\"13\":1,\"15\":1,\"16\":1,\"18\":1}}],[\"bundles\",{\"1\":{\"6\":1}}],[\"bundle\",{\"1\":{\"6\":1}}],[\"build\",{\"1\":{\"2\":2}}],[\"b\",{\"1\":{\"4\":4,\"6\":1,\"11\":3,\"22\":1}}],[\"branchname\",{\"1\":{\"21\":1}}],[\"branches\",{\"1\":{\"3\":8,\"9\":2,\"14\":2,\"16\":1,\"17\":1}}],[\"branch\",{\"0\":{\"3\":1},\"1\":{\"3\":32,\"4\":13,\"6\":7,\"7\":2,\"10\":1,\"11\":5,\"14\":1,\"16\":5,\"17\":3,\"21\":1,\"22\":2,\"23\":10}}],[\"bash\",{\"1\":{\"48\":2}}],[\"base\",{\"1\":{\"10\":2,\"11\":1,\"16\":5}}],[\"based\",{\"1\":{\"2\":1,\"9\":1,\"10\":1,\"14\":1}}],[\"bare\",{\"1\":{\"6\":3,\"11\":3}}],[\"back\",{\"1\":{\"2\":1}}],[\"byte\",{\"1\":{\"8\":1}}],[\"bypass\",{\"1\":{\"7\":2,\"13\":1,\"15\":1}}],[\"by\",{\"1\":{\"2\":1,\"5\":1,\"7\":2,\"10\":2,\"13\":1,\"14\":2,\"16\":1,\"19\":1}}],[\"begin\",{\"1\":{\"16\":1}}],[\"become\",{\"1\":{\"16\":1}}],[\"because\",{\"1\":{\"1\":1}}],[\"being\",{\"1\":{\"16\":2}}],[\"behind\",{\"1\":{\"7\":2,\"22\":2}}],[\"before\",{\"1\":{\"6\":1,\"12\":1,\"13\":2,\"14\":2,\"16\":1,\"17\":1}}],[\"be\",{\"1\":{\"1\":3,\"2\":2,\"6\":4,\"7\":1,\"9\":2,\"11\":3,\"13\":2,\"14\":2,\"15\":5,\"16\":1,\"17\":2,\"18\":2,\"22\":1}}],[\"x\",{\"1\":{\"1\":1,\"5\":3,\"13\":1,\"14\":1,\"16\":2,\"19\":1}}],[\"|\",{\"1\":{\"1\":1,\"3\":7,\"4\":1,\"5\":3,\"7\":10,\"9\":1,\"10\":1,\"11\":2,\"14\":3,\"15\":4,\"16\":4,\"17\":12,\"18\":4,\"19\":3,\"20\":1,\"21\":20,\"23\":1,\"24\":5}}],[\"+\",{\"1\":{\"1\":1,\"10\":1}}],[\"'\",{\"1\":{\"1\":5,\"2\":3,\"3\":2,\"4\":2,\"5\":1,\"6\":7,\"7\":6,\"8\":2,\"9\":4,\"10\":7,\"12\":8,\"15\":7,\"16\":6,\"19\":3,\"23\":2,\"24\":11}}],[\"sf\",{\"1\":{\"51\":1}}],[\"sfx\",{\"1\":{\"10\":2}}],[\"sda1\",{\"1\":{\"50\":2}}],[\"switch\",{\"0\":{\"23\":1},\"1\":{\"23\":5}}],[\"save\",{\"1\":{\"21\":1}}],[\"same\",{\"1\":{\"1\":1}}],[\"soft\",{\"1\":{\"18\":2}}],[\"sorting\",{\"1\":{\"3\":1,\"24\":1}}],[\"sort\",{\"1\":{\"3\":2,\"24\":3}}],[\"sc\",{\"1\":{\"56\":1}}],[\"schedule\",{\"1\":{\"16\":1}}],[\"scope\",{\"1\":{\"8\":2}}],[\"synonym\",{\"1\":{\"13\":1}}],[\"system\",{\"1\":{\"8\":4}}],[\"slot\",{\"1\":{\"8\":2}}],[\"slashes\",{\"1\":{\"2\":1}}],[\"squash\",{\"1\":{\"7\":3,\"13\":1,\"14\":1,\"16\":1}}],[\"similarity\",{\"1\":{\"22\":1}}],[\"simple\",{\"1\":{\"10\":1}}],[\"side\",{\"1\":{\"15\":1}}],[\"single\",{\"1\":{\"6\":1,\"10\":3,\"13\":1,\"14\":1}}],[\"since\",{\"1\":{\"6\":2,\"9\":1,\"10\":1,\"12\":1,\"14\":1}}],[\"signingkey\",{\"1\":{\"56\":1}}],[\"signatures\",{\"1\":{\"13\":1,\"14\":1}}],[\"signature\",{\"1\":{\"10\":5,\"13\":1,\"14\":1}}],[\"sign\",{\"1\":{\"5\":2,\"7\":2,\"13\":2,\"14\":2,\"15\":1,\"16\":2,\"19\":2,\"24\":2}}],[\"signed\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"19\":1,\"24\":1}}],[\"signoff\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1}}],[\"shortlog\",{\"1\":{\"13\":1,\"14\":1}}],[\"short\",{\"1\":{\"7\":1,\"22\":1}}],[\"show\",{\"1\":{\"2\":1,\"3\":3,\"7\":6,\"8\":5,\"9\":1,\"10\":5,\"13\":2,\"14\":3,\"16\":3,\"17\":1,\"21\":1,\"22\":7,\"24\":1}}],[\"shared\",{\"1\":{\"6\":2,\"11\":3}}],[\"shallow\",{\"1\":{\"6\":9,\"9\":8,\"10\":1,\"14\":8}}],[\"store\",{\"1\":{\"10\":1,\"21\":1}}],[\"stdin\",{\"1\":{\"9\":2}}],[\"stdout\",{\"1\":{\"8\":1,\"10\":1}}],[\"strategies\",{\"1\":{\"16\":2}}],[\"strategy\",{\"1\":{\"5\":5,\"13\":5,\"14\":5,\"16\":5,\"19\":5}}],[\"str\",{\"1\":{\"8\":1}}],[\"string\",{\"1\":{\"8\":2}}],[\"strip\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"13\":1,\"14\":1,\"19\":1,\"24\":1}}],[\"styles\",{\"1\":{\"10\":1}}],[\"style\",{\"1\":{\"3\":1,\"4\":2,\"10\":1,\"22\":1,\"23\":2,\"24\":1}}],[\"staged\",{\"1\":{\"21\":2}}],[\"stash\",{\"0\":{\"21\":1},\"1\":{\"13\":2,\"14\":2,\"16\":2,\"21\":23,\"22\":2}}],[\"standard\",{\"1\":{\"8\":1,\"10\":1}}],[\"start\",{\"1\":{\"3\":1,\"10\":2}}],[\"status\",{\"0\":{\"22\":1},\"1\":{\"7\":5,\"15\":1,\"20\":1,\"22\":4}}],[\"stat\",{\"1\":{\"2\":2,\"10\":2,\"12\":1,\"13\":2,\"14\":1,\"16\":2}}],[\"s\",{\"1\":{\"3\":1,\"5\":4,\"6\":2,\"7\":6,\"10\":2,\"13\":2,\"14\":2,\"16\":3,\"19\":4,\"21\":2,\"22\":1,\"24\":2,\"48\":2}}],[\"specify\",{\"1\":{\"9\":1,\"11\":2,\"14\":1}}],[\"specified\",{\"1\":{\"7\":7}}],[\"specific\",{\"1\":{\"3\":1,\"6\":2,\"8\":1,\"9\":1,\"14\":1,\"15\":1}}],[\"spaces\",{\"1\":{\"5\":1,\"7\":1,\"13\":1,\"14\":1,\"19\":1,\"24\":1}}],[\"space\",{\"1\":{\"2\":1}}],[\"sparse\",{\"1\":{\"1\":2,\"4\":1,\"6\":2,\"20\":2}}],[\"sudo\",{\"1\":{\"48\":6,\"49\":1,\"50\":1,\"53\":1,\"57\":1,\"58\":1,\"59\":1}}],[\"suffix\",{\"1\":{\"10\":1}}],[\"succeeds\",{\"1\":{\"13\":1,\"14\":1}}],[\"successful\",{\"1\":{\"7\":1}}],[\"such\",{\"1\":{\"4\":1,\"23\":1}}],[\"suppress\",{\"1\":{\"3\":1,\"4\":1,\"7\":1,\"23\":1}}],[\"subcommand\",{\"1\":{\"17\":1}}],[\"subject\",{\"1\":{\"3\":1,\"10\":2}}],[\"submodules\",{\"1\":{\"3\":3,\"4\":2,\"6\":10,\"9\":3,\"14\":3,\"15\":2,\"18\":2,\"22\":2,\"23\":2}}],[\"sure\",{\"1\":{\"2\":1}}],[\"summary\",{\"1\":{\"2\":3,\"7\":1,\"13\":1}}],[\"several\",{\"1\":{\"11\":1}}],[\"series\",{\"1\":{\"10\":2}}],[\"server\",{\"1\":{\"6\":2,\"9\":2,\"14\":2,\"15\":1}}],[\"sec\",{\"1\":{\"56\":1}}],[\"secret\",{\"1\":{\"56\":1}}],[\"section\",{\"1\":{\"8\":5}}],[\"second\",{\"1\":{\"4\":1,\"23\":1}}],[\"separate\",{\"1\":{\"6\":2,\"11\":3}}],[\"separated\",{\"1\":{\"1\":1,\"2\":1,\"4\":1,\"7\":1,\"18\":1,\"20\":1}}],[\"sequence\",{\"1\":{\"5\":3,\"10\":1,\"19\":3}}],[\"setting\",{\"1\":{\"8\":1}}],[\"setup\",{\"1\":{\"6\":1}}],[\"set\",{\"1\":{\"3\":2,\"4\":1,\"6\":1,\"9\":2,\"10\":1,\"14\":2,\"15\":2,\"17\":5,\"22\":1,\"23\":1}}],[\"see\",{\"1\":{\"2\":1}}],[\"selected\",{\"1\":{\"13\":1,\"14\":1}}],[\"select\",{\"1\":{\"1\":1,\"4\":1,\"5\":1,\"18\":1,\"19\":1}}],[\"skipping\",{\"1\":{\"16\":1}}],[\"skip\",{\"1\":{\"1\":1,\"4\":1,\"5\":3,\"16\":3,\"18\":1,\"19\":3}}],[\"weighted\",{\"1\":{\"10\":1}}],[\"we\",{\"1\":{\"9\":1,\"14\":1}}],[\"write\",{\"1\":{\"9\":4}}],[\"would\",{\"1\":{\"7\":1}}],[\"workspace\",{\"1\":{\"51\":1}}],[\"worktree\",{\"1\":{\"4\":2,\"8\":3,\"23\":1}}],[\"worktrees\",{\"1\":{\"4\":1,\"23\":1}}],[\"working\",{\"1\":{\"1\":1,\"2\":2,\"6\":1,\"11\":1,\"13\":1,\"18\":2}}],[\"wheel\",{\"1\":{\"48\":1}}],[\"where\",{\"1\":{\"16\":1}}],[\"when\",{\"1\":{\"2\":2,\"3\":1,\"8\":2,\"22\":2,\"24\":1}}],[\"what\",{\"1\":{\"7\":1,\"16\":2}}],[\"while\",{\"1\":{\"6\":1,\"10\":1}}],[\"whitespace\",{\"1\":{\"2\":5,\"16\":3}}],[\"which\",{\"1\":{\"1\":1,\"6\":1,\"10\":1,\"11\":1}}],[\"way\",{\"1\":{\"2\":2,\"4\":1,\"23\":1}}],[\"windows\",{\"1\":{\"8\":1}}],[\"within\",{\"1\":{\"9\":1}}],[\"without\",{\"1\":{\"2\":1,\"9\":1}}],[\"with\",{\"1\":{\"1\":2,\"2\":3,\"4\":3,\"5\":2,\"7\":4,\"8\":2,\"10\":2,\"13\":1,\"15\":2,\"16\":2,\"18\":2,\"19\":1,\"20\":3,\"22\":1,\"23\":1}}],[\"will\",{\"1\":{\"1\":1,\"6\":3,\"11\":1,\"18\":1}}],[\"cmd\",{\"1\":{\"16\":2}}],[\"cc\",{\"1\":{\"10\":2}}],[\"crlf\",{\"1\":{\"8\":1}}],[\"creation\",{\"1\":{\"3\":1,\"10\":2,\"24\":1}}],[\"create\",{\"1\":{\"3\":2,\"4\":3,\"6\":5,\"11\":1,\"13\":1,\"14\":1,\"21\":1,\"23\":4,\"24\":3}}],[\"curl\",{\"1\":{\"59\":1}}],[\"current\",{\"1\":{\"1\":1,\"2\":1,\"3\":2,\"5\":1,\"13\":2,\"16\":4,\"19\":1}}],[\"custom\",{\"1\":{\"7\":1}}],[\"clear\",{\"1\":{\"21\":1}}],[\"cleanup\",{\"1\":{\"5\":1,\"7\":2,\"13\":1,\"14\":1,\"19\":1,\"24\":1}}],[\"clobber\",{\"1\":{\"9\":1}}],[\"cloning\",{\"1\":{\"6\":1}}],[\"cloned\",{\"1\":{\"6\":3}}],[\"clone\",{\"0\":{\"6\":1},\"1\":{\"6\":11,\"9\":3,\"14\":3}}],[\"core\",{\"1\":{\"54\":1}}],[\"corresponding\",{\"1\":{\"2\":1}}],[\"count\",{\"1\":{\"10\":2}}],[\"counts\",{\"1\":{\"2\":1}}],[\"cover\",{\"1\":{\"10\":7}}],[\"com\",{\"1\":{\"8\":1,\"17\":1}}],[\"complete\",{\"1\":{\"9\":1,\"14\":1}}],[\"comparing\",{\"1\":{\"8\":1}}],[\"compute\",{\"1\":{\"7\":1,\"22\":1}}],[\"common\",{\"1\":{\"9\":1}}],[\"command\",{\"1\":{\"8\":2}}],[\"comments\",{\"1\":{\"5\":1,\"7\":1,\"13\":1,\"14\":1,\"19\":1,\"24\":1}}],[\"committing\",{\"1\":{\"13\":1,\"14\":1}}],[\"committer\",{\"1\":{\"10\":1,\"16\":2}}],[\"committed\",{\"1\":{\"7\":1}}],[\"commits\",{\"1\":{\"5\":4,\"9\":1,\"16\":8,\"19\":1}}],[\"commit\",{\"0\":{\"7\":1},\"1\":{\"3\":6,\"4\":1,\"5\":7,\"7\":39,\"9\":2,\"10\":3,\"13\":10,\"14\":8,\"16\":2,\"18\":1,\"19\":6,\"21\":1,\"23\":1,\"24\":12,\"56\":1}}],[\"columns\",{\"1\":{\"3\":1,\"22\":1,\"24\":1}}],[\"column\",{\"1\":{\"3\":1,\"22\":1,\"24\":3}}],[\"colors\",{\"1\":{\"24\":1}}],[\"colorbool\",{\"1\":{\"8\":1}}],[\"colored\",{\"1\":{\"3\":1}}],[\"color\",{\"1\":{\"3\":1,\"8\":3,\"24\":1}}],[\"copy\",{\"1\":{\"3\":3,\"6\":1}}],[\"convert\",{\"1\":{\"9\":1,\"14\":1}}],[\"concisely\",{\"1\":{\"7\":1,\"22\":1}}],[\"configured\",{\"1\":{\"8\":1}}],[\"configuration\",{\"1\":{\"3\":1,\"4\":1,\"23\":1}}],[\"config\",{\"0\":{\"8\":1},\"1\":{\"6\":2,\"8\":15,\"17\":1,\"49\":1,\"54\":3,\"56\":3}}],[\"conflict\",{\"1\":{\"4\":2,\"5\":1,\"13\":1,\"16\":1,\"19\":1,\"23\":2}}],[\"contents\",{\"1\":{\"7\":1}}],[\"context\",{\"1\":{\"2\":4}}],[\"continue\",{\"1\":{\"5\":3,\"13\":3,\"16\":4,\"19\":3}}],[\"control\",{\"1\":{\"4\":1,\"9\":1,\"14\":2,\"15\":1,\"18\":1,\"23\":1}}],[\"contain\",{\"1\":{\"3\":2,\"24\":2}}],[\"contains\",{\"1\":{\"3\":2,\"24\":4}}],[\"cone\",{\"1\":{\"1\":1,\"20\":1}}],[\"c\",{\"1\":{\"2\":1,\"3\":4,\"6\":1,\"7\":6,\"16\":1,\"23\":2}}],[\"can\",{\"1\":{\"15\":1}}],[\"cancel\",{\"1\":{\"5\":1,\"19\":1}}],[\"cannot\",{\"1\":{\"1\":1}}],[\"case\",{\"1\":{\"3\":2,\"24\":2}}],[\"cached\",{\"1\":{\"2\":1,\"20\":2}}],[\"cherry\",{\"0\":{\"5\":1},\"1\":{\"5\":6,\"16\":3,\"19\":3}}],[\"checkout\",{\"0\":{\"4\":1},\"1\":{\"1\":1,\"4\":12,\"6\":4,\"20\":1,\"23\":2}}],[\"check\",{\"1\":{\"1\":1,\"2\":2,\"4\":1,\"9\":1,\"14\":1,\"15\":1,\"16\":1,\"20\":1,\"23\":1}}],[\"changed\",{\"1\":{\"7\":1,\"9\":1,\"16\":2}}],[\"change\",{\"1\":{\"2\":1,\"3\":1}}],[\"changes\",{\"1\":{\"1\":1,\"2\":4,\"7\":1,\"10\":2,\"14\":1,\"16\":2,\"18\":1,\"22\":1,\"23\":1}}],[\"character\",{\"1\":{\"1\":1,\"2\":1,\"4\":1,\"7\":1,\"18\":1,\"20\":1}}],[\"chmod\",{\"1\":{\"1\":1}}],[\"tips\",{\"1\":{\"9\":1}}],[\"tip\",{\"1\":{\"9\":1,\"14\":1}}],[\"time\",{\"1\":{\"6\":2,\"9\":2,\"14\":2}}],[\"type\",{\"1\":{\"8\":4}}],[\"tty\",{\"1\":{\"8\":1}}],[\"test\",{\"1\":{\"11\":6}}],[\"terminate\",{\"1\":{\"7\":1,\"8\":1,\"22\":1}}],[\"templates\",{\"1\":{\"6\":1,\"11\":1}}],[\"template\",{\"1\":{\"6\":2,\"7\":4,\"11\":4}}],[\"temporary\",{\"1\":{\"2\":1}}],[\"tagname\",{\"1\":{\"24\":3}}],[\"tag\",{\"0\":{\"24\":1},\"1\":{\"15\":4,\"24\":34}}],[\"tags\",{\"1\":{\"4\":1,\"6\":2,\"9\":7,\"14\":2,\"15\":6,\"17\":2,\"24\":7}}],[\"target\",{\"1\":{\"3\":2,\"13\":1}}],[\"twice\",{\"1\":{\"3\":1}}],[\"t\",{\"1\":{\"1\":1,\"2\":3,\"3\":2,\"4\":1,\"5\":1,\"6\":4,\"7\":1,\"8\":1,\"9\":1,\"10\":4,\"14\":1,\"15\":1,\"17\":1,\"19\":1,\"23\":1,\"24\":1}}],[\"try\",{\"1\":{\"16\":1}}],[\"true\",{\"1\":{\"8\":2,\"14\":1,\"56\":1}}],[\"trust\",{\"1\":{\"2\":1}}],[\"transaction\",{\"1\":{\"9\":1,\"15\":1}}],[\"transmit\",{\"1\":{\"6\":1,\"9\":1,\"14\":1,\"15\":1}}],[\"trailer\",{\"1\":{\"5\":1,\"7\":5,\"10\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1}}],[\"tracking\",{\"1\":{\"3\":3,\"4\":1,\"6\":1,\"9\":1,\"14\":1,\"23\":1}}],[\"track\",{\"1\":{\"3\":1,\"4\":1,\"6\":1,\"23\":1}}],[\"tracked\",{\"1\":{\"1\":3}}],[\"traditional\",{\"1\":{\"2\":1,\"22\":2}}],[\"tree\",{\"1\":{\"1\":1,\"2\":1,\"6\":1,\"10\":1,\"11\":1,\"13\":1,\"18\":5}}],[\"those\",{\"1\":{\"16\":1}}],[\"thin\",{\"1\":{\"15\":2}}],[\"this\",{\"1\":{\"8\":1,\"9\":1,\"14\":1,\"15\":1}}],[\"than\",{\"1\":{\"14\":1}}],[\"that\",{\"1\":{\"1\":1,\"2\":3,\"3\":4,\"6\":1,\"9\":2,\"11\":1,\"13\":1,\"14\":3,\"16\":5,\"18\":1,\"24\":4}}],[\"threading\",{\"1\":{\"10\":1}}],[\"thread\",{\"1\":{\"10\":1}}],[\"three\",{\"1\":{\"2\":1}}],[\"throw\",{\"1\":{\"4\":1,\"23\":2}}],[\"through\",{\"1\":{\"3\":1,\"16\":1}}],[\"them\",{\"1\":{\"6\":1,\"16\":1}}],[\"their\",{\"1\":{\"4\":1,\"6\":1}}],[\"theirs\",{\"1\":{\"4\":1}}],[\"the\",{\"1\":{\"1\":7,\"2\":19,\"3\":9,\"4\":2,\"5\":2,\"6\":4,\"7\":1,\"8\":3,\"9\":3,\"10\":6,\"11\":4,\"13\":10,\"14\":6,\"15\":1,\"16\":13,\"18\":2,\"19\":3,\"20\":3,\"23\":2,\"24\":6}}],[\"todo\",{\"1\":{\"16\":3}}],[\"token\",{\"1\":{\"7\":1}}],[\"tolerate\",{\"1\":{\"2\":1}}],[\"touches\",{\"1\":{\"2\":1}}],[\"touching\",{\"1\":{\"2\":1}}],[\"to\",{\"1\":{\"1\":1,\"2\":4,\"3\":4,\"4\":1,\"5\":1,\"6\":7,\"7\":4,\"8\":1,\"9\":7,\"10\":8,\"11\":2,\"13\":4,\"14\":9,\"15\":3,\"16\":13,\"18\":1,\"19\":3,\"20\":1,\"22\":1,\"23\":2,\"24\":4}}],[\")\",{\"1\":{\"1\":3,\"2\":1,\"3\":5,\"4\":6,\"5\":1,\"6\":1,\"7\":10,\"8\":3,\"9\":2,\"10\":2,\"13\":6,\"14\":3,\"15\":4,\"16\":1,\"17\":2,\"19\":1,\"21\":2,\"22\":4,\"23\":4}}],[\"(\",{\"1\":{\"1\":3,\"2\":1,\"3\":5,\"4\":6,\"5\":1,\"6\":1,\"7\":9,\"8\":3,\"9\":2,\"10\":2,\"13\":6,\"14\":3,\"15\":4,\"16\":1,\"17\":2,\"19\":1,\"21\":2,\"22\":4,\"23\":4}}],[\"rf\",{\"1\":{\"59\":1}}],[\"rfc\",{\"1\":{\"10\":2}}],[\"rsa4096\",{\"1\":{\"56\":1}}],[\"rsa\",{\"1\":{\"56\":1}}],[\"rm\",{\"0\":{\"20\":1},\"1\":{\"20\":2,\"59\":1}}],[\"rather\",{\"1\":{\"14\":1}}],[\"range\",{\"1\":{\"10\":2}}],[\"roll\",{\"1\":{\"10\":1}}],[\"root\",{\"1\":{\"2\":2,\"6\":1,\"16\":3}}],[\"rc\",{\"1\":{\"4\":2}}],[\"r\",{\"1\":{\"2\":1,\"3\":5,\"14\":1,\"16\":1,\"20\":2}}],[\"request\",{\"1\":{\"15\":1}}],[\"require\",{\"1\":{\"15\":2}}],[\"relevant\",{\"1\":{\"15\":1}}],[\"related\",{\"1\":{\"14\":2}}],[\"rebasing\",{\"1\":{\"14\":1}}],[\"rebased\",{\"1\":{\"16\":1}}],[\"rebase\",{\"0\":{\"16\":1},\"1\":{\"14\":1,\"16\":14}}],[\"reroll\",{\"1\":{\"10\":2}}],[\"rerere\",{\"1\":{\"5\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"reapply\",{\"1\":{\"16\":1}}],[\"real\",{\"1\":{\"13\":1}}],[\"reachable\",{\"1\":{\"9\":1,\"14\":1,\"16\":1}}],[\"readable\",{\"1\":{\"7\":1,\"15\":1,\"22\":1}}],[\"read\",{\"1\":{\"1\":1,\"4\":1,\"7\":2,\"8\":1,\"13\":1,\"18\":1,\"20\":1,\"24\":1}}],[\"re\",{\"1\":{\"9\":1,\"10\":1,\"16\":1}}],[\"reply\",{\"1\":{\"10\":2}}],[\"replace\",{\"1\":{\"8\":2,\"24\":1}}],[\"report\",{\"1\":{\"9\":1,\"14\":1,\"18\":1}}],[\"reporting\",{\"1\":{\"4\":2,\"6\":1,\"9\":1,\"13\":1,\"14\":1,\"15\":1,\"23\":2}}],[\"repository\",{\"1\":{\"6\":8,\"8\":1,\"9\":4,\"11\":2,\"14\":3,\"15\":3}}],[\"repo\",{\"1\":{\"6\":3,\"8\":1,\"15\":1}}],[\"regex\",{\"1\":{\"8\":1}}],[\"regexp\",{\"1\":{\"8\":2}}],[\"rewrite\",{\"1\":{\"7\":2}}],[\"reword\",{\"1\":{\"7\":3}}],[\"reuse\",{\"1\":{\"7\":3}}],[\"reused\",{\"1\":{\"5\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"reedit\",{\"1\":{\"7\":1}}],[\"rev\",{\"1\":{\"6\":1,\"9\":1,\"10\":2,\"14\":1}}],[\"revision\",{\"1\":{\"6\":1,\"9\":2,\"10\":1,\"14\":2,\"16\":1}}],[\"revert\",{\"0\":{\"19\":1},\"1\":{\"5\":3,\"19\":6}}],[\"reverse\",{\"1\":{\"2\":2}}],[\"redundant\",{\"1\":{\"5\":2}}],[\"reschedule\",{\"1\":{\"16\":1}}],[\"resulting\",{\"1\":{\"10\":1}}],[\"resume\",{\"1\":{\"5\":1,\"19\":1}}],[\"respect\",{\"1\":{\"8\":1,\"24\":1}}],[\"resolution\",{\"1\":{\"5\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"reset\",{\"0\":{\"18\":1},\"1\":{\"4\":1,\"7\":2,\"16\":1,\"18\":12,\"23\":1}}],[\"refine\",{\"1\":{\"16\":1}}],[\"refname\",{\"1\":{\"15\":1}}],[\"refmap\",{\"1\":{\"9\":3,\"14\":3}}],[\"refer\",{\"1\":{\"19\":1}}],[\"references\",{\"1\":{\"9\":2}}],[\"reference\",{\"1\":{\"6\":5,\"9\":1,\"19\":2}}],[\"refetch\",{\"1\":{\"9\":1}}],[\"refs\",{\"1\":{\"9\":3,\"14\":1,\"15\":5,\"16\":1}}],[\"refspecs\",{\"1\":{\"9\":1}}],[\"refspec\",{\"1\":{\"9\":2,\"10\":2,\"14\":1,\"15\":1}}],[\"ref\",{\"1\":{\"4\":1,\"9\":1,\"15\":1,\"23\":1}}],[\"reflog\",{\"1\":{\"3\":4,\"4\":1,\"24\":3}}],[\"refreshing\",{\"1\":{\"18\":1}}],[\"refresh\",{\"1\":{\"1\":2,\"18\":1}}],[\"renames\",{\"1\":{\"22\":4}}],[\"rename\",{\"1\":{\"3\":3,\"8\":2,\"17\":2}}],[\"renormalize\",{\"1\":{\"1\":2}}],[\"remote\",{\"0\":{\"17\":1},\"1\":{\"3\":2,\"6\":5,\"9\":4,\"11\":1,\"14\":3,\"15\":2,\"17\":21}}],[\"remotes\",{\"1\":{\"3\":1,\"9\":2,\"14\":1}}],[\"remove\",{\"1\":{\"2\":1,\"8\":4,\"17\":2,\"20\":1}}],[\"removed\",{\"1\":{\"1\":1,\"15\":1,\"18\":1,\"20\":1}}],[\"removal\",{\"1\":{\"1\":1,\"20\":1}}],[\"receive\",{\"1\":{\"15\":5}}],[\"recursive\",{\"1\":{\"4\":1,\"6\":1,\"9\":1,\"14\":1,\"15\":1,\"18\":1,\"20\":1,\"23\":1}}],[\"recurse\",{\"1\":{\"3\":3,\"4\":1,\"6\":2,\"9\":1,\"14\":1,\"15\":1,\"18\":1,\"23\":1}}],[\"recount\",{\"1\":{\"2\":1}}],[\"record\",{\"1\":{\"1\":1,\"18\":1}}],[\"return\",{\"1\":{\"2\":1}}],[\"rej\",{\"1\":{\"2\":1}}],[\"rejected\",{\"1\":{\"2\":1}}],[\"reject\",{\"1\":{\"2\":1,\"6\":1}}],[\"run\",{\"1\":{\"1\":3,\"7\":2,\"9\":4,\"14\":2,\"15\":2,\"16\":1,\"17\":1,\"20\":2}}],[\"ubuntu\",{\"0\":{\"47\":1},\"1\":{\"47\":1}}],[\"url\",{\"1\":{\"8\":2,\"17\":6}}],[\"urlmatch\",{\"1\":{\"8\":1}}],[\"uri\",{\"1\":{\"6\":3}}],[\"up\",{\"1\":{\"16\":1,\"20\":1}}],[\"upload\",{\"1\":{\"6\":2,\"9\":2,\"14\":2}}],[\"upstream\",{\"1\":{\"3\":6,\"6\":1,\"9\":2,\"10\":2,\"14\":2,\"15\":2,\"16\":7}}],[\"updating\",{\"1\":{\"1\":1,\"4\":1,\"9\":1,\"18\":1,\"20\":1,\"23\":1}}],[\"updated\",{\"1\":{\"9\":1,\"14\":1}}],[\"updates\",{\"1\":{\"9\":2,\"14\":2,\"15\":2}}],[\"update\",{\"1\":{\"1\":2,\"4\":1,\"5\":1,\"9\":4,\"13\":2,\"14\":2,\"16\":3,\"17\":1,\"19\":1,\"23\":1,\"49\":1}}],[\"usermod\",{\"1\":{\"48\":1}}],[\"useradd\",{\"1\":{\"48\":2}}],[\"users\",{\"1\":{\"11\":1}}],[\"user\",{\"1\":{\"8\":3,\"12\":2,\"16\":1,\"24\":1,\"54\":2,\"56\":1}}],[\"used\",{\"1\":{\"6\":1,\"7\":1,\"11\":1,\"15\":1}}],[\"use\",{\"1\":{\"2\":1,\"3\":3,\"4\":1,\"6\":6,\"7\":3,\"8\":7,\"9\":3,\"10\":6,\"11\":1,\"13\":2,\"14\":4,\"15\":3,\"16\":6,\"19\":1,\"24\":2}}],[\"usage\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1}}],[\"unmatch\",{\"1\":{\"20\":2}}],[\"unmerged\",{\"1\":{\"4\":2}}],[\"under\",{\"1\":{\"16\":1}}],[\"unchanged\",{\"1\":{\"16\":2}}],[\"unrelated\",{\"1\":{\"13\":2,\"14\":2}}],[\"until\",{\"1\":{\"12\":1}}],[\"untracked\",{\"1\":{\"1\":1,\"7\":2,\"21\":4,\"22\":4}}],[\"unparented\",{\"1\":{\"4\":1,\"23\":1}}],[\"unshallow\",{\"1\":{\"9\":1,\"14\":1}}],[\"unset\",{\"1\":{\"3\":2,\"8\":2}}],[\"unsafe\",{\"1\":{\"2\":1}}],[\"unidiff\",{\"1\":{\"2\":1}}],[\"u\",{\"1\":{\"1\":2,\"3\":1,\"6\":1,\"7\":2,\"9\":1,\"15\":1,\"21\":3,\"22\":1,\"24\":2}}],[\"ok\",{\"1\":{\"9\":1}}],[\"open\",{\"1\":{\"8\":1}}],[\"optionally\",{\"1\":{\"22\":1}}],[\"optional\",{\"1\":{\"7\":1,\"22\":3}}],[\"option\",{\"1\":{\"5\":3,\"6\":2,\"9\":2,\"13\":3,\"14\":5,\"15\":2,\"16\":2,\"19\":3}}],[\"options\",{\"1\":{\"1\":1,\"2\":1,\"3\":9,\"4\":2,\"6\":1,\"7\":2,\"8\":1,\"9\":4,\"10\":1,\"13\":1,\"14\":3,\"15\":1,\"16\":2,\"21\":2,\"22\":1,\"23\":1,\"24\":3}}],[\"o\",{\"1\":{\"6\":1,\"7\":2,\"9\":1,\"10\":1,\"14\":1,\"15\":1,\"59\":1}}],[\"our\",{\"1\":{\"4\":1}}],[\"ours\",{\"1\":{\"4\":1}}],[\"out\",{\"1\":{\"10\":1,\"16\":1}}],[\"output\",{\"1\":{\"2\":2,\"3\":2,\"7\":1,\"10\":5,\"15\":1,\"22\":1,\"24\":1}}],[\"outside\",{\"1\":{\"1\":1,\"2\":1,\"20\":1}}],[\"others\",{\"2\":{\"60\":1}}],[\"other\",{\"1\":{\"4\":1,\"8\":1,\"23\":1}}],[\"otherwise\",{\"1\":{\"1\":1}}],[\"objects\",{\"1\":{\"9\":2,\"14\":2}}],[\"object\",{\"1\":{\"3\":3,\"6\":1,\"8\":1,\"9\":2,\"11\":2,\"14\":1,\"24\":4}}],[\"oldurl\",{\"1\":{\"17\":1}}],[\"old\",{\"1\":{\"3\":2,\"8\":1,\"15\":1,\"17\":1}}],[\"overwriting\",{\"1\":{\"9\":1,\"14\":1}}],[\"overwrite\",{\"1\":{\"4\":1,\"9\":1,\"13\":1,\"14\":1,\"23\":1}}],[\"overlay\",{\"1\":{\"4\":2}}],[\"overlapping\",{\"1\":{\"2\":1}}],[\"overlap\",{\"1\":{\"2\":1}}],[\"override\",{\"1\":{\"1\":1,\"7\":2,\"11\":1,\"20\":1}}],[\"original\",{\"1\":{\"16\":1}}],[\"origin\",{\"1\":{\"6\":3,\"8\":2,\"15\":9,\"17\":3}}],[\"orphan\",{\"1\":{\"4\":1,\"23\":1}}],[\"or\",{\"1\":{\"2\":1,\"3\":7,\"4\":2,\"5\":4,\"6\":1,\"7\":1,\"8\":6,\"9\":3,\"10\":3,\"13\":2,\"15\":1,\"16\":3,\"17\":12,\"18\":3,\"19\":4,\"21\":10,\"23\":1,\"24\":3}}],[\"onto\",{\"1\":{\"16\":4}}],[\"oneline\",{\"1\":{\"12\":1}}],[\"one\",{\"1\":{\"2\":1,\"6\":1}}],[\"on\",{\"1\":{\"2\":2,\"3\":2,\"6\":1,\"8\":1,\"9\":6,\"10\":1,\"14\":5,\"15\":2,\"24\":1}}],[\"only\",{\"1\":{\"1\":2,\"3\":5,\"4\":1,\"6\":5,\"7\":2,\"8\":2,\"9\":4,\"13\":1,\"14\":4,\"15\":2,\"18\":3,\"20\":1,\"21\":1,\"24\":5}}],[\"off\",{\"1\":{\"5\":1,\"7\":1,\"10\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1}}],[\"of\",{\"1\":{\"1\":4,\"2\":7,\"3\":1,\"4\":1,\"6\":6,\"7\":1,\"8\":2,\"9\":10,\"10\":7,\"11\":1,\"13\":4,\"14\":12,\"15\":2,\"16\":7,\"18\":1,\"20\":1,\"23\":1,\"24\":3}}],[\"f212d2cfebf50880\",{\"1\":{\"56\":4}}],[\"flueky\",{\"1\":{\"11\":2,\"12\":1,\"17\":1}}],[\"full\",{\"1\":{\"7\":1,\"22\":1,\"56\":1}}],[\"fully\",{\"1\":{\"3\":1}}],[\"fetched\",{\"1\":{\"9\":2}}],[\"fetches\",{\"1\":{\"6\":1}}],[\"fetch\",{\"0\":{\"9\":1},\"1\":{\"9\":16,\"14\":5,\"17\":1}}],[\"fetching\",{\"1\":{\"6\":1,\"9\":4,\"14\":2}}],[\"found\",{\"1\":{\"61\":1}}],[\"follow\",{\"1\":{\"6\":1,\"15\":1}}],[\"fork\",{\"1\":{\"16\":2}}],[\"forward\",{\"1\":{\"5\":1,\"13\":3,\"14\":2}}],[\"formatted\",{\"1\":{\"7\":2}}],[\"format\",{\"0\":{\"10\":1},\"1\":{\"3\":4,\"7\":1,\"10\":3,\"11\":3,\"19\":1,\"22\":1,\"24\":8,\"56\":1}}],[\"for\",{\"1\":{\"2\":3,\"3\":3,\"4\":3,\"5\":1,\"6\":1,\"7\":3,\"8\":2,\"9\":2,\"10\":1,\"13\":2,\"14\":4,\"15\":1,\"19\":1,\"24\":1}}],[\"forced\",{\"1\":{\"9\":2,\"14\":2}}],[\"force\",{\"1\":{\"1\":1,\"3\":2,\"4\":3,\"6\":1,\"7\":1,\"9\":3,\"10\":1,\"13\":1,\"14\":3,\"15\":5,\"16\":1,\"20\":2,\"23\":4,\"24\":2}}],[\"ff\",{\"1\":{\"5\":2,\"13\":2,\"14\":2,\"16\":1}}],[\"first\",{\"1\":{\"10\":1}}],[\"find\",{\"1\":{\"8\":2,\"22\":1}}],[\"finding\",{\"1\":{\"2\":2}}],[\"fixed\",{\"1\":{\"8\":1}}],[\"fixup\",{\"1\":{\"7\":3,\"16\":1}}],[\"filters\",{\"1\":{\"6\":1}}],[\"filter\",{\"1\":{\"6\":2,\"9\":1}}],[\"filtering\",{\"1\":{\"3\":1,\"6\":1,\"9\":1,\"24\":1}}],[\"filepath\",{\"1\":{\"12\":1}}],[\"filename\",{\"1\":{\"10\":2}}],[\"filenames\",{\"1\":{\"2\":1,\"10\":1}}],[\"file\",{\"1\":{\"1\":7,\"2\":2,\"4\":6,\"6\":1,\"7\":14,\"8\":10,\"9\":1,\"10\":4,\"13\":2,\"16\":1,\"18\":7,\"20\":8,\"21\":3,\"24\":4}}],[\"files\",{\"1\":{\"1\":7,\"2\":2,\"4\":3,\"6\":1,\"7\":6,\"10\":2,\"13\":1,\"20\":1,\"22\":4,\"23\":1}}],[\"field\",{\"1\":{\"3\":1,\"24\":1}}],[\"failed\",{\"1\":{\"16\":1}}],[\"fails\",{\"1\":{\"2\":1,\"16\":1}}],[\"false\",{\"1\":{\"8\":1,\"14\":1}}],[\"fall\",{\"1\":{\"2\":1}}],[\"fast\",{\"1\":{\"5\":1,\"13\":3,\"14\":2}}],[\"fake\",{\"1\":{\"2\":1}}],[\"factor\",{\"1\":{\"10\":1}}],[\"fact\",{\"1\":{\"1\":1,\"18\":1}}],[\"from\",{\"1\":{\"1\":4,\"2\":1,\"4\":3,\"5\":1,\"6\":4,\"7\":8,\"8\":1,\"9\":4,\"10\":8,\"11\":2,\"13\":3,\"14\":4,\"18\":4,\"19\":1,\"20\":5,\"21\":1,\"24\":2}}],[\"f\",{\"1\":{\"1\":2,\"3\":2,\"4\":1,\"7\":2,\"8\":1,\"9\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"20\":2,\"23\":1,\"24\":4}}],[\"apt\",{\"1\":{\"53\":1,\"57\":1,\"58\":1}}],[\"append\",{\"1\":{\"5\":1,\"9\":2,\"14\":2}}],[\"applied\",{\"1\":{\"16\":1}}],[\"applicable\",{\"1\":{\"2\":2}}],[\"applying\",{\"1\":{\"2\":3}}],[\"apply\",{\"0\":{\"2\":1},\"1\":{\"1\":1,\"2\":8,\"6\":1,\"16\":5,\"21\":1}}],[\"amongst\",{\"1\":{\"11\":1}}],[\"amend\",{\"1\":{\"7\":8}}],[\"against\",{\"1\":{\"10\":2}}],[\"ahead\",{\"1\":{\"7\":2,\"22\":2}}],[\"after\",{\"1\":{\"7\":1,\"9\":3,\"12\":1,\"13\":1,\"14\":1,\"16\":2,\"18\":1}}],[\"authored\",{\"1\":{\"7\":1}}],[\"author\",{\"1\":{\"7\":7,\"12\":1,\"16\":4}}],[\"autostash\",{\"1\":{\"13\":1,\"14\":1,\"16\":1}}],[\"autosquash\",{\"1\":{\"7\":2,\"16\":1}}],[\"auto\",{\"1\":{\"9\":4,\"17\":1}}],[\"autocrlf\",{\"1\":{\"8\":1,\"54\":1}}],[\"autoupdate\",{\"1\":{\"5\":1,\"13\":1,\"16\":1,\"19\":1}}],[\"automatically\",{\"1\":{\"5\":1,\"13\":1,\"14\":1,\"16\":2,\"19\":1}}],[\"armor\",{\"1\":{\"56\":1}}],[\"argument\",{\"1\":{\"16\":1}}],[\"args\",{\"1\":{\"6\":1,\"9\":1}}],[\"area\",{\"1\":{\"2\":1}}],[\"are\",{\"1\":{\"1\":2,\"2\":1,\"3\":3,\"4\":1,\"7\":1,\"16\":1,\"18\":1,\"20\":1,\"24\":3}}],[\"absent\",{\"1\":{\"10\":1}}],[\"able\",{\"1\":{\"6\":1}}],[\"abort\",{\"1\":{\"5\":2,\"13\":5,\"14\":1,\"16\":4,\"19\":2}}],[\"abbrev\",{\"1\":{\"3\":1}}],[\"away\",{\"1\":{\"4\":1,\"23\":2}}],[\"act\",{\"1\":{\"3\":1}}],[\"actions\",{\"1\":{\"3\":1}}],[\"action\",{\"1\":{\"2\":1,\"8\":1,\"16\":1}}],[\"accept\",{\"1\":{\"2\":1,\"9\":2,\"14\":1}}],[\"attach\",{\"1\":{\"10\":2}}],[\"attempt\",{\"1\":{\"2\":1}}],[\"atomic\",{\"1\":{\"9\":2,\"15\":2}}],[\"at\",{\"1\":{\"2\":3,\"3\":2,\"4\":1,\"6\":1,\"10\":1,\"13\":3,\"14\":3,\"15\":1,\"23\":1,\"24\":2}}],[\"annotated\",{\"1\":{\"24\":2}}],[\"annotate\",{\"1\":{\"24\":1}}],[\"an\",{\"1\":{\"8\":2,\"16\":1}}],[\"any\",{\"1\":{\"6\":3,\"16\":1}}],[\"another\",{\"1\":{\"4\":1,\"23\":1,\"24\":1}}],[\"ancestors\",{\"1\":{\"9\":1}}],[\"ancestor\",{\"1\":{\"2\":1}}],[\"and\",{\"1\":{\"1\":2,\"2\":1,\"3\":5,\"4\":2,\"5\":2,\"6\":1,\"7\":3,\"9\":2,\"13\":4,\"14\":4,\"16\":5,\"18\":3,\"19\":2,\"23\":2,\"24\":3}}],[\"alternatives\",{\"1\":{\"49\":1}}],[\"already\",{\"1\":{\"16\":1}}],[\"alone\",{\"1\":{\"13\":1}}],[\"algorithm\",{\"1\":{\"11\":1}}],[\"alias\",{\"1\":{\"6\":1}}],[\"always\",{\"1\":{\"6\":1}}],[\"also\",{\"1\":{\"2\":1,\"6\":1}}],[\"all\",{\"1\":{\"1\":3,\"2\":1,\"3\":1,\"7\":4,\"8\":7,\"9\":7,\"10\":1,\"14\":4,\"15\":4,\"16\":4,\"17\":1,\"21\":2,\"22\":4}}],[\"allow\",{\"1\":{\"1\":2,\"2\":3,\"5\":4,\"7\":2,\"9\":1,\"13\":3,\"14\":3,\"16\":1,\"20\":2}}],[\"ask\",{\"1\":{\"16\":1}}],[\"asked\",{\"1\":{\"15\":1}}],[\"associated\",{\"1\":{\"9\":1,\"14\":1}}],[\"as\",{\"1\":{\"1\":1,\"6\":1,\"10\":1,\"16\":1}}],[\"a\",{\"1\":{\"1\":1,\"2\":4,\"3\":8,\"4\":3,\"5\":1,\"6\":8,\"7\":4,\"8\":4,\"9\":3,\"10\":11,\"11\":1,\"13\":8,\"14\":9,\"16\":2,\"17\":2,\"19\":1,\"20\":1,\"21\":2,\"23\":3,\"24\":5,\"48\":1}}],[\"address\",{\"1\":{\"10\":1}}],[\"addresses\",{\"1\":{\"6\":2,\"9\":2,\"14\":2,\"15\":2}}],[\"additions\",{\"1\":{\"2\":1}}],[\"adding\",{\"1\":{\"1\":1}}],[\"added\",{\"1\":{\"1\":2,\"2\":1,\"18\":1}}],[\"add\",{\"0\":{\"1\":1},\"1\":{\"1\":9,\"2\":4,\"5\":1,\"7\":6,\"8\":2,\"10\":9,\"11\":1,\"13\":2,\"14\":2,\"16\":2,\"17\":4,\"18\":1,\"19\":1}}],[\"data\",{\"1\":{\"50\":2,\"51\":2}}],[\"date\",{\"1\":{\"7\":5,\"8\":2,\"16\":7,\"20\":1}}],[\"drop\",{\"1\":{\"16\":1,\"21\":3}}],[\"dry\",{\"1\":{\"1\":3,\"7\":2,\"9\":2,\"14\":2,\"15\":2,\"17\":1,\"20\":2}}],[\"during\",{\"1\":{\"16\":1}}],[\"d\",{\"1\":{\"3\":5,\"4\":1,\"15\":3,\"17\":1,\"23\":1,\"24\":3}}],[\"discard\",{\"1\":{\"23\":1}}],[\"dissociate\",{\"1\":{\"6\":1}}],[\"display\",{\"1\":{\"3\":1,\"16\":1}}],[\"dirty\",{\"1\":{\"22\":1}}],[\"dir\",{\"1\":{\"6\":3,\"10\":2,\"11\":4}}],[\"directives\",{\"1\":{\"8\":1}}],[\"direct\",{\"1\":{\"3\":1,\"4\":1,\"23\":1}}],[\"directory\",{\"1\":{\"2\":1,\"6\":2,\"8\":1,\"10\":1,\"11\":4}}],[\"digits\",{\"1\":{\"3\":1}}],[\"diffs\",{\"1\":{\"10\":1}}],[\"diffstat\",{\"1\":{\"2\":1,\"13\":2,\"14\":2,\"16\":2}}],[\"diff3\",{\"1\":{\"4\":1,\"23\":1}}],[\"diff\",{\"1\":{\"1\":1,\"2\":1,\"7\":1,\"10\":1,\"21\":1}}],[\"docs\",{\"1\":{\"17\":1}}],[\"doing\",{\"1\":{\"13\":1,\"14\":1}}],[\"downloaded\",{\"1\":{\"9\":1,\"14\":1}}],[\"downloading\",{\"1\":{\"6\":1}}],[\"do\",{\"1\":{\"2\":1,\"4\":2,\"9\":2,\"13\":1,\"14\":1,\"16\":1,\"20\":1,\"22\":1,\"23\":1}}],[\"don\",{\"1\":{\"1\":1,\"2\":3,\"3\":1,\"5\":1,\"6\":4,\"10\":4,\"19\":1,\"24\":1}}],[\"deep\",{\"1\":{\"10\":1}}],[\"deepen\",{\"1\":{\"6\":1,\"9\":5,\"14\":5}}],[\"demand\",{\"1\":{\"9\":1,\"14\":1,\"15\":1}}],[\"depth\",{\"1\":{\"6\":3,\"9\":2,\"14\":2}}],[\"detach\",{\"1\":{\"4\":2,\"23\":2}}],[\"detected\",{\"1\":{\"2\":1}}],[\"detect\",{\"1\":{\"2\":1,\"22\":2}}],[\"default\",{\"1\":{\"4\":3,\"7\":2,\"8\":3,\"10\":1,\"13\":3,\"14\":1,\"22\":4,\"23\":1}}],[\"dev\",{\"1\":{\"3\":2,\"4\":1,\"50\":1}}],[\"deletion\",{\"1\":{\"3\":1}}],[\"delete\",{\"1\":{\"3\":3,\"15\":2,\"17\":2,\"24\":2}}],[\"deleted\",{\"1\":{\"2\":1}}],[\"description\",{\"1\":{\"3\":2,\"10\":3}}],[\"decimal\",{\"1\":{\"2\":1,\"8\":1}}],[\"each\",{\"1\":{\"16\":2,\"24\":1}}],[\"etc\",{\"1\":{\"8\":1}}],[\"equality\",{\"1\":{\"8\":1}}],[\"error\",{\"1\":{\"2\":1}}],[\"errors\",{\"1\":{\"1\":2,\"2\":1,\"18\":1}}],[\"email\",{\"1\":{\"8\":1,\"10\":3,\"12\":1,\"54\":2,\"56\":1}}],[\"empty\",{\"1\":{\"2\":2,\"5\":5,\"7\":2,\"16\":2}}],[\"embedded\",{\"1\":{\"2\":1}}],[\"eof\",{\"1\":{\"2\":1}}],[\"eol\",{\"1\":{\"1\":1}}],[\"env\",{\"0\":{\"58\":1},\"1\":{\"58\":2}}],[\"enable\",{\"1\":{\"10\":1}}],[\"entry\",{\"1\":{\"8\":1}}],[\"entries\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"13\":1,\"14\":1,\"20\":1,\"22\":1}}],[\"end\",{\"1\":{\"2\":1,\"5\":1,\"9\":1,\"13\":2,\"14\":3,\"19\":1}}],[\"ensure\",{\"1\":{\"2\":1}}],[\"exit\",{\"1\":{\"20\":1}}],[\"exists\",{\"1\":{\"3\":2,\"24\":1}}],[\"exec\",{\"1\":{\"15\":1,\"16\":7}}],[\"executable\",{\"1\":{\"1\":1}}],[\"example\",{\"1\":{\"8\":2}}],[\"export\",{\"1\":{\"56\":1}}],[\"expiry\",{\"1\":{\"8\":2}}],[\"expect\",{\"1\":{\"2\":1,\"15\":1}}],[\"excluding\",{\"1\":{\"6\":1,\"9\":1,\"14\":1}}],[\"exclude\",{\"1\":{\"2\":1,\"6\":1,\"9\":1,\"14\":1}}],[\"elements\",{\"1\":{\"1\":1,\"4\":1,\"7\":1,\"18\":1,\"20\":1}}],[\"even\",{\"1\":{\"1\":1,\"3\":3,\"10\":3,\"16\":3,\"20\":1}}],[\"editable\",{\"1\":{\"16\":1}}],[\"editor\",{\"1\":{\"8\":1,\"49\":1}}],[\"edit\",{\"1\":{\"1\":2,\"3\":2,\"5\":3,\"7\":3,\"8\":1,\"13\":2,\"14\":2,\"16\":4,\"19\":3,\"24\":2}}],[\"e\",{\"1\":{\"1\":1,\"5\":1,\"7\":2,\"8\":1,\"10\":1,\"13\":1,\"19\":1,\"24\":2}}],[\"py\",{\"1\":{\"59\":4}}],[\"pypa\",{\"1\":{\"59\":1}}],[\"python3\",{\"1\":{\"57\":1,\"58\":2,\"59\":1}}],[\"python\",{\"0\":{\"57\":1},\"1\":{\"57\":2}}],[\"pip\",{\"0\":{\"59\":1},\"1\":{\"57\":2,\"59\":5}}],[\"picks\",{\"1\":{\"16\":1}}],[\"pick\",{\"0\":{\"5\":1},\"1\":{\"5\":6,\"16\":2,\"19\":3}}],[\"picking\",{\"1\":{\"1\":1}}],[\"pushing\",{\"1\":{\"15\":1}}],[\"push\",{\"0\":{\"15\":1},\"1\":{\"11\":1,\"15\":14,\"17\":4,\"21\":1}}],[\"pulled\",{\"1\":{\"14\":1}}],[\"pull\",{\"0\":{\"14\":1},\"1\":{\"9\":1,\"14\":3,\"15\":1}}],[\"placed\",{\"1\":{\"17\":1}}],[\"place\",{\"1\":{\"9\":1}}],[\"permissions\",{\"1\":{\"11\":2}}],[\"percentage\",{\"1\":{\"10\":1}}],[\"per\",{\"1\":{\"8\":1}}],[\"perform\",{\"1\":{\"4\":1,\"13\":1,\"14\":1,\"23\":1}}],[\"pop\",{\"1\":{\"13\":1,\"14\":1,\"16\":1,\"21\":3}}],[\"post\",{\"1\":{\"7\":2}}],[\"possible\",{\"1\":{\"5\":1,\"13\":2,\"14\":1,\"16\":1,\"19\":1}}],[\"porcelain\",{\"1\":{\"7\":1,\"15\":1,\"22\":1}}],[\"points\",{\"1\":{\"3\":2,\"24\":2}}],[\"point\",{\"1\":{\"3\":1,\"16\":3}}],[\"program\",{\"1\":{\"15\":2}}],[\"progress\",{\"1\":{\"4\":3,\"6\":2,\"9\":2,\"10\":2,\"13\":4,\"14\":2,\"15\":2,\"23\":3}}],[\"prune\",{\"1\":{\"9\":4,\"14\":2,\"15\":2,\"17\":2}}],[\"present\",{\"1\":{\"16\":1}}],[\"preserve\",{\"1\":{\"5\":1}}],[\"prerequisite\",{\"1\":{\"10\":1}}],[\"prefix\",{\"1\":{\"10\":3}}],[\"prefetch\",{\"1\":{\"9\":2}}],[\"previous\",{\"1\":{\"7\":1}}],[\"pre\",{\"1\":{\"7\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1}}],[\"prepend\",{\"1\":{\"2\":1}}],[\"print\",{\"1\":{\"3\":5,\"9\":1,\"10\":2,\"24\":6}}],[\"passwd\",{\"1\":{\"48\":1}}],[\"pass\",{\"1\":{\"16\":1}}],[\"passed\",{\"1\":{\"16\":2}}],[\"packfile\",{\"1\":{\"9\":1}}],[\"pack\",{\"1\":{\"6\":2,\"9\":3,\"14\":3,\"15\":6}}],[\"parts\",{\"1\":{\"10\":1}}],[\"partial\",{\"1\":{\"6\":1}}],[\"parallel\",{\"1\":{\"6\":1,\"9\":1,\"14\":1}}],[\"parent\",{\"1\":{\"5\":3,\"19\":3}}],[\"paht\",{\"1\":{\"1\":1}}],[\"pattern\",{\"1\":{\"3\":1,\"8\":7,\"24\":1}}],[\"paths\",{\"1\":{\"1\":1,\"2\":3,\"18\":1}}],[\"pathspecs\",{\"1\":{\"4\":1}}],[\"pathspec\",{\"1\":{\"1\":6,\"4\":5,\"6\":2,\"7\":8,\"18\":9,\"20\":8,\"21\":3,\"22\":1}}],[\"path\",{\"1\":{\"1\":2,\"2\":4,\"6\":2,\"8\":2,\"9\":2,\"13\":1,\"14\":2}}],[\"patches\",{\"1\":{\"2\":1,\"10\":4}}],[\"patch\",{\"0\":{\"10\":1},\"1\":{\"1\":1,\"2\":12,\"4\":1,\"7\":2,\"10\":19,\"16\":3,\"18\":2,\"21\":2}}],[\"p\",{\"1\":{\"1\":1,\"2\":1,\"4\":1,\"7\":1,\"9\":2,\"10\":1,\"12\":1,\"14\":1,\"17\":1,\"18\":1,\"21\":2}}],[\"io\",{\"1\":{\"59\":1}}],[\"it\",{\"1\":{\"16\":1}}],[\"its\",{\"1\":{\"3\":2}}],[\"ipv6\",{\"1\":{\"6\":2,\"9\":2,\"14\":2,\"15\":2}}],[\"ipv4\",{\"1\":{\"6\":2,\"9\":2,\"14\":2,\"15\":2}}],[\"identical\",{\"1\":{\"10\":1}}],[\"ident\",{\"1\":{\"10\":3}}],[\"id\",{\"1\":{\"5\":1,\"7\":1,\"8\":1,\"10\":2,\"12\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1,\"24\":3,\"56\":1}}],[\"ish\",{\"1\":{\"18\":3}}],[\"is\",{\"1\":{\"2\":2,\"4\":1,\"7\":1,\"8\":8,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":2,\"23\":1}}],[\"if\",{\"1\":{\"1\":1,\"2\":2,\"3\":3,\"4\":1,\"5\":1,\"6\":1,\"10\":3,\"13\":3,\"14\":2,\"15\":2,\"16\":3,\"19\":1,\"20\":1,\"23\":1,\"24\":1}}],[\"init\",{\"0\":{\"11\":1},\"1\":{\"11\":5}}],[\"initial\",{\"1\":{\"11\":3}}],[\"initialize\",{\"1\":{\"6\":2}}],[\"initially\",{\"1\":{\"5\":1}}],[\"inline\",{\"1\":{\"10\":2}}],[\"into\",{\"1\":{\"13\":1}}],[\"int\",{\"1\":{\"8\":3}}],[\"integrated\",{\"1\":{\"15\":1}}],[\"interdiff\",{\"1\":{\"10\":1}}],[\"interactively\",{\"1\":{\"1\":1,\"4\":1,\"7\":2,\"18\":1}}],[\"interactive\",{\"1\":{\"1\":2,\"7\":2,\"14\":1,\"16\":2}}],[\"intent\",{\"1\":{\"1\":1,\"2\":2,\"18\":1}}],[\"install\",{\"1\":{\"53\":1,\"57\":1,\"58\":1}}],[\"instead\",{\"1\":{\"2\":3,\"6\":2,\"9\":2,\"10\":5,\"13\":2,\"14\":2,\"16\":2}}],[\"inside\",{\"1\":{\"6\":1}}],[\"insensitive\",{\"1\":{\"3\":1,\"24\":1}}],[\"info\",{\"1\":{\"3\":2,\"10\":1}}],[\"informational\",{\"1\":{\"3\":1}}],[\"information\",{\"1\":{\"2\":1,\"7\":1,\"22\":2}}],[\"inherit\",{\"1\":{\"3\":1,\"4\":1,\"23\":1}}],[\"incorporate\",{\"1\":{\"14\":1}}],[\"incorrectly\",{\"1\":{\"2\":1}}],[\"includes\",{\"1\":{\"8\":1,\"15\":1}}],[\"include\",{\"1\":{\"2\":1,\"6\":1,\"7\":2,\"8\":1,\"10\":1,\"21\":3}}],[\"inaccurate\",{\"1\":{\"2\":1}}],[\"input\",{\"1\":{\"2\":2,\"8\":2,\"54\":1}}],[\"index\",{\"1\":{\"1\":1,\"2\":4,\"5\":1,\"7\":1,\"13\":2,\"16\":1,\"18\":4,\"19\":1,\"20\":1,\"21\":4,\"22\":1}}],[\"in\",{\"1\":{\"1\":2,\"2\":6,\"3\":1,\"6\":2,\"7\":3,\"9\":1,\"10\":8,\"13\":2,\"14\":1,\"16\":1,\"22\":2,\"24\":1}}],[\"ignore\",{\"1\":{\"1\":4,\"2\":5,\"3\":1,\"4\":3,\"10\":1,\"13\":1,\"16\":3,\"20\":2,\"22\":2,\"23\":2,\"24\":1}}],[\"ignored\",{\"1\":{\"1\":2,\"4\":1,\"13\":1,\"22\":2,\"23\":1}}],[\"implies\",{\"1\":{\"1\":1,\"6\":1,\"16\":1}}],[\"i\",{\"1\":{\"1\":1,\"3\":1,\"7\":2,\"16\":4,\"24\":1}}],[\"venv\",{\"1\":{\"58\":2}}],[\"verify\",{\"1\":{\"7\":2,\"13\":3,\"14\":3,\"15\":1,\"16\":1,\"24\":2}}],[\"version\",{\"1\":{\"4\":2,\"22\":1}}],[\"verbose\",{\"1\":{\"1\":2,\"2\":2,\"3\":1,\"6\":2,\"7\":1,\"9\":2,\"13\":2,\"14\":2,\"15\":2,\"16\":1,\"17\":5,\"22\":2}}],[\"virtual\",{\"0\":{\"58\":1},\"1\":{\"58\":2}}],[\"vuepress\",{\"0\":{\"26\":1}}],[\"valid\",{\"1\":{\"13\":1,\"14\":1}}],[\"values\",{\"1\":{\"7\":1,\"8\":4,\"22\":1}}],[\"value\",{\"1\":{\"6\":1,\"7\":1,\"8\":21,\"13\":1,\"14\":1,\"15\":2}}],[\"variable\",{\"1\":{\"8\":3}}],[\"variables\",{\"1\":{\"8\":1}}],[\"var\",{\"1\":{\"8\":1}}],[\"v2\",{\"1\":{\"4\":2}}],[\"v\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"6\":1,\"7\":2,\"9\":1,\"10\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":5,\"22\":1,\"24\":2}}],[\"nth\",{\"1\":{\"10\":1}}],[\"needs\",{\"1\":{\"24\":1}}],[\"negotiate\",{\"1\":{\"9\":1}}],[\"negotiation\",{\"1\":{\"9\":2,\"14\":1}}],[\"negotiating\",{\"1\":{\"9\":1}}],[\"newurl\",{\"1\":{\"17\":2}}],[\"newbase\",{\"1\":{\"16\":2}}],[\"new\",{\"1\":{\"2\":3,\"3\":2,\"4\":5,\"6\":1,\"8\":2,\"17\":1,\"23\":4}}],[\"named\",{\"1\":{\"4\":1,\"13\":1,\"14\":1,\"23\":1}}],[\"names\",{\"1\":{\"3\":2,\"8\":1,\"10\":1,\"24\":1}}],[\"name\",{\"1\":{\"3\":4,\"5\":1,\"6\":2,\"8\":13,\"11\":4,\"12\":1,\"13\":3,\"15\":3,\"17\":10,\"24\":8,\"54\":2,\"58\":1}}],[\"numbering\",{\"1\":{\"10\":1}}],[\"numbered\",{\"1\":{\"10\":3}}],[\"number\",{\"1\":{\"2\":1,\"5\":2,\"6\":1,\"8\":1,\"9\":1,\"10\":2,\"14\":1,\"19\":2}}],[\"numstat\",{\"1\":{\"2\":1}}],[\"num\",{\"1\":{\"2\":2,\"12\":2,\"24\":1}}],[\"null\",{\"1\":{\"7\":1,\"8\":1,\"22\":1}}],[\"nul\",{\"1\":{\"1\":2,\"2\":1,\"4\":2,\"7\":4,\"8\":1,\"18\":3,\"20\":3,\"21\":1,\"22\":1}}],[\"non\",{\"1\":{\"13\":1}}],[\"now\",{\"1\":{\"7\":1}}],[\"nothing\",{\"1\":{\"20\":1}}],[\"not\",{\"1\":{\"2\":1,\"3\":2,\"4\":2,\"6\":1,\"9\":2,\"13\":2,\"14\":2,\"16\":1,\"20\":1,\"22\":1,\"23\":1,\"24\":1,\"61\":1}}],[\"notation\",{\"1\":{\"2\":1}}],[\"normal\",{\"1\":{\"2\":1,\"7\":1,\"22\":1}}],[\"no\",{\"1\":{\"1\":1,\"2\":1,\"3\":3,\"4\":1,\"5\":1,\"6\":3,\"7\":5,\"9\":3,\"10\":3,\"13\":1,\"14\":1,\"15\":3,\"16\":4,\"17\":1,\"18\":1,\"19\":2,\"21\":2,\"22\":3,\"23\":1,\"24\":5}}],[\"n\",{\"1\":{\"1\":2,\"2\":3,\"3\":2,\"5\":2,\"6\":2,\"7\":1,\"9\":3,\"10\":7,\"13\":3,\"14\":5,\"15\":1,\"16\":2,\"17\":2,\"18\":1,\"19\":2,\"20\":2,\"22\":1,\"24\":5}}],[\".\",{\"1\":{\"1\":5,\"2\":4,\"3\":6,\"4\":7,\"5\":3,\"7\":8,\"8\":9,\"9\":8,\"10\":1,\"11\":2,\"12\":3,\"13\":3,\"14\":8,\"15\":3,\"16\":1,\"17\":9,\"18\":6,\"19\":3,\"20\":3,\"21\":3,\"22\":6,\"24\":9,\"54\":3,\"56\":2,\"59\":6}}],[\"]\",{\"1\":{\"1\":2,\"2\":2,\"3\":27,\"4\":5,\"5\":9,\"6\":5,\"7\":31,\"8\":10,\"9\":8,\"10\":13,\"11\":10,\"13\":4,\"14\":9,\"15\":5,\"16\":13,\"17\":17,\"18\":14,\"19\":8,\"20\":10,\"21\":37,\"22\":9,\"23\":4,\"24\":22,\"56\":1}}],[\">\",{\"1\":{\"1\":3,\"2\":12,\"3\":28,\"4\":12,\"5\":8,\"6\":22,\"7\":26,\"8\":6,\"9\":20,\"10\":32,\"11\":12,\"13\":12,\"14\":19,\"15\":9,\"16\":16,\"17\":24,\"18\":8,\"19\":8,\"20\":3,\"21\":15,\"22\":8,\"23\":8,\"24\":34}}],[\"<\",{\"1\":{\"1\":3,\"2\":12,\"3\":28,\"4\":12,\"5\":8,\"6\":22,\"7\":26,\"8\":6,\"9\":20,\"10\":32,\"11\":12,\"13\":12,\"14\":19,\"15\":9,\"16\":16,\"17\":24,\"18\":8,\"19\":8,\"20\":3,\"21\":15,\"22\":8,\"23\":8,\"24\":34}}],[\"[\",{\"1\":{\"1\":2,\"2\":2,\"3\":27,\"4\":5,\"5\":9,\"6\":5,\"7\":31,\"8\":10,\"9\":8,\"10\":13,\"11\":10,\"13\":4,\"14\":9,\"15\":5,\"16\":13,\"17\":17,\"18\":14,\"19\":8,\"20\":10,\"21\":37,\"22\":9,\"23\":4,\"24\":22,\"56\":1}}],[\":\",{\"1\":{\"1\":1,\"2\":1,\"3\":9,\"4\":2,\"5\":2,\"6\":1,\"7\":6,\"8\":16,\"9\":4,\"10\":5,\"11\":2,\"13\":3,\"14\":1,\"15\":3,\"16\":3,\"17\":14,\"18\":4,\"19\":2,\"20\":1,\"21\":11,\"22\":7,\"23\":1,\"24\":4,\"59\":1}}],[\",\",{\"1\":{\"1\":14,\"2\":10,\"3\":19,\"4\":13,\"5\":8,\"6\":17,\"7\":24,\"8\":20,\"9\":17,\"10\":11,\"11\":9,\"12\":1,\"13\":9,\"14\":17,\"15\":14,\"16\":17,\"17\":4,\"18\":8,\"19\":7,\"20\":5,\"21\":6,\"22\":17,\"23\":10,\"24\":16,\"45\":1,\"57\":1}}],[\"https\",{\"1\":{\"59\":1}}],[\"histories\",{\"1\":{\"13\":2,\"14\":2}}],[\"history\",{\"1\":{\"6\":1,\"9\":4,\"14\":4}}],[\"hook\",{\"1\":{\"7\":1,\"15\":1,\"16\":1}}],[\"hooks\",{\"1\":{\"7\":1,\"13\":1,\"14\":1}}],[\"how\",{\"1\":{\"5\":1,\"7\":1,\"13\":1,\"14\":1,\"16\":1,\"19\":1,\"24\":1}}],[\"holding\",{\"1\":{\"4\":1,\"23\":1}}],[\"header\",{\"1\":{\"10\":7}}],[\"headers\",{\"1\":{\"2\":1}}],[\"head\",{\"1\":{\"4\":1,\"6\":2,\"9\":5,\"14\":1,\"16\":1,\"17\":1,\"18\":5,\"23\":1}}],[\"hard\",{\"1\":{\"18\":2}}],[\"hardlinks\",{\"1\":{\"6\":2}}],[\"handle\",{\"1\":{\"16\":1}}],[\"has\",{\"1\":{\"13\":1,\"14\":1}}],[\"hash\",{\"1\":{\"3\":1,\"10\":1,\"11\":2}}],[\"have\",{\"1\":{\"2\":1,\"9\":1,\"14\":1}}],[\"hunk\",{\"1\":{\"2\":1}}],[\"hunks\",{\"1\":{\"1\":1,\"2\":2,\"4\":1,\"18\":1}}],[\"h\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1}}],[\"-\",{\"0\":{\"5\":1,\"10\":1,\"59\":1},\"1\":{\"1\":71,\"2\":88,\"3\":123,\"4\":76,\"5\":80,\"6\":119,\"7\":186,\"8\":120,\"9\":132,\"10\":124,\"11\":49,\"12\":26,\"13\":96,\"14\":132,\"15\":88,\"16\":151,\"17\":56,\"18\":70,\"19\":62,\"20\":56,\"21\":84,\"22\":44,\"23\":48,\"24\":109,\"48\":7,\"49\":3,\"51\":1,\"54\":6,\"56\":21,\"58\":2,\"59\":6}}],[\"常用命令\",{\"1\":{\"0\":1,\"17\":1}}],[\"命令\",{\"0\":{\"0\":1},\"1\":{\"11\":1,\"15\":1,\"21\":1,\"24\":1,\"48\":1}}],[\" \",{\"0\":{\"0\":1,\"26\":2,\"47\":1,\"58\":1},\"1\":{\"0\":2,\"1\":171,\"2\":276,\"3\":288,\"4\":176,\"5\":129,\"6\":270,\"7\":337,\"8\":267,\"9\":305,\"10\":287,\"11\":122,\"12\":63,\"13\":228,\"14\":335,\"15\":203,\"16\":333,\"17\":166,\"18\":120,\"19\":113,\"20\":78,\"21\":146,\"22\":100,\"23\":112,\"24\":274,\"45\":2,\"47\":2,\"48\":37,\"49\":3,\"50\":8,\"51\":7,\"53\":3,\"54\":16,\"56\":54,\"57\":11,\"58\":15,\"59\":12,\"61\":2}}]],\"serializationVersion\":2}}")).map(([localePath, index]) => [
    localePath,
    loadIndex(index, {
        fields: [/** Heading */ "h", /** Text */ "t", /** CustomFields */ "c"],
        storeFields: [
            /** Heading */ "h",
            /** Text */ "t",
            /** CustomFields */ "c",
        ],
    }),
]));
self.onmessage = ({ data: { type = "all", query, locale, options, id }, }) => {
    const searchLocaleIndex = searchIndex[locale];
    if (type === "suggest")
        self.postMessage([
            type,
            id,
            getSuggestions(query, searchLocaleIndex, options),
        ]);
    else if (type === "search")
        self.postMessage([type, id, getResults(query, searchLocaleIndex, options)]);
    else
        self.postMessage({
            suggestions: [
                type,
                id,
                getSuggestions(query, searchLocaleIndex, options),
            ],
            results: [type, id, getResults(query, searchLocaleIndex, options)],
        });
};
//# sourceMappingURL=index.js.map