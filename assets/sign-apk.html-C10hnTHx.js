import{ah as i,ai as a,ak as e,aj as t}from"./app-Di5Fiwzp.js";const n={};function l(p,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="_1-apksigner" tabindex="-1"><a class="header-anchor" href="#_1-apksigner"><span>1. apksigner</span></a></h2><p>google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。</p><ol><li>V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk 在解压之后二次打包压缩后可以安装。</li><li>V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk 在解压之后二次打包压缩后无法安装。</li></ol><p><strong>因此，在签名时，只能选择 V1 或 V1+V2,不能只选择 V2 。</strong></p><h3 id="_1-1-签名" tabindex="-1"><a class="header-anchor" href="#_1-1-签名"><span>1.1. 签名</span></a></h3><p>使用命令 <code>apksigner sign</code> 对 apk 文件进行签名。</p><p>常用参数有：</p><p><strong>--in</strong> 指定待签名 apk 文件的路径。<br><br><strong>--out</strong> 指定签名后的 apk 文件路径。<strong>可以同 --in 一样，可以不用。</strong></p><p><strong>可以在全部命令的最后指定待签名的 apk 路径。--in --out 即都指向该路径。</strong></p><p><strong>--v1-signing-enabled</strong> 使用 true false 指定是否使用 v1 规则签名。<br><br><strong>--v2-signing-enabled</strong> 使用 true false 指定是否使用 v2 规则签名。</p><p><strong>--debuggable-apk-permitted</strong> 使用 true false 指定是否允许对测试 apk 文件进行签名，默认是允许。但是官方不建议使用生产签名文件对测试 apk 文件进行签名。</p><p><strong>--ks</strong> 指定 keystore 的路径。<br><br><strong>--ks-pass</strong> 指定 keystore 的密码。如： pass:password。 password 是签名文件密码。<br><br><strong>--ks-key-alias</strong> 指定使用的签名文件别名，通常一个签名文件可以包含多个别名。签名文件中只包含一个别名时，可以不使用。<br><br><strong>--key-pass</strong> 指定别名 key 的密码。如： pass:password。 password 是签名文件密码。</p><p>以上是使用 keystore 对 apk 签名。apksigner 还支持更多种方式，如：私钥文件、JCA Providers 对 apk 签名。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> debug.keystore</span></span></code></pre></div><h3 id="_1-2-校验" tabindex="-1"><a class="header-anchor" href="#_1-2-校验"><span>1.2. 校验</span></a></h3><p>使用 <code>apksigner verify</code> 校验已签名的 apk 文件。包括查看签名方式和使用的证书信息。</p><p>常用参数有：</p><p><strong>-v</strong> 显示签名详情，是否使用 v1 、v2 签名。</p><p><strong>--in</strong> 指定待校验的 apk 文件路径。当 apk 路径放在命令末尾时，此参数可以省略。</p><p><strong>--print-certs</strong> 显示 apk 文件中包含的签名文件证书信息。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例 1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app-release.apk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -print-certs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例 2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -print-certs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app-release.apk</span></span></code></pre></div><h2 id="_2-jarsigner" tabindex="-1"><a class="header-anchor" href="#_2-jarsigner"><span>2. jarsigner</span></a></h2><p>是 jdk 提供的对 jar 文件的签名工具。</p><h3 id="_2-1-签名" tabindex="-1"><a class="header-anchor" href="#_2-1-签名"><span>2.1. 签名</span></a></h3><p>使用命令 <code>jarsigner [options] jar-file alias</code> 对 apk 文件 签名 。其中 jar-file 对应 apk 文件路径，alias 对应 签名文件中的别名。 options 常用参数如下：</p><p><strong>-keystore</strong> 指定使用的签名文件的路径。</p><p><strong>-storepass</strong> 指定使用签名文件的密码。</p><p><strong>-keypass</strong> 指定使用 alias 对应的密码。可以不使用，执行时手动输入。</p><p><strong>-signedjar</strong> 指定签名后的 apk 的路径。</p><p><strong>-verbose</strong> 输出详细的签名过程日志。</p><p>由于没有指定被签名 apk 文件的路径和使用的签名文件别名的参数，因此需要将这两个参数放在命令的最后。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例，如需添加  -verbose，请放在test.apk之前</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jarsigner</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -keystore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keystore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -storepass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> password</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -signedjar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> signed.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keyalias.</span></span></code></pre></div><h3 id="_2-2-校验" tabindex="-1"><a class="header-anchor" href="#_2-2-校验"><span>2.2. 校验</span></a></h3><p>使用命令 <code>jarsigner -verify [options] jar-file [alias...]</code></p><p><strong>-verbose</strong> 输出详细的签名信息。<br><strong>-certs</strong> 输出每个文件使用的签名证书。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jarsigner</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -verbose</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -certs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> signed.apk</span></span></code></pre></div><p>用上述命令只能检查 apk 中每个文件的签名情况，并不能获知使用的签名文件具体信息。建议使用 <code>apksigner</code> 命令或 <code>keytool</code> 命令。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keytool</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -printcert</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jarfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.apk</span></span></code></pre></div><h2 id="_3-zipalign" tabindex="-1"><a class="header-anchor" href="#_3-zipalign"><span>3. zipalign</span></a></h2><p>是 zip 压缩包的一个对齐工具。对齐之后可以减少 app 运行时的内存消耗。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 对齐 apk 文件，并输出信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zipalign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out.apk</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 检查 apk 文件的对齐信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">zipalign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> out.apk</span></span></code></pre></div><p><strong>由于 zipalign 命令是对 apk 文件进行修改，因此不适用于使用 V2 签名机制签名过的 apk 文件。因此建议先对齐，再签名。</strong></p>`,42)]))}const k=i(n,[["render",l],["__file","sign-apk.html.vue"]]),r=JSON.parse(`{"path":"/sign-apk.html","title":"签名apk文件","lang":"zh-CN","frontmatter":{"title":"签名apk文件","date":"2019-05-27 22:27:39 +0800","categories":["Android"],"description":"1. apksigner google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。 V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk 在解压之后二次打包压缩后可以安装。 V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk 在解压之后二次打包压缩后无法安装。 因此，在签名时，只...","head":[["link",{"rel":"canonical","href":"https://plugin-flueky.vuejs.press/sign-apk.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/sign-apk.html"}],["meta",{"property":"og:site_name","content":"Flueky's 技术小站"}],["meta",{"property":"og:title","content":"签名apk文件"}],["meta",{"property":"og:description","content":"1. apksigner google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。 V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk 在解压之后二次打包压缩后可以安装。 V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk 在解压之后二次打包压缩后无法安装。 因此，在签名时，只..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-16T16:46:05.000Z"}],["meta",{"property":"article:published_time","content":"2019-05-27T14:27:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-16T16:46:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"签名apk文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-27T14:27:39.000Z\\",\\"dateModified\\":\\"2024-10-16T16:46:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Flueky Zuo\\",\\"url\\":\\"https://flueky.github.io/blog/\\",\\"email\\":\\"flueky.zuo@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"1. apksigner","slug":"_1-apksigner","link":"#_1-apksigner","children":[{"level":3,"title":"1.1. 签名","slug":"_1-1-签名","link":"#_1-1-签名","children":[]},{"level":3,"title":"1.2. 校验","slug":"_1-2-校验","link":"#_1-2-校验","children":[]}]},{"level":2,"title":"2. jarsigner","slug":"_2-jarsigner","link":"#_2-jarsigner","children":[{"level":3,"title":"2.1. 签名","slug":"_2-1-签名","link":"#_2-1-签名","children":[]},{"level":3,"title":"2.2. 校验","slug":"_2-2-校验","link":"#_2-2-校验","children":[]}]},{"level":2,"title":"3. zipalign","slug":"_3-zipalign","link":"#_3-zipalign","children":[]}],"git":{"createdTime":1729097165000,"updatedTime":1729097165000,"contributors":[{"name":"Flueky Zuo","email":"flueky.zuo@zoom.us","commits":1}]},"readingTime":{"minutes":3.26,"words":977},"filePathRelative":"sign-apk.md","localizedDate":"2019年5月27日","excerpt":"","autoDesc":true}`);export{k as comp,r as data};
