<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://vuepress-theme-hope.github.io/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://vuepress-theme-hope.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Flueky&amp;apos;s 技术小站</title>
    <link>https://vuepress-theme-hope.github.io/</link>
    <description></description>
    <language>zh-CN</language>
    <pubDate>Wed, 16 Oct 2024 16:48:18 GMT</pubDate>
    <lastBuildDate>Wed, 16 Oct 2024 16:48:18 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>Android</category>
    <category>开发工具</category>
    <category>Arch</category>
    <category>Java</category>
    <category>Note</category>
    <category>Hexo</category>
    <category>字节处理</category>
    <category>加密</category>
    <category>Linux</category>
    <item>
      <title>第一个Android工程——HelloWord</title>
      <link>https://vuepress-theme-hope.github.io/hello-android.html</link>
      <guid>https://vuepress-theme-hope.github.io/hello-android.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">第一个Android工程——HelloWord</source>
      <description>1 创建工程 打开AndroidStudio程序，首页如下图： 创建新的 AndroidStudio 工程。 打开已有的 AndroidStudio 工程。 从版本控制器导出工程。 分析或调试 APK。 从 Gradle/Eclipse 工程导入。 导入 Android 代码示例。 选择创建新的工程： 支持创建手机、平板、穿戴设备、电视等多个平台的工程...</description>
      <category>Android</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<h2>1 创建工程</h2>
<p>打开<code>AndroidStudio</code>程序，首页如下图：</p>
<img src="/assets/image/012/14.png" width="400">
<ol>
<li>创建新的 <code>AndroidStudio</code> 工程。</li>
<li>打开已有的 <code>AndroidStudio</code> 工程。</li>
<li>从版本控制器导出工程。</li>
<li>分析或调试 <code>APK。</code></li>
<li>从 <code>Gradle/Eclipse</code> 工程导入。</li>
<li>导入 <code>Android</code> 代码示例。</li>
</ol>
<p>选择创建新的工程：</p>
<img src="/assets/image/012/15.png" width="500">
<p>支持创建手机、平板、穿戴设备、电视等多个平台的工程。入门阶段选择第一个就好。 任意选一个Activity模板，例如：BasicActivity。</p>
<img src="/assets/image/012/16.png" width="500">
<p>输入项目名称，包名，保存的位置以及兼容的最低系统版本，图中是 API 15，Android 4.0.3 版本。支持 <code>Java</code> 和 <code>Kotlin</code> 两种编程语言。</p>
<p>完成之后，会下载部分依赖的组件，如图：</p>
<img src="/assets/image/012/17.png" width="500">
<p>最后，进入工程页面，图中正在下载 gradle 4.10.1 版本。</p>
<img src="/assets/image/012/18.png" width="800">
<p>如果在下载 <code>gradle</code> 的时候遇到等了很久却下载失败的情况。</p>
<img src="/assets/image/012/19.png" width="800">
<p>可以复制下载的地址，使用浏览器或迅雷等工具下载。下载成功之后，将 zip 文件复制到到相同版本名称的目录下，请忽略随机串。</p>
<img src="/assets/image/012/20.png" width="400">
<p>图中是正确配置的结果，需要手动 解压 zip 文件，并删除 <code>part</code> 文件，最后新建一个 <code>ok</code> 文件，保证 <code>lck</code> 文件 和 <code>ok</code> 文件都是 0 KB。</p>
<p>重启 <code>AndroidStudio</code> ,会自动跳过 <code>gradle</code> 下载。除非修该改 gradle-wrapper.properties 中的 <code>gradle</code> 版本。</p>
<img src="/assets/image/012/21.png" width="800">
<p>初次编译时，需要等待一段时间下载工程依赖的第三方库，编译成功之后，注意图中标记处的前后对比。</p>
<h2>2 连接手机</h2>
<p>如果，你是一只计算机小白，那么这个地方可能让你头大，笔者曾经也是这么过来的。强烈推荐在电脑上安装<strong>豌豆荚</strong>,其他类手机助手软件也可以。助手软件会帮助你安装好手机驱动，提示你打开开发者模式。</p>
<p>如果，你是计算机高手，那么可以自行安装手机驱动程序，使电脑能够访问手机数据存储。其次，自行百度具体品牌手机，打开开发者模式的方式。</p>
<p>至于，使用 Mac 和 Linux 的小伙伴们大可放心。因为 Android 和 Mac 都使用 Linux 内核，因此 Android 设备和 Mac/Linux 系统可以很方便的进行连接，不需要单独安装驱动。但是，打开<strong>开发者选项</strong>和<strong>USB调试</strong>的方式，同上。</p>
<h2>3 打开开发者模式</h2>
<p>通用步骤：设置 -&gt; 关于手机 -&gt; 系统信息 中反复点击<strong>版本号</strong>直至提示开发者模式已经开始。回到设置页面，可以找到<strong>开发者选项</strong>菜单。进入开发者选项配置页面，打开<strong>USB调试</strong>。</p>
<img src="/assets/image/012/3.jpg" width="300">
<p>重新插拔手机，弹出窗口，提示需要授权电脑进行调试手机。</p>
<img src="/assets/image/012/4.jpg" width="300">
<p>如果是自己的电脑，建议勾选底部的一律允许使用这台计算机进行调试。</p>
<p>oppo 手机比较恶心，每隔一段时间，会自动终止 <code>adb</code> 服务，并关闭 <code>USB</code> 调试。需要重新打开。当遇见 <code>OV</code> 系列的手机，出现连不上手机的情况或者联上手机但无法进行调试的情况，请检查<strong>开发者选项</strong>和<strong>USB调试</strong>开关。</p>
<p>小米手机打开开发者模式的方式有些特殊，等有机会使用小米手机再举例。</p>
<h2>4 使用模拟器</h2>
<h2>5 运行工程</h2>
<p>点击 <code>app</code> 右边的三角形，运行程序。在弹出的框中选择真机或模拟器。</p>
<img src="/assets/image/012/23.png" width="500">
<p><code>Demo</code>  成功运行起来之后的样子，如下图。</p>
<img src="/assets/image/012/22.jpg" width="300">
<p>创建好 <code>Demo</code> 工程，并正确编译运行之后，若想对 <code>AndroidStudio</code> 工程的各个目录和文件有更深刻的认识，请阅读<a href="start-android">从零构建Android工程</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>安装AndroidStudio</title>
      <link>https://vuepress-theme-hope.github.io/install-androidstudio.html</link>
      <guid>https://vuepress-theme-hope.github.io/install-androidstudio.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">安装AndroidStudio</source>
      <description>公司准备招聘一批具备 Java 基础的实习生学习 Android 开发。因此，后续会出一系列的 Android 开发入门、基础、高级教程。那么，从第零步，搭建开发环境开始。由于 Android 是基于 Java 平台开发的，因此还需要安装 Java 环境。</description>
      <category>开发工具</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<p>公司准备招聘一批具备 Java 基础的实习生学习 Android 开发。因此，后续会出一系列的 Android 开发入门、基础、高级教程。那么，从第零步，搭建开发环境开始。由于 Android 是基于 Java 平台开发的，因此还需要<a href="install-java">安装 Java 环境</a>。</p>
<!-- more -->
<p>网上有很多搭建 Android 开发环境的教程，主要是基于 Eclipse 和  AndroidStudio 。其中，在下载 SDK 模块时，讲到需要设置代理。个人认为该方式可有可无，目前已经可以在大陆下载全部 SDK 代码，和访问 <a href="https://developer.android.google.cn/" target="_blank" rel="noopener noreferrer">Android 官网</a>。</p>
<h2>1 下载AndroidStudio</h2>
<p>AndroidStudio 3.3下载</p>
<ol>
<li>
<p><a href="https://redirector.gvt1.com/edgedl/android/studio/install/2024.2.1.10/android-studio-2024.2.1.10-windows.exe" target="_blank" rel="noopener noreferrer">android-studio-2024.2.1.10-windows</a></p>
</li>
<li>
<p><a href="https://redirector.gvt1.com/edgedl/android/studio/install/2024.2.1.10/android-studio-2024.2.1.10-mac.dmg" target="_blank" rel="noopener noreferrer">android-studio-2024.2.1.10-mac</a></p>
</li>
<li>
<p><a href="https://redirector.gvt1.com/edgedl/android/studio/install/2024.2.1.10/android-studio-2024.2.1.10-mac_arm.dmg" target="_blank" rel="noopener noreferrer">android-studio-2024.2.1.10-mac_arm</a></p>
</li>
<li>
<p><a href="https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.2.1.10/android-studio-2024.2.1.10-linux.tar.gz" target="_blank" rel="noopener noreferrer">android-studio-2024.2.1.10-linux</a></p>
</li>
</ol>
<h2>2 安装AndroidStudio</h2>
<p>安装步骤如下：</p>
<img src="/assets/image/101/1.png" width="400">
<img src="/assets/image/101/2.png" width="400">
<img src="/assets/image/101/3.png" width="400">
<img src="/assets/image/101/4.png" width="400">
<img src="/assets/image/101/5.png" width="400">
<img src="/assets/image/101/6.png" width="400">
<img src="/assets/image/101/7.png" width="400">
<h2>3 配置AndroidStudio</h2>
<p>第一次启动AndroidStudio，会弹出配置提示。如果电脑中已经安装过AS，可以使用上一个AS的配置，在这里，展示如何第一次配置AS。步骤如下：</p>
<img src="/assets/image/101/8.png" width="400">
<p>建议采用自定义配置模式。</p>
<img src="/assets/image/101/9.png" width="400">
<img src="/assets/image/101/10.png" width="400">
<p>为不增加配置后的下载时间，此处暂不下载安卓模拟器和硬件加速插件。指定的sdk路径即之前下载的SDK Tools 解压后的路径。</p>
<img src="/assets/image/101/11.png" width="400">
<p>下图显示需要下载的组件大小，点击finish后，开始下载模式。</p>
<img src="/assets/image/101/12.png" width="400">
<img src="/assets/image/101/13.png" width="400">
<p>如果安装<code>jdk11</code>之后，无法正确打开<code>AndroidStudio</code>。请检查是否配置<code>jre</code>目录。其他版本 <code>jdk</code> 不存在这个问题。如果是下载的 <code>zip</code> 包，建议将 <code>studio.exe</code> 添加到桌面快捷方式，而不是 <code>studio64.exe</code></p>
<p>创建第一个Android工程，<a href="hello-android">请跳转</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Arch 安装教程</title>
      <link>https://vuepress-theme-hope.github.io/install-arch.html</link>
      <guid>https://vuepress-theme-hope.github.io/install-arch.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Arch 安装教程</source>
      <description>Arch 安装教程，支持UEFI和BIOS两种方式。官方教程地址。</description>
      <category>Arch</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<p>Arch 安装教程，支持UEFI和BIOS两种方式。官方教程<a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener noreferrer">地址</a>。</p>
<!-- more -->
<h2>环境准备</h2>
<h3>真机</h3>
<h4>引导模式</h4>
<p>在真机上装 Arch ，尤其是准备装双系统，建议了解下自己主板兼容的引导模式。开机时 按下 F2 键，进入主板系统界面。</p>
<img src="/assets/image/103/014.jpg">
<p>如图示的主板信息，支持 Legacy （传统模式，记BIOS）和 UEFI 模式。不同的模式，在后续分区操作、安装引导程序时略有区别。如需安装双系统，建议使用 UEFI 模式。</p>
<h4>制作启动盘</h4>
<p>Arch 系统镜像比较小，约 700MB 。官方<a href="https://archlinux.org/download/" target="_blank" rel="noopener noreferrer">下载地址</a>，通常比较慢，建议使用国内镜像下载地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/2021.01.01/" target="_blank" rel="noopener noreferrer">清华镜像</a>，<a href="https://mirrors.ustc.edu.cn/archlinux/iso/2021.01.01/" target="_blank" rel="noopener noreferrer">中科大镜像</a>。</p>
<p>使用 <a href="https://cn.ultraiso.net/" target="_blank" rel="noopener noreferrer">UtraIso</a> 工具将下载下来的 ios 文件写入 U 盘中。具体破解方式和制作启动盘的方式百度有很多。</p>
<p>最后在开机时，按住 F12 出现如下页面，选择从 U 盘启动。</p>
<img src="/assets/image/103/015.jpg">
<p><strong>不同主板之间略有差异，F2 和 F12 支持多数主板，如无效，则需要确认好主板厂商，了解到具体的设置方式。</strong></p>
<p>安装过程中，需要一根网线直连路由器，比在安装过程中使用拨号连接和 wifi 连接方便。</p>
<h3>虚拟机</h3>
<p>推荐使用 VirtualBox 虚拟机，<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener noreferrer">下载地址</a>。</p>
<img src="/assets/image/103/001.png">
<p>新建虚拟电脑。</p>
<img src="/assets/image/103/002.png">
<p>设置系统类型。</p>
<img src="/assets/image/103/003.png">
<p>设置内存大小，根据实际内存大小分配。最少1G，建议2G。如果内存够大，请任性些。<strong>1GB=1024MB</strong>。</p>
<img src="/assets/image/103/004.png">
<p>创建虚拟硬盘。</p>
<img src="/assets/image/103/005.png">
<p>选择虚拟硬盘文件类型。</p>
<img src="/assets/image/103/006.png">
<p>设置使用动态分配的方式。即，设置虚拟硬盘100G，最后根据实际的系统占用空间，占用物理硬盘空间。</p>
<img src="/assets/image/103/007.png">
<p>确认虚拟硬盘文件位置和大小后，创建虚拟电脑。再次打开设置。</p>
<img src="/assets/image/103/008.png">
<p>设置系统启动顺序。硬盘第一，光驱第二。<br>
设置是否启用 EFI 。同主板的 BIOS 和 UEFI 区别。</p>
<img src="/assets/image/103/009.png">
<p>如果主机是多核多线程 CPU ，可以适当添加 CPU 数量。</p>
<img src="/assets/image/103/010.png">
<p>设置显存大小，建议模式。</p>
<img src="/assets/image/103/011.png">
<p>对虚拟光驱，添加下载下来的安装镜像文件。</p>
<img src="/assets/image/103/013.png">
<p>网络模式中，选择 NAT 模式。这样，虚拟电脑可以使用真机网络。</p>
<img src="/assets/image/103/012.png">
<p>配置完成后，启动虚拟电脑。</p>
<h2>安装系统</h2>
<p><strong>为方便截图，后续操作都在虚拟机中执行</strong>。</p>
<p>启动后，可以见到下面两图中的一个。第一个是 BIOS 模式启动，第二个是 UEFI 模式启动。</p>
<img src="/assets/image/103/016.png">
<img src="/assets/image/103/017.png">
<p>启动后，在图示状态下，判断联网情况。真机安装模式下，需要将网线连接路由器，虚拟机安装模式下，需要使用 NAT 联网方式（见虚拟机的配置）。</p>
<img src="/assets/image/103/018.png">
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ping</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> www.baidu.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 若 ping 测试发现联网失败，启用 dhcp 服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dhcpcd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 启用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dhcpcd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 启动</span></span></code></pre>
</div><h3>硬盘分区</h3>
<p>真机安装时，硬盘通常已有分区。如无重要数据，可以直接格式化全盘。如，保留硬盘中数据，或安装双系统，请确保至少有一个空的磁盘分区。</p>
<p>Linux 中磁盘概念与 Windows 不一样。第一块硬盘记 sda ，多块硬盘依次记 sda sdb sdc ... 。第一块硬盘的第一个分区记 sda1 ，多个分区依次记 sda1 sda2 sda3 ...。</p>
<p>虚拟机安装时，之前创建的是一块空硬盘，因此还需要设置分区表。如果在真机上安装时，允许全盘格式化硬盘，也可以重新设置分区表。</p>
<p>分区表有两种，MBR 和 GPT 。对应不同的主板模式。建议 BIOS + MBR ，UEFI + GPT 。换种组合，可能导致，无法正确进入系统，尤其是双系统安装的场景。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 以下是修改硬盘分区时涉及到的命令，不一定需要全部执行。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fdisk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -l</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看硬盘及分区情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 修改硬盘分区表，只有新硬盘需执行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    mktable</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # 设置分区表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        gpt</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # GPT 分区表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        msdos</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # MBR 分区表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    quit</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        # 退出 parted</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cfdisk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 对硬盘进行分区。可以只操作硬盘中的一个分区。</span></span></code></pre>
</div><p>cfdisk 命令弹出可交互式命令终端。真机安装时，希望只在其中一个硬盘分区中安装 Arch ，直接通过方向键选中待安装的分区，如，sda4 ，选择 Delete 删除分区信息。 New 新建分区，输入待分区大小。选择 Type 设置分区类型，主要有三个 ：EFI System，Linux swap Linux filesystem 。选择 Write 写入分区信息。选择 Quit ，退出分区程序。分区示例，如下。</p>
<img src="/assets/image/103/019.png">
<h3>分区建议</h3>
<h4>BIOS+MBR</h4>
<ol>
<li>交换空间，4G。挂载点，（可选）。</li>
<li>根分区，40G，挂载点 / 。</li>
<li>用户分区，剩余可用空间，挂载点 /home （可选）。</li>
</ol>
<h4>UEFI+GPT</h4>
<ol>
<li>EFI 系统分区，300M，挂载点 /boot/efi。</li>
<li>交换空间，4G。挂载点，（可选）。</li>
<li>根分区，40G，挂载点 / 。</li>
<li>用户分区，剩余可用空间，挂载点 /home （可选）。</li>
</ol>
<blockquote>
<ul>
<li>真机安装时，如果内存够大，如8G，则无须使用交换空间。</li>
<li>用户分区非必须。若重装系统时，根分区需要格式化，用户分区则不需要。相当于 windows下 C 盘和 D 盘的区别。</li>
</ul>
</blockquote>
<h3>格式化分区</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkfs.ext4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda3</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 格式化根分区，Linux filesystem类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkfs.ext4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda4</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 格式化用户分区</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkfs.vfat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda1</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 格式化EFI系统分区，EFI System类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkswap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda2</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 格式化交换空间，Linux swap 类型</span></span></code></pre>
</div><h3>挂载分区</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mount</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         # 挂载根分区到 /mnt 目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> home</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                   # 建立用户分区目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mount</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt/home</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 挂载用户分区到 /mnt/home 目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt/boot</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt/boot/efi</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">          # 建议efi分区目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mount</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt/boot/efi</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 挂载 EFI系统分区到 /mnt/boot/efi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">swapon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda2</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">             # 挂载交换空间</span></span></code></pre>
</div><p>以上命令根据实际分区情况执行。</p>
<h3>修改安装源</h3>
<p>安装过程，需要下载大量的系统文件，配置国内的安装源，有利于加快安装速度。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/pacman.d/mirrorlist</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 编辑安装源清单文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 以下是对 vim 的一些操作方式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    /China</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 搜索 China 字符串</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        回车</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 执行搜索</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        n</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # 搜索下一个</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    2dd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    #     看Server，找到 ustc 的地址，剪切两行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    gg</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # 回到第一行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    p</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">      # 移动光标到适当位置，粘贴</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    esc</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 退出编辑状态</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    !</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wq</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 保存并退出 vim </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 正确修改安装源之后，更新源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -Syy</span></span></code></pre>
</div><img src="/assets/image/103/020.png">
<h3>安装系统文件</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 下载 arch 基础组件和 linux 内核，后面过程，全部回车</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacstrap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> base</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> linux</span></span></code></pre>
</div><img src="/assets/image/103/021.png">
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 生成 fstab 文件，用于启动时挂载硬盘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">genfstab</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -U</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt/etc/fstab</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt/etc/fstab</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看刚刚生成的文件</span></span></code></pre>
</div><img src="/assets/image/103/022.png">
<h3>配置系统</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">arch-chroot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         # 进入安装的系统</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">passwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">              # 设置 root 账户密码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dhcpcd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         # 下载 dhcp 服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dhcpcd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 启用 dhcp 服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dhcpcd</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # 启动 dhcp 服务</span></span></code></pre>
</div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacamn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> grub</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">               # 安装 grub 引导程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> efibootmgr</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         # 安装 efi 启动程序，可选</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 双系统需要安装读 ntfs 分区和检测windows系统程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> os-prober</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ntfs-3g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装 BIOS+MBR 的引导程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">grub-install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --target=i386-pc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装 UEFI+GPT 的引导程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">grub-install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --target=x86_64-efi</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --efi-directory=/boot/efi</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --bootloader-id=Arch</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 生成引导文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">grub-mkconfig</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /boot/grub/grub.cfg</span></span></code></pre>
</div><img src="/assets/image/103/023.png">
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">exit</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 退出系统</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">reboot</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 重启虚拟机或电脑</span></span></code></pre>
</div><p>重新启动后，输入密码如图示：</p>
<img src="/assets/image/103/024.png">
<h3>设置时区</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 设置时区</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -sf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /usr/share/zoneinfo/Asia/Shanghai</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/localtime</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 设置在线同步时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">timedatectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> set-ntp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 查看时间信息 UTC，格林威治时间，CST 北京时间。差8个时区</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">tiemdatectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> status</span></span></code></pre>
</div><img src="/assets/image/103/025.png">
<h3>添加用户</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">useradd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wheel</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> #用户名，做开发 首字母</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">passwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 设置 zkf 用户密码 ，需要输入两次 </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 提权操作，默认的 zkf 账户，无法获取 root 权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sudo</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装必备程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">visudo</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            # 编辑提权文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 同 vim 的操作，删除 %wheel ALL=(ALL) ALL 或其下面一行之前的井号。下面使用 sudo 命令不需要密码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    /wheel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    :wq</span></span></code></pre>
</div><h3>本地化</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vim</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装 vim，之前可以用 vim 是安装包附带的，新系统需要重新安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/locale.gen</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 修改本地化配置文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 打开 en_US.UTF-8 ,zh_CN.UTF-8前的井号</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">locale-gen</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 生成配置</span></span></code></pre>
</div><p>至此，Arch 系统即安装配置完成。后续还会有图形化系统安装和桌面美化。</p>
<p>下次开机时，即可登录刚创建的 zkf 账户。或者输入 exit 退出 root ，直接登录 zkf 也可以。</p>
<p>最后两个命令</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">poweroff</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 关机 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">restart</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 重启</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>安装Java环境-Windows</title>
      <link>https://vuepress-theme-hope.github.io/install-java.html</link>
      <guid>https://vuepress-theme-hope.github.io/install-java.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">安装Java环境-Windows</source>
      <description>1 下载jdk jdk 8 下载链接 jdk 10 下载链接 2 安装jdk 双击下载下来的exe文件执行安装。安装过程截图如下： 安装后，使用快捷键 win+R 输入cmd 运行终端程序，在终端中 输入 java -version 校验安装结果。 如图所示，安装成功。 3 配置环境变量 打开系统属性 点击高级系统设置 点击环境变量 在系统变量中新建变...</description>
      <category>开发工具</category>
      <category>Java</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<h2>1 下载jdk</h2>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener noreferrer">jdk 8 下载链接</a></p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk10-downloads-4416644.html" target="_blank" rel="noopener noreferrer">jdk 10 下载链接</a></p>
<h2>2 安装jdk</h2>
<p>双击下载下来的exe文件执行安装。安装过程截图如下：</p>
<img src="/assets/image/100/6.png" width="400">
<br>
<img src="/assets/image/100/1.png" width="400">
<br>
<img src="/assets/image/100/2.png" width="400">
<br>
<img src="/assets/image/100/7.png" width="400">
<br>
<img src="/assets/image/100/3.png" width="500">
<br>
<img src="/assets/image/100/4.png" width="500">
<br>
<img src="/assets/image/100/5.png" width="400">
<p>安装后，使用快捷键 win+R 输入cmd 运行终端程序，在终端中 输入 <code>java -version</code> 校验安装结果。</p>
<img src="/assets/image/100/8.png" width="400">
<p>如图所示，安装成功。</p>
<h2>3 配置环境变量</h2>
<ol>
<li>打开系统属性</li>
</ol>
<img src="/assets/image/100/9.png" width="800">
<ol start="2">
<li>点击高级系统设置</li>
</ol>
<img src="/assets/image/100/10.png" width="400">
<ol start="3">
<li>点击环境变量</li>
</ol>
<img src="/assets/image/100/11.png" width="500">
<ol start="4">
<li>在系统变量中新建变量</li>
</ol>
<p>新建<code>JAVA_HOME</code>变量，变量值是<code>jdk</code>安装目录。</p>
<img src="/assets/image/100/15.png" width="350">
<ol start="5">
<li>在系统变量中选择Path变量</li>
</ol>
<img src="/assets/image/100/12.png" width="700">
<ol start="6">
<li>编辑Path变量，在变量值的末尾添加下面的内容。</li>
</ol>
<blockquote>
<p>C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin</p>
</blockquote>
<p>或者使用</p>
<blockquote>
<p>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</p>
</blockquote>
<ol start="7">
<li>保存退出后，再在终端中依次输入 <code>javac</code>、<code>javah</code>校验环境变量是否修改成功。</li>
</ol>
<img src="/assets/image/100/13.png" width="700">
<img src="/assets/image/100/14.png" width="700">
<h2>jdk 11</h2>
<p>jdk 11 默认没有 <code>jre</code> 目录，需要手动生成。在 jdk 目录下执行下面的命令。</p>
<blockquote>
<p>bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</p>
</blockquote>
<p>jdk 8 之后，不再支持 <code>javah</code> 命令生成头文件，使用 <code>javac -h</code> 替换。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Arch 定制化安装与美化</title>
      <link>https://vuepress-theme-hope.github.io/personalize-arch.html</link>
      <guid>https://vuepress-theme-hope.github.io/personalize-arch.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Arch 定制化安装与美化</source>
      <description>Arch 最大的魅力在于，他的高度可定制化安装。网上有提供好的资源，只需往系统中集成即可。但是有很多教程在图形化界面安装方面比较千篇一律。不论组件是否需要，全部安装。最终导致系统体积较大。 此篇教程的目的在于，最少化安装组件。装出最轻的系统。在前一篇教程的基础上，开始吧。</description>
      <category>Arch</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<p>Arch 最大的魅力在于，他的高度可定制化安装。网上有提供好的资源，只需往系统中集成即可。但是有很多教程在图形化界面安装方面比较千篇一律。不论组件是否需要，全部安装。最终导致系统体积较大。</p>
<p>此篇教程的目的在于，最少化安装组件。装出最轻的系统。在<a href="https://blog.csdn.net/flueky/article/details/113006329" target="_blank" rel="noopener noreferrer">前一篇教程</a>的基础上，开始吧。</p>
<!-- more -->
<p>启动系统，登录个人账户（非root账户）。</p>
<h2>安装 gnome 显示管理</h2>
<p>有打包好的 gnome 组件，安装包较多。此处不用，首先只安装两个模块。gdm 和 terminal 终端。要求先进入图形化界面</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tilix</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装图形化终端,不使用 gnome-terminal，</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gdm</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            # 安装显示管理组件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gdm</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # 启用显示管理</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gdm</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">      # 启动显示管理</span></span></code></pre>
</div><img src="/assets/image/104/001.png" width="600">
<img src="/assets/image/104/002.png" width="600">
<p>使用 <em>gnome on xorg</em> 登录。</p>
<img src="/assets/image/104/003.png" width="600">
<p>没有多余的程序。查看磁盘空间，系统盘仅用 4G ，比一个安卓系统都小。</p>
<img src="/assets/image/104/004.png" width="600">
<p>下面将一步一步完善此系统。</p>
<h2>添加 archlinuxcn 源</h2>
<p>此类源可以方便的安装一些国内应用，比如网易云音乐。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/pacman.conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 打开 multilib 前的注释</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[multilib]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/pacman.d/mirrorlist</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 添加 archlinuxcn</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[archlinuxcn]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SigLevel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Optional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TrustAll</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 此行没有时，需要安装 keyring</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://mirrors.ustc.edu.cn/archlinuxcn/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$arch</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 更新源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -Syy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> archlinuxcn-keyring</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装密钥对</span></span></code></pre>
</div><img src="/assets/image/104/005.png">
<p>最后两个表示新添加的源。</p>
<h2>浏览器</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> firefox</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 火狐浏览器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> google-chrome</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 谷歌浏览器</span></span></code></pre>
</div><h2>中文字体</h2>
<p>使用浏览器打开百度首页，惊奇的发现显示不了汉字。莫慌。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装文泉艺字体</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wqy-zenhei</span></span></code></pre>
</div><p>其他字体见<a href="https://wiki.archlinux.org/index.php/Fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener noreferrer">Arch Wiki</a>。</p>
<h2>gnome 美化</h2>
<p>火狐浏览器打开 <a href="https://extensions.gnome.org" target="_blank" rel="noopener noreferrer">gnome 扩展</a>，安装浏览器插件。</p>
<img src="/assets/image/104/006.png">
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装美化工具与扩展</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gnome-shell-extensions</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> chrome-gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gnome-tweaks</span></span></code></pre>
</div><img src="/assets/image/104/007.png">
<p>此时 tewak 自带很多扩展组件可以使用。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装 AUR ，解决部分 pacman 安装不了的库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> yay</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> yaourt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装 vimix 主题</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 选中 4 ，vimix-gtk-themes</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 选中 6 ，vimix-icon-themes</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> yay</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vimix</span></span></code></pre>
</div><p>注销后，重新登录。tweaks 配置如下：</p>
<img src="/assets/image/104/008.png">
<p>在窗口标题栏（Window Titlebars）打开最大化和最小化按钮。</p>
<img src="/assets/image/104/009.png">
<p>通过浏览器安装 Dock 工具。在 Tweaks 中，配置 Dock 。</p>
<img src="/assets/image/104/010.png">
<p>通过以上配置，桌面效果也算不丑了。只是缺一张好看的壁纸。</p>
<h2>终端美化 zsh</h2>
<p>使用 <a href="https://ohmyzsh.sh" target="_blank" rel="noopener noreferrer">Oh My ZSH</a>。</p>
<p>由于国内网络的通病，官方教程的下载方式，提示 403 错误。需要手动下载安装脚本。</p>
<ol>
<li>打开其github地址：<a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noopener noreferrer">https://github.com/ohmyzsh/ohmyzsh</a></li>
<li>找到 <a href="http://install.sh" target="_blank" rel="noopener noreferrer">install.sh</a> 脚本位置：tools/install.sh</li>
<li>复制其文件内容。</li>
</ol>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> oh-my-zsh.sh</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            # 粘贴刚刚复制的内容，保存并退出。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> oh-my-zsh.sh</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 给脚本添加可执行权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zsh</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">          # 安装 zsh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 执行主题下载脚本，需要 git 支持。之前安装 AUR 时已经同步下载。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> oh-my-zsh.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .zshrc</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                  # 编辑配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    i</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                       # 进入编辑模式</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 修改 ZSH_THEME="ys"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    :wq</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                     # 保存并退出</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .zshrc</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">               # 使修改生效</span></span></code></pre>
</div><img src="/assets/image/104/013.png">
<p>如上，美化操作已完成。</p>
<h2>设置中心</h2>
<p>切换不了壁纸。因为还缺少控制中心程序。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gnome-control-center</span></span></code></pre>
</div><p>此时可以自在的切换壁纸了。</p>
<img src="/assets/image/104/011.png">
<p>但是在网络标签中还无法查看网络连接情况。</p>
<h2>网络</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装网络管理，并启动服务，之后在设置中可以查看</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> networkmanager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NetworkManager</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NetworkManager</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 无线网驱动，通常有两种方式安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> linux-firmware</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 通用 linux 驱动</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 如果是博通网卡</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> broadcom-wl</span></span></code></pre>
</div><h2>文件管理</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nautilus</span></span></code></pre>
</div><img src="/assets/image/104/012.png">
<h2>中文与输入法</h2>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fcitx-im</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                  # 安装输入法框架</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fcitx-configtool</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">          # 安装配置模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fcitx-googlepinyin</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        # 安装 google 输入法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/.xprofile</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                          # 添加输入法配置，之前使用 gome on xorg 登录才会有效</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> XIM</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fcitx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> XIM_PROGRAM</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fcitx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> GTK_IM_MODULE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fcitx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> QT_IM_MODULE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fcitx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> XMODIFIERS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">im</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fcitx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/locale.conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                # 添加中文支持，然后注销或重启生效</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">LANG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">en_US.UTF-8</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">LANG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">zh_CN.UTF-8</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，图形化界面和 gnome 美化部分已经完成。附上本机电脑的美化效果。后续操作还是建议多找找资料。</p>
<img src="/assets/image/104/014.png" width="800">
<img src="/assets/image/104/015.png" width="800">
<h2>其他常用软件</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> electronic-wechat</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">       # 微信</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> linuxqq</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                 # qq</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> netease-cloud-music</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # 网易云音乐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> gwenview</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                # 看图工具</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yay</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wps-office</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                         # wps office</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>签名apk文件</title>
      <link>https://vuepress-theme-hope.github.io/sign-apk.html</link>
      <guid>https://vuepress-theme-hope.github.io/sign-apk.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">签名apk文件</source>
      <description>1. apksigner google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。 V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk 在解压之后二次打包压缩后可以安装。 V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk 在解压之后二次打包压缩后无法安装。 因此，在签名时，只...</description>
      <category>Android</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<h2>1. apksigner</h2>
<p>google 官方提供的 apk 文件签名工具。支持 V1 和 V2 签名规则。</p>
<ol>
<li>V1是对 apk 中每个文件进行签名校验。使用 V1 规则的 apk  在解压之后二次打包压缩后可以安装。</li>
<li>V2是在 V1 的基础上，对 apk 文件进行校验。因此，使用 V2 规则的 apk  在解压之后二次打包压缩后无法安装。</li>
</ol>
<p><strong>因此，在签名时，只能选择 V1 或 V1+V2,不能只选择 V2 。</strong></p>
<h3>1.1. 签名</h3>
<p>使用命令 <code>apksigner sign</code> 对 apk 文件进行签名。</p>
<p>常用参数有：</p>
<p><strong>--in</strong> 指定待签名 apk 文件的路径。<br><br>
<strong>--out</strong> 指定签名后的 apk 文件路径。<strong>可以同 --in 一样，可以不用。</strong></p>
<p><strong>可以在全部命令的最后指定待签名的 apk 路径。--in --out 即都指向该路径。</strong></p>
<p><strong>--v1-signing-enabled</strong> 使用 true false 指定是否使用 v1 规则签名。<br><br>
<strong>--v2-signing-enabled</strong> 使用 true false 指定是否使用 v2 规则签名。</p>
<p><strong>--debuggable-apk-permitted</strong> 使用 true false 指定是否允许对测试 apk 文件进行签名，默认是允许。但是官方不建议使用生产签名文件对测试 apk 文件进行签名。</p>
<p><strong>--ks</strong> 指定 keystore 的路径。<br><br>
<strong>--ks-pass</strong> 指定 keystore 的密码。如： pass:password。 password 是签名文件密码。<br><br>
<strong>--ks-key-alias</strong> 指定使用的签名文件别名，通常一个签名文件可以包含多个别名。签名文件中只包含一个别名时，可以不使用。<br><br>
<strong>--key-pass</strong> 指定别名 key 的密码。如： pass:password。 password 是签名文件密码。</p>
<p>以上是使用 keystore 对 apk 签名。apksigner 还支持更多种方式，如：私钥文件、JCA Providers 对 apk 签名。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --ks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> debug.keystore</span></span></code></pre>
</div><h3>1.2. 校验</h3>
<p>使用 <code>apksigner verify</code> 校验已签名的 apk 文件。包括查看签名方式和使用的证书信息。</p>
<p>常用参数有：</p>
<p><strong>-v</strong> 显示签名详情，是否使用 v1 、v2 签名。</p>
<p><strong>--in</strong> 指定待校验的 apk 文件路径。当 apk 路径放在命令末尾时，此参数可以省略。</p>
<p><strong>--print-certs</strong> 显示 apk 文件中包含的签名文件证书信息。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 示例 1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> app-release.apk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -print-certs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 示例 2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apksigner</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -print-certs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> app-release.apk</span></span></code></pre>
</div><h2>2. jarsigner</h2>
<p>是 jdk 提供的对 jar 文件的签名工具。</p>
<h3>2.1. 签名</h3>
<p>使用命令 <code>jarsigner [options] jar-file alias</code> 对 apk 文件 签名 。其中 jar-file 对应 apk 文件路径，alias 对应 签名文件中的别名。 options 常用参数如下：</p>
<p><strong>-keystore</strong> 指定使用的签名文件的路径。</p>
<p><strong>-storepass</strong> 指定使用签名文件的密码。</p>
<p><strong>-keypass</strong> 指定使用 alias 对应的密码。可以不使用，执行时手动输入。</p>
<p><strong>-signedjar</strong> 指定签名后的 apk 的路径。</p>
<p><strong>-verbose</strong> 输出详细的签名过程日志。</p>
<p>由于没有指定被签名 apk 文件的路径和使用的签名文件别名的参数，因此需要将这两个参数放在命令的最后。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 示例，如需添加  -verbose，请放在test.apk之前</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">jarsigner</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -keystore</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> keystore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -storepass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> password</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -signedjar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> signed.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> keyalias.</span></span></code></pre>
</div><h3>2.2. 校验</h3>
<p>使用命令  <code>jarsigner -verify [options] jar-file [alias...]</code></p>
<p><strong>-verbose</strong> 输出详细的签名信息。<br>
<strong>-certs</strong> 输出每个文件使用的签名证书。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 示例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">jarsigner</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -verify</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -verbose</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -certs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> signed.apk</span></span></code></pre>
</div><p>用上述命令只能检查 apk 中每个文件的签名情况，并不能获知使用的签名文件具体信息。建议使用 <code>apksigner</code> 命令或 <code>keytool</code> 命令。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">keytool</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -printcert</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -jarfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test.apk</span></span></code></pre>
</div><h2>3. zipalign</h2>
<p>是 zip 压缩包的一个对齐工具。对齐之后可以减少 app 运行时的内存消耗。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 对齐 apk 文件，并输出信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">zipalign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in.apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> out.apk</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 检查 apk 文件的对齐信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">zipalign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> out.apk</span></span></code></pre>
</div><p><strong>由于 zipalign 命令是对 apk 文件进行修改，因此不适用于使用 V2 签名机制签名过的 apk 文件。因此建议先对齐，再签名。</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>从零构建Android工程</title>
      <link>https://vuepress-theme-hope.github.io/start-android.html</link>
      <guid>https://vuepress-theme-hope.github.io/start-android.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">从零构建Android工程</source>
      <description>1 新建工程目录 新建文件夹Demo，用AndroidStudio打开。 新建build.gradle文件，添加如下内容： 构建工程后如图： 自动生成的gradle文件夹及使用的gradle不建议修改。如想调降gradle版本，建议降低build插件版本。 2 新建主module目录 新建settings.gradle文件和app文件夹，并在setti...</description>
      <category>Android</category>
      <category>开发工具</category>
      <pubDate>Wed, 16 Oct 2024 16:46:05 GMT</pubDate>
      <content:encoded><![CDATA[<h2>1 新建工程目录</h2>
<p>新建文件夹<code>Demo</code>，用<code>AndroidStudio</code>打开。</p>
<img src="/assets/image/001/1.png" width="250">
<p>新建<code>build.gradle</code>文件，添加如下内容：</p>
<div class="language-gradle" data-highlighter="shiki" data-ext="gradle" data-title="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>buildscript {</span></span>
<span class="line"><span>    repositories{</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    dependencies{</span></span>
<span class="line"><span>        // 目前最新build插件版本 3.2.1</span></span>
<span class="line"><span>        classpath 'com.android.tools.build:gradle:3.2.1'</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
</div><p>构建工程后如图：</p>
<img src="/assets/image/001/2.png" width="250">
<p>自动生成的<code>gradle</code>文件夹及使用的<code>gradle</code>不建议修改。如想调降<code>gradle</code>版本，建议降低<code>build</code>插件版本。</p>
<h2>2 新建主module目录</h2>
<p>新建<code>settings.gradle</code>文件和<code>app</code>文件夹，并在<code>settings.gradle</code>文件中添加<code>include ':app'</code>,再次构建工程，<code>app</code>文件夹图标改变。</p>
<p>构建前：<br><br>
<img src="/assets/image/001/3.png" width="250"><br><br>
构建后：<br><br>
<img src="/assets/image/001/4.png" width="250"><br></p>
<p>在<code>app</code>目录下新建<code>build.gradle</code>文件，并添加如下内容：</p>
<div class="language-gradle" data-highlighter="shiki" data-ext="gradle" data-title="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>apply plugin: 'com.android.application'</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android{</span></span>
<span class="line"><span>    compileSdkVersion 28 //目前最新sdk 28</span></span>
<span class="line"><span>}</span></span></code></pre>
</div><p>在<code>app</code>目录下新建 <code>src</code>、<code>src/main</code>文件夹,并在<code>main</code>文件夹中新建<code>AndroidManifest.xml</code>文件，添加如下内容：</p>
<div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;?</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">xml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1.0"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.flueky.demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><p>最后在工程<code>build.gradle</code>文件添加:</p>
<div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" data-title="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>buildscript {</span></span>
<span class="line"><span>    repositories{</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    dependencies{</span></span>
<span class="line"><span>        classpath 'com.android.tools.build:gradle:3.2.1'</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>// 以下是添加部分，定义全部工程的资源库</span></span>
<span class="line"><span>allprojects{</span></span>
<span class="line"><span>    repositories{</span></span>
<span class="line"><span>        jcenter()</span></span>
<span class="line"><span>        google()</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出现图中标志时，表示项目已经构建完成。添加默认启动<code>Activity</code>即可去掉   号。</p>
<p><img src="/assets/image/001/5.png" width="200"><br></p>
<h2>3 添加启动Activity</h2>
<ol>
<li>在<code>app/src/main</code>目录下分别新建<code>java</code>和<code>res</code>文件夹。</li>
<li>在<code>java</code>目录下创建包名：<code>com.flueky.demo</code>，并创建<code>MainActivity</code>类。</li>
<li>在<code>res</code>目录加创建<code>layout</code>文件夹，并创建<code>activity_main.xml</code>布局。</li>
<li>在<code>AndroidManifest.xml</code>文件注册<code>MainActivity</code>。</li>
<li>给<code>MainActivity</code>添加启动<code>intent</code>。</li>
</ol>
<p>最终目录结构如图：<br><br>
<img src="/assets/image/001/6.png" width="250"></p>
<p><code>MainActivity</code>内容：<br></p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> com.flueky.demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> android.app.Activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> android.os.Bundle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MainActivity</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onCreate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Bundle</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> savedInstanceState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onCreate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(savedInstanceState);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        setContentView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">activity_main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
</div><p><code>activity_main.xml</code>内容：</p>
<div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;?</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">xml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1.0"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">LinearLayout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> xmlns:android</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://schemas.android.com/apk/res/android"</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    android:layout_width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"match_parent"</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    android:layout_height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"match_parent"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">TextView</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        android:layout_width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"match_parent"</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        android:layout_height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"wrap_content"</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        android:text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello World"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">LinearLayout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><p><code>AndroidManifest.xml</code>内容：</p>
<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;?</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">xml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1.0"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> xmlns:android</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://schemas.android.com/apk/res/android"</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.flueky.demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activity</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">".MainActivity"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">action</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"android.intent.action.MAIN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">category</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> android:name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"android.intent.category.LAUNCHER"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">intent-filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果如图：<br><br>
<img src="/assets/image/001/7.png" width="250"></p>
<h2>4 新建库module目录</h2>
<p>新建<code>library</code>文件夹，并在<code>settings.gradle</code>文件中添加<code>include ':library'</code>，构建后如下，注意<code>library</code>文件夹的标志。</p>
<img src="/assets/image/001/8.png" width="250">
<p>同主<code>module</code>一样，创建<code>AndroidManifest.xml</code>文件和<code>build.gradle</code>文件。</p>
<p>编辑<code>AndroidManifest.xml</code>文件：</p>
<div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;?</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">xml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1.0"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ?&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"com.flueky.library"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">manifest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
</div><p>编辑<code>build.gradle</code>文件：</p>
<div class="language-gradle" data-highlighter="shiki" data-ext="gradle" data-title="gradle" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>apply plugin: 'com.android.library'</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android {</span></span>
<span class="line"><span>    compileSdkVersion 28</span></span>
<span class="line"><span>}</span></span></code></pre>
</div><p>在主<code>module</code>文件中，添加下面的代码进行关联。</p>
<pre><code>implementation project(':library')
</code></pre>
<h2>5 结束语</h2>
<p><code>AndroidStudio</code>自带的创建项目功能，做的很好。能够帮助初学者最快速度的创建<code>Android</code>工程，编写此篇博客的目的在于，能够帮助初学者们更好的了解<code>Android</code>项目工程结构。最后，将此篇博客献给测试小伙伴们。你们距离程序猿，只差面向对象编程了。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用PlantUML绘制类图</title>
      <link>https://vuepress-theme-hope.github.io/plantuml.html</link>
      <guid>https://vuepress-theme-hope.github.io/plantuml.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">使用PlantUML绘制类图</source>
      <description>本文基于sublime的PlantUML插件绘制类图。如需了解插件安装，请点击Sublime安装PlantUML插件</description>
      <category>开发工具</category>
      <pubDate>Wed, 16 Oct 2024 14:32:21 GMT</pubDate>
      <content:encoded><![CDATA[<p>本文基于sublime的PlantUML插件绘制类图。如需了解插件安装，请点击<a href="sublime-plantuml">Sublime安装PlantUML插件</a></p>
<!-- more -->
<h2>1 类的UML表示</h2>
<p>使用UML表示一个类，主要由三部分组成。<code>类名</code>、<code>属性</code>、<code>方法</code>。其中<code>属性</code>和<code>方法</code>的访问修饰符用 <code>-</code> 、<code>#</code> 、<code>+</code> 表示 <code>private</code>、<code>protected</code>、<code>public</code>。</p>
<img src="/assets/image/005/1.png" width="200">
<p>如图所示，表示<code>A</code>类有一个<code>private</code>属性，<code>protected</code> 构造函数和<code>public</code>方法。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A{</span></span>
<span class="line"><span>	- String field</span></span>
<span class="line"><span>	+ A()</span></span>
<span class="line"><span>	# void method()</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>note right: 这是测试类 A</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><h2>2 类的关系</h2>
<p>在面向对象语言中，类的关系有很多种，可以概括为三类：<code>泛化</code>、<code>依赖</code>、<code>关联</code>。</p>
<h3>2.1 泛化</h3>
<p>泛化指父类跟子类的关系,表示<code>is-a</code>的关系。如父类是抽象类或普通类，则这种关系叫继承。如，父类是接口，则这种关系叫实现。UML中，继承和实现由不同的标记表示。</p>
<h4>2.1.1 继承</h4>
<p>PlantUML用 <code>--|&gt;</code> 表示继承关系。实线和三角形的抽象表示，指向谁，即继承谁。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A</span></span>
<span class="line"><span>    abstract B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ' A 继承 B</span></span>
<span class="line"><span>    A --|&gt; B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/2.png" width="60">
<h4>2.1.2 实现</h4>
<p>PlantUML用 <code>..|&gt;</code> 表示实现关系。虚和三角形的抽象表示，指向谁，即实现谁。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A</span></span>
<span class="line"><span>    interface C</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ' A 实现 C</span></span>
<span class="line"><span>    A ..|&gt; C</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/3.png" width="60">
<h3>2.2 依赖</h3>
<p>类之间，最弱的关联方式。常用于在A类的方法中使用B类的对象作为参数、局部变量或者对B类静态方法的调用。</p>
<p>PlantUML用 <code>..&gt;</code> 表示依赖关系。虚线和箭头的抽象表示，指向谁，即依赖谁。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A</span></span>
<span class="line"><span>    class B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    ' A 依赖 B</span></span>
<span class="line"><span>    A ..&gt; B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/4.png" width="60">
<h3>2.3 关联</h3>
<p>关联关系，即对象之间的引用关系。常使用类的属性表达。</p>
<h4>2.3.1 单向关联</h4>
<p>B类作为A类的属性，表示A类与B类有关联。<br>
PlantUML用 <code>--&gt;</code> 表示单向关联。实线线和箭头的抽象表示，指向谁，即关联谁。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	class A{</span></span>
<span class="line"><span>		- B b</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	class B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	' A 关联 B</span></span>
<span class="line"><span>	A --&gt; B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/5.png" width="60">
<h4>2.3.2 双向关联</h4>
<p>B类作为A类的属性同时，A类也是B类的属性，表示双向关联。<br>
PlantUML用 <code>--</code> 表示双向关联。或者用<code>&lt;--&gt;</code>。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	class A{</span></span>
<span class="line"><span>		- B b</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	class B{</span></span>
<span class="line"><span>		- A a</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	' A 关联 B</span></span>
<span class="line"><span>	A -- B</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/6.png" width="60">
<h4>2.3.3 自关联</h4>
<p>A类关联A类自身。常见于单例模式。</p>
<img src="/assets/image/005/7.png" width="100">
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	class A{</span></span>
<span class="line"><span>		- A a</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	' A 关联 A</span></span>
<span class="line"><span>	A --&gt; A</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><h4>2.3.4 聚合</h4>
<p>在关联关系的基础上，延伸出聚合关系，强的关联关系，表示<code>has-a</code>关系。整体与部分的关系，部分不依赖于整体，可独立存在。常用于成员变量。</p>
<p>如；汽车和轮胎的关系，轮胎可作为独立的商品出售。</p>
<p>PlantUML用 <code>o--</code> 表示聚合关系。实线和空心菱形的抽象表示，指向谁，表示谁是整体。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	class Car{</span></span>
<span class="line"><span>		- List&lt;Wheel&gt; wheels</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	class Wheel</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	' Car 关联 Wheel</span></span>
<span class="line"><span>	Car "1" o-- "4" Wheel</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/8.png" width="180">
<p>图中数字<code>1</code>和<code>4</code>也表示一对多关联。<code>N</code>对<code>N</code>同理。</p>
<h4>2.3.5 组合</h4>
<p>在关联关系的基础上，延伸出另外一种关联关系，组合关系，表示<code>contains-a</code>关系。整体与部分的关系，部分依赖于整体，不可独立存在。常用于成员变量。</p>
<p>如：身体和动作的关系。</p>
<p>PlantUML用 <code>*--</code> 表示聚合关系。实线和实心菱形的抽象表示，指向谁，表示谁是整体。</p>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	class Body{</span></span>
<span class="line"><span>		- List&lt;Action&gt; actions</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	class Action</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	' Body 关联 Action</span></span>
<span class="line"><span>	Body "1" *-- "N" Action</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/9.png" width="180">
<h2>3 PlantUML排版</h2>
<p>相比较其他的UML软件或插件。PlantUML的优势在于，存储的是文本文件，可以方便的进行团队协作以及高度可定制化的依赖关系。但是，最大的缺点在于，排版是通过插件自动生成的，排版效果不尽人意。因此，PlantUML提供四个关键字 <code>up</code> <code>down</code> <code>left</code> <code>right</code>。指定类与类之间的相对关系。</p>
<h3>3.1 default</h3>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A1</span></span>
<span class="line"><span>class B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A1 --&gt; B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A2</span></span>
<span class="line"><span>class B2</span></span>
<span class="line"><span>A2 &lt;-- B2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/10.png" width="180">
<p>箭头向左时，被指向对象在上；<br>
箭头向右时，被指向对象在下。</p>
<h3>3.2 up</h3>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A1</span></span>
<span class="line"><span>class B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A1 -up-&gt; B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A2</span></span>
<span class="line"><span>class B2</span></span>
<span class="line"><span>A2 &lt;-up- B2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/11.png" width="180">
<p>使用up时，被指向对象在上。</p>
<h3>3.3 down</h3>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A1</span></span>
<span class="line"><span>class B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A1 -down-&gt; B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A2</span></span>
<span class="line"><span>class B2</span></span>
<span class="line"><span>A2 &lt;-down- B2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/12.png" width="180">
<p>使用down时，被指向对象在下。</p>
<h3>3.4 left</h3>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A1</span></span>
<span class="line"><span>class B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A1 -left-&gt; B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A2</span></span>
<span class="line"><span>class B2</span></span>
<span class="line"><span>A2 &lt;-left- B2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><p>使用left时，被指向对象在左。</p>
<img src="/assets/image/005/13.png" width="350">
<h3>3.5 right</h3>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A1</span></span>
<span class="line"><span>class B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>A1 -right-&gt; B1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A2</span></span>
<span class="line"><span>class B2</span></span>
<span class="line"><span>A2 &lt;-right- B2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><img src="/assets/image/005/14.png" width="350">
<p>使用right时，被指向对象在右。</p>
<h2>4 总结</h2>
<p>画类图，只是PlantUML的功能之一，还可以使用它画用例图、顺序图、活动图。更多用法，请关注后续博客或<a href="http://plantuml.com/" target="_blank" rel="noopener noreferrer">访问官网</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Sublime安装PlantUML插件</title>
      <link>https://vuepress-theme-hope.github.io/sublime-plantuml.html</link>
      <guid>https://vuepress-theme-hope.github.io/sublime-plantuml.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Sublime安装PlantUML插件</source>
      <description>1 安装 graphviz Graphviz的是AT&amp;T Labs Research开发的图形绘制工具,他可以很方便的用来绘制结构化的图形网络,支持多种格式输出,生成图片的质量和速度都不错。（摘自百度百科） Mac 安装 graphviz只需一条命令。 2 安装Sublime Text 笔者使用的文本编辑工具比较多。VScode、Atom、Sublim...</description>
      <category>开发工具</category>
      <pubDate>Wed, 16 Oct 2024 14:32:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2>1 安装 graphviz</h2>
<p>Graphviz的是AT&amp;T Labs Research开发的图形绘制工具,他可以很方便的用来绘制结构化的图形网络,支持多种格式输出,生成图片的质量和速度都不错。（摘自<a href="https://baike.baidu.com/item/Graphviz/2314699" target="_blank" rel="noopener noreferrer">百度百科</a>）</p>
<p>Mac 安装 <code>graphviz</code>只需一条命令。</p>
<pre><code>brew install graphviz
</code></pre>
<h2>2 安装Sublime Text</h2>
<p>笔者使用的文本编辑工具比较多。<code>VScode</code>、<code>Atom</code>、<code>Sublime</code>、<code>UltraEdit</code>。其实都没有掌握太高深的用法，只觉得哪个好用就用哪个。</p>
<p>下载地址见<a href="http://www.sublimetext.com/" target="_blank" rel="noopener noreferrer">官网</a>。</p>
<h2>3 安装PlantUml</h2>
<p>这其实是一个支持安装<code>Sublime</code>的插件,支持<code>VScode</code>等其他文本编辑工具。</p>
<p>打开<code>Package Control</code>，输入<code>install</code></p>
<img src="/assets/image/004/1.png" width="300">
<p>选中<code>Install Package</code>后，在新页面输入<code>plantuml</code>。</p>
<img src="/assets/image/004/2.png" width="350">
<p>点击<code>PlantUMLDiagrams</code>进行安装。</p>
<h2>4 配置快捷键</h2>
<p>安装后，配置好快捷键，按照图中步骤，配置默认快捷键。</p>
<img src="/assets/image/004/3.png" width="450">
<p>粘贴以下内容，将可以使用<code>command+m</code>快捷键显示UML图片。</p>
<pre><code>[ 
{"keys": ["super+m"], "command": "display_diagrams"}
]
</code></pre>
<h2>5 添加依赖jar</h2>
<p>切记，最后一步，需要指定<code>plantuml.jar</code>，不然将生成不了最终的UML效果图片。</p>
<p>并提示:<strong></strong></p>
<img src="/assets/image/004/5.png" width="450">
<p>plantuml.jar<a href="https://download.csdn.net/download/flueky/10828200" target="_blank" rel="noopener noreferrer">下载地址</a>。</p>
<p>将下载下来的jar文件复制到**Application Support/Sublime Text 3/Packages/PlantUmlDiagrams/diagram/**目录下</p>
<img src="/assets/image/004/6.png" width="450">
<h2>6 设置语法高亮</h2>
<p>在页面右下角，选择需要高亮的语法，推荐PlantUmlDiagrams-&gt;Diagram。</p>
<img src="/assets/image/004/4.png" width="450">
<h2>7 验证</h2>
<div class="language-uml" data-highlighter="shiki" data-ext="uml" data-title="uml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@startuml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>class A</span></span>
<span class="line"><span>note right: 这是测试类 A</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@enduml</span></span></code></pre>
</div><p>复制上面的内容，command+m生成下面的图片。</p>
<img src="/assets/image/004/7.png" width="200">
<p>*注：<strong>针对中文乱码的情况，可以添加utf-8编码支持。</strong></p>
<img src="/assets/image/004/8.png" width="300">
<p>修改标记的文件最后一行<code>"charset": null</code> 为 <code>"charset": "UTF-8"</code>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>搭建个人知识库</title>
      <link>https://vuepress-theme-hope.github.io/build-blog.html</link>
      <guid>https://vuepress-theme-hope.github.io/build-blog.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">搭建个人知识库</source>
      <description>个人知识库，可以是一个只包含静态页面的网站。作为新手，不需要买域名以及服务器。GitHub Pages 就够用了。</description>
      <category>Note</category>
      <pubDate>Tue, 15 Oct 2024 14:52:51 GMT</pubDate>
      <content:encoded><![CDATA[<p>个人知识库，可以是一个只包含静态页面的网站。作为新手，不需要买域名以及服务器。<a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">GitHub Pages</a> 就够用了。</p>
<!-- more -->
<h2>准备工作</h2>
<p>基于 GitHub Pages 搭建知识库网站，需要基于一些主流的平台与框架编译，用 Markdown 编写文件内容。因此需要做如下准备。</p>
<ul>
<li>安装 git</li>
<li>安装 nodejs</li>
<li>熟练编写 md 文件</li>
</ul>
<h2>安装 git</h2>
<p><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">https://git-scm.com/</a></p>
<h2>安装 Node.js</h2>
<p><a href="https://nodejs.org/zh-cn" target="_blank" rel="noopener noreferrer">Node.js</a> 版本较多，遇到兼容性要求时，对不同版本管理不太友好。建议使用 NVM 。</p>
<h3>Windows</h3>
<p><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener noreferrer">GitHub 地址</a></p>
<p>下载 <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener noreferrer">最新版本</a>， 直接解压安装即可。</p>
<p>查询 <a href="https://nodejs.org/zh-cn/download/prebuilt-installer" target="_blank" rel="noopener noreferrer">最新版本 Node.js</a></p>
<div class="language-cmd" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nvm install </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20.18.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> # 当前最新版本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nvm list # 查看已安装版本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">nvm use </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20.18.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> # 选择需要的版本</span></span></code></pre>
</div><h3>Mac/Linux</h3>
<p><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener noreferrer">GitHub 地址</a></p>
<p>安装命令如下：</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 使用 curl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -o-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 使用 wget</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -qO-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ls-remote</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看最新版本号，建议选择 LTS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20.18.0</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 当前最新版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看已安装版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> use</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20.18.0</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 选择需要的版本</span></span></code></pre>
</div><h2>Markdown</h2>
<p>Markdown 语法，支持快速排版内容。入门较简单，参考<a href="markdown">文档</a>。除了基本的 Markdown 语法，还支持 Vuepress 支持的高级功能。如：数学公式，图表以及脑图。</p>
<h2>Hexo</h2>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener noreferrer">Hexo</a> 是快速简洁且高效的博客框架。需要搭配合适 <a href="https://hexo.io/themes/" target="_blank" rel="noopener noreferrer">主题</a> 使用。</p>
<p>推荐主题 <a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener noreferrer">hexo-theme-butterfly</a> 。</p>
<p>也可参照之前写的<a href="hexo-basic">文档</a> 。</p>
<h2>Vuepress</h2>
<p><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vuepress</a> 是 Vue 驱动的静态网站生成器。</p>
<p>推荐主题 <a href="https://theme-hope.vuejs.press/" target="_blank" rel="noopener noreferrer">Vuepress Theme Hope</a> 。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Hexo 建站手札——进阶</title>
      <link>https://vuepress-theme-hope.github.io/hexo-advanced.html</link>
      <guid>https://vuepress-theme-hope.github.io/hexo-advanced.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Hexo 建站手札——进阶</source>
      <description>基础篇 讲到了如何使用 Hexo 建站。包括基本命令使用及获取到源码之后的一些简单工程配置。</description>
      <category>Hexo</category>
      <pubDate>Sun, 03 Nov 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="hexo-basic">基础篇</a> 讲到了如何使用 <strong>Hexo</strong> 建站。包括基本命令使用及获取到源码之后的一些简单工程配置。</p>
<!-- more -->
<p>下面将介绍，如何给博客添加  <strong>评论</strong>、<strong>背景音乐</strong>、<strong>点击特效</strong>、<strong>字数统计</strong>等功能。</p>
<p>文章内容多数内容皆来自于<strong>TRHX</strong> 的文章<a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="noopener noreferrer">Hexo 博客主题个性化</a>。</p>
<p><strong>友情提示，本文篇幅太长，建议结合目录选择性的浏览。</strong></p>
<h2>1. 添加评论</h2>
<p><strong>material-x</strong> 主题已经集成了四个评论系统。暂时只介绍用过的两个。</p>
<h3>1.1 使用 valineS</h3>
<p>首先需要在 <a href="https://leancloud.cn/" target="_blank" rel="noopener noreferrer">leancloud</a> 上注册应用。在控制台中，点开注册的应用查看 <code>AppID</code> 和 <code>AppKey</code>。</p>
<img src="/assets/image/027/1.png" width="500">
<p>在主题配置文件中</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">#valine配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">valine</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  enable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 如果你想用Valine评论系统，请设置enable为true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  volantis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 是否启用volantis版本（禁止匿名，增加若干贴吧、QQ表情）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 还需要在根目录配置文件中添加下面这三行内容</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # leancloud:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  #   app_id: 你的appId</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  #   app_key: 你的appKey</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  guest_info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nick,mail,link</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> #valine comment header info</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  placeholder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">快来评论吧~</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # valine comment input placeholder(like: Please leave your footprints )</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  avatar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">mp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # gravatar style https://valine.js.org/avatar</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  pageSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # comment list page size</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  verify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # valine verify code (true/false)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  notify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # valine mail notify (true/false)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">zh-cn</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  highlight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在博客配置文件中</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">leancloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  app_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的appId</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  app_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的appKey</span></span></code></pre>
</div><p>配置完成后，在文章底部出现评论界面。</p>
<img src="/assets/image/027/2.png" width="600">
<p>评论效果支持 Markdown 语法。</p>
<img src="/assets/image/027/3.png" width="550">
<p>评论内容可以在  <a href="https://leancloud.cn/" target="_blank" rel="noopener noreferrer">leancloud</a> 控制台中管理。</p>
<img src="/assets/image/027/4.png" width="800">
<h3>1.2 使用 gitalk</h3>
<p>首先需要在  <strong>GitHub</strong> 中创建一个授权应用。此应用在访客评论时使用  <strong>GitHub</strong>  账户登录，进行授权。</p>
<p>创建授权应用地址：<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener noreferrer">https://github.com/settings/applications/new</a>，亦可以在 <strong>GitHub</strong>  中通过 <code>Settings -&gt; Developer settings -&gt; OAuth Apps -&gt;New Auth App</code> 访问 。</p>
<img src="/assets/image/027/5.png" width="600">
<p>需要填写四条信息，以我的应用为例：</p>
<img src="/assets/image/027/6.png" width="400">
<ol>
<li>应用名称，授权时告知用户是哪个应用使用  <strong>GitHub</strong> 账户。</li>
<li>应用主页，使用博客站点主页 ，也可以换别的。</li>
<li>应用描述。</li>
<li>授权通过后的跳转页面。</li>
</ol>
<p>授权页面如图：</p>
<img src="/assets/image/027/7.png" width="400">
<p>在应用中查看 <code>Client ID</code> 和 <code>Client Secret</code> 。</p>
<img src="/assets/image/027/8.png" width="400">
<p>最后在博客配置文件中</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gitalk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  clientID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的clientID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  clientSecret</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的clientSecret</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  repo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的repo名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  owner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">你的GitHub名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  admin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [] </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">至少填写你的GitHub名</span></span></code></pre>
</div><p>由于，gitalk 的评论方式是通过对 repo 提 issues 的方式。因此上面的 <code>repo</code> 即是查看 issues 的仓库地址。</p>
<p>评论界面如下：</p>
<img src="/assets/image/027/9.png" width="400">
<p>在 issues 管理，通过<strong>最近更新</strong>的排序方式，查看最新的评论。</p>
<img src="/assets/image/027/10.png" width="600">
<p>可以直接在 issues 中直接回复。这样的好处是，只要查看 issues 就可以知道有新的评论，便于实时互动。<strong>GitHub还会通过发送邮件的方式告知有新的  issues</strong>。</p>
<img src="/assets/image/027/11.png" width="600">
<h2>2.  添加BGM</h2>
<p>在主题的配置文件中:</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">############################### 默认值 ###############################</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 音乐控件的默认配置，如果sidebar或者page里没有提供，就取这里的参数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">music</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  enable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">      # 是否启用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'#1BCDFC'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 主题色</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">circulation</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # random （随机） single （单曲） circulation （列表循环） order （列表）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">netease</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">playlist</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # song （单曲） album （专辑） playlist （歌单） search （搜索）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2615636388</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 歌曲/专辑/歌单 ID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  volume</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.7</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">       # 音量, 0~1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  autoplay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # 自动播放</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># sidebar 配置  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sidebar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">music</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">fas fa-compact-disc</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"最近在听"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    more</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">far fa-heart</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">https://music.163.com/#/user/home?id=63035382</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">external nofollow noopener noreferrer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">_blank</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">netease</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   # netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">playlist</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # song （单曲） album （专辑） playlist （歌单） search （搜索）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2615636388</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     # 歌曲/专辑/歌单 ID</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还要在 layout 中配置是否显示在侧边栏。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 文章列表（主页、自定义的列表）布局</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  posts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 列表类页面的侧边栏,显示 music 部件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    sidebar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">grid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">music</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">category</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">tagcloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 文章页面布局</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  article</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    # 文章页面的侧边栏，不显示 music 部件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    sidebar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">toc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">grid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">category</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">tagcloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">related_posts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 其他的页面布局暂时等于文章列表</span></span></code></pre>
</div><img src="/assets/image/027/12.png" width="250">
<p>在文章 <code>md</code> 文件中：</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># page中配置，用于文章标题</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>Hexo 建站手札——基础</title>
      <link>https://vuepress-theme-hope.github.io/hexo-basic.html</link>
      <guid>https://vuepress-theme-hope.github.io/hexo-basic.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Hexo 建站手札——基础</source>
      <description>2016 年 2 月，写了工作中第一篇博客。至今快 4 年时间，写了几十篇文章，也使用过几个平台。 CSDN 一直在用，上面有着几乎全部的文章。传送门 掘金 这两年掘金顺势崛起，也在上面同步过数篇博客。传送门</description>
      <category>Hexo</category>
      <pubDate>Sat, 02 Nov 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>2016 年 2 月，写了工作中第一篇博客。至今快 4 年时间，写了几十篇文章，也使用过几个平台。</p>
<ol>
<li><strong>CSDN</strong> 一直在用，上面有着几乎全部的文章。<a href="https://blog.csdn.net/flueky" target="_blank" rel="noopener noreferrer">传送门</a></li>
<li><strong>掘金</strong> 这两年掘金顺势崛起，也在上面同步过数篇博客。<a href="https://juejin.im/user/5a97e5df518825558358a1bd" target="_blank" rel="noopener noreferrer">传送门</a></li>
</ol>
<!-- more -->
<p>直到接触到 <strong>jekyll</strong> 、 <strong>Hexo</strong> 这样的博客生成工具。前者使用一年，没多研究其扩展功能。本文将介绍使用 <strong>Hexo</strong> 建站的步骤。</p>
<p>本文适用于初学者，如果您已具备 Hexo 建站技能，需要丰富下网页的功能，请参阅<a href="hexo-advanced">进阶篇</a>。</p>
<h2>1. 准备工作</h2>
<p>万事开头难，建站也是需要做一些准备的。</p>
<ul>
<li>搭建 <strong>Hexo</strong> 环境。</li>
<li>熟悉用 <strong>MarkDown</strong> 写作。</li>
<li>代码托管平台。</li>
</ul>
<ol>
<li>使用 <strong>Hexo</strong> 建站，建议参照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener noreferrer">官方文档</a>。</li>
<li>如果您还在使用 html 排版的方式，只能说 out 了。使用 md 写作，快速排版，实时对比。</li>
<li>将文章存放在 GitHub 或 GitLab 等这样的开源平台，或者购买域名服务器。</li>
</ol>
<p>建议前期使用开源平台，因为<strong>免费</strong>，入门简单。甚至不需要编码基础。</p>
<h3>1.1 创建仓库</h3>
<ol>
<li>注册 <strong>GitHub</strong> 。假如用户名是 <code>flueky</code> ,那么你的 <strong>GitHub</strong> 主页地址是 <a href="https://github.com/flueky" target="_blank" rel="noopener noreferrer">https://github.com/flueky</a>。</li>
<li>创建仓库，必须名字是 <strong><a href="http://flueky.github.io" target="_blank" rel="noopener noreferrer">flueky.github.io</a></strong> ,其中 <code>flueky</code> 替换成你自己的 <strong>GitHub</strong> 账户名字。即，创建完后，仓库地址是 <a href="https://github.com/flueky/flueky.github.io" target="_blank" rel="noopener noreferrer">https://github.com/flueky/flueky.github.io</a>。</li>
</ol>
<p>将此仓库作为博客主页后 ，可以直接使用域名 <a href="https://flueky.github.io/" target="_blank" rel="noopener noreferrer">https://flueky.github.io/</a> 访问 。</p>
<p>主题来自于 <a href="https://xaoxuu.com/" target="_blank" rel="noopener noreferrer">xaoxuu</a> 的 <strong>matrial x</strong> 。</p>
<h2>2. Hexo 常用命令</h2>
<h3>2.1 创建目录</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 创建 blog 目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> blog</span></span></code></pre>
</div><p>下面的命令，如无特殊说明，都是在 <strong>blog</strong> 目录下执行。</p>
<h3>2.2 启动服务</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 默认启动参数，访问地址：http://127.0.0.1:4000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 使用指定端口，用在端口冲突的情况下 访问地址：http://127.0.0.1:4001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4001</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 带草稿箱文件启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --draft</span></span></code></pre>
</div><h3>2.3 部署博客</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 在配置好站点后，将博客文件推送至站点</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deploy</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 清楚生成文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clean</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 通常使用下面的方式合用两条命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deploy</span></span></code></pre>
</div><h2>3.  初始化博客</h2>
<p>正确搭建好 <strong>Hexo</strong> 环境后，可以使用 <code>init</code> 命令完成博客目录创建。</p>
<p><code>init</code> 命令完成后，启动服务见到下面的页面表示成功。</p>
<img src="/assets/image/026/1.png" width="800">
<p>文件列表如下，<strong>未列出的皆为命令生成的文件，无须添加到版本控制工具中</strong>。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 博客文件</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">├── _config.yml</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 博客配置文件，可修改大多数配置，需要重启服务。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">├── package.json</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 程序配置文件。无须修改。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">├── scaffolds</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 模板目录，使用 hexo new 命令新建博客文件时使用。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">├── source</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 博客资源文件，存放博客文本和图片。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">│   └── _drafts</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # drafts (草稿箱目录)，使用  hexo publish 命令移动到 _posts 目录。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">│   └── _posts</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # post 目录，部署时直接部署此目录的博客文本。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">└── themes</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 所有主题都存放在此目录下。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    └── landscape</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> #主题</span></span></code></pre>
</div><p>使用主题 <strong>material-x</strong>。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 在 blog 目录中执行，获取主题源码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/xaoxuu/hexo-theme-material-x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> themes/material-x</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 安装相关依赖包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hexo-generator-search</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hexo-generator-json-content</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hexo-renderer-less</span></span></code></pre>
</div><p>或者直接使用 <strong>xaoxuu</strong> 或 <strong>flueky</strong> 整理好的 demo 。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 获取 xaoxuu 源码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/xaoxuu/blog-example</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> blog</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 获取 flueky 源码，可以使用其它版本，具体见说明</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v0.0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/flueky/hexo-blog.git</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 在 blog 目录中执行，安装 hexo 有关文件后方可使用 hexo 命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span></span></code></pre>
</div><p>在博客配置文件 <code>_config.yml</code> 中切换主题。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># theme: landscape # 注释旧主题</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">theme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">material-x</span></span></code></pre>
</div><p>再次启动服务见到下面的页面表示成功。</p>
<img src="/assets/image/026/2.png" width="800">
<h2>4. 个性化配置</h2>
<p>以下配置 ，均是基于  <code>material-x</code> 主题。</p>
<h3>4.1 修改站点 logo 和 标题</h3>
<p>修改前：</p>
<img src="/assets/image/026/3.png" width="200">
<p>修改博客配置文件 <code>_config.yml</code>。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># Site</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 站点名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Flukey 小站</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 站点图标</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">favicon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">pic/user_icon.png</span></span></code></pre>
</div><p>修改后：</p>
<img src="/assets/image/026/4.png" width="200">
<h3>4.2 修改主页标题</h3>
<p>修改前：</p>
<img src="/assets/image/026/5.png" width="350">
<p>修改主题配置文件 <code>_config.yml</code>。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># page的封面</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cover</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">FLUEKY</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 不设置 ，默认显示站点的标题。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # logo: assets/logo.png    # logo和title只显示一个，若同时设置，则只显示logo</span></span></code></pre>
</div><img src="/assets/image/026/6.png" width="350">
<h3>4.3 修改用户LOGO</h3>
<p>修改前：</p>
<img src="/assets/image/026/7.png" width="300">
<p>修改主题配置文件 <code>_config.yml</code>。</p>
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 侧边栏小部件配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sidebar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">widget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">author</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    avatar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">pic/user_icon.png</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 此处替换 logo</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    social</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span></code></pre>
</div><img src="/assets/image/026/8.png" width="300">
<h3>4.4 修改作者信息</h3>
<img src="/assets/image/026/10.png" width="300">
<div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># Site</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 作者名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">author</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Flueky</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 作者图标，使用相对路径时，需要关注文章实际生成的目录。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 此路径在文章中使用，但是pic文件夹在source目录下</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 如果更改了 permalink ，下面的路径需要做修改。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">avatar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/assets/image/img/user_icon.png</span></span></code></pre>
</div><img src="/assets/image/026/11.png" width="300">
<h3>4.5 配置菜单</h3>
<p>菜单指主页标题，搜索框下四个模块。</p>
<img src="/assets/image/026/6.png" width="350">
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># page的封面</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cover</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 主页封面菜单</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">博文</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">fas fa-rss</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">项目</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">fas fa-code-branch</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">projects/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">友链</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">fas fa-link</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">friends/</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nofollow</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">关于</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">fas fa-info-circle</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">about/</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nofollow</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照上面的配置修改后，请在 <code>source</code> 目录下做如下操作。</p>
<ol>
<li>
<p>建立 <strong>projects</strong>  文件夹，创建 <a href="http://index.md" target="_blank" rel="noopener noreferrer">index.md</a> 文件。内容：</p>
<div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre>
</div></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Android 线程间通信</title>
      <link>https://vuepress-theme-hope.github.io/android-thread-communication.html</link>
      <guid>https://vuepress-theme-hope.github.io/android-thread-communication.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Android 线程间通信</source>
      <description>Android 系统中，应用在运行时是一个独立的进程，但是每个进程中可以包含多个线程提高运行效率。在多线程开发中，有一个很重要的原则：不能在子线程中更新 UI 。</description>
      <category>Android</category>
      <category>Note</category>
      <pubDate>Sat, 16 Nov 2019 16:59:27 GMT</pubDate>
      <content:encoded><![CDATA[<p>Android 系统中，应用在运行时是一个独立的进程，但是每个进程中可以包含多个线程提高运行效率。在多线程开发中，有一个很重要的原则：<strong>不能在子线程中更新  UI 。</strong></p>
<!-- more -->
<blockquote>
<p>Only the original thread that created a view hierarchy can touch its views.</p>
</blockquote>
<p>为解决这个问题，目前有多重方案实现子线程和主线程（UI 线程）之间的通信。</p>
<h2>1. 判断代码执行的线程</h2>
<p>在一些简单代码逻辑中，也许能够很清晰的辨别出运行在子线程或主线程中。通常在复杂的类关系依赖、函数嵌套调用中，可能需要花费很大精力去阅读代码之后去判断。不过，巧法子也是有的，一行代码解决。</p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"TAG"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
</div><p>日志内容中，<code>2368-2393</code> 表示是在子线程中输出日志。</p>
<blockquote>
<p>11-16 01:08:31.584 2368-2393/com.flueky.demo D/TAG: test</p>
</blockquote>
<p>其中 <em>2368</em> 表示 <code>PID</code> 指进程id， <em>2393</em> 表示 <code>TID</code> 指线程id 。如果 <code>TID</code> 也是 <em>2368</em> ，则表示日志输出在主线程中。</p>
<p><strong>可能也有人听过 <code>UID</code> ,应用第一次安装在设备上时，系统会分配一个序号给应用，作为其唯一标识。<code>UID</code> 在覆盖安装时不会变化，卸载安装时系统会重新分配一个。</strong></p>
<p>下面是在代码中获取三个 id 的方式。</p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获取 tid</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">myTid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获取 pid</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">myPid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获取 uid</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">myUid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
</div><p>遇到需要在子线程中更新 <strong>UI</strong> 操作时，可以通过下面的这些方式解决。</p>
<h2>2. 使用 View.post</h2>
<p>子线程代码运行在 Activity 或 Fragment 中，能获取到任意 view 的引用时，可以使用此方式将需要实现的代码放在主线程中运行。</p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// post 方法在子线程中调用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">textView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 此处代码会在 UI 线程执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span></code></pre>
</div><h2>3. 使用 Activity.runOnUiThread</h2>
<p>如果能够直接获取到 Activity 实例，使用 <strong>runOnUiThread</strong> 方法。</p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// runOnUiThread 方法在子线程中调用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">runOnUiThread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 此处代码会在 UI 线程执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span></code></pre>
</div><h2>4. 使用 Handler.post</h2>
<p>使用 Handler 比较讲究，因为需要考虑到 Handler 实例初始化的位置。</p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// post 方法在子线程中调用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">handler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // handler 在主线程中初始化时，此处代码在主线程中执行</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // handler 在子线程中初始化事，此处代码在子线程中执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span></code></pre>
</div><p><strong>以上说法其实不够严谨，存在下面的情况，初始化 handler 实例时传入 Looper.getMainLooper() ，则 handler.post 也在主线程中执行。</strong></p>
<div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 下面的代码在子线程中执行</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Looper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">prepare</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">handler </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Handler</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Looper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMainLooper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Looper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">loop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>
</div><h2>5. 使用 EventBus</h2>
<p><code>EventBus</code> 出自 <strong>greenrobot</strong> ,通过订阅的方式，告知函数运行在哪个线程中。为使订阅函数在主线程中执行，使用注解 <strong>MAIN</strong> 或 <strong>MAIN_ORDERED</strong> 。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * eventbus 简单示例</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MainActivity</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Activity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onCreate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Bundle</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> savedInstanceState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onCreate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(savedInstanceState);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        setContentView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">activity_main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     * 订阅函数，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     * ThreadMode.MAIN 表示在主线程中运行，可能会阻塞子线程。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     * ThreadMode.MAIN_ORDERED 表示在主线程中运行，不会阻塞子线程。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Subscribe</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">threadMode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> ThreadMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MAIN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onMessageEvent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(event </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">instanceof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Runnable)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            ((Runnable)event).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onStart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onStart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 注册 eventbus 监听</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        EventBus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">register</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onStop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onStop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 注销 eventbus 监听</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        EventBus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unregister</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 在子线程中发送消息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">EventBus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 此处代码会在 UI 线程执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>6. 传递数据</h2>
<p>前面四种方式演示了如何在子线程中做更新 UI 操作。 <code>AsyncTask</code> 也具备相同用法，但是有点牵强，因为只有 <strong>execute</strong> 方法在主线程中执行，<strong>onPostExecute</strong> 才会在主线程中调用。由于 <strong>onPostExecute</strong> 可以接收到子线程传递的任意类型的对象数据，所以 <code>AsyncTask</code> 可以作为线程间的数据交互的载体。对此 <strong>Handler</strong> 和  <strong>EventBus</strong> 表示不服。</p>
<p><strong>EventBus</strong> 如之前所示，可以将 <strong>Runnable</strong> 对象换成任意实例。</p>
<p><strong>Handler</strong> 也可以通过 <strong>sendMessage</strong> 方法发送 <strong>Message</strong> 对象。其中 <strong>Message.obj</strong> 用作传递对象数据的载体。</p>
<p><strong>建议使用 Message.obtain() 方法复用 Message 实例。</strong></p>
<p>顺便提下，<code>BroadcastReceiver</code> 也可以作为此类用途，只不过没有 <strong>EventBus</strong> 和 <strong>Handler</strong> 方便。</p>
]]></content:encoded>
    </item>
    <item>
      <title>编码、摘要和加密（一）—— 字节编码</title>
      <link>https://vuepress-theme-hope.github.io/encode.html</link>
      <guid>https://vuepress-theme-hope.github.io/encode.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">编码、摘要和加密（一）—— 字节编码</source>
      <description>之所以取这个题目，是因为在面试的过程中，许多求职者对问题“请列举常用的加密算法”给出了比较普遍的回答：“用过 MD5 和 Base64 ”，更有甚者说，“ Base64 是对称加密， MD5 是非对称加密”。</description>
      <category>字节处理</category>
      <pubDate>Mon, 14 Oct 2024 23:22:06 GMT</pubDate>
      <content:encoded><![CDATA[<p>之所以取这个题目，是因为在面试的过程中，许多求职者对问题“请列举常用的加密算法”给出了比较普遍的回答：“用过 <code>MD5</code> 和 <code>Base64</code> ”，更有甚者说，“ <code>Base64</code> 是对称加密， <code>MD5</code> 是非对称加密”。</p>
<!-- more -->
<p>那么，通过接下来的三篇文章科普下，在编程过程中常见的三个术语：<strong>字节编码</strong> 、<strong>信息摘要</strong>、 <strong>数据加密</strong>。</p>
<h2>1. 编码介绍</h2>
<p>在计算机领域，数据存储单位叫字节——byte，最小的存储单元的容量是1位-1bit。一个bit有两个状态 0 和 1。1byte = 8bit。通常，一个英文字母占1字节，汉字采用GBK编码时，占用2字节。<strong>UTF-8是可变长度编码，一般用 0-4 字节表示。</strong></p>
<p>以上介绍，仅局限于计算机可以显示在屏幕上的字符。但是 1byte 通常可表示 256 个不同的数据。二进制表示：00000000-11111111，即 2^8 。根据 ASCII 中显示，可见字符不足 100 个。若想完整的显示 1byte 表示的全部内容，需要对其进行编码。通常使用16进制的方式，0x00-0xFF。0x31 表示字符 '1' ，0x01 表示字母 1，0x41 表示 'A' ,0x61 表示 'a' 。不再一一列举，有兴趣的小伙伴可以查阅 ASCII 码表。</p>
<h2>2. 十六进制编码</h2>
<h3>2.1 概念</h3>
<p>16进制编码，是基于2进制转换的过程。下表列举些常见的数值编码及其意义。</p>
<table>
<thead>
<tr>
<th style="text-align:center">十进制</th>
<th style="text-align:center">2进制</th>
<th style="text-align:center">16进制</th>
<th style="text-align:center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">00000000</td>
<td style="text-align:center">0x00</td>
<td style="text-align:center">null</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">00000001</td>
<td style="text-align:center">0x01</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">49</td>
<td style="text-align:center">00110001</td>
<td style="text-align:center">0x31</td>
<td style="text-align:center">'1'</td>
</tr>
<tr>
<td style="text-align:center">65</td>
<td style="text-align:center">01000001</td>
<td style="text-align:center">0x41</td>
<td style="text-align:center">'A'</td>
</tr>
<tr>
<td style="text-align:center">97</td>
<td style="text-align:center">01100001</td>
<td style="text-align:center">0x61</td>
<td style="text-align:center">'a'</td>
</tr>
</tbody>
</table>
<p>此处，需要引入一个概念——基数。2 进制基数：0、1。10进制基数：0-9。16进制基数0-9，A-F。<strong>通过观察表示一串内容的基数，可以快速判断它使用的编码方式哦！</strong></p>
<p>下表表示16进制基数与10进制、2进制的关系。均用 1byte 表示。</p>
<table>
<thead>
<tr>
<th style="text-align:center">16进制</th>
<th style="text-align:center">10进制</th>
<th style="text-align:center">2进制</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0x00</td>
<td style="text-align:center">0</td>
<td style="text-align:center">00000000</td>
</tr>
<tr>
<td style="text-align:center">0x01</td>
<td style="text-align:center">1</td>
<td style="text-align:center">00000001</td>
</tr>
<tr>
<td style="text-align:center">0x02</td>
<td style="text-align:center">2</td>
<td style="text-align:center">00000010</td>
</tr>
<tr>
<td style="text-align:center">0x03</td>
<td style="text-align:center">3</td>
<td style="text-align:center">00000011</td>
</tr>
<tr>
<td style="text-align:center">0x04</td>
<td style="text-align:center">4</td>
<td style="text-align:center">00000100</td>
</tr>
<tr>
<td style="text-align:center">0x05</td>
<td style="text-align:center">5</td>
<td style="text-align:center">00000101</td>
</tr>
<tr>
<td style="text-align:center">0x06</td>
<td style="text-align:center">6</td>
<td style="text-align:center">00000110</td>
</tr>
<tr>
<td style="text-align:center">0x07</td>
<td style="text-align:center">7</td>
<td style="text-align:center">00000111</td>
</tr>
<tr>
<td style="text-align:center">0x08</td>
<td style="text-align:center">8</td>
<td style="text-align:center">00001000</td>
</tr>
<tr>
<td style="text-align:center">0x09</td>
<td style="text-align:center">9</td>
<td style="text-align:center">00001001</td>
</tr>
<tr>
<td style="text-align:center">0x0A</td>
<td style="text-align:center">10</td>
<td style="text-align:center">00001010</td>
</tr>
<tr>
<td style="text-align:center">0x0B</td>
<td style="text-align:center">11</td>
<td style="text-align:center">00001011</td>
</tr>
<tr>
<td style="text-align:center">0x0C</td>
<td style="text-align:center">12</td>
<td style="text-align:center">00001100</td>
</tr>
<tr>
<td style="text-align:center">0x0D</td>
<td style="text-align:center">13</td>
<td style="text-align:center">00001101</td>
</tr>
<tr>
<td style="text-align:center">0x0E</td>
<td style="text-align:center">14</td>
<td style="text-align:center">00001110</td>
</tr>
<tr>
<td style="text-align:center">0x0F</td>
<td style="text-align:center">15</td>
<td style="text-align:center">00001111</td>
</tr>
</tbody>
</table>
<p>不难发现，16进制用 4bit 表示一个基数（16 = 2^4）。</p>
<h3>2.2 换算</h3>
<p>将数字 100 转成 16进制表示：</p>
<p>计算方式比较简单，对 100 用 16 进行取整取余。发现 100 = 6 * 16 + 4。即，100 = 0x64。再转成2进制，分别对 6 和 4 转成 4bit 0和1 表示。0110 0100。</p>
<p>所以 100 = 0x64 = 01100100</p>
<h3>2.3 代码实现</h3>
<p>根据上一节的换算规则：</p>
<ol>
<li>将字节数组转16进制字符串，需要对每个字节进行独立运算。分别取高四位和第四位，然后转成两个10进制数作为基数索引，最后组合成16进制表示。</li>
<li>将16进制字符串转成字节数组，需要每两个16进制基数一组。分别找出其表示的10进制数，然后做高四位和第四位相加。</li>
</ol>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 16 进制基数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">static</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] hex </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'0'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '1'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '2'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '3'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '4'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '5'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '6'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '7'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '8'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '9'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'A'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'B'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'C'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'D'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'E'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'F'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 编码：字节数组转 16 进制字符串</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> encode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    StringBuffer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hexSrtBuff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> StringBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 取高四位</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> low </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 取低四位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        hexSrtBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(hex[height]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        hexSrtBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(hex[low]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> hexSrtBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 解码：16 进制字符串转字节数组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> hexStr</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hexStr) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (hexStr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">hexStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> %</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) { </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不合法的十六进制字符串参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The hex string was illegal"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">hexStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> hexStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        char</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> hexStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        char</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> hexStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">])</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> low </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> hex[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">])</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        data[i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) ((height </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (low </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">))</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>3. Base64 编码</h2>
<p>上一节介绍了16进制的编码规则和代码实现。不难发现，做一次16进制编码时候，所需的存储空间翻一倍。这虽然方便计算机显示，可以用于网络通信，但耗费的存储空间和传输效率都将减半。因此，base64编码诞生。（楼主瞎编，base64编码是否因此诞生，没做考究）。</p>
<h3>3.1 概念</h3>
<p>base64 一共有 64 个基数。每个基数占 6bit（64 = 2^6）。</p>
<table>
<thead>
<tr>
<th style="text-align:center">索引</th>
<th style="text-align:center">基数</th>
<th style="text-align:center">索引</th>
<th style="text-align:center">基数</th>
<th style="text-align:center">索引</th>
<th style="text-align:center">基数</th>
<th style="text-align:center">索引</th>
<th style="text-align:center">基数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">A</td>
<td style="text-align:center">16</td>
<td style="text-align:center">Q</td>
<td style="text-align:center">32</td>
<td style="text-align:center">g</td>
<td style="text-align:center">48</td>
<td style="text-align:center">w</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">B</td>
<td style="text-align:center">17</td>
<td style="text-align:center">R</td>
<td style="text-align:center">33</td>
<td style="text-align:center">h</td>
<td style="text-align:center">49</td>
<td style="text-align:center">x</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">C</td>
<td style="text-align:center">18</td>
<td style="text-align:center">S</td>
<td style="text-align:center">34</td>
<td style="text-align:center">i</td>
<td style="text-align:center">50</td>
<td style="text-align:center">y</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">D</td>
<td style="text-align:center">19</td>
<td style="text-align:center">T</td>
<td style="text-align:center">35</td>
<td style="text-align:center">j</td>
<td style="text-align:center">51</td>
<td style="text-align:center">z</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">E</td>
<td style="text-align:center">20</td>
<td style="text-align:center">U</td>
<td style="text-align:center">36</td>
<td style="text-align:center">k</td>
<td style="text-align:center">52</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">F</td>
<td style="text-align:center">21</td>
<td style="text-align:center">V</td>
<td style="text-align:center">37</td>
<td style="text-align:center">l</td>
<td style="text-align:center">53</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">G</td>
<td style="text-align:center">22</td>
<td style="text-align:center">W</td>
<td style="text-align:center">38</td>
<td style="text-align:center">m</td>
<td style="text-align:center">54</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">H</td>
<td style="text-align:center">23</td>
<td style="text-align:center">X</td>
<td style="text-align:center">39</td>
<td style="text-align:center">n</td>
<td style="text-align:center">55</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">I</td>
<td style="text-align:center">24</td>
<td style="text-align:center">Y</td>
<td style="text-align:center">40</td>
<td style="text-align:center">o</td>
<td style="text-align:center">56</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">J</td>
<td style="text-align:center">25</td>
<td style="text-align:center">Z</td>
<td style="text-align:center">41</td>
<td style="text-align:center">p</td>
<td style="text-align:center">57</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">K</td>
<td style="text-align:center">26</td>
<td style="text-align:center">a</td>
<td style="text-align:center">42</td>
<td style="text-align:center">q</td>
<td style="text-align:center">58</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">L</td>
<td style="text-align:center">27</td>
<td style="text-align:center">b</td>
<td style="text-align:center">43</td>
<td style="text-align:center">r</td>
<td style="text-align:center">59</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">M</td>
<td style="text-align:center">28</td>
<td style="text-align:center">c</td>
<td style="text-align:center">44</td>
<td style="text-align:center">s</td>
<td style="text-align:center">60</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">N</td>
<td style="text-align:center">29</td>
<td style="text-align:center">d</td>
<td style="text-align:center">45</td>
<td style="text-align:center">t</td>
<td style="text-align:center">61</td>
<td style="text-align:center">9</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">O</td>
<td style="text-align:center">30</td>
<td style="text-align:center">e</td>
<td style="text-align:center">46</td>
<td style="text-align:center">u</td>
<td style="text-align:center">62</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">P</td>
<td style="text-align:center">31</td>
<td style="text-align:center">f</td>
<td style="text-align:center">47</td>
<td style="text-align:center">v</td>
<td style="text-align:center">63</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
<h3>3.2 换算</h3>
<p>根据上表的索引关系，试换算几个案例。</p>
<ol>
<li>
<p>字符 1</p>
<p>10进制表示 49 。<br><br>
16进制表示 0x31。<br><br>
2进制表示 00110001。<br></p>
<p>一共8位 ，不能被6位整除，因此不足位补 0。<br><br>
补充后12位  001100 010000。<br><br>
对应 base64 索引 12 16。<br><br>
base64  MQ==<br></p>
<p><strong>对补位的00，需要用 = 标记。</strong><br></p>
</li>
<li>
<p>字符串 1A</p>
<p>10进制表示 49 65。<br><br>
16进制表示 0x31 0x41。<br><br>
2进制表示  00110001 01000001。<br></p>
<p>一共16位，不能被6位整除，因此不足位补 0。<br><br>
补充后18位 001100 010100 000100。<br><br>
对应 base64 索引 12 20 4。<br><br>
base64 MUE=<br></p>
</li>
<li>
<p>字符串 1Aa</p>
<p>10进制表示 49 65 97。<br><br>
16进制表示 0x31 0x41 0x61。<br><br>
2进制表示 00110001 01000001 01100001。<br></p>
<p>一共24位，可以被6位整除，因此不需补位。<br><br>
划分后24位 001100 010100 000101 100001。<br><br>
对应 base64 索引 12 20 5 33。<br><br>
base64 MUFh<br></p>
</li>
</ol>
<p>根据上面的换算得出，base64 编码后的字符串长度一定是4的整数倍。也许1 2 字节的数据使用 base64 编码后并不能体现出它的优势。但是对100字节的数据编码：</p>
<ol>
<li>
<p>16进制编码</p>
<p>编码后长度：100 * 2 = 200。</p>
</li>
<li>
<p>base64 编码</p>
<p>编码后长度 ⌈100 / 3⌉ * 4  =  34 *4 = 136。</p>
</li>
</ol>
<h3>3.3 代码实现</h3>
<p>考虑到补位场景，因此实现较为复杂。可供编程语言入门时，练手使用。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * base 64 基数：26个大写字母、26个小写字母、10个阿拉伯数字、'+、'/'</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">static</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> char</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] base64 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'A'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'B'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'C'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'D'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'E'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'F'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'G'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'H'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'I'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'J'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'K'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'L'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'M'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'N'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'O'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'P'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Q'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'R'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'S'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'T'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'U'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'V'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'W'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'X'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Y'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Z'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'a'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'b'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'c'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'd'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'e'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'f'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'g'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'h'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'i'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'j'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'k'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'l'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'm'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'n'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'o'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'p'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'q'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'r'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 's'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 't'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'u'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'v'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'w'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'x'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'y'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'z'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        '0'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '1'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '2'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '3'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '4'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '5'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '6'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '7'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '8'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '9'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '+'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '/'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 编码：字节数组转 base64</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * &lt;p&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 字符 '1' 二进制：00110001 转base64后 001100 010000 补充 两个等号</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> encode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    StringBuffer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> base64StrBuff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> StringBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> //保存剩余字节</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        switch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x3f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  // 取前六位</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x03</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 保留后两位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[num]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x30</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 取前4位 与之前的后两位相加</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 保留后四位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[num]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x3c</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x03</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 取前两位 与之前的后四位相加</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x3f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 保留后六位</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[num]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[leftBit]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     * 对剩余位做补位处理，并用等号标记</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    switch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'='</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'='</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(base64[leftBit </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x3c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'='</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> base64StrBuff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 解码： base64 转字节数组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> base64Str</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> base64Str) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (base64Str </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> %</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"thr base64 string was illegal"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 检查末尾等号的个数，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> equalSignCount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '='</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        equalSignCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 转成字节数组的长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> bytesLen </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> equalSignCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[bytesLen]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 四个字节一组处理，转成三个字节</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCharIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> two </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCharIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> three </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCharIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> four </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCharIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">base64Str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (one </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> first </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> one </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xfc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (two </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        first </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (two </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x03</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        data[index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) first</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (three </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> second </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (two </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xf0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        second </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (three </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0f</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        data[index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) second</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (four </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> third </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (three </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xc0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        third </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> four</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        data[index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) third</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 寻找字符在字符串中的索引</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> c</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getCharIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'A'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Z'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'A'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'a'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'z'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'a'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 26</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '0'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '9'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '0'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 52</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '+'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '/'</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 63</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    else</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>4. 总结</h2>
<p>虽然 16 进制和 Base64 编码是可逆的，具备对应的解码操作，但他们却不是加密算法。加密算法一般需要使用密钥，只有正确的密钥，才能解密出正确的明文。</p>
]]></content:encoded>
    </item>
    <item>
      <title>编码、摘要和加密（三）—— 数据加密</title>
      <link>https://vuepress-theme-hope.github.io/encrypt.html</link>
      <guid>https://vuepress-theme-hope.github.io/encrypt.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">编码、摘要和加密（三）—— 数据加密</source>
      <description>关于加密，此处没有更加通俗易懂的解释。与同是对于字节类型数据处理的编码和摘要对比： 编码是可逆的，任何人只要知道编码规则，就能够进行解码。 摘要是不可逆的，即使知道只要算法的实现原理，也很难还原出原数据。</description>
      <category>加密</category>
      <category>字节处理</category>
      <pubDate>Mon, 14 Oct 2024 23:22:06 GMT</pubDate>
      <content:encoded><![CDATA[<p>关于加密，此处没有更加通俗易懂的解释。与同是对于字节类型数据处理的编码和摘要对比：</p>
<ol>
<li>编码是可逆的，任何人只要知道编码规则，就能够进行解码。</li>
<li>摘要是不可逆的，即使知道只要算法的实现原理，也很难还原出原数据。</li>
</ol>
<!-- more -->
<p>加密是可逆的，但只知道加密算法并不能解密，还需要知道加密密钥。</p>
<p>接下来，将针对几个常见的加密算法：<code>DES</code>、<code>3DES</code>、<code>AES</code>、<code>RSA</code> 的 Java 实现及其相关进行介绍，由于之前实现过 <code>DES</code> 和 <code>AES</code> 算法，因此具体算法说明，后续有空会写到。</p>
<h2>1. 相关概念</h2>
<h3>1.1 密钥</h3>
<p>在代码实现的过程中，密钥即是 key 。使用对称加密算法时，加密和解密是同一个密钥。使用非对称加密算法时，加密和解密密钥不相同，区分为公钥（<strong>public key</strong>）和私钥（<strong>private key</strong>）。</p>
<p>见过把 <code>base64</code> 当做对称加密， <code>md5</code> 当做非对称加密，因此下面划重点：</p>
<ol>
<li>判别加密算法最直接的方式，是否需要密钥。</li>
<li>对称加密和非对称加密区别在于，加解密是否是同一个key。</li>
<li>对称加密算法效率优于非对称加密算法，建议用对称加密算法加密长数据，非对称加密算法加密端数据。</li>
</ol>
<h3>1.2 加密模式</h3>
<p>加密模式主要体现在对称加密算法中。之前提到过，对称加密算法效率优，适合加密长数据。实际加密过程中，是将长数据划分成固定长度的若干块短数据进行加密操作。为防止暴力破解得出明文，因此衍生了四种加密模式。</p>
<h4>1.2.1 电子密码本模式</h4>
<p>英译 <strong>Electronic Code Book</strong> ，简称 <code>ECB</code> 模式，最简单的加密模式。</p>
<ol>
<li>将长数据分割成固定长度的若干块。</li>
<li>分别对每块数据用同一个密钥进行加密。</li>
<li>将每块加密出来的密文合并拼接成最终的完整密文。</li>
</ol>
<p>上述步骤存在一个严重的问题，如果有重复的明文块，那么加密出来的密文也重复。</p>
<h4>1.2.2 加密块链模式</h4>
<p>英译 <strong>Cipher Block Chaining</strong> ，简称 <code>CBC</code>,基于 <code>ECB</code> 模式的改进版。<br>
此处引入一个概念：初始化向量 <strong>Initialization Vector</strong> 简称 <code>IV</code> 。</p>
<ol>
<li>将长数据分割成固定长度的若干块。</li>
<li>将前一块的密文与后一块明文进行异或，再用密钥进行加密。</li>
<li>将每块加密出来的密文合并拼接成最终的完整密文。</li>
<li><strong>第一块明文没有密文与其异或，因此需要 IV 对其异或再用密钥加密。</strong></li>
</ol>
<h4>1.2.3  加密反馈模式</h4>
<p>英译 <strong>Cipher Feedback Mode</strong> ，简称 <code>CFB</code> 。</p>
<ol>
<li>将长数据分割成固定长度的若干块。</li>
<li>将前一块密文使用密钥进行加密，再与后一块明文进行异或。</li>
<li>将每块异或后的密文合并拼接成最终的完整密文。</li>
<li><strong>第一块明文需要与用密钥加密后的 IV 进行异或。</strong></li>
</ol>
<h4>1.2.4 输出反馈模式</h4>
<p>英译 <strong>Output Feedback Mode</strong> , 简称 <code>OFB</code> ，与 <code>CFB</code> 模式有些细小的区别。</p>
<ol>
<li>将长数据分割成固定长度的若干块。</li>
<li>将前一块中间密文使用密钥进行加密得中间密文。中间密文与明文进行异或得密文。</li>
<li>将每个中间密文与明文块异或后的密文进行合并拼接成最终的完整密文。</li>
<li><strong>第一块明文需要的中间密文是用密钥加密后的 IV 。</strong></li>
</ol>
<p><strong><code>CFB</code> 与 <code>OFB</code> 的区别在于中间密文和密文块的用法 。</strong></p>
<ol>
<li><code>CFB</code> 使用前一块的密文进行加密。</li>
<li><code>OFB</code> 使用前一块的中间密文进行加密。</li>
</ol>
<h3>1.3 填充模式</h3>
<p>分块加密的过程中，遇到不够整分的块。如，将 16 字节作为一个明文块。当加密 17 字节时，不够分成两块。此时需要对第二块明文进行填充。填充后的两个明文块各 16 字节共 32 字节后再进行加密操作。</p>
<p>后 15 字节的填充内容，需要取决于具体的填充模式。见后续 Java 代码实现中介绍。</p>
<h2>2. 代码实现</h2>
<p>Java 对加密部分做了比较完整的封装—— <code>Cipher</code>  类。</p>
<p>以下列举几个主要方法：</p>
<ol>
<li><code>getInstance</code> 获取 <code>Cipher</code> 对象，主要接收转换类型参数对象。转换类型参数分为 <strong>算法</strong> 和 <strong>算法/模式/填充</strong> 。</li>
<li><code>init</code> 初始化加密参数。包括指定加解密模式、密钥和初始化向量-<code>IV</code>。</li>
<li><code>doFinal</code> 结束加密和解密操作，有多个重载方法，主要接收需要加密或解密的数据。</li>
</ol>
<p>关于填充，之前简要介绍过。在 Java 代码中常见的填充模式是 <code>PKCS5Padding</code> 。还有一种模式 <code>NoPadding</code> 由于对明文长度有要求，不建议使用。其他填充模式未深入了解，暂不误导。</p>
<p><code>PKCS5Padding</code> 指，需要填充多少字节，就填充多少个字节的数字。如 <code>DES</code> 算法要求每个明文块 8 字节，那么，加密 1 字节数据，需要填充 7 个字节，此时填充 7 个 7<br>
。加密 7 字节数据，需要填充 1 个 1 。加密 8 字节数据时，为方便校验解密后的明文正确性，需要扩展成 16 字节数据，此时第二个明文块填充 8 个 8 。</p>
<h3>2.1 DES</h3>
<p>DES 全称 <strong>Data Encryption Standard</strong> ，数据加密标准算法。固定密钥 8 字节，64 位。每个明文块长度 8 字节。</p>
<p><code>getInstance</code> 接收参数：<em>DES/ECB/PKCS5Padding</em> ，其中 <code>ECB</code> 表示加密模式，可以用上述的其他三个模式替换以及更多 JDK 支持的模式。<code>PKCS5Padding</code> 表示一种填充模式。</p>
<p>在使用 <code>CBC</code> 、 <code>CFB</code> 、 <code>OFB</code> 时，需要在 <code>init</code> 方法中指定 <strong>IV</strong> 。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> KEY_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DES"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DEFAULT_CIPHER_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DES/ECB/PKCS5Padding"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 加密模式</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ENCRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 解密模式</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DECRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 3DES</h3>
<p><code>3DES</code> 即使用 3 次 <code>DES</code> 算法。由于每个 <code>DES</code> 算法处理需要 8 字节密钥，因此 <code>3DES</code> 算法需要 24 字节密钥。</p>
<p><strong>需要注意，<code>3DES</code> 算法名称使用 <code>DESede</code> 或 <code>TripleDES</code></strong>。<strong>e</strong> 表示做 <code>DES</code> 加密操作，<strong>d</strong> 表示做 <code>DES</code> 解密操作。前者表示用 DES 连续做加密 、解密、加密操作，后者表示连续做三次加密操作。每次使用的密钥，分别是 24 字节密钥中不同的三段（前、中、后各8字节）。</p>
<blockquote>
<p>若使用 <code>DESede</code> 算法时 24 字节密钥中的前两段一样，该算法等同于 <code>DES</code> 算法使用第三段的 8 字节密钥。</p>
</blockquote>
<p>填充相关同 <code>DES</code> 算法一样。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> KEY_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DESede"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DEFAULT_CIPHER_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DESede/CBC/PKCS5Padding"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 初始化向量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> IV </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "12345678"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ENCRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM),</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> IvParameterSpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">IV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DECRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.3 AES</h3>
<p>AES 全称 <strong>Advanced Encryption Standard</strong> ，高级加密标准算法，用于替代  <code>DES</code> 。</p>
<p><code>DES</code> 只支持 8 字节密钥，<code>AES</code> 可以支持 16  字节、24 字节和 32 字节密钥。明文块长度也可以划分成 16 字节 、24 字节和  32 字节进行填充。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> KEY_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "AES"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DEFAULT_CIPHER_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "AES/ECB/PKCS5Padding"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ENCRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DECRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> SecretKeySpec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(key, KEY_ALGORITHM));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上三种对称加密算法的 Java 代码实现基本一致。</p>
<h3>2.4 RSA</h3>
<p>RSA是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的非对称加密算法，因此使用他们 3 人姓氏首字母命名。</p>
<p>示例代码中的公钥和私钥是随机生成的密钥对，密钥对模长建议是 1024 或 2048，对应密文长度是 128 字节和 256 字节。<strong>模长可以大于 2048 ， 越长越难破解，但是效率越低。</strong> 实际应用中，建议将密钥对模长设置为 2048 并以文件的形式存储在终端。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PrivateKey</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> privateKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PublicKey</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> publicKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DEFAULT_CIPHER_ALGORITHM </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "RSA"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">static</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    KeyPairGenerator</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> keyGener </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        keyGener </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> KeyPairGenerator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        keyGener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        KeyPair</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> keyPair </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> keyGener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">generateKeyPair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        privateKey </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> keyPair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPrivate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        publicKey </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> keyPair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPublic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchAlgorithmException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">ENCRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, publicKey);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchAlgorithmException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchPaddingException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InvalidKeyException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BadPaddingException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">IllegalBlockSizeException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">decrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Cipher</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cipher </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DEFAULT_CIPHER_ALGORITHM);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">DECRYPT_MODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, privateKey);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> cipher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">doFinal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchAlgorithmException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchPaddingException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">InvalidKeyException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">BadPaddingException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">IllegalBlockSizeException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>编码、摘要和加密（二）—— 信息摘要</title>
      <link>https://vuepress-theme-hope.github.io/hash.html</link>
      <guid>https://vuepress-theme-hope.github.io/hash.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">编码、摘要和加密（二）—— 信息摘要</source>
      <description>信息摘要，英译 Message Digest 。看见首字母这么大的 M 、D有没有立即联想到 MD5 算法。其实 MD5算法只是目前比较流行的信息摘要算法，在它之前，还出现过 MD2 MD4,以及目前仍然在用的安全散列算法（Secure Hash Algorithm） SHA1 和 SHA256都属于信息摘要算法的一种。</description>
      <category>字节处理</category>
      <pubDate>Mon, 14 Oct 2024 23:22:06 GMT</pubDate>
      <content:encoded><![CDATA[<p>信息摘要，英译 <strong>Message Digest</strong> 。看见首字母这么大的 <code>M</code> 、<code>D</code>有没有立即联想到 <code>MD5</code> 算法。其实 <code>MD5</code>算法只是目前比较流行的信息摘要算法，在它之前，还出现过 <code>MD2</code> <code>MD4</code>,以及目前仍然在用的安全散列算法（<strong>Secure Hash Algorithm</strong>） <code>SHA1</code> 和 <code>SHA256</code>都属于信息摘要算法的一种。</p>
<!-- more -->
<p>国家密码管理局于2010年12月也发布了一种信息摘要算法 <code>SM3</code> 。</p>
<p>由于对信息摘要算法研究并不透彻，因此这篇文章将重点讲 jdk 支持的三个常见摘要算法的使用：<code>MD5</code>、<code>SHA1</code>、<code>SHA256</code>。</p>
<h2>1. 相关代码</h2>
<p>Java 对信息摘要算法做了比较完整的封装——<code>MessageDigest</code>。该类是抽象类，针对具体信息摘要算法的实现使用了代理模式。主要提供了三个方法及其重载方法。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 获取摘要算法对象。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 通过指定参数 algorithm 是 MD5 SHA1 SHA256 ,获取具体的实例。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">static</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MessageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> getInstance</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 接收参与摘要计算的字节数据，可多次执行。一般用于文件的的摘要计算。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 也可以一次将文件的全部字节读取至内存，使用 digest 方法一次计算。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> update</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 具有两种使用场景。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 1. 在 update 方法接收全部的字节数据之后，使用此方法生成摘要数据。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 2. 直接使用此方法接收较短的字节数据，生成摘要数据。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] digest</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>2. 用途</h2>
<h3>2.1 计算字符串</h3>
<p>用于校验报文数据在网络传输的过程中是否被篡改过。</p>
<p>以 MD5 算法为例：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 计算字符串md5</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> md5</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> data) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        MessageDigest</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> messageDigest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> MessageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"MD5"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] digest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> messageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">digest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> HexUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(digest);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchAlgorithmException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>2.2 计算文件</h3>
<p>通过网络下载一些文件的时候，通常通过计算下载下来文件的 MD5 和 SHA1 判断下载下来的文件是否在传输过程中被篡改过。</p>
<p>以 MD5 算法为例：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 计算文件md5</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">@return</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fileMd5</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> path) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        MessageDigest</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> messageDigest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> MessageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"MD5"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(path)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The file path is illegal"</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        InputStream</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inputStream </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> FileInputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(file)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] buff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> byte</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1024</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ((len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> inputStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(buff)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            messageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(buff, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, len);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        byte</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] digest </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> messageDigest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">digest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> HexUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(digest);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">NoSuchAlgorithmException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">FileNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">IOException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如需计算 SHA1 和 SHA256 ，只需将 <code>getInstance</code> 的参数值改成 <strong>SHA-1</strong> 和 <strong>SHA-256</strong>。</p>
<h2>3. 总结</h2>
<p>千万不要认为 <code>MD5</code> 是加密算法。信息摘要算法，是一种单向散列算法，是一种不可逆的算法，即，可以根据一个字符串计算出 <code>MD5</code>，却不能根据 <code>MD5</code> 还原出生成它的字符串。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Vuepress Markdown 语法</title>
      <link>https://vuepress-theme-hope.github.io/markdown.html</link>
      <guid>https://vuepress-theme-hope.github.io/markdown.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Vuepress Markdown 语法</source>
      <description>示例 标题 文本 列表 引用 代码块 链接 图像 注脚 上标下标 表格 分割线 数学公式 警告 提示 标签 自定义对齐 思维导图 流程图 注脚解释1。 ↩︎ 注脚解释2。 ↩︎</description>
      <category>Note</category>
      <pubDate>Sun, 06 Oct 2024 15:51:15 GMT</pubDate>
      <content:encoded><![CDATA[<h2>示例</h2>

<h2>标题</h2>

<h2>文本</h2>

<h2>列表</h2>

<h2>引用</h2>

<h2>代码块</h2>

<h2>链接</h2>

<h2>图像</h2>

<h2>注脚</h2>

<h2>上标下标</h2>

<h2>表格</h2>

<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p>注脚解释1。 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p>注脚解释2。 <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
      <enclosure url="https://support-assets.githubassets.com/packs/static/components/v2/components/assets/images/product-cards/get-started-f69cbc8bacc67cbe4240.webp =500x500" type="image/"/>
    </item>
    <item>
      <title>Git 命令解释</title>
      <link>https://vuepress-theme-hope.github.io/git.html</link>
      <guid>https://vuepress-theme-hope.github.io/git.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Git 命令解释</source>
      <description>记录 Git 常用命令</description>
      <category>Note</category>
      <pubDate>Sat, 05 Oct 2024 04:23:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录 Git 常用命令</p>
<!-- more -->
<h2>add</h2>
<details class="hint-container details"><summary>git add -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git add [&lt;options&gt;] [--] &lt;pathspec&gt;...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -n, --dry-run         dry run</span></span>
<span class="line"><span>    -v, --verbose         be verbose</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -i, --interactive     interactive picking</span></span>
<span class="line"><span>    -p, --patch           select hunks interactively</span></span>
<span class="line"><span>    -e, --edit            edit current diff and apply</span></span>
<span class="line"><span>    -f, --force           allow adding otherwise ignored files</span></span>
<span class="line"><span>    -u, --update          update tracked files</span></span>
<span class="line"><span>    --renormalize         renormalize EOL of tracked files (implies -u)</span></span>
<span class="line"><span>    -N, --intent-to-add   record only the fact that the path will be added later</span></span>
<span class="line"><span>    -A, --all             add changes from all tracked and untracked files</span></span>
<span class="line"><span>    --ignore-removal      ignore paths removed in the working tree (same as --no-all)</span></span>
<span class="line"><span>    --refresh             don't add, only refresh the index</span></span>
<span class="line"><span>    --ignore-errors       just skip files which cannot be added because of errors</span></span>
<span class="line"><span>    --ignore-missing      check if - even missing - files are ignored in dry run</span></span>
<span class="line"><span>    --sparse              allow updating entries outside of the sparse-checkout cone</span></span>
<span class="line"><span>    --chmod (+|-)x        override the executable bit of the listed files</span></span>
<span class="line"><span>    --pathspec-from-file &lt;file&gt;</span></span>
<span class="line"><span>                          read pathspec from file</span></span>
<span class="line"><span>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p><code>add</code> 将工作区的更改保存到暂存区，准备提交。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> .</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 添加当前目录下的全部文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'file path'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 添加指定文件，可用相对路径。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'file paht'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 强制添加指定文件，即使在 .gitignore 中</span></span></code></pre>
</div><h2>apply</h2>
<details class="hint-container details"><summary>git apply -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git apply [&lt;options&gt;] [&lt;patch&gt;...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    --exclude &lt;path&gt;      don't apply changes matching the given path</span></span>
<span class="line"><span>    --include &lt;path&gt;      apply changes matching the given path</span></span>
<span class="line"><span>    -p &lt;num&gt;              remove &lt;num&gt; leading slashes from traditional diff paths</span></span>
<span class="line"><span>    --no-add              ignore additions made by the patch</span></span>
<span class="line"><span>    --stat                instead of applying the patch, output diffstat for the input</span></span>
<span class="line"><span>    --numstat             show number of added and deleted lines in decimal notation</span></span>
<span class="line"><span>    --summary             instead of applying the patch, output a summary for the input</span></span>
<span class="line"><span>    --check               instead of applying the patch, see if the patch is applicable</span></span>
<span class="line"><span>    --index               make sure the patch is applicable to the current index</span></span>
<span class="line"><span>    -N, --intent-to-add   mark new files with `git add --intent-to-add`</span></span>
<span class="line"><span>    --cached              apply a patch without touching the working tree</span></span>
<span class="line"><span>    --unsafe-paths        accept a patch that touches outside the working area</span></span>
<span class="line"><span>    --apply               also apply the patch (use with --stat/--summary/--check)</span></span>
<span class="line"><span>    -3, --3way            attempt three-way merge, fall back on normal patch if that fails</span></span>
<span class="line"><span>    --build-fake-ancestor &lt;file&gt;</span></span>
<span class="line"><span>                          build a temporary index based on embedded index information</span></span>
<span class="line"><span>    -z                    paths are separated with NUL character</span></span>
<span class="line"><span>    -C &lt;n&gt;                ensure at least &lt;n&gt; lines of context match</span></span>
<span class="line"><span>    --whitespace &lt;action&gt;</span></span>
<span class="line"><span>                          detect new or modified lines that have whitespace errors</span></span>
<span class="line"><span>    --ignore-space-change</span></span>
<span class="line"><span>                          ignore changes in whitespace when finding context</span></span>
<span class="line"><span>    --ignore-whitespace   ignore changes in whitespace when finding context</span></span>
<span class="line"><span>    -R, --reverse         apply the patch in reverse</span></span>
<span class="line"><span>    --unidiff-zero        don't expect at least one line of context</span></span>
<span class="line"><span>    --reject              leave the rejected hunks in corresponding *.rej files</span></span>
<span class="line"><span>    --allow-overlap       allow overlapping hunks</span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --inaccurate-eof      tolerate incorrectly detected missing new-line at the end of file</span></span>
<span class="line"><span>    --recount             do not trust the line counts in the hunk headers</span></span>
<span class="line"><span>    --directory &lt;root&gt;    prepend &lt;root&gt; to all filenames</span></span>
<span class="line"><span>    --allow-empty         don't return error for empty patches</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>branch</h2>
<details class="hint-container details"><summary>git branch -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git branch [&lt;options&gt;] [-r | -a] [--merged] [--no-merged]</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] [-f] [--recurse-submodules] &lt;branch-name&gt; [&lt;start-point&gt;]</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] [-l] [&lt;pattern&gt;...]</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] [-r] (-d | -D) &lt;branch-name&gt;...</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] (-m | -M) [&lt;old-branch&gt;] &lt;new-branch&gt;</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] (-c | -C) [&lt;old-branch&gt;] &lt;new-branch&gt;</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] [-r | -a] [--points-at]</span></span>
<span class="line"><span>   or: git branch [&lt;options&gt;] [-r | -a] [--format]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Generic options</span></span>
<span class="line"><span>    -v, --verbose         show hash and subject, give twice for upstream branch</span></span>
<span class="line"><span>    -q, --quiet           suppress informational messages</span></span>
<span class="line"><span>    -t, --track[=(direct|inherit)]</span></span>
<span class="line"><span>                          set branch tracking configuration</span></span>
<span class="line"><span>    -u, --set-upstream-to &lt;upstream&gt;</span></span>
<span class="line"><span>                          change the upstream info</span></span>
<span class="line"><span>    --unset-upstream      unset the upstream info</span></span>
<span class="line"><span>    --color[=&lt;when&gt;]      use colored output</span></span>
<span class="line"><span>    -r, --remotes         act on remote-tracking branches</span></span>
<span class="line"><span>    --contains &lt;commit&gt;   print only branches that contain the commit</span></span>
<span class="line"><span>    --no-contains &lt;commit&gt;</span></span>
<span class="line"><span>                          print only branches that don't contain the commit</span></span>
<span class="line"><span>    --abbrev[=&lt;n&gt;]        use &lt;n&gt; digits to display object names</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Specific git-branch actions:</span></span>
<span class="line"><span>    -a, --all             list both remote-tracking and local branches</span></span>
<span class="line"><span>    -d, --delete          delete fully merged branch</span></span>
<span class="line"><span>    -D                    delete branch (even if not merged)</span></span>
<span class="line"><span>    -m, --move            move/rename a branch and its reflog</span></span>
<span class="line"><span>    -M                    move/rename a branch, even if target exists</span></span>
<span class="line"><span>    -c, --copy            copy a branch and its reflog</span></span>
<span class="line"><span>    -C                    copy a branch, even if target exists</span></span>
<span class="line"><span>    -l, --list            list branch names</span></span>
<span class="line"><span>    --show-current        show current branch name</span></span>
<span class="line"><span>    --create-reflog       create the branch's reflog</span></span>
<span class="line"><span>    --edit-description    edit the description for the branch</span></span>
<span class="line"><span>    -f, --force           force creation, move/rename, deletion</span></span>
<span class="line"><span>    --merged &lt;commit&gt;     print only branches that are merged</span></span>
<span class="line"><span>    --no-merged &lt;commit&gt;  print only branches that are not merged</span></span>
<span class="line"><span>    --column[=&lt;style&gt;]    list branches in columns</span></span>
<span class="line"><span>    --sort &lt;key&gt;          field name to sort on</span></span>
<span class="line"><span>    --points-at &lt;object&gt;  print only branches of the object</span></span>
<span class="line"><span>    -i, --ignore-case     sorting and filtering are case insensitive</span></span>
<span class="line"><span>    --recurse-submodules  recurse through submodules</span></span>
<span class="line"><span>    --format &lt;format&gt;     format to use for the output</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -M</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev-branch</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev-branch</span></span></code></pre>
</div><h2>checkout</h2>
<details class="hint-container details"><summary>git checkout -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git checkout [&lt;options&gt;] &lt;branch&gt;</span></span>
<span class="line"><span>   or: git checkout [&lt;options&gt;] [&lt;branch&gt;] -- &lt;file&gt;...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -b &lt;branch&gt;           create and checkout a new branch</span></span>
<span class="line"><span>    -B &lt;branch&gt;           create/reset and checkout a branch</span></span>
<span class="line"><span>    -l                    create reflog for new branch</span></span>
<span class="line"><span>    --guess               second guess 'git checkout &lt;no-such-branch&gt;' (default)</span></span>
<span class="line"><span>    --overlay             use overlay mode (default)</span></span>
<span class="line"><span>    -q, --quiet           suppress progress reporting</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;checkout&gt;]</span></span>
<span class="line"><span>                          control recursive updating of submodules</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    -m, --merge           perform a 3-way merge with the new branch</span></span>
<span class="line"><span>    --conflict &lt;style&gt;    conflict style (merge, diff3, or zdiff3)</span></span>
<span class="line"><span>    -d, --detach          detach HEAD at named commit</span></span>
<span class="line"><span>    -t, --track[=(direct|inherit)]</span></span>
<span class="line"><span>                          set branch tracking configuration</span></span>
<span class="line"><span>    -f, --force           force checkout (throw away local modifications)</span></span>
<span class="line"><span>    --orphan &lt;new-branch&gt;</span></span>
<span class="line"><span>                          new unparented branch</span></span>
<span class="line"><span>    --overwrite-ignore    update ignored files (default)</span></span>
<span class="line"><span>    --ignore-other-worktrees</span></span>
<span class="line"><span>                          do not check if another worktree is holding the given ref</span></span>
<span class="line"><span>    -2, --ours            checkout our version for unmerged files</span></span>
<span class="line"><span>    -3, --theirs          checkout their version for unmerged files</span></span>
<span class="line"><span>    -p, --patch           select hunks interactively</span></span>
<span class="line"><span>    --ignore-skip-worktree-bits</span></span>
<span class="line"><span>                          do not limit pathspecs to sparse entries only</span></span>
<span class="line"><span>    --pathspec-from-file &lt;file&gt;</span></span>
<span class="line"><span>                          read pathspec from file</span></span>
<span class="line"><span>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dev-branch</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tags/v2.0.0-rc.52</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v2.0.0-rc.52</span></span></code></pre>
</div><h2>cherry-pick</h2>
<details class="hint-container details"><summary>git cherry-pick -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git cherry-pick [--edit] [-n] [-m &lt;parent-number&gt;] [-s] [-x] [--ff]</span></span>
<span class="line"><span>                       [-S[&lt;keyid&gt;]] &lt;commit&gt;...</span></span>
<span class="line"><span>   or: git cherry-pick (--continue | --skip | --abort | --quit)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    --quit                end revert or cherry-pick sequence</span></span>
<span class="line"><span>    --continue            resume revert or cherry-pick sequence</span></span>
<span class="line"><span>    --abort               cancel revert or cherry-pick sequence</span></span>
<span class="line"><span>    --skip                skip current commit and continue</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    -n, --no-commit       don't automatically commit</span></span>
<span class="line"><span>    -e, --edit            edit the commit message</span></span>
<span class="line"><span>    -s, --signoff         add a Signed-off-by trailer</span></span>
<span class="line"><span>    -m, --mainline &lt;parent-number&gt;</span></span>
<span class="line"><span>                          select mainline parent</span></span>
<span class="line"><span>    --rerere-autoupdate   update the index with reused conflict resolution if possible</span></span>
<span class="line"><span>    --strategy &lt;strategy&gt;</span></span>
<span class="line"><span>                          merge strategy</span></span>
<span class="line"><span>    -X, --strategy-option &lt;option&gt;</span></span>
<span class="line"><span>                          option for merge strategy</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG sign commit</span></span>
<span class="line"><span>    -x                    append commit name</span></span>
<span class="line"><span>    --ff                  allow fast-forward</span></span>
<span class="line"><span>    --allow-empty         preserve initially empty commits</span></span>
<span class="line"><span>    --allow-empty-message</span></span>
<span class="line"><span>                          allow commits with empty messages</span></span>
<span class="line"><span>    --keep-redundant-commits</span></span>
<span class="line"><span>                          keep redundant, empty commits</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>clone</h2>
<details class="hint-container details"><summary>git clone -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git clone [&lt;options&gt;] [--] &lt;repo&gt; [&lt;dir&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    --reject-shallow      don't clone shallow repository</span></span>
<span class="line"><span>    -n, --no-checkout     don't create a checkout</span></span>
<span class="line"><span>    --bare                create a bare repository</span></span>
<span class="line"><span>    --mirror              create a mirror repository (implies bare)</span></span>
<span class="line"><span>    -l, --local           to clone from a local repository</span></span>
<span class="line"><span>    --no-hardlinks        don't use local hardlinks, always copy</span></span>
<span class="line"><span>    -s, --shared          setup as shared repository</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;pathspec&gt;]</span></span>
<span class="line"><span>                          initialize submodules in the clone</span></span>
<span class="line"><span>    --recursive[=&lt;pathspec&gt;]</span></span>
<span class="line"><span>                          alias of --recurse-submodules</span></span>
<span class="line"><span>    -j, --jobs &lt;n&gt;        number of submodules cloned in parallel</span></span>
<span class="line"><span>    --template &lt;template-directory&gt;</span></span>
<span class="line"><span>                          directory from which templates will be used</span></span>
<span class="line"><span>    --reference &lt;repo&gt;    reference repository</span></span>
<span class="line"><span>    --reference-if-able &lt;repo&gt;</span></span>
<span class="line"><span>                          reference repository</span></span>
<span class="line"><span>    --dissociate          use --reference only while cloning</span></span>
<span class="line"><span>    -o, --origin &lt;name&gt;   use &lt;name&gt; instead of 'origin' to track upstream</span></span>
<span class="line"><span>    -b, --branch &lt;branch&gt;</span></span>
<span class="line"><span>                          checkout &lt;branch&gt; instead of the remote's HEAD</span></span>
<span class="line"><span>    -u, --upload-pack &lt;path&gt;</span></span>
<span class="line"><span>                          path to git-upload-pack on the remote</span></span>
<span class="line"><span>    --depth &lt;depth&gt;       create a shallow clone of that depth</span></span>
<span class="line"><span>    --shallow-since &lt;time&gt;</span></span>
<span class="line"><span>                          create a shallow clone since a specific time</span></span>
<span class="line"><span>    --shallow-exclude &lt;revision&gt;</span></span>
<span class="line"><span>                          deepen history of shallow clone, excluding rev</span></span>
<span class="line"><span>    --single-branch       clone only one branch, HEAD or --branch</span></span>
<span class="line"><span>    --no-tags             don't clone any tags, and make later fetches not to follow them</span></span>
<span class="line"><span>    --shallow-submodules  any cloned submodules will be shallow</span></span>
<span class="line"><span>    --separate-git-dir &lt;gitdir&gt;</span></span>
<span class="line"><span>                          separate git dir from working tree</span></span>
<span class="line"><span>    -c, --config &lt;key=value&gt;</span></span>
<span class="line"><span>                          set config inside the new repository</span></span>
<span class="line"><span>    --server-option &lt;server-specific&gt;</span></span>
<span class="line"><span>                          option to transmit</span></span>
<span class="line"><span>    -4, --ipv4            use IPv4 addresses only</span></span>
<span class="line"><span>    -6, --ipv6            use IPv6 addresses only</span></span>
<span class="line"><span>    --filter &lt;args&gt;       object filtering</span></span>
<span class="line"><span>    --also-filter-submodules</span></span>
<span class="line"><span>                          apply partial clone filters to submodules</span></span>
<span class="line"><span>    --remote-submodules   any cloned submodules will use their remote-tracking branch</span></span>
<span class="line"><span>    --sparse              initialize sparse-checkout file to include only files at root</span></span>
<span class="line"><span>    --bundle-uri &lt;uri&gt;    a URI for downloading bundles before fetching from origin remote</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>commit</h2>
<details class="hint-container details"><summary>git commit -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u&lt;mode&gt;] [--amend]</span></span>
<span class="line"><span>                  [--dry-run] [(-c | -C | --squash) &lt;commit&gt; | --fixup [(amend|reword):]&lt;commit&gt;)]</span></span>
<span class="line"><span>                  [-F &lt;file&gt; | -m &lt;msg&gt;] [--reset-author] [--allow-empty]</span></span>
<span class="line"><span>                  [--allow-empty-message] [--no-verify] [-e] [--author=&lt;author&gt;]</span></span>
<span class="line"><span>                  [--date=&lt;date&gt;] [--cleanup=&lt;mode&gt;] [--[no-]status]</span></span>
<span class="line"><span>                  [-i | -o] [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]</span></span>
<span class="line"><span>                  [(--trailer &lt;token&gt;[(=|:)&lt;value&gt;])...] [-S[&lt;keyid&gt;]]</span></span>
<span class="line"><span>                  [--] [&lt;pathspec&gt;...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -q, --quiet           suppress summary after successful commit</span></span>
<span class="line"><span>    -v, --verbose         show diff in commit message template</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Commit message options</span></span>
<span class="line"><span>    -F, --file &lt;file&gt;     read message from file</span></span>
<span class="line"><span>    --author &lt;author&gt;     override author for commit</span></span>
<span class="line"><span>    --date &lt;date&gt;         override date for commit</span></span>
<span class="line"><span>    -m, --message &lt;message&gt;</span></span>
<span class="line"><span>                          commit message</span></span>
<span class="line"><span>    -c, --reedit-message &lt;commit&gt;</span></span>
<span class="line"><span>                          reuse and edit message from specified commit</span></span>
<span class="line"><span>    -C, --reuse-message &lt;commit&gt;</span></span>
<span class="line"><span>                          reuse message from specified commit</span></span>
<span class="line"><span>    --fixup [(amend|reword):]commit</span></span>
<span class="line"><span>                          use autosquash formatted message to fixup or amend/reword specified commit</span></span>
<span class="line"><span>    --squash &lt;commit&gt;     use autosquash formatted message to squash specified commit</span></span>
<span class="line"><span>    --reset-author        the commit is authored by me now (used with -C/-c/--amend)</span></span>
<span class="line"><span>    --trailer &lt;trailer&gt;   add custom trailer(s)</span></span>
<span class="line"><span>    -s, --signoff         add a Signed-off-by trailer</span></span>
<span class="line"><span>    -t, --template &lt;file&gt;</span></span>
<span class="line"><span>                          use specified template file</span></span>
<span class="line"><span>    -e, --edit            force edit of commit</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    --status              include status in commit message template</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG sign commit</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Commit contents options</span></span>
<span class="line"><span>    -a, --all             commit all changed files</span></span>
<span class="line"><span>    -i, --include         add specified files to index for commit</span></span>
<span class="line"><span>    --interactive         interactively add files</span></span>
<span class="line"><span>    -p, --patch           interactively add changes</span></span>
<span class="line"><span>    -o, --only            commit only specified files</span></span>
<span class="line"><span>    -n, --no-verify       bypass pre-commit and commit-msg hooks</span></span>
<span class="line"><span>    --dry-run             show what would be committed</span></span>
<span class="line"><span>    --short               show status concisely</span></span>
<span class="line"><span>    --branch              show branch information</span></span>
<span class="line"><span>    --ahead-behind        compute full ahead/behind values</span></span>
<span class="line"><span>    --porcelain           machine-readable output</span></span>
<span class="line"><span>    --long                show status in long format (default)</span></span>
<span class="line"><span>    -z, --null            terminate entries with NUL</span></span>
<span class="line"><span>    --amend               amend previous commit</span></span>
<span class="line"><span>    --no-post-rewrite     bypass post-rewrite hook</span></span>
<span class="line"><span>    -u, --untracked-files[=&lt;mode&gt;]</span></span>
<span class="line"><span>                          show untracked files, optional modes: all, normal, no. (Default: all)</span></span>
<span class="line"><span>    --pathspec-from-file &lt;file&gt;</span></span>
<span class="line"><span>                          read pathspec from file</span></span>
<span class="line"><span>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p><code>commit</code> 将暂存区内容，提交到本地仓库中，并生成一个提交记录。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'commit message'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 提交代码到本地仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --amend</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 向上一次提交记录中追加改动。可同时修改 commit message。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'commit message'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 使用 GPG 签名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'commit message'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 合并 执行 git add . 和 git commit -m</span></span></code></pre>
</div><h2>config</h2>
<details class="hint-container details"><summary>git config -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git config [&lt;options&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Config file location</span></span>
<span class="line"><span>    --global              use global config file</span></span>
<span class="line"><span>    --system              use system config file</span></span>
<span class="line"><span>    --local               use repository config file</span></span>
<span class="line"><span>    --worktree            use per-worktree config file</span></span>
<span class="line"><span>    -f, --file &lt;file&gt;     use given config file</span></span>
<span class="line"><span>    --blob &lt;blob-id&gt;      read config from given blob object</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Action</span></span>
<span class="line"><span>    --get                 get value: name [value-pattern]</span></span>
<span class="line"><span>    --get-all             get all values: key [value-pattern]</span></span>
<span class="line"><span>    --get-regexp          get values for regexp: name-regex [value-pattern]</span></span>
<span class="line"><span>    --get-urlmatch        get value specific for the URL: section[.var] URL</span></span>
<span class="line"><span>    --replace-all         replace all matching variables: name value [value-pattern]</span></span>
<span class="line"><span>    --add                 add a new variable: name value</span></span>
<span class="line"><span>    --unset               remove a variable: name [value-pattern]</span></span>
<span class="line"><span>    --unset-all           remove all matches: name [value-pattern]</span></span>
<span class="line"><span>    --rename-section      rename section: old-name new-name</span></span>
<span class="line"><span>    --remove-section      remove a section: name</span></span>
<span class="line"><span>    -l, --list            list all</span></span>
<span class="line"><span>    --fixed-value         use string equality when comparing values to 'value-pattern'</span></span>
<span class="line"><span>    -e, --edit            open an editor</span></span>
<span class="line"><span>    --get-color           find the color configured: slot [default]</span></span>
<span class="line"><span>    --get-colorbool       find the color setting: slot [stdout-is-tty]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Type</span></span>
<span class="line"><span>    -t, --type &lt;type&gt;     value is given this type</span></span>
<span class="line"><span>    --bool                value is "true" or "false"</span></span>
<span class="line"><span>    --int                 value is decimal number</span></span>
<span class="line"><span>    --bool-or-int         value is --bool or --int</span></span>
<span class="line"><span>    --bool-or-str         value is --bool or string</span></span>
<span class="line"><span>    --path                value is a path (file or directory name)</span></span>
<span class="line"><span>    --expiry-date         value is an expiry date</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Other</span></span>
<span class="line"><span>    -z, --null            terminate values with NUL byte</span></span>
<span class="line"><span>    --name-only           show variable names only</span></span>
<span class="line"><span>    --includes            respect include directives on lookup</span></span>
<span class="line"><span>    --show-origin         show origin of config (file, standard input, blob, command line)</span></span>
<span class="line"><span>    --show-scope          show scope of config (worktree, local, global, system, command)</span></span>
<span class="line"><span>    --default &lt;value&gt;     with --get, use default value when missing entry</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p>配置 git 工作环境。分系统，用户，仓库三个级别的配置。</p>
<p>下面给出三个配置文件的位置。</p>
<ul>
<li>system: 存储在 <code>/etc/gitconfig</code>.</li>
<li>global: 存储在 <code>~/.gitconfig</code>.</li>
<li>local: 存储在 <code>&lt;repo&gt;/.git/config</code>.</li>
</ul>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "user name"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "example@example.com"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> autocrlf=input</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 配置 crlf 到 lf 的转换，windows 建议设置 true。</span></span></code></pre>
</div><h2>fetch</h2>
<details class="hint-container details"><summary>git fetch -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git fetch [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]</span></span>
<span class="line"><span>   or: git fetch [&lt;options&gt;] &lt;group&gt;</span></span>
<span class="line"><span>   or: git fetch --multiple [&lt;options&gt;] [(&lt;repository&gt; | &lt;group&gt;)...]</span></span>
<span class="line"><span>   or: git fetch --all [&lt;options&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --all                 fetch from all remotes</span></span>
<span class="line"><span>    --set-upstream        set upstream for git pull/fetch</span></span>
<span class="line"><span>    -a, --append          append to .git/FETCH_HEAD instead of overwriting</span></span>
<span class="line"><span>    --atomic              use atomic transaction to update references</span></span>
<span class="line"><span>    --upload-pack &lt;path&gt;  path to upload pack on remote end</span></span>
<span class="line"><span>    -f, --force           force overwrite of local reference</span></span>
<span class="line"><span>    -m, --multiple        fetch from multiple remotes</span></span>
<span class="line"><span>    -t, --tags            fetch all tags and associated objects</span></span>
<span class="line"><span>    -n                    do not fetch all tags (--no-tags)</span></span>
<span class="line"><span>    -j, --jobs &lt;n&gt;        number of submodules fetched in parallel</span></span>
<span class="line"><span>    --prefetch            modify the refspec to place all refs within refs/prefetch/</span></span>
<span class="line"><span>    -p, --prune           prune remote-tracking branches no longer on remote</span></span>
<span class="line"><span>    -P, --prune-tags      prune local tags no longer on remote and clobber changed tags</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;on-demand&gt;]</span></span>
<span class="line"><span>                          control recursive fetching of submodules</span></span>
<span class="line"><span>    --dry-run             dry run</span></span>
<span class="line"><span>    --write-fetch-head    write fetched references to the FETCH_HEAD file</span></span>
<span class="line"><span>    -k, --keep            keep downloaded pack</span></span>
<span class="line"><span>    -u, --update-head-ok  allow updating of HEAD ref</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    --depth &lt;depth&gt;       deepen history of shallow clone</span></span>
<span class="line"><span>    --shallow-since &lt;time&gt;</span></span>
<span class="line"><span>                          deepen history of shallow repository based on time</span></span>
<span class="line"><span>    --shallow-exclude &lt;revision&gt;</span></span>
<span class="line"><span>                          deepen history of shallow clone, excluding rev</span></span>
<span class="line"><span>    --deepen &lt;n&gt;          deepen history of shallow clone</span></span>
<span class="line"><span>    --unshallow           convert to a complete repository</span></span>
<span class="line"><span>    --refetch             re-fetch without negotiating common commits</span></span>
<span class="line"><span>    --update-shallow      accept refs that update .git/shallow</span></span>
<span class="line"><span>    --refmap &lt;refmap&gt;     specify fetch refmap</span></span>
<span class="line"><span>    -o, --server-option &lt;server-specific&gt;</span></span>
<span class="line"><span>                          option to transmit</span></span>
<span class="line"><span>    -4, --ipv4            use IPv4 addresses only</span></span>
<span class="line"><span>    -6, --ipv6            use IPv6 addresses only</span></span>
<span class="line"><span>    --negotiation-tip &lt;revision&gt;</span></span>
<span class="line"><span>                          report that we have only objects reachable from this object</span></span>
<span class="line"><span>    --negotiate-only      do not fetch a packfile; instead, print ancestors of negotiation tips</span></span>
<span class="line"><span>    --filter &lt;args&gt;       object filtering</span></span>
<span class="line"><span>    --auto-maintenance    run 'maintenance --auto' after fetching</span></span>
<span class="line"><span>    --auto-gc             run 'maintenance --auto' after fetching</span></span>
<span class="line"><span>    --show-forced-updates</span></span>
<span class="line"><span>                          check for forced-updates on all updated branches</span></span>
<span class="line"><span>    --write-commit-graph  write the commit-graph after fetching</span></span>
<span class="line"><span>    --stdin               accept refspecs from stdin</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>format-patch</h2>
<details class="hint-container details"><summary>git format-patch -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git format-patch [&lt;options&gt;] [&lt;since&gt; | &lt;revision-range&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -n, --numbered        use [PATCH n/m] even with a single patch</span></span>
<span class="line"><span>    -N, --no-numbered     use [PATCH] even with multiple patches</span></span>
<span class="line"><span>    -s, --signoff         add a Signed-off-by trailer</span></span>
<span class="line"><span>    --stdout              print patches to standard out</span></span>
<span class="line"><span>    --cover-letter        generate a cover letter</span></span>
<span class="line"><span>    --numbered-files      use simple number sequence for output file names</span></span>
<span class="line"><span>    --suffix &lt;sfx&gt;        use &lt;sfx&gt; instead of '.patch'</span></span>
<span class="line"><span>    --start-number &lt;n&gt;    start numbering patches at &lt;n&gt; instead of 1</span></span>
<span class="line"><span>    -v, --reroll-count &lt;reroll-count&gt;</span></span>
<span class="line"><span>                          mark the series as Nth re-roll</span></span>
<span class="line"><span>    --filename-max-length &lt;n&gt;</span></span>
<span class="line"><span>                          max length of output filename</span></span>
<span class="line"><span>    --rfc                 use [RFC PATCH] instead of [PATCH]</span></span>
<span class="line"><span>    --cover-from-description &lt;cover-from-description-mode&gt;</span></span>
<span class="line"><span>                          generate parts of a cover letter based on a branch's description</span></span>
<span class="line"><span>    --subject-prefix &lt;prefix&gt;</span></span>
<span class="line"><span>                          use [&lt;prefix&gt;] instead of [PATCH]</span></span>
<span class="line"><span>    -o, --output-directory &lt;dir&gt;</span></span>
<span class="line"><span>                          store resulting files in &lt;dir&gt;</span></span>
<span class="line"><span>    -k, --keep-subject    don't strip/add [PATCH]</span></span>
<span class="line"><span>    --no-binary           don't output binary diffs</span></span>
<span class="line"><span>    --zero-commit         output all-zero hash in From header</span></span>
<span class="line"><span>    --ignore-if-in-upstream</span></span>
<span class="line"><span>                          don't include a patch matching a commit upstream</span></span>
<span class="line"><span>    -p, --no-stat         show patch format instead of default (patch + stat)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Messaging</span></span>
<span class="line"><span>    --add-header &lt;header&gt;</span></span>
<span class="line"><span>                          add email header</span></span>
<span class="line"><span>    --to &lt;email&gt;          add To: header</span></span>
<span class="line"><span>    --cc &lt;email&gt;          add Cc: header</span></span>
<span class="line"><span>    --from[=&lt;ident&gt;]      set From address to &lt;ident&gt; (or committer ident if absent)</span></span>
<span class="line"><span>    --in-reply-to &lt;message-id&gt;</span></span>
<span class="line"><span>                          make first mail a reply to &lt;message-id&gt;</span></span>
<span class="line"><span>    --attach[=&lt;boundary&gt;]</span></span>
<span class="line"><span>                          attach the patch</span></span>
<span class="line"><span>    --inline[=&lt;boundary&gt;]</span></span>
<span class="line"><span>                          inline the patch</span></span>
<span class="line"><span>    --thread[=&lt;style&gt;]    enable message threading, styles: shallow, deep</span></span>
<span class="line"><span>    --signature &lt;signature&gt;</span></span>
<span class="line"><span>                          add a signature</span></span>
<span class="line"><span>    --base &lt;base-commit&gt;  add prerequisite tree info to the patch series</span></span>
<span class="line"><span>    --signature-file &lt;file&gt;</span></span>
<span class="line"><span>                          add a signature from a file</span></span>
<span class="line"><span>    -q, --quiet           don't print the patch filenames</span></span>
<span class="line"><span>    --progress            show progress while generating patches</span></span>
<span class="line"><span>    --interdiff &lt;rev&gt;     show changes against &lt;rev&gt; in cover letter or single patch</span></span>
<span class="line"><span>    --range-diff &lt;refspec&gt;</span></span>
<span class="line"><span>                          show changes against &lt;refspec&gt; in cover letter or single patch</span></span>
<span class="line"><span>    --creation-factor &lt;n&gt;</span></span>
<span class="line"><span>                          percentage by which creation is weighted</span></span>
<span class="line"><span>    --force-in-body-from  show in-body From: even if identical to the e-mail header</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>init</h2>
<details class="hint-container details"><summary>git init -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git init [-q | --quiet] [--bare] [--template=&lt;template-directory&gt;]</span></span>
<span class="line"><span>                [--separate-git-dir &lt;git-dir&gt;] [--object-format=&lt;format&gt;]</span></span>
<span class="line"><span>                [-b &lt;branch-name&gt; | --initial-branch=&lt;branch-name&gt;]</span></span>
<span class="line"><span>                [--shared[=&lt;permissions&gt;]] [&lt;directory&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    --template &lt;template-directory&gt;</span></span>
<span class="line"><span>                          directory from which templates will be used</span></span>
<span class="line"><span>    --bare                create a bare repository</span></span>
<span class="line"><span>    --shared[=&lt;permissions&gt;]</span></span>
<span class="line"><span>                          specify that the git repository is to be shared amongst several users</span></span>
<span class="line"><span>    -q, --quiet           be quiet</span></span>
<span class="line"><span>    --separate-git-dir &lt;gitdir&gt;</span></span>
<span class="line"><span>                          separate git dir from working tree</span></span>
<span class="line"><span>    -b, --initial-branch &lt;name&gt;</span></span>
<span class="line"><span>                          override the name of the initial branch</span></span>
<span class="line"><span>    --object-format &lt;hash&gt;</span></span>
<span class="line"><span>                          specify the hash algorithm to use</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p>创建一个空的 git 仓库。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 创建目录为 test 的仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 创建默认分支 main 的仓库</span></span></code></pre>
</div><div class="hint-container important">
<p class="hint-container-title">创建裸仓库</p>
<p>默认创建的仓库都带工作区。裸仓库主要用在远程服务仓库，如 github，gitee， 用于开发者提交自己的代码。</p>
<p>下面是在 linux 环境创建并使用裸仓库的实例。 用户名 <code>flueky.zuo</code></p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --base</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 在用户目录下创建 test 裸仓库</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 以下命令在 git 工作区仓库执行。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> flueky.zuo@localhost:test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 提交代码到 local 仓库。</span></span></code></pre>
</div></div>
<h2>log</h2>
<p>查看提交记录。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 默认按照标准格式，由近到远输出提交记录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --oneline</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 简化输出，只显示提交 id 和信息。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --author</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'flueky.zuo'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看指定提交者的信息，通常记录在 user.name 和 user.email 中。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --since/--after</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '2024-10-01'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 显示指定时间之后的提交。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --until/--before</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '2024-10-02'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 显示指定时间之前的提交。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'message'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看包含指定信息的提交。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --graph</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 显示包含图形的提交记录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 补丁的形式，显示每个提交的差异。可结合 -- filepath 使用。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --stat</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 显示每次修改提交的文件统计信息。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -num</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 显示最近 num 次的提交。</span></span></code></pre>
</div><h2>merge</h2>
<details class="hint-container details"><summary>git merge -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git merge [&lt;options&gt;] [&lt;commit&gt;...]</span></span>
<span class="line"><span>   or: git merge --abort</span></span>
<span class="line"><span>   or: git merge --continue</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -n                    do not show a diffstat at the end of the merge</span></span>
<span class="line"><span>    --stat                show a diffstat at the end of the merge</span></span>
<span class="line"><span>    --summary             (synonym to --stat)</span></span>
<span class="line"><span>    --log[=&lt;n&gt;]           add (at most &lt;n&gt;) entries from shortlog to merge commit message</span></span>
<span class="line"><span>    --squash              create a single commit instead of doing a merge</span></span>
<span class="line"><span>    --commit              perform a commit if the merge succeeds (default)</span></span>
<span class="line"><span>    -e, --edit            edit message before committing</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    --ff                  allow fast-forward (default)</span></span>
<span class="line"><span>    --ff-only             abort if fast-forward is not possible</span></span>
<span class="line"><span>    --rerere-autoupdate   update the index with reused conflict resolution if possible</span></span>
<span class="line"><span>    --verify-signatures   verify that the named commit has a valid GPG signature</span></span>
<span class="line"><span>    -s, --strategy &lt;strategy&gt;</span></span>
<span class="line"><span>                          merge strategy to use</span></span>
<span class="line"><span>    -X, --strategy-option &lt;option=value&gt;</span></span>
<span class="line"><span>                          option for selected merge strategy</span></span>
<span class="line"><span>    -m, --message &lt;message&gt;</span></span>
<span class="line"><span>                          merge commit message (for a non-fast-forward merge)</span></span>
<span class="line"><span>    -F, --file &lt;path&gt;     read message from file</span></span>
<span class="line"><span>    --into-name &lt;name&gt;    use &lt;name&gt; instead of the real target</span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --abort               abort the current in-progress merge</span></span>
<span class="line"><span>    --quit                --abort but leave index and working tree alone</span></span>
<span class="line"><span>    --continue            continue the current in-progress merge</span></span>
<span class="line"><span>    --allow-unrelated-histories</span></span>
<span class="line"><span>                          allow merging unrelated histories</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG sign commit</span></span>
<span class="line"><span>    --autostash           automatically stash/stash pop before and after</span></span>
<span class="line"><span>    --overwrite-ignore    update ignored files (default)</span></span>
<span class="line"><span>    --signoff             add a Signed-off-by trailer</span></span>
<span class="line"><span>    --no-verify           bypass pre-merge-commit and commit-msg hooks</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>pull</h2>
<details class="hint-container details"><summary>git pull -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git pull [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;on-demand&gt;]</span></span>
<span class="line"><span>                          control for recursive fetching of submodules</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options related to merging</span></span>
<span class="line"><span>    -r, --rebase[=(false|true|merges|interactive)]</span></span>
<span class="line"><span>                          incorporate changes by rebasing rather than merging</span></span>
<span class="line"><span>    -n                    do not show a diffstat at the end of the merge</span></span>
<span class="line"><span>    --stat                show a diffstat at the end of the merge</span></span>
<span class="line"><span>    --log[=&lt;n&gt;]           add (at most &lt;n&gt;) entries from shortlog to merge commit message</span></span>
<span class="line"><span>    --signoff[=...]       add a Signed-off-by trailer</span></span>
<span class="line"><span>    --squash              create a single commit instead of doing a merge</span></span>
<span class="line"><span>    --commit              perform a commit if the merge succeeds (default)</span></span>
<span class="line"><span>    --edit                edit message before committing</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    --ff                  allow fast-forward</span></span>
<span class="line"><span>    --ff-only             abort if fast-forward is not possible</span></span>
<span class="line"><span>    --verify              control use of pre-merge-commit and commit-msg hooks</span></span>
<span class="line"><span>    --verify-signatures   verify that the named commit has a valid GPG signature</span></span>
<span class="line"><span>    --autostash           automatically stash/stash pop before and after</span></span>
<span class="line"><span>    -s, --strategy &lt;strategy&gt;</span></span>
<span class="line"><span>                          merge strategy to use</span></span>
<span class="line"><span>    -X, --strategy-option &lt;option=value&gt;</span></span>
<span class="line"><span>                          option for selected merge strategy</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG sign commit</span></span>
<span class="line"><span>    --allow-unrelated-histories</span></span>
<span class="line"><span>                          allow merging unrelated histories</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options related to fetching</span></span>
<span class="line"><span>    --all                 fetch from all remotes</span></span>
<span class="line"><span>    -a, --append          append to .git/FETCH_HEAD instead of overwriting</span></span>
<span class="line"><span>    --upload-pack &lt;path&gt;  path to upload pack on remote end</span></span>
<span class="line"><span>    -f, --force           force overwrite of local branch</span></span>
<span class="line"><span>    -t, --tags            fetch all tags and associated objects</span></span>
<span class="line"><span>    -p, --prune           prune remote-tracking branches no longer on remote</span></span>
<span class="line"><span>    -j, --jobs[=&lt;n&gt;]      number of submodules pulled in parallel</span></span>
<span class="line"><span>    --dry-run             dry run</span></span>
<span class="line"><span>    -k, --keep            keep downloaded pack</span></span>
<span class="line"><span>    --depth &lt;depth&gt;       deepen history of shallow clone</span></span>
<span class="line"><span>    --shallow-since &lt;time&gt;</span></span>
<span class="line"><span>                          deepen history of shallow repository based on time</span></span>
<span class="line"><span>    --shallow-exclude &lt;revision&gt;</span></span>
<span class="line"><span>                          deepen history of shallow clone, excluding rev</span></span>
<span class="line"><span>    --deepen &lt;n&gt;          deepen history of shallow clone</span></span>
<span class="line"><span>    --unshallow           convert to a complete repository</span></span>
<span class="line"><span>    --update-shallow      accept refs that update .git/shallow</span></span>
<span class="line"><span>    --refmap &lt;refmap&gt;     specify fetch refmap</span></span>
<span class="line"><span>    -o, --server-option &lt;server-specific&gt;</span></span>
<span class="line"><span>                          option to transmit</span></span>
<span class="line"><span>    -4, --ipv4            use IPv4 addresses only</span></span>
<span class="line"><span>    -6, --ipv6            use IPv6 addresses only</span></span>
<span class="line"><span>    --negotiation-tip &lt;revision&gt;</span></span>
<span class="line"><span>                          report that we have only objects reachable from this object</span></span>
<span class="line"><span>    --show-forced-updates</span></span>
<span class="line"><span>                          check for forced-updates on all updated branches</span></span>
<span class="line"><span>    --set-upstream        set upstream for git pull/fetch</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>push</h2>
<details class="hint-container details"><summary>git push -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git push [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be more verbose</span></span>
<span class="line"><span>    -q, --quiet           be more quiet</span></span>
<span class="line"><span>    --repo &lt;repository&gt;   repository</span></span>
<span class="line"><span>    --all                 push all refs</span></span>
<span class="line"><span>    --mirror              mirror all refs</span></span>
<span class="line"><span>    -d, --delete          delete refs</span></span>
<span class="line"><span>    --tags                push tags (can't be used with --all or --mirror)</span></span>
<span class="line"><span>    -n, --dry-run         dry run</span></span>
<span class="line"><span>    --porcelain           machine-readable output</span></span>
<span class="line"><span>    -f, --force           force updates</span></span>
<span class="line"><span>    --force-with-lease[=&lt;refname&gt;:&lt;expect&gt;]</span></span>
<span class="line"><span>                          require old value of ref to be at this value</span></span>
<span class="line"><span>    --force-if-includes   require remote updates to be integrated locally</span></span>
<span class="line"><span>    --recurse-submodules (check|on-demand|no)</span></span>
<span class="line"><span>                          control recursive pushing of submodules</span></span>
<span class="line"><span>    --thin                use thin pack</span></span>
<span class="line"><span>    --receive-pack &lt;receive-pack&gt;</span></span>
<span class="line"><span>                          receive pack program</span></span>
<span class="line"><span>    --exec &lt;receive-pack&gt;</span></span>
<span class="line"><span>                          receive pack program</span></span>
<span class="line"><span>    -u, --set-upstream    set upstream for git pull/status</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    --prune               prune locally removed refs</span></span>
<span class="line"><span>    --no-verify           bypass pre-push hook</span></span>
<span class="line"><span>    --follow-tags         push missing but relevant tags</span></span>
<span class="line"><span>    --signed[=(yes|no|if-asked)]</span></span>
<span class="line"><span>                          GPG sign the push</span></span>
<span class="line"><span>    --atomic              request atomic transaction on remote side</span></span>
<span class="line"><span>    -o, --push-option &lt;server-specific&gt;</span></span>
<span class="line"><span>                          option to transmit</span></span>
<span class="line"><span>    -4, --ipv4            use IPv4 addresses only</span></span>
<span class="line"><span>    -6, --ipv6            use IPv6 addresses only</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p><code>push</code> 命令将本地仓库的改动推送到远程仓库。如 <code>Github</code>, <code>Gitee</code>, <code>Gitlab</code> 。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 推送 main 分支到 origin 仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 删除 origin 仓库的 main 分支，(其中默认分支和受保护的分支不能被删除)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'tag name'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 推送单个标签</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --tags</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 推送全部标签到 origin 仓库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> :refs/tags/'tag name'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 删除 origin 仓库的标签，需要先执行 git tag -d 'tag name'</span></span></code></pre>
</div><h2>rebase</h2>
<details class="hint-container details"><summary>git rebase -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git rebase [-i] [options] [--exec &lt;cmd&gt;] [--onto &lt;newbase&gt; | --keep-base] [&lt;upstream&gt; [&lt;branch&gt;]]</span></span>
<span class="line"><span>   or: git rebase [-i] [options] [--exec &lt;cmd&gt;] [--onto &lt;newbase&gt;] --root [&lt;branch&gt;]</span></span>
<span class="line"><span>   or: git rebase --continue | --abort | --skip | --edit-todo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    --onto &lt;revision&gt;     rebase onto given branch instead of upstream</span></span>
<span class="line"><span>    --keep-base           use the merge-base of upstream and branch as the current base</span></span>
<span class="line"><span>    --no-verify           allow pre-rebase hook to run</span></span>
<span class="line"><span>    -q, --quiet           be quiet. implies --no-stat</span></span>
<span class="line"><span>    -v, --verbose         display a diffstat of what changed upstream</span></span>
<span class="line"><span>    -n, --no-stat         do not show diffstat of what changed upstream</span></span>
<span class="line"><span>    --signoff             add a Signed-off-by trailer to each commit</span></span>
<span class="line"><span>    --committer-date-is-author-date</span></span>
<span class="line"><span>                          make committer date match author date</span></span>
<span class="line"><span>    --reset-author-date   ignore author date and use current date</span></span>
<span class="line"><span>    -C &lt;n&gt;                passed to 'git apply'</span></span>
<span class="line"><span>    --ignore-whitespace   ignore changes in whitespace</span></span>
<span class="line"><span>    --whitespace &lt;action&gt;</span></span>
<span class="line"><span>                          passed to 'git apply'</span></span>
<span class="line"><span>    -f, --force-rebase    cherry-pick all commits, even if unchanged</span></span>
<span class="line"><span>    --no-ff               cherry-pick all commits, even if unchanged</span></span>
<span class="line"><span>    --continue            continue</span></span>
<span class="line"><span>    --skip                skip current patch and continue</span></span>
<span class="line"><span>    --abort               abort and check out the original branch</span></span>
<span class="line"><span>    --quit                abort but keep HEAD where it is</span></span>
<span class="line"><span>    --edit-todo           edit the todo list during an interactive rebase</span></span>
<span class="line"><span>    --show-current-patch  show the patch file being applied or merged</span></span>
<span class="line"><span>    --apply               use apply strategies to rebase</span></span>
<span class="line"><span>    -m, --merge           use merging strategies to rebase</span></span>
<span class="line"><span>    -i, --interactive     let the user edit the list of commits to rebase</span></span>
<span class="line"><span>    --rerere-autoupdate   update the index with reused conflict resolution if possible</span></span>
<span class="line"><span>    --empty &lt;{drop,keep,ask}&gt;</span></span>
<span class="line"><span>                          how to handle commits that become empty</span></span>
<span class="line"><span>    --autosquash          move commits that begin with squash!/fixup! under -i</span></span>
<span class="line"><span>    --update-refs         update branches that point to commits that are being rebased</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG-sign commits</span></span>
<span class="line"><span>    --autostash           automatically stash/stash pop before and after</span></span>
<span class="line"><span>    -x, --exec &lt;exec&gt;     add exec lines after each commit of the editable list</span></span>
<span class="line"><span>    -r, --rebase-merges[=&lt;mode&gt;]</span></span>
<span class="line"><span>                          try to rebase merges instead of skipping them</span></span>
<span class="line"><span>    --fork-point          use 'merge-base --fork-point' to refine upstream</span></span>
<span class="line"><span>    -s, --strategy &lt;strategy&gt;</span></span>
<span class="line"><span>                          use the given merge strategy</span></span>
<span class="line"><span>    -X, --strategy-option &lt;option&gt;</span></span>
<span class="line"><span>                          pass the argument through to the merge strategy</span></span>
<span class="line"><span>    --root                rebase all reachable commits up to the root(s)</span></span>
<span class="line"><span>    --reschedule-failed-exec</span></span>
<span class="line"><span>                          automatically re-schedule any `exec` that fails</span></span>
<span class="line"><span>    --reapply-cherry-picks</span></span>
<span class="line"><span>                          apply all changes, even those already present upstream</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>remote</h2>
<details class="hint-container details"><summary>git remote -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git remote [-v | --verbose]</span></span>
<span class="line"><span>   or: git remote add [-t &lt;branch&gt;] [-m &lt;master&gt;] [-f] [--tags | --no-tags] [--mirror=&lt;fetch|push&gt;] &lt;name&gt; &lt;url&gt;</span></span>
<span class="line"><span>   or: git remote rename &lt;old&gt; &lt;new&gt;</span></span>
<span class="line"><span>   or: git remote remove &lt;name&gt;</span></span>
<span class="line"><span>   or: git remote set-head &lt;name&gt; (-a | --auto | -d | --delete | &lt;branch&gt;)</span></span>
<span class="line"><span>   or: git remote [-v | --verbose] show [-n] &lt;name&gt;</span></span>
<span class="line"><span>   or: git remote prune [-n | --dry-run] &lt;name&gt;</span></span>
<span class="line"><span>   or: git remote [-v | --verbose] update [-p | --prune] [(&lt;group&gt; | &lt;remote&gt;)...]</span></span>
<span class="line"><span>   or: git remote set-branches [--add] &lt;name&gt; &lt;branch&gt;...</span></span>
<span class="line"><span>   or: git remote get-url [--push] [--all] &lt;name&gt;</span></span>
<span class="line"><span>   or: git remote set-url [--push] &lt;name&gt; &lt;newurl&gt; [&lt;oldurl&gt;]</span></span>
<span class="line"><span>   or: git remote set-url --add &lt;name&gt; &lt;newurl&gt;</span></span>
<span class="line"><span>   or: git remote set-url --delete &lt;name&gt; &lt;url&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be verbose; must be placed before a subcommand</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p>本地仓库关联到远程仓库的信息，使用 <code>remote</code> 管理。配置信息保存在 <code>.git/config</code>。 常用命令如下：</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -v</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 检查 remote 信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 添加 GitHub 地址， 使用 git push github main 推送</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git@github.com:flueky/docs.git</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 重命名 github 到 origin，后续使用 origin 推送代码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> origin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 删除这个分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github</span></span></code></pre>
</div><h2>reset</h2>
<details class="hint-container details"><summary>git reset -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [&lt;commit&gt;]</span></span>
<span class="line"><span>   or: git reset [-q] [&lt;tree-ish&gt;] [--] &lt;pathspec&gt;...</span></span>
<span class="line"><span>   or: git reset [-q] [--pathspec-from-file [--pathspec-file-nul]] [&lt;tree-ish&gt;]</span></span>
<span class="line"><span>   or: git reset --patch [&lt;tree-ish&gt;] [--] [&lt;pathspec&gt;...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -q, --quiet           be quiet, only report errors</span></span>
<span class="line"><span>    --no-refresh          skip refreshing the index after reset</span></span>
<span class="line"><span>    --mixed               reset HEAD and index</span></span>
<span class="line"><span>    --soft                reset only HEAD</span></span>
<span class="line"><span>    --hard                reset HEAD, index and working tree</span></span>
<span class="line"><span>    --merge               reset HEAD, index and working tree</span></span>
<span class="line"><span>    --keep                reset HEAD but keep local changes</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;reset&gt;]</span></span>
<span class="line"><span>                          control recursive updating of submodules</span></span>
<span class="line"><span>    -p, --patch           select hunks interactively</span></span>
<span class="line"><span>    -N, --intent-to-add   record only the fact that removed paths will be added later</span></span>
<span class="line"><span>    --pathspec-from-file &lt;file&gt;</span></span>
<span class="line"><span>                          read pathspec from file</span></span>
<span class="line"><span>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>revert</h2>
<details class="hint-container details"><summary>git revert -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git revert [--[no-]edit] [-n] [-m &lt;parent-number&gt;] [-s] [-S[&lt;keyid&gt;]] &lt;commit&gt;...</span></span>
<span class="line"><span>   or: git revert (--continue | --skip | --abort | --quit)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    --quit                end revert or cherry-pick sequence</span></span>
<span class="line"><span>    --continue            resume revert or cherry-pick sequence</span></span>
<span class="line"><span>    --abort               cancel revert or cherry-pick sequence</span></span>
<span class="line"><span>    --skip                skip current commit and continue</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    -n, --no-commit       don't automatically commit</span></span>
<span class="line"><span>    -e, --edit            edit the commit message</span></span>
<span class="line"><span>    -s, --signoff         add a Signed-off-by trailer</span></span>
<span class="line"><span>    -m, --mainline &lt;parent-number&gt;</span></span>
<span class="line"><span>                          select mainline parent</span></span>
<span class="line"><span>    --rerere-autoupdate   update the index with reused conflict resolution if possible</span></span>
<span class="line"><span>    --strategy &lt;strategy&gt;</span></span>
<span class="line"><span>                          merge strategy</span></span>
<span class="line"><span>    -X, --strategy-option &lt;option&gt;</span></span>
<span class="line"><span>                          option for merge strategy</span></span>
<span class="line"><span>    -S, --gpg-sign[=&lt;key-id&gt;]</span></span>
<span class="line"><span>                          GPG sign commit</span></span>
<span class="line"><span>    --reference           use the 'reference' format to refer to commits</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>rm</h2>
<details class="hint-container details"><summary>git rm -h</summary>
<div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git rm [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch]</span></span>
<span class="line"><span>              [--quiet] [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]</span></span>
<span class="line"><span>              [--] [&lt;pathspec&gt;...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -n, --dry-run         dry run</span></span>
<span class="line"><span>    -q, --quiet           do not list removed files</span></span>
<span class="line"><span>    --cached              only remove from the index</span></span>
<span class="line"><span>    -f, --force           override the up-to-date check</span></span>
<span class="line"><span>    -r                    allow recursive removal</span></span>
<span class="line"><span>    --ignore-unmatch      exit with a zero status even if nothing matched</span></span>
<span class="line"><span>    --sparse              allow updating entries outside of the sparse-checkout cone</span></span>
<span class="line"><span>    --pathspec-from-file &lt;file&gt;</span></span>
<span class="line"><span>                          read pathspec from file</span></span>
<span class="line"><span>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span></span></code></pre>
</div></details>
<h2>stash</h2>
<details class="hint-container details"><summary>git stash -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git stash list [&lt;log-options&gt;]</span></span>
<span class="line"><span>   or: git stash show [-u | --include-untracked | --only-untracked] [&lt;diff-options&gt;] [&lt;stash&gt;]</span></span>
<span class="line"><span>   or: git stash drop [-q | --quiet] [&lt;stash&gt;]</span></span>
<span class="line"><span>   or: git stash pop [--index] [-q | --quiet] [&lt;stash&gt;]</span></span>
<span class="line"><span>   or: git stash apply [--index] [-q | --quiet] [&lt;stash&gt;]</span></span>
<span class="line"><span>   or: git stash branch &lt;branchname&gt; [&lt;stash&gt;]</span></span>
<span class="line"><span>   or: git stash [push [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet]</span></span>
<span class="line"><span>                 [-u | --include-untracked] [-a | --all] [(-m | --message) &lt;message&gt;]</span></span>
<span class="line"><span>                 [--pathspec-from-file=&lt;file&gt; [--pathspec-file-nul]]</span></span>
<span class="line"><span>                 [--] [&lt;pathspec&gt;...]]</span></span>
<span class="line"><span>   or: git stash save [-p | --patch] [-S | --staged] [-k | --[no-]keep-index] [-q | --quiet]</span></span>
<span class="line"><span>                 [-u | --include-untracked] [-a | --all] [&lt;message&gt;]</span></span>
<span class="line"><span>   or: git stash clear</span></span>
<span class="line"><span>   or: git stash create [&lt;message&gt;]</span></span>
<span class="line"><span>   or: git stash store [(-m | --message) &lt;message&gt;] [-q | --quiet] &lt;commit&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p><code>stash</code> 命令将未提交的更改保存到 <strong>临时堆栈</strong>，（暂时保存在本地仓库中，<strong>可撤回</strong>）。以便能够切换分支或执行其他操作，但不丢失未提交的工作。</p>
<ul>
<li>未提交的更改包括：工作区的更改，和暂存区的更改。</li>
</ul>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 查看全部暂存的记录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pop</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 取出最近暂存的修改记录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> drop</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 丢弃最近暂存的修改记录</span></span></code></pre>
</div><div class="hint-container important">
<p class="hint-container-title">提示</p>
<p>执行 <code>git stash pop</code> 后，如遇到和工作区的改动存在冲突，则会保留栈顶的记录。待解决冲突后，需要执行  <code>git stash drop</code>。</p>
</div>
<h2>status</h2>
<details class="hint-container details"><summary>git status -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git status [&lt;options&gt;] [--] [&lt;pathspec&gt;...]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -v, --verbose         be verbose</span></span>
<span class="line"><span>    -s, --short           show status concisely</span></span>
<span class="line"><span>    -b, --branch          show branch information</span></span>
<span class="line"><span>    --show-stash          show stash information</span></span>
<span class="line"><span>    --ahead-behind        compute full ahead/behind values</span></span>
<span class="line"><span>    --porcelain[=&lt;version&gt;]</span></span>
<span class="line"><span>                          machine-readable output</span></span>
<span class="line"><span>    --long                show status in long format (default)</span></span>
<span class="line"><span>    -z, --null            terminate entries with NUL</span></span>
<span class="line"><span>    -u, --untracked-files[=&lt;mode&gt;]</span></span>
<span class="line"><span>                          show untracked files, optional modes: all, normal, no. (Default: all)</span></span>
<span class="line"><span>    --ignored[=&lt;mode&gt;]    show ignored files, optional modes: traditional, matching, no. (Default: traditional)</span></span>
<span class="line"><span>    --ignore-submodules[=&lt;when&gt;]</span></span>
<span class="line"><span>                          ignore changes to submodules, optional when: all, dirty, untracked. (Default: all)</span></span>
<span class="line"><span>    --column[=&lt;style&gt;]    list untracked files in columns</span></span>
<span class="line"><span>    --no-renames          do not detect renames</span></span>
<span class="line"><span>    -M, --find-renames[=&lt;n&gt;]</span></span>
<span class="line"><span>                          detect renames, optionally set similarity index</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>switch</h2>
<details class="hint-container details"><summary>git switch -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git switch [&lt;options&gt;] [&lt;branch&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -c, --create &lt;branch&gt;</span></span>
<span class="line"><span>                          create and switch to a new branch</span></span>
<span class="line"><span>    -C, --force-create &lt;branch&gt;</span></span>
<span class="line"><span>                          create/reset and switch to a branch</span></span>
<span class="line"><span>    --guess               second guess 'git switch &lt;no-such-branch&gt;'</span></span>
<span class="line"><span>    --discard-changes     throw away local modifications</span></span>
<span class="line"><span>    -q, --quiet           suppress progress reporting</span></span>
<span class="line"><span>    --recurse-submodules[=&lt;checkout&gt;]</span></span>
<span class="line"><span>                          control recursive updating of submodules</span></span>
<span class="line"><span>    --progress            force progress reporting</span></span>
<span class="line"><span>    -m, --merge           perform a 3-way merge with the new branch</span></span>
<span class="line"><span>    --conflict &lt;style&gt;    conflict style (merge, diff3, or zdiff3)</span></span>
<span class="line"><span>    -d, --detach          detach HEAD at named commit</span></span>
<span class="line"><span>    -t, --track[=(direct|inherit)]</span></span>
<span class="line"><span>                          set branch tracking configuration</span></span>
<span class="line"><span>    -f, --force           force checkout (throw away local modifications)</span></span>
<span class="line"><span>    --orphan &lt;new-branch&gt;</span></span>
<span class="line"><span>                          new unparented branch</span></span>
<span class="line"><span>    --overwrite-ignore    update ignored files (default)</span></span>
<span class="line"><span>    --ignore-other-worktrees</span></span>
<span class="line"><span>                          do not check if another worktree is holding the given ref</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2>tag</h2>
<details class="hint-container details"><summary>git tag -h</summary>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>usage: git tag [-a | -s | -u &lt;key-id&gt;] [-f] [-m &lt;msg&gt; | -F &lt;file&gt;] [-e]</span></span>
<span class="line"><span>               &lt;tagname&gt; [&lt;commit&gt; | &lt;object&gt;]</span></span>
<span class="line"><span>   or: git tag -d &lt;tagname&gt;...</span></span>
<span class="line"><span>   or: git tag [-n[&lt;num&gt;]] -l [--contains &lt;commit&gt;] [--no-contains &lt;commit&gt;]</span></span>
<span class="line"><span>               [--points-at &lt;object&gt;] [--column[=&lt;options&gt;] | --no-column]</span></span>
<span class="line"><span>               [--create-reflog] [--sort=&lt;key&gt;] [--format=&lt;format&gt;]</span></span>
<span class="line"><span>               [--merged &lt;commit&gt;] [--no-merged &lt;commit&gt;] [&lt;pattern&gt;...]</span></span>
<span class="line"><span>   or: git tag -v [--format=&lt;format&gt;] &lt;tagname&gt;...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    -l, --list            list tag names</span></span>
<span class="line"><span>    -n[&lt;n&gt;]               print &lt;n&gt; lines of each tag message</span></span>
<span class="line"><span>    -d, --delete          delete tags</span></span>
<span class="line"><span>    -v, --verify          verify tags</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Tag creation options</span></span>
<span class="line"><span>    -a, --annotate        annotated tag, needs a message</span></span>
<span class="line"><span>    -m, --message &lt;message&gt;</span></span>
<span class="line"><span>                          tag message</span></span>
<span class="line"><span>    -F, --file &lt;file&gt;     read message from file</span></span>
<span class="line"><span>    -e, --edit            force edit of tag message</span></span>
<span class="line"><span>    -s, --sign            annotated and GPG-signed tag</span></span>
<span class="line"><span>    --cleanup &lt;mode&gt;      how to strip spaces and #comments from message</span></span>
<span class="line"><span>    -u, --local-user &lt;key-id&gt;</span></span>
<span class="line"><span>                          use another key to sign the tag</span></span>
<span class="line"><span>    -f, --force           replace the tag if exists</span></span>
<span class="line"><span>    --create-reflog       create a reflog</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Tag listing options</span></span>
<span class="line"><span>    --column[=&lt;style&gt;]    show tag list in columns</span></span>
<span class="line"><span>    --contains &lt;commit&gt;   print only tags that contain the commit</span></span>
<span class="line"><span>    --no-contains &lt;commit&gt;</span></span>
<span class="line"><span>                          print only tags that don't contain the commit</span></span>
<span class="line"><span>    --merged &lt;commit&gt;     print only tags that are merged</span></span>
<span class="line"><span>    --no-merged &lt;commit&gt;  print only tags that are not merged</span></span>
<span class="line"><span>    --sort &lt;key&gt;          field name to sort on</span></span>
<span class="line"><span>    --points-at &lt;object&gt;  print only tags of the object</span></span>
<span class="line"><span>    --format &lt;format&gt;     format to use for the output</span></span>
<span class="line"><span>    --color[=&lt;when&gt;]      respect format colors</span></span>
<span class="line"><span>    -i, --ignore-case     sorting and filtering are case insensitive</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<p><code>tag</code> 命令对提交记录添加标签标识。 如每次发行版本之后，对最新的提交记录打上标签。</p>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'tag name'</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'tag message'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 对最新的提交添加 tag name, 并记为 tag message</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'tag name'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'commit id'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 对指定的提交记录添加 tag name，而后需要动态输入 tag message</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -l</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 列出全部 tag name</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 列出全部 tag name 和 tag message</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'tag name'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 删除指定的 tag</span></span></code></pre>
</div>]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 开箱配置</title>
      <link>https://vuepress-theme-hope.github.io/ubuntu.html</link>
      <guid>https://vuepress-theme-hope.github.io/ubuntu.html</guid>
      <source url="https://vuepress-theme-hope.github.io/rss.xml">Ubuntu 开箱配置</source>
      <description>记录 Ubuntu 从零到一的开箱配置。</description>
      <category>Linux</category>
      <category>Note</category>
      <pubDate>Tue, 01 Oct 2024 05:00:32 GMT</pubDate>
      <content:encoded><![CDATA[<p>记录 Ubuntu 从零到一的开箱配置。</p>
<!-- more -->
<h2>用户与组</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> useradd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 新增用户 zkf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> usermod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 将 zkf 添加到 sudo 组</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 上述两行命令可以合并成一行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> useradd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> wheel</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> passwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> zkf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 设置/修改 zkf 密码</span></span></code></pre>
</div><h2>编辑器</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update-alternatives</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> editor</span></span></code></pre>
</div><h2>挂载硬盘</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mount</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /dev/sda1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /media/data</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 将 sda1 分区挂载到 /media/data</span></span></code></pre>
</div><h2>设置快捷方式</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -sf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /media/data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ~/workspace</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 对 /media/data 设置链接</span></span></code></pre>
</div><h2>Git</h2>
<h3>安装</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span></span></code></pre>
</div><h3>配置</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "your name"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "your email"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> core.autocrlf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> input</span></span></code></pre>
</div><h2>GPG</h2>
<h3>配置</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">gpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --full-gen-key</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 选择 rsa，4096，失效日期，姓名和邮箱地址（注意和 git config 设置的一致）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">gpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --list-secret-keys</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --keyid-format</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> LONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "your email"</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 列出 Key 信息。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># sec   rsa4096/F212D2CFEBF50880 2024-04-20 [SC] 中，是 F212D2CFEBF50880 key id</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">gpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --armor</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --export</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> F212D2CFEBF50880</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 导出公钥，配置到 gitlab GPG Keys 页面。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> user.signingkey</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> F212D2CFEBF50880</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 告诉 git，使用此密钥签名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit.gpgsign</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 设置默认使用 GPG key 签名</span></span></code></pre>
</div><h2>Python</h2>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> python3</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装 python</span></span></code></pre>
</div><p><code>python</code> 通过 <code>pip</code> 管理安装包的依赖关系。安装 <code>pip</code> 有两种方式。</p>
<h3>virtual env</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> python3-venv</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">  # 安装 virtual env</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">python3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> venv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "virtual env name"</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 创建虚拟环境</span></span></code></pre>
</div><h3>get-pip</h3>
<div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://bootstrap.pypa.io/get-pip.py</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get-pip.py</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get-pip.py</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> # 安装 pip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> get-pip.py</span></span></code></pre>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>